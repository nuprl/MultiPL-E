name: HumanEval_25_factorize
language: swift
prompt: "\n/// Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n/// Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n/// Input number should be equal\
  \ to the product of all factors\n/// >>> factorize(n: 8)\n/// [2, 2, 2]\n/// >>>\
  \ factorize(n: 25)\n/// [5, 5]\n/// >>> factorize(n: 70)\n/// [2, 5, 7]\nfunc factorize(n:\
  \ Int) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(factorize(n: 2) == [2])\nassert(factorize(n:\
  \ 4) == [2, 2])\nassert(factorize(n: 8) == [2, 2, 2])\nassert(factorize(n: 57) ==\
  \ [3, 19])\nassert(factorize(n: 3249) == [3, 3, 19, 19])\nassert(factorize(n: 185193)\
  \ == [3, 3, 3, 19, 19, 19])\nassert(factorize(n: 20577) == [3, 19, 19, 19])\nassert(factorize(n:\
  \ 18) == [2, 3, 3])"
completions: ["    var factorization: [Int] = []\n    var factorizationCount = 0\n\
    \    var factorizationIndex = 0\n    var factorizationIndex2 = 0\n    var factorizationIndex3\
    \ = 0\n    var factorizationIndex4 = 0\n    var factorizationIndex5 = 0\n    var\
    \ factorizationIndex6 = 0\n    var factorizationIndex7 = 0\n    var factorizationIndex8\
    \ = 0\n    var factorizationIndex9 = 0\n    var factorizationIndex10 = 0\n   \
    \ var factorizationIndex11 = 0\n    var factorizationIndex12 = 0\n    var factorizationIndex13\
    \ = 0\n    var factorizationIndex14 = 0\n    var factorizationIndex15 = 0\n  \
    \  var factorizationIndex16 = 0\n    var factorizationIndex17 = 0\n    var factorizationIndex18\
    \ = 0\n    var factorizationIndex19 = 0\n    var factorizationIndex20 = 0\n  \
    \  var factorizationIndex21 = 0\n    var factorizationIndex22 = 0\n    var factorizationIndex23\
    \ = 0\n    var factorizationIndex24 = 0\n    var factorizationIndex25 = 0\n  \
    \  var factorizationIndex26 = 0\n    var factorizationIndex27 = 0\n    var factorizationIndex28\
    \ = 0\n    var factorizationIndex29 = 0\n    var factorizationIndex30 = 0\n  \
    \  var factorizationIndex31 = 0\n    var factorizationIndex32 = 0\n    var factorizationIndex33\
    \ = 0\n    var factorizationIndex34 = 0\n    var factorizationIndex35 = 0\n  \
    \  var factorizationIndex36 = 0\n    var factorizationIndex37 = 0\n    var factorizationIndex38\
    \ = 0\n    var factorizationIndex39 = 0\n    var factorizationIndex40 = 0\n  \
    \  var factorizationIndex41 = 0\n    var factorizationIndex42 = 0\n    var factorizationIndex43\
    \ = 0\n    var factorizationIndex44 = 0\n    var factorizationIndex45 = 0\n  \
    \  var factorizationIndex46 = 0\n    var factorizationIndex47 = 0\n    var factorizationIndex48\
    \ = 0\n    var factorizationIndex49 = 0\n    var factorizationIndex50 = 0\n  \
    \  var factorizationIndex51 = 0\n    var factorizationIndex52 = 0\n    var factorizationIndex53\
    \ = 0\n    var factorizationIndex54 = 0\n    var factorizationIndex55 = 0\n  \
    \  var factorizationIndex56 = 0\n    var factorizationIndex57 = 0\n    var factorizationIndex58\
    \ = 0\n    var factorizationIndex59 = 0\n    var factorizationIndex60 = 0\n  \
    \  var factorizationIndex61 = 0\n    var factorizationIndex62 = 0\n    var factorizationIndex63\
    \ = 0\n    var factorizationIndex64 = 0\n    var factorizationIndex65 = 0\n  \
    \  var factorizationIndex66 = 0\n    var factorizationIndex67 = 0\n    var factorizationIndex68\
    \ = 0\n    var factorizationIndex69 = 0\n    var factorizationIndex70 = 0\n  \
    \  var factorizationIndex71 = 0\n    var factorization", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var primeFactorizationIndex = 0\n    var isPrime: Bool = false\n  \
    \  var isPrimeIndex = 0\n    var isPrimeCount = 0\n    var isPrimeIndex2 = 0\n\
    \    var isPrimeCount2 = 0\n    var isPrimeIndex3 = 0\n    var isPrimeCount3 =\
    \ 0\n    var isPrimeIndex4 = 0\n    var isPrimeCount4 = 0\n    var isPrimeIndex5\
    \ = 0\n    var isPrimeCount5 = 0\n    var isPrimeIndex6 = 0\n    var isPrimeCount6\
    \ = 0\n    var isPrimeIndex7 = 0\n    var isPrimeCount7 = 0\n    var isPrimeIndex8\
    \ = 0\n    var isPrimeCount8 = 0\n    var isPrimeIndex9 = 0\n    var isPrimeCount9\
    \ = 0\n    var isPrimeIndex10 = 0\n    var isPrimeCount10 = 0\n    var isPrimeIndex11\
    \ = 0\n    var isPrimeCount11 = 0\n    var isPrimeIndex12 = 0\n    var isPrimeCount12\
    \ = 0\n    var isPrimeIndex13 = 0\n    var isPrimeCount13 = 0\n    var isPrimeIndex14\
    \ = 0\n    var isPrimeCount14 = 0\n    var isPrimeIndex15 = 0\n    var isPrimeCount15\
    \ = 0\n    var isPrimeIndex16 = 0\n    var isPrimeCount16 = 0\n    var isPrimeIndex17\
    \ = 0\n    var isPrimeCount17 = 0\n    var isPrimeIndex18 = 0\n    var isPrimeCount18\
    \ = 0\n    var isPrimeIndex19 = 0\n    var isPrimeCount19 = 0\n    var isPrimeIndex20\
    \ = 0\n    var isPrimeCount20 = 0\n    var isPrimeIndex21 = 0\n    var isPrimeCount21\
    \ = 0\n    var isPrimeIndex22 = 0\n    var isPrimeCount22 = 0\n    var isPrimeIndex23\
    \ = 0\n    var isPrimeCount23 = 0\n    var isPrimeIndex24 = 0\n    var isPrimeCount24\
    \ = 0\n    var isPrimeIndex25 = 0\n    var isPrimeCount25 = 0\n    var isPrimeIndex26\
    \ = 0\n    var isPrimeCount26 = 0\n    var isPrimeIndex27 = 0\n    var isPrimeCount27\
    \ = 0\n    var isPrimeIndex28 = 0\n    var isPrimeCount28 = 0\n    var isPrimeIndex29\
    \ = 0\n    var isPrimeCount29 = 0\n    var isPrimeIndex30 = 0\n    var isPrimeCount",
  "    var factors = [Int]()\n    var factorization = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var primeFactors = [Int]()\n    var primeFactorsCount = 0\n \
    \   var primeFactorsSum = 0\n    var primeFactorsSum2 = 0\n    var primeFactorsSum3\
    \ = 0\n    var primeFactorsSum4 = 0\n    var primeFactorsSum5 = 0\n    var primeFactorsSum6\
    \ = 0\n    var primeFactorsSum7 = 0\n    var primeFactorsSum8 = 0\n    var primeFactorsSum9\
    \ = 0\n    var primeFactorsSum10 = 0\n    var primeFactorsSum11 = 0\n    var primeFactorsSum12\
    \ = 0\n    var primeFactorsSum13 = 0\n    var primeFactorsSum14 = 0\n    var primeFactorsSum15\
    \ = 0\n    var primeFactorsSum16 = 0\n    var primeFactorsSum17 = 0\n    var primeFactorsSum18\
    \ = 0\n    var primeFactorsSum19 = 0\n    var primeFactorsSum20 = 0\n    var primeFactorsSum21\
    \ = 0\n    var primeFactorsSum22 = 0\n    var primeFactorsSum23 = 0\n    var primeFactorsSum24\
    \ = 0\n    var primeFactorsSum25 = 0\n    var primeFactorsSum26 = 0\n    var primeFactorsSum27\
    \ = 0\n    var primeFactorsSum28 = 0\n    var primeFactorsSum29 = 0\n    var primeFactorsSum30\
    \ = 0\n    var primeFactorsSum31 = 0\n    var primeFactorsSum32 = 0\n    var primeFactorsSum33\
    \ = 0\n    var primeFactorsSum34 = 0\n    var primeFactorsSum35 = 0\n    var primeFactorsSum36\
    \ = 0\n    var primeFactorsSum37 = 0\n    var primeFactorsSum38 = 0\n    var primeFactorsSum39\
    \ = 0\n    var primeFactorsSum40 = 0\n    var primeFactorsSum41 = 0\n    var primeFactorsSum42\
    \ = 0\n    var primeFactorsSum43 = 0\n    var primeFactorsSum44 = 0\n    var primeFactorsSum45\
    \ = 0\n    var primeFactorsSum46 = 0\n    var primeFactorsSum47 = 0\n    var primeFactorsSum48\
    \ = 0\n    var primeFactorsSum49 = 0\n    var primeFactorsSum50 = 0\n    var primeFactorsSum51\
    \ = 0\n    var primeFactorsSum52 = 0\n    var primeFactorsSum53 = 0\n    var primeFactorsSum54\
    \ = 0\n    var primeFactorsSum55 = 0\n    var primeFactorsSum56 = 0\n    var primeFactorsSum57\
    \ = 0\n    var primeFactorsSum58 = 0\n    var primeFactorsSum59 = 0\n    var prime",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   var factorizationCount = 1\n    for factor in factorization {\n        if\
    \ factor != 1 {\n            factors.append(factor)\n            factorizationCount\
    \ *= factor\n        }\n    }\n    if factorizationCount == 1 {\n        return\
    \ factors\n    }\n    var primeFactors = [Int]()\n    var primeFactorization =\
    \ factorizationOfNumber(n)\n    var primeFactorizationCount = 1\n    for primeFactor\
    \ in primeFactorization {\n        if primeFactor != 1 {\n            primeFactors.append(primeFactor)\n\
    \            primeFactorizationCount *= primeFactor\n        }\n    }\n    var\
    \ primeFactorizationCount = 1\n    for primeFactorIndex in 0..<primeFactors.count\
    \ {\n        let primeFactor = primeFactors[primeFactorIndex]\n        if primeFactorizationCount\
    \ != 1 {\n            factors.append(primeFactor)\n            factorizationCount\
    \ *= primeFactor\n        }\n        if factorizationCount != 1 {\n          \
    \  factors.append(factorizationCount)\n            factorizationCount = 1\n  \
    \      }\n        primeFactorizationCount *= primeFactor\n    }\n    if factorizationCount\
    \ != 1 {\n        factors.append(factorizationCount)\n    }\n    return factors",
  "    var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            factors.append(i)\n            n /= i\n        }\n \
    \       i += 1\n    }\n    if n > 1 {\n        factors.append(n)\n    }\n    return\
    \ factors", "    var factorization: [Int] = []\n    var factorizationCount = 0\n\
    \    var factorizationIndex = 0\n    var factorizationNumber = 0\n    var factorizationNumberCount\
    \ = 0\n    var factorizationNumberIndex = 0\n    var factorizationNumberRemainder\
    \ = 0\n    var factorizationNumberRemainderCount = 0\n    var factorizationNumberRemainderIndex\
    \ = 0\n    var factorizationNumberRemainderRemainder = 0\n    var factorizationNumberRemainderRemainderCount\
    \ = 0\n    var factorizationNumberRemainderRemainderIndex = 0\n    var factorizationNumberRemainderRemainderRemainder\
    \ = 0\n    var factorizationNumberRemainderRemainderRemainderCount = 0\n    var\
    \ factorizationNumberRemainderRemainderRemainderIndex = 0\n    var factorizationNumberRemainderRemainderRemainderRemainder\
    \ = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderCount =\
    \ 0\n    var factorizationNumberRemainderRemainderRemainderRemainderIndex = 0\n\
    \    var factorizationNumberRemainderRemainderRemainderRemainderRemainder = 0\n\
    \    var factorizationNumberRemainderRemainderRemainderRemainderCount = 0\n  \
    \  var factorizationNumberRemainderRemainderRemainderRemainderIndex = 0\n    var\
    \ factorizationNumberRemainderRemainderRemainderRemainderRemainder = 0\n    var\
    \ factorizationNumberRemainderRemainderRemainderRemainderCount = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderIndex\
    \ = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderRemainder\
    \ = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderCount =\
    \ 0\n    var factorizationNumberRemainderRemainderRemainderRemainderIndex = 0\n\
    \    var factorizationNumberRemainderRemainderRemainderRemainderRemainder = 0\n\
    \    var factorizationNumberRemainderRemainderRemainderRemainderCount = 0\n  \
    \  var factorizationNumberRemainderRemainderRemainderRemainderIndex = 0\n    var\
    \ factorizationNumberRemainderRemainderRemainderRemainderRemainder = 0\n    var\
    \ factorizationNumberRemainderRemainderRemainderRemainderCount = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderIndex\
    \ = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderRemainder\
    \ = 0\n    var factorizationNumberRemainderRemainderRemainderRemainderCount =\
    \ 0\n    var factorizationNumberRemainderRemainderRemainderRemainderIndex = 0\n\
    \    var factorizationNumberRemainderRemainderRemainderRemainderRemainder = 0\n\
    \    var factorizationNumberRemainderRemainderRemainderRemainderCount = 0\n  \
    \  var factorizationNumberRemainderRemainderRemainderRemainderIndex = 0\n    var\
    \ factorizationNumberRemainderRemainderRemainderRemain", "    var factors = [Int]()\n\
    \    var i = 2\n    var j = 1\n    var k = n\n    while i * j <= k {\n       \
    \ if n % i == 0 {\n            factors.append(i)\n            n /= i\n       \
    \ }\n        if n % j == 0 {\n            factors.append(j)\n            n /=\
    \ j\n        }\n        i += 1\n        j += 1\n    }\n    if n != 1 {\n     \
    \   factors.append(n)\n    }\n    return factors", "    var factorization: [Int]\
    \ = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationIndexCount = 0\n    var factorizationIndexCountMax = Int(IntMax)\n\
    \    var factorizationIndexCountMin = Int(IntMin)\n    var factorizationIndexCountMaxInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinInt = Int(IntMin)\n    var\
    \ factorizationIndexCountMaxFloat = Float(FloatMax)\n    var factorizationIndexCountMinFloat\
    \ = Float(FloatMin)\n    var factorizationIndexCountMaxDouble = Double(DoubleMax)\n\
    \    var factorizationIndexCountMinDouble = Double(DoubleMin)\n    var factorizationIndexCountMaxBool\
    \ = Bool(BoolMax)\n    var factorizationIndexCountMinBool = Bool(BoolMin)\n  \
    \  var factorizationIndexCountMaxString = String(StringMax)\n    var factorizationIndexCountMinString\
    \ = String(StringMin)\n    var factorizationIndexCountMaxArray = Array<Int>(ArrayMax)\n\
    \    var factorizationIndexCountMinArray = Array<Int>(ArrayMin)\n    var factorizationIndexCountMaxDictionary\
    \ = Dictionary<Int, Int>(DictionaryMax)\n    var factorizationIndexCountMinDictionary\
    \ = Dictionary<Int, Int>(DictionaryMin)\n    var factorizationIndexCountMaxSet\
    \ = Set<Int>(SetMax)\n    var factorizationIndexCountMinSet = Set<Int>(SetMin)\n\
    \    var factorizationIndexCountMaxArraySlice = ArraySlice<Int>(ArraySliceMax)\n\
    \    var factorizationIndexCountMinArraySlice = ArraySlice<Int>(ArraySliceMin)\n\
    \    var factorizationIndexCountMaxDictionarySlice = DictionarySlice<Int, Int>(DictionarySliceMax)\n\
    \    var factorizationIndexCountMinDictionarySlice = DictionarySlice<Int, Int>(DictionarySliceMin)\n\
    \    var factorizationIndexCountMaxSetSlice = SetSlice<Int>(SetSliceMax)\n   \
    \ var factorizationIndexCountMinSetSlice = SetSlice<Int>(SetSliceMin)\n    var\
    \ factorizationIndexCountMaxArraySliceFromIndex = ArraySliceFromIndex<Int>(ArraySliceFromIndexMax)\n\
    \    var factorizationIndexCountMinArraySliceFromIndex = ArraySliceFromIndex<Int>(ArraySliceFromIndexMin)\n\
    \    var factorizationIndexCountMaxDictionarySliceFromIndex = DictionarySliceFromIndex<Int,\
    \ Int>(DictionarySliceFromIndexMax)\n    var factorizationIndexCountMinDictionarySliceFromIndex\
    \ = DictionarySliceFromIndex<Int, Int>(DictionarySliceFromIndexMin)\n    var factorizationIndexCountMaxSetSliceFromIndex\
    \ = SetSlice", "    var factorization: [Int] = []\n    var factor = 2\n    var\
    \ factorCount = 0\n    var isPrime = true\n    var isDivisible = false\n    while\
    \ factor <= n {\n        if n % factor == 0 {\n            factorCount += 1\n\
    \            if factor > 2 {\n                factorization[factorCount] = factor\n\
    \            }\n            if isPrime {\n                isPrime = false\n  \
    \          }\n            if isDivisible {\n                factorization[factorCount]\
    \ = factor\n            }\n            isDivisible = true\n        } else {\n\
    \            isPrime = true\n            if factor > 2 {\n                factorization[factorCount]\
    \ = factor\n            }\n            if isDivisible {\n                factorization[factorCount]\
    \ = factor\n            }\n            isDivisible = false\n        }\n      \
    \  factor += 1\n    }\n    return factorization", "    var factors = [Int]()\n\
    \    var primes = [Int]()\n    var primeFactors = [Int]()\n    var factorization\
    \ = [Int]()\n    var factorizationCount = [Int]()\n    var factorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationCount\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = 0\n    var isPrimeFactorizationIndex = false\n    var isPrimeFactorizationCountIndex\
    \ = false\n    var isPrimeFactorizationCountIndex = 0\n    var isPrimeFactorizationIndex\
    \ = false\n    var isPri", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var currentFactorizationCount = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization", "    var factors = [Int]()\n    var i =\
    \ 2\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1\n   \
    \         factors.append(i)\n        }\n    }\n    return factors", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    for factor\
    \ in factorization {\n        factors.append(factor)\n    }\n    return factors",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   var factorizationCount = 1\n    for factor in factorization {\n        if\
    \ factorizationCount > factors.count {\n            factors.append(factor)\n \
    \       } else {\n            factors[factors.count-1] *= factor\n        }\n\
    \        factorizationCount *= factor\n    }\n    return factors", "    var factorization\
    \ = [Int]()\n    var factorizationCount = [Int]()\n    var factorizationIndex\
    \ = 0\n    var factorizationCountIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeCountIndex = 0\n    var isPrimeCountMax\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMin = 0\n    var\
    \ isPrimeCountMinIndex = 0\n    var isPrimeCountMaxMin = 0\n    var isPrimeCountMaxMinIndex\
    \ = 0\n    var isPrimeCountMinMax = 0\n    var isPrimeCountMinMaxIndex = 0\n \
    \   var isPrimeCountMaxMinMax = 0\n    var isPrimeCountMaxMinMaxIndex = 0\n  \
    \  var isPrimeCountMinMaxMinMax = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n\
    \    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var isPrimeCountMinMaxMinMaxIndex = 0\n    var isPrimeCountMinMaxMinMaxIndex\
    \ = 0\n    var is", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var currentFactorizationCount = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization", "    var factors = [Int]()\n    var primes\
    \ = factorization(n)\n    for prime in primes {\n        factors.append(prime)\n\
    \    }\n    return factors", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var isPrime: Bool = false\n    var isPrime2: Bool = false\n\
    \    var isPrime3: Bool = false\n    var isPrime4: Bool = false\n    var isPrime5:\
    \ Bool = false\n    var isPrime6: Bool = false\n    var isPrime7: Bool = false\n\
    \    var isPrime8: Bool = false\n    var isPrime9: Bool = false\n    var isPrime10:\
    \ Bool = false\n    var isPrime11: Bool = false\n    var isPrime12: Bool = false\n\
    \    var isPrime13: Bool = false\n    var isPrime14: Bool = false\n    var isPrime15:\
    \ Bool = false\n    var isPrime16: Bool = false\n    var isPrime17: Bool = false\n\
    \    var isPrime18: Bool = false\n    var isPrime19: Bool = false\n    var isPrime20:\
    \ Bool = false\n    var isPrime21: Bool = false\n    var isPrime22: Bool = false\n\
    \    var isPrime23: Bool = false\n    var isPrime24: Bool = false\n    var isPrime25:\
    \ Bool = false\n    var isPrime26: Bool = false\n    var isPrime27: Bool = false\n\
    \    var isPrime28: Bool = false\n    var isPrime29: Bool = false\n    var isPrime30:\
    \ Bool = false\n    var isPrime31: Bool = false\n    var isPrime32: Bool = false\n\
    \    var isPrime33: Bool = false\n    var isPrime34: Bool = false\n    var isPrime35:\
    \ Bool = false\n    var isPrime36: Bool = false\n    var isPrime37: Bool = false\n\
    \    var isPrime38: Bool = false\n    var isPrime39: Bool = false\n    var isPrime40:\
    \ Bool = false\n    var isPrime41: Bool = false\n    var isPrime42: Bool = false\n\
    \    var isPrime43: Bool = false\n    var isPrime44: Bool = false\n    var isPrime45:\
    \ Bool = false\n    var isPrime46: Bool = false\n    var isPrime47: Bool = false\n\
    \    var isPrime48: Bool = false\n    var isPrime49: Bool = false\n    var isPrime50:\
    \ Bool = false\n    var isPrime51: Bool = false\n    var isPrime52: Bool = false\n\
    \    var isPrime53: Bool = false\n    var isPrime54: Bool = false\n    var isPrime55:\
    \ Bool = false\n    var isPrime56: Bool", "    var factorization = [Int]()\n \
    \   var primeFactorization = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount\
    \ = 0\n    var isPrimeCountMax = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMaxInt\
    \ = Int(ceil(sqrt(Double(isPrimeCountMax))))\n    var isPrimeCountMaxDouble =\
    \ Double(isPrimeCountMaxInt)\n    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDouble))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(isPrimeCountMaxDoubleInt))))\n\
    \    var isPrimeCountMaxDoubleInt = Int(ceil(sqrt(Double(", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime: [Bool]\
    \ = []\n    var isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int = 1\n \
    \   var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMin: Int = 1\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var\
    \ isPrimeCountMinIndex", "    var factorization = [Int]()\n    var primes = [Int]()\n\
    \    var factor = 2\n    var prime = 1\n    var isPrime = true\n    var isFactor\
    \ = false\n    var isPrimeFactor = false\n    var isPrimeFactor2 = false\n   \
    \ var isPrimeFactor3 = false\n    var isPrimeFactor4 = false\n    var isPrimeFactor5\
    \ = false\n    var isPrimeFactor6 = false\n    var isPrimeFactor7 = false\n  \
    \  var isPrimeFactor8 = false\n    var isPrimeFactor9 = false\n    var isPrimeFactor10\
    \ = false\n    var isPrimeFactor11 = false\n    var isPrimeFactor12 = false\n\
    \    var isPrimeFactor13 = false\n    var isPrimeFactor14 = false\n    var isPrimeFactor15\
    \ = false\n    var isPrimeFactor16 = false\n    var isPrimeFactor17 = false\n\
    \    var isPrimeFactor18 = false\n    var isPrimeFactor19 = false\n    var isPrimeFactor20\
    \ = false\n    var isPrimeFactor21 = false\n    var isPrimeFactor22 = false\n\
    \    var isPrimeFactor23 = false\n    var isPrimeFactor24 = false\n    var isPrimeFactor25\
    \ = false\n    var isPrimeFactor26 = false\n    var isPrimeFactor27 = false\n\
    \    var isPrimeFactor28 = false\n    var isPrimeFactor29 = false\n    var isPrimeFactor30\
    \ = false\n    var isPrimeFactor31 = false\n    var isPrimeFactor32 = false\n\
    \    var isPrimeFactor33 = false\n    var isPrimeFactor34 = false\n    var isPrimeFactor35\
    \ = false\n    var isPrimeFactor36 = false\n    var isPrimeFactor37 = false\n\
    \    var isPrimeFactor38 = false\n    var isPrimeFactor39 = false\n    var isPrimeFactor40\
    \ = false\n    var isPrimeFactor41 = false\n    var isPrimeFactor42 = false\n\
    \    var isPrimeFactor43 = false\n    var isPrimeFactor44 = false\n    var isPrimeFactor45\
    \ = false\n    var isPrimeFactor46 = false\n    var isPrimeFactor47 = false\n\
    \    var isPrimeFactor48 = false\n    var isPrimeFactor49 = false\n    var isPrimeFactor50\
    \ = false\n    var isPrimeFactor51 = false\n    var isPrimeFactor52 = false\n\
    \    var isPrimeFactor53 = false\n    var isPrimeFactor54 = false\n    var isPrimeFactor55\
    \ = false\n    var isPrimeFactor56 = false\n    var isPrimeFactor57 = false\n\
    \    var isPrimeFactor58 = false\n    var isPrimeFactor", "    var factors = [Int]()\n\
    \    var factorization = factorizationOfNumber(n)\n    for factor in factorization\
    \ {\n        factors.append(factor)\n    }\n    return factors", "    var factorization\
    \ = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIndex = 0\n    var isPrimePrimeFactorization\
    \ = false\n    var isPrimePrimeFactorizationIndex = 0\n    var isPrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimeFactorizationIndex = 0\n    var isPrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimeFactorizationIndex = 0\n    var isPrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimeFactorizationIndex = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimeFactorization = false\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime",
  "    var factorization = [Int]()\n    var factor = 1\n    var prime = 1\n    var\
    \ isPrime = true\n    var isPrime2 = true\n    var isPrime3 = true\n    var isPrime4\
    \ = true\n    var isPrime5 = true\n    var isPrime6 = true\n    var isPrime7 =\
    \ true\n    var isPrime8 = true\n    var isPrime9 = true\n    var isPrime10 =\
    \ true\n    var isPrime11 = true\n    var isPrime12 = true\n    var isPrime13\
    \ = true\n    var isPrime14 = true\n    var isPrime15 = true\n    var isPrime16\
    \ = true\n    var isPrime17 = true\n    var isPrime18 = true\n    var isPrime19\
    \ = true\n    var isPrime20 = true\n    var isPrime21 = true\n    var isPrime22\
    \ = true\n    var isPrime23 = true\n    var isPrime24 = true\n    var isPrime25\
    \ = true\n    var isPrime26 = true\n    var isPrime27 = true\n    var isPrime28\
    \ = true\n    var isPrime29 = true\n    var isPrime30 = true\n    var isPrime31\
    \ = true\n    var isPrime32 = true\n    var isPrime33 = true\n    var isPrime34\
    \ = true\n    var isPrime35 = true\n    var isPrime36 = true\n    var isPrime37\
    \ = true\n    var isPrime38 = true\n    var isPrime39 = true\n    var isPrime40\
    \ = true\n    var isPrime41 = true\n    var isPrime42 = true\n    var isPrime43\
    \ = true\n    var isPrime44 = true\n    var isPrime45 = true\n    var isPrime46\
    \ = true\n    var isPrime47 = true\n    var isPrime48 = true\n    var isPrime49\
    \ = true\n    var isPrime50 = true\n    var isPrime51 = true\n    var isPrime52\
    \ = true\n    var isPrime53 = true\n    var isPrime54 = true\n    var isPrime55\
    \ = true\n    var isPrime56 = true\n    var isPrime57 = true\n    var isPrime58\
    \ = true\n    var isPrime59 = true\n    var isPrime60 = true\n    var isPrime61\
    \ = true\n    var isPrime62 = true\n    var isPrime63 = true\n    var isPrime64\
    \ = true\n    var isPrime65 = true\n    var isPrime66 = true\n    var isPrime67\
    \ = true\n    var isPrime68 = true\n    var isPrime69 = true\n    var ", "   \
    \ var factorization: [Int] = []\n    var factorizationCount = 0\n    var currentFactorizationCount\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization", " \
    \   var factorization = [Int]()\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationNumber = 0\n    var factorizationNumberIndex = 0\n\
    \    var factorizationNumberCount = 0\n    var factorizationNumberNumber = 0\n\
    \    var factorizationNumberNumberIndex = 0\n    var factorizationNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumber = 0\n    var factorizationNumberNumberNumberIndex\
    \ = 0\n    var factorizationNumberNumberNumberCount = 0\n    var factorizationNumberNumberNumberNumber\
    \ = 0\n    var factorizationNumberNumberNumberNumberIndex = 0\n    var factorizationNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumber = 0\n    var factorizationNumberNumberNumberNumberNumberIndex\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberCount = 0\n    var factorizationNumberNumberNumberNumberNumberNumber\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberIndex = 0\n    var factorizationNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumber = 0\n    var\
    \ factorizationNumberNumberNumberNumberNumberNumberIndex = 0\n    var factorizationNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumber = 0\n \
    \   var factorizationNumberNumberNumberNumberNumberNumberIndex = 0\n    var factorizationNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumber = 0\n \
    \   var factorizationNumberNumberNumberNumberNumberNumberIndex = 0\n    var factorizationNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumber =\
    \ 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberIndex = 0\n\
    \    var factorizationNumberNumberNumberNumberNumberNumberNumberCount = 0\n  \
    \  var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumber = 0\n\
    \    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberIndex =\
    \ 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumber\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberIndex\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumber\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberIndex\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumberNumber\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumberIndex\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumberCount\
    \ = 0\n    var factorizationNumberNumberNumberNumberNumberNumberNumberNumberNumber",
  "    var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var\
    \ primeFactorizationCount = [Int]()\n    var factorizationCount = [Int]()\n  \
    \  var primeFactorizationCount2 = [Int]()\n    var factorizationCount2 = [Int]()\n\
    \    var primeFactorizationCount3 = [Int]()\n    var factorizationCount3 = [Int]()\n\
    \    var primeFactorizationCount4 = [Int]()\n    var factorizationCount4 = [Int]()\n\
    \    var primeFactorizationCount5 = [Int]()\n    var factorizationCount5 = [Int]()\n\
    \    var primeFactorizationCount6 = [Int]()\n    var factorizationCount6 = [Int]()\n\
    \    var primeFactorizationCount7 = [Int]()\n    var factorizationCount7 = [Int]()\n\
    \    var primeFactorizationCount8 = [Int]()\n    var factorizationCount8 = [Int]()\n\
    \    var primeFactorizationCount9 = [Int]()\n    var factorizationCount9 = [Int]()\n\
    \    var primeFactorizationCount10 = [Int]()\n    var factorizationCount10 = [Int]()\n\
    \    var primeFactorizationCount11 = [Int]()\n    var factorizationCount11 = [Int]()\n\
    \    var primeFactorizationCount12 = [Int]()\n    var factorizationCount12 = [Int]()\n\
    \    var primeFactorizationCount13 = [Int]()\n    var factorizationCount13 = [Int]()\n\
    \    var primeFactorizationCount14 = [Int]()\n    var factorizationCount14 = [Int]()\n\
    \    var primeFactorizationCount15 = [Int]()\n    var factorizationCount15 = [Int]()\n\
    \    var primeFactorizationCount16 = [Int]()\n    var factorizationCount16 = [Int]()\n\
    \    var primeFactorizationCount17 = [Int]()\n    var factorizationCount17 = [Int]()\n\
    \    var primeFactorizationCount18 = [Int]()\n    var factorizationCount18 = [Int]()\n\
    \    var primeFactorizationCount19 = [Int]()\n    var factorizationCount19 = [Int]()\n\
    \    var primeFactorizationCount20 = [Int]()\n    var factorizationCount20 = [Int]()\n\
    \    var primeFactorizationCount21 = [Int]()\n    var factorizationCount21 = [Int]()\n\
    \    var primeFactorizationCount22 = [Int]()\n    var factorizationCount22 = [Int]()\n\
    \    var primeFactorizationCount23 = [Int]()\n    var factorizationCount23 = [Int]()\n\
    \    var primeFactorizationCount24 = [Int]()\n    var factorization", "    var\
    \ factorization = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationIndex\
    \ = 0\n    var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorization = true\n\
    \    var isPrimeFactorizationIndex2 = 0\n    var isPrimeFactorizationIndex3 =\
    \ 0\n    var isPrimeFactorizationIndex4 = 0\n    var isPrimeFactorizationIndex5\
    \ = 0\n    var isPrimeFactorizationIndex6 = 0\n    var isPrimeFactorizationIndex7\
    \ = 0\n    var isPrimeFactorizationIndex8 = 0\n    var isPrimeFactorizationIndex9\
    \ = 0\n    var isPrimeFactorizationIndex10 = 0\n    var isPrimeFactorizationIndex11\
    \ = 0\n    var isPrimeFactorizationIndex12 = 0\n    var isPrimeFactorizationIndex13\
    \ = 0\n    var isPrimeFactorizationIndex14 = 0\n    var isPrimeFactorizationIndex15\
    \ = 0\n    var isPrimeFactorizationIndex16 = 0\n    var isPrimeFactorizationIndex17\
    \ = 0\n    var isPrimeFactorizationIndex18 = 0\n    var isPrimeFactorizationIndex19\
    \ = 0\n    var isPrimeFactorizationIndex20 = 0\n    var isPrimeFactorizationIndex21\
    \ = 0\n    var isPrimeFactorizationIndex22 = 0\n    var isPrimeFactorizationIndex23\
    \ = 0\n    var isPrimeFactorizationIndex24 = 0\n    var isPrimeFactorizationIndex25\
    \ = 0\n    var isPrimeFactorizationIndex26 = 0\n    var isPrimeFactorizationIndex27\
    \ = 0\n    var isPrimeFactorizationIndex28 = 0\n    var isPrimeFactorizationIndex29\
    \ = 0\n    var isPrimeFactorizationIndex30 = 0\n    var isPrimeFactorizationIndex31\
    \ = 0\n    var isPrimeFactorizationIndex32 = 0\n    var isPrimeFactorizationIndex33\
    \ = 0\n    var isPrimeFactorizationIndex34 = 0\n    var isPrimeFactorizationIndex35\
    \ = 0\n    var isPrimeFactorizationIndex36 = 0\n    var isPrimeFactorizationIndex37\
    \ = 0\n    var isPrimeFactorizationIndex38 = 0\n    var isPrimeFactorizationIndex39\
    \ = 0\n    var isPrimeFactorizationIndex40 = 0\n    var isPrimeFactorizationIndex41\
    \ = 0\n    var isPrimeFactorizationIndex42 = 0\n    var isPrimeFactorizationIndex43\
    \ = 0\n    var isPrimeFactorizationIndex44 = 0\n    var isPrimeFactorizationIndex45\
    \ = 0\n    var isPrimeFactorizationIndex46 = 0\n    var is", "    var factorization\
    \ = [Int]()\n    var primes = [Int]()\n    var primeFactorization = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeFactorization = [Bool]()\n    var\
    \ isPrimeFactorizationIndex = [Int]()\n    var isPrimeFactorizationIndexCount\
    \ = [Int]()\n    var isPrimeFactorizationIndexCountMax = Int()\n    var isPrimeFactorizationIndexCountMaxIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMin = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var isPrimeFactorizationIndexCountMaxIndex = Int()\n    var isPrimeFactorizationIndexCountMinIndex\
    \ = Int()\n    var ", "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    for factor in factorization {\n        factors.append(factor)\n    }\n  \
    \  return factors", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationMax = Int(sqrt(Double(n)))\n\
    \    var factorizationMin = factorizationMax\n    var factorizationMaxIndex =\
    \ 0\n    var factorizationMinIndex = 0\n    var factorizationMaxCount = Int(sqrt(Double(n)))\n\
    \    var factorizationMinCount = factorizationMaxCount\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountValue\
    \ = factorizationMaxCount\n    var factorizationMinCountValue = factorizationMinCount\n\
    \    var factorizationMaxCountValueIndex = 0\n    var factorizationMinCountValueIndex\
    \ = 0\n    var factorizationMaxCountValueValue = factorizationMaxCountValue\n\
    \    var factorizationMinCountValueValue = factorizationMinCountValue\n    var\
    \ factorizationMaxCountValueValueIndex = 0\n    var factorizationMinCountValueValueIndex\
    \ = 0\n    var factorizationMaxCountValueValueValue = factorizationMaxCountValueValue\n\
    \    var factorizationMinCountValueValueValue = factorizationMinCountValueValue\n\
    \    var factorizationMaxCountValueValueValueIndex = 0\n    var factorizationMinCountValueValueValueIndex\
    \ = 0\n    var factorizationMaxCountValueValueValueValue = factorizationMaxCountValueValueValue\n\
    \    var factorizationMinCountValueValueValueValue = factorizationMinCountValueValueValue\n\
    \    var factorizationMaxCountValueValueValueIndex = 0\n    var factorizationMinCountValueValueValueIndex\
    \ = 0\n    var factorizationMaxCountValueValueValueValue = factorizationMaxCountValueValueValueValue\n\
    \    var factorizationMinCountValueValueValueValue = factorizationMinCountValueValueValueValue\n\
    \    var factorizationMaxCountValueValueValueIndex = 0\n    var factorizationMinCountValueValueValueIndex\
    \ = 0\n    var factorizationMaxCountValueValueValueValue = factorizationMaxCountValueValueValueValue\n\
    \    var factorizationMinCountValueValueValueValue = factorizationMinCountValueValueValueValue\n\
    \    var factorizationMaxCountValueValueValueIndex = 0\n    var factorizationMinCountValueValueValueIndex\
    \ = 0\n    var factorizationMaxCountValueValueValueValue = factorizationMaxCountValueValueValueValue\n\
    \    var factorizationMinCountValueValueValueValue = factorizationMinCountValueValueValueValue\n\
    \    var factorizationMaxCountValueValueValueIndex = 0\n    var factorizationMinCountValueValueValueIndex\
    \ = 0\n    var factorizationMaxCountValueValueValueValue = factorizationMaxCountValueValueValueValue\n\
    \    var factorizationMinCountValueValueValueValue = factorizationMinCountValueValueValueValue\n\
    \    var factorizationMaxCountValueValueValueIndex = 0\n    var factorizationMinCountValueValue",
  "    var factors = [Int]()\n    var i = 2\n    var p = Int(n)\n    while p > 1 {\n\
    \        while p % i == 0 {\n            factors.append(i)\n            p /= i\n\
    \        }\n        i += 1\n    }\n    return factors", "    var factorization:\
    \ [Int] = []\n    var factor: Int = 0\n    var factorCount: Int = 0\n    var isPrime:\
    \ Bool = false\n    var isPrime2: Bool = false\n    var isPrime3: Bool = false\n\
    \    var isPrime4: Bool = false\n    var isPrime5: Bool = false\n    var isPrime6:\
    \ Bool = false\n    var isPrime7: Bool = false\n    var isPrime8: Bool = false\n\
    \    var isPrime9: Bool = false\n    var isPrime10: Bool = false\n    var isPrime11:\
    \ Bool = false\n    var isPrime12: Bool = false\n    var isPrime13: Bool = false\n\
    \    var isPrime14: Bool = false\n    var isPrime15: Bool = false\n    var isPrime16:\
    \ Bool = false\n    var isPrime17: Bool = false\n    var isPrime18: Bool = false\n\
    \    var isPrime19: Bool = false\n    var isPrime20: Bool = false\n    var isPrime21:\
    \ Bool = false\n    var isPrime22: Bool = false\n    var isPrime23: Bool = false\n\
    \    var isPrime24: Bool = false\n    var isPrime25: Bool = false\n    var isPrime26:\
    \ Bool = false\n    var isPrime27: Bool = false\n    var isPrime28: Bool = false\n\
    \    var isPrime29: Bool = false\n    var isPrime30: Bool = false\n    var isPrime31:\
    \ Bool = false\n    var isPrime32: Bool = false\n    var isPrime33: Bool = false\n\
    \    var isPrime34: Bool = false\n    var isPrime35: Bool = false\n    var isPrime36:\
    \ Bool = false\n    var isPrime37: Bool = false\n    var isPrime38: Bool = false\n\
    \    var isPrime39: Bool = false\n    var isPrime40: Bool = false\n    var isPrime41:\
    \ Bool = false\n    var isPrime42: Bool = false\n    var isPrime43: Bool = false\n\
    \    var isPrime44: Bool = false\n    var isPrime45: Bool = false\n    var isPrime46:\
    \ Bool = false\n    var isPrime47: Bool = false\n    var isPrime48: Bool = false\n\
    \    var isPrime49: Bool = false\n    var isPrime50: Bool = false\n    var isPrime51:\
    \ Bool = false\n    var isPrime52: Bool = false\n    var isPrime53: Bool = false\n\
    \    var isPrime54: Bool = false\n    var isPrime55: Bool = false\n    var is",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeCount\
    \ = 0\n    var isPrimeIndex2 = 0\n    var isPrimeCount2 = 0\n    var isPrimeIndex3\
    \ = 0\n    var isPrimeCount3 = 0\n    var isPrimeIndex4 = 0\n    var isPrimeCount4\
    \ = 0\n    var isPrimeIndex5 = 0\n    var isPrimeCount5 = 0\n    var isPrimeIndex6\
    \ = 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7 = 0\n    var isPrimeCount7\
    \ = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8 = 0\n    var isPrimeIndex9\
    \ = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10 = 0\n    var isPrimeCount10\
    \ = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11 = 0\n    var isPrimeIndex12\
    \ = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13 = 0\n    var isPrimeCount13\
    \ = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14 = 0\n    var isPrimeIndex15\
    \ = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16 = 0\n    var isPrimeCount16\
    \ = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17 = 0\n    var isPrimeIndex18\
    \ = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19 = 0\n    var isPrimeCount19\
    \ = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20 = 0\n    var isPrimeIndex21\
    \ = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22 = 0\n    var isPrimeCount22\
    \ = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23 = 0\n    var isPrimeIndex24\
    \ = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25 = 0\n    var isPrimeCount25\
    \ = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26 = 0\n    var isPrimeIndex27\
    \ = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28 = 0\n    var isPrimeCount28\
    \ = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29 = 0\n    var isPrimeIndex30\
    \ = 0\n    var isPrimeCount30 = 0\n    var isPrimeIndex31 = 0\n    var ", "  \
    \  var factors = [Int]()\n    var primeFactors = [Int]()\n    var primeFactorsCount\
    \ = [Int]()\n    var primeFactorsCountMax = Int(math.ceil(sqrt(Double(n))))\n\
    \    var primeFactorsCountMax2 = Int(math.ceil(sqrt(Double(primeFactorsCountMax))))\n\
    \    var primeFactorsCountMax3 = Int(math.ceil(sqrt(Double(primeFactorsCountMax2))))\n\
    \    var primeFactorsCountMax4 = Int(math.ceil(sqrt(Double(primeFactorsCountMax3))))\n\
    \    var primeFactorsCountMax5 = Int(math.ceil(sqrt(Double(primeFactorsCountMax4))))\n\
    \    var primeFactorsCountMax6 = Int(math.ceil(sqrt(Double(primeFactorsCountMax5))))\n\
    \    var primeFactorsCountMax7 = Int(math.ceil(sqrt(Double(primeFactorsCountMax6))))\n\
    \    var primeFactorsCountMax8 = Int(math.ceil(sqrt(Double(primeFactorsCountMax7))))\n\
    \    var primeFactorsCountMax9 = Int(math.ceil(sqrt(Double(primeFactorsCountMax8))))\n\
    \    var primeFactorsCountMax10 = Int(math.ceil(sqrt(Double(primeFactorsCountMax9))))\n\
    \    var primeFactorsCountMax11 = Int(math.ceil(sqrt(Double(primeFactorsCountMax10))))\n\
    \    var primeFactorsCountMax12 = Int(math.ceil(sqrt(Double(primeFactorsCountMax11))))\n\
    \    var primeFactorsCountMax13 = Int(math.ceil(sqrt(Double(primeFactorsCountMax12))))\n\
    \    var primeFactorsCountMax14 = Int(math.ceil(sqrt(Double(primeFactorsCountMax13))))\n\
    \    var primeFactorsCountMax15 = Int(math.ceil(sqrt(Double(primeFactorsCountMax14))))\n\
    \    var primeFactorsCountMax16 = Int(math.ceil(sqrt(Double(primeFactorsCountMax15))))\n\
    \    var primeFactorsCountMax17 = Int(math.ceil(sqrt(Double(primeFactorsCountMax16))))\n\
    \    var primeFactorsCountMax18 = Int(math.ceil(sqrt(Double(primeFactorsCountMax17))))\n\
    \    var primeFactorsCountMax19 = Int(math.ceil(sqrt(Double(primeFactorsCountMax18))))\n\
    \    var primeFactorsCountMax20 = Int(math.ceil(sqrt(Double(primeFactorsCountMax19))))\n\
    \    var primeFactorsCountMax21 = Int(math.ceil(sqrt(Double(primeFactorsCountMax20))))\n\
    \    var primeFactorsCountMax22 = Int(math.ceil(sqrt(Double(primeFactorsCountMax21))))\n\
    \    var primeFactorsCountMax23 = Int(math.ceil(sqrt(Double(primeFactorsCountMax22))))\n",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var isPrime\
    \ = true\n    var isPrimeCount = 0\n    var isPrimeFactorization = false\n   \
    \ var isPrimeFactorizationCount = 0\n    var isPrimeFactorizationPrime = false\n\
    \    var isPrimeFactorizationPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationCount = 0\n    var isPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeCount = 0\n    var\
    \ isPrimeFactorizationPrimeFactorizationPrimeFactorization = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime =\
    \ false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime",
  "    var factorization = [Int]()\n    var factorizationCount = [Int]()\n    var\
    \ factorizationCountMax = Int()\n    var factorizationCountMin = Int()\n    var\
    \ factorizationCountSum = Int()\n    var factorizationCountSumMax = Int()\n  \
    \  var factorizationCountSumMin = Int()\n    var factorizationCountSumMax = Int()\n\
    \    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax =\
    \ Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int()\n    var factorizationCountSumMin = Int()\n    var factorizationCountSumMax\
    \ = Int", "    var factorization = [Int]()\n    var factorizationIndex = 0\n \
    \   var factorizationCount = 1\n    var factorizationNumber = 0\n    var factorizationNumberIndex\
    \ = 0\n    var factorizationNumberCount = 0\n    var factorizationNumbersArray\
    \ = [Int]()\n    var factorizationNumbersArrayIndex = 0\n    var factorizationNumbersArrayCount\
    \ = 0\n    var factorizationNumbersArrayCountIndex = 0\n    var factorizationNumbersArrayCountMax\
    \ = 0\n    var factorizationNumbersArrayCountMaxIndex = 0\n    var factorizationNumbersArrayCountMin\
    \ = 0\n    var factorizationNumbersArrayCountMinIndex = 0\n    var factorizationNumbersArrayCountMaxMin\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinIndex = 0\n    var factorizationNumbersArrayCountMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMinMaxIndex = 0\n    var factorizationNumbersArrayCountMaxMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxIndex = 0\n    var factorizationNumbersArrayCountMinMaxMin\
    \ = 0\n    var factorizationNumbersArrayCountMinMaxMinIndex = 0\n    var factorizationNumbersArrayCountMaxMinMaxMin\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinIndex = 0\n    var factorizationNumbersArrayCountMinMaxMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMinMaxMinMaxIndex = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxIndex = 0\n    var\
    \ factorizationNumbersArrayCountMinMaxMinMaxMinMax = 0\n    var factorizationNumbersArrayCountMinMaxMinMaxMinMaxIndex\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMax = 0\n    var\
    \ factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxIndex = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMaxIndex\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMaxMinMaxIndex\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxIndex\
    \ = 0\n    var factorizationNumbersArrayCountMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = 0\n    var ", "    var factors: [Int] = []\n    var i = 2\n    var factor:\
    \ Int\n    while i < n {\n        factor = 1\n        while i < n && n % i ==\
    \ 0 {\n            factor *= i\n            i += 1\n        }\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = [Int]()\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeCount = 0\n\
    \    var isPrimeIndex2 = 0\n    var isPrimeCount2 = 0\n    var isPrimeIndex3 =\
    \ 0\n    var isPrimeCount3 = 0\n    var isPrimeIndex4 = 0\n    var isPrimeCount4\
    \ = 0\n    var isPrimeIndex5 = 0\n    var isPrimeCount5 = 0\n    var isPrimeIndex6\
    \ = 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7 = 0\n    var isPrimeCount7\
    \ = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8 = 0\n    var isPrimeIndex9\
    \ = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10 = 0\n    var isPrimeCount10\
    \ = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11 = 0\n    var isPrimeIndex12\
    \ = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13 = 0\n    var isPrimeCount13\
    \ = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14 = 0\n    var isPrimeIndex15\
    \ = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16 = 0\n    var isPrimeCount16\
    \ = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17 = 0\n    var isPrimeIndex18\
    \ = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19 = 0\n    var isPrimeCount19\
    \ = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20 = 0\n    var isPrimeIndex21\
    \ = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22 = 0\n    var isPrimeCount22\
    \ = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23 = 0\n    var isPrimeIndex24\
    \ = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25 = 0\n    var isPrimeCount25\
    \ = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26 = 0\n    var isPrimeIndex27\
    \ = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28 = 0\n    var isPrimeCount28\
    \ = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29 = 0\n    var isPrimeIndex30\
    \ = 0\n    var isPrimeCount30 = 0\n    var ", "    var factorization: [Int] =\
    \ []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationIndexMax = Int(sqrt(Double(n)))\n    var factorizationIndexMin\
    \ = factorizationIndexMax\n    var factorizationIndexMaxInt = Int(factorizationIndexMax)\n\
    \    var factorizationIndexMinInt = Int(factorizationIndexMin)\n    var factorizationIndexMaxDouble\
    \ = Double(factorizationIndexMax)\n    var factorizationIndexMinDouble = Double(factorizationIndexMin)\n\
    \    var factorizationIndexMaxDoubleInt = Int(factorizationIndexMaxDouble)\n \
    \   var factorizationIndexMinDoubleInt = Int(factorizationIndexMinDouble)\n  \
    \  var factorizationIndexMaxDoubleDouble = Double(factorizationIndexMaxDouble)\n\
    \    var factorizationIndexMinDoubleDouble = Double(factorizationIndexMinDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleInt = Int(factorizationIndexMaxDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleInt = Int(factorizationIndexMinDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDouble = Double(factorizationIndexMaxDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDouble = Double(factorizationIndexMinDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDoubleInt = Int(factorizationIndexMaxDoubleDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDoubleInt = Int(factorizationIndexMinDoubleDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDoubleDouble = Double(factorizationIndexMaxDoubleDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDoubleDouble = Double(factorizationIndexMinDoubleDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDoubleDoubleInt = Int(factorizationIndexMaxDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDoubleDoubleInt = Int(factorizationIndexMinDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDoubleDoubleDouble = Double(factorizationIndexMaxDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDoubleDoubleDouble = Double(factorizationIndexMinDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDoubleDoubleDoubleInt = Int(factorizationIndexMaxDoubleDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDoubleDoubleDoubleInt = Int(factorizationIndexMinDoubleDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMaxDoubleDoubleDoubleDoubleDoubleDouble = Double(factorizationIndexMaxDoubleDoubleDoubleDoubleDouble)\n\
    \    var factorizationIndexMinDoubleDoubleDoubleDoubleDoubleDouble = Double(factorizationIndexMinDoubleDoubleDoubleDoubleDoubleDouble)\n\
    \    var ", "    var factorization: [Int] = []\n    var primeFactorization: [Int]\
    \ = []\n    var isPrime: [Bool] = []\n    var isPrimeCount: [Int] = []\n    var\
    \ isPrimeCountMax: Int = 1\n    var isPrimeCountMin: Int = 1\n    var isPrimeCountMinMax:\
    \ Int = 1\n    var isPrimeCountMaxMin: Int = 1\n    var isPrimeCountMinMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n  \
    \  var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int =\
    \ 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n  \
    \  var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int =\
    \ 1\n    var isPrimeCountMin", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var factorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPri", "    var factors = [Int]()\n    var i = 2\n    var p = Int(n)\n\
    \    while p > 1 {\n        if p % i == 0 {\n            factors.append(i)\n \
    \           p /= i\n        } else {\n            i += 1\n        }\n    }\n \
    \   return factors", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var primeFactorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePri", "    var factorization = [Int]()\n   \
    \ var factors = [1]\n    var i = 2\n    while i <= n {\n        if n % i == 0\
    \ {\n            factors.append(i)\n            factorization = factorization\
    \ + factors\n            factors = [1]\n        } else {\n            i += 1\n\
    \        }\n    }\n    return factorization", "    var factorization = [Int]()\n\
    \    var primes = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = -1\n    var isPrimeFactorization\
    \ = true\n    var isPrimeFactorizationIndex = -1\n    var isPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeIndex = -1\n    var isPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationIndex = -1\n    var isPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeIndex = -1\n    var\
    \ isPrimeFactorizationPrimeFactorizationPrimeFactorization = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = -1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var is", "    var factorization: [Int] = []\n    var factor = 2\n\
    \    var i = 2\n    while i <= n {\n        while n % i == 0 {\n            factorization.append(i)\n\
    \            n /= i\n        }\n        i += 1\n    }\n    if n > 1 {\n      \
    \  factorization.append(n)\n    }\n    return factorization", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var isPrime = true\n    var\
    \ isPrimeCount = 0\n    var isPrimePrime = true\n    var isPrimePrimeCount = 0\n\
    \    var isPrimePrimePrime = true\n    var isPrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimeCount = 0\n   \
    \ var isPrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var factorizationNumber = 0\n    var factorizationNumberCount = 0\n    var\
    \ factorizationNumberIndex = 0\n    var factorizationNumberSum = 0\n    var factorizationNumberSumCount\
    \ = 0\n    var factorizationNumberSumIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime: Bool =\
    \ false\n    var isPrimeFactorization: Bool = false\n    var isPrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimeFactorization: Bool = false\n    var\
    \ isPrimePrimePrimePrimeFactorization: Bool = false\n    var isPrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeFactorization: Bool =\
    \ false\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimeFactorization: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization: Bool =\
    \ false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPri", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSum2 = 0\n    var factorizationSum3\
    \ = 0\n    var factorizationSum4 = 0\n    var factorizationSum5 = 0\n    var factorizationSum6\
    \ = 0\n    var factorizationSum7 = 0\n    var factorizationSum8 = 0\n    var factorizationSum9\
    \ = 0\n    var factorizationSum10 = 0\n    var factorizationSum11 = 0\n    var\
    \ factorizationSum12 = 0\n    var factorizationSum13 = 0\n    var factorizationSum14\
    \ = 0\n    var factorizationSum15 = 0\n    var factorizationSum16 = 0\n    var\
    \ factorizationSum17 = 0\n    var factorizationSum18 = 0\n    var factorizationSum19\
    \ = 0\n    var factorizationSum20 = 0\n    var factorizationSum21 = 0\n    var\
    \ factorizationSum22 = 0\n    var factorizationSum23 = 0\n    var factorizationSum24\
    \ = 0\n    var factorizationSum25 = 0\n    var factorizationSum26 = 0\n    var\
    \ factorizationSum27 = 0\n    var factorizationSum28 = 0\n    var factorizationSum29\
    \ = 0\n    var factorizationSum30 = 0\n    var factorizationSum31 = 0\n    var\
    \ factorizationSum32 = 0\n    var factorizationSum33 = 0\n    var factorizationSum34\
    \ = 0\n    var factorizationSum35 = 0\n    var factorizationSum36 = 0\n    var\
    \ factorizationSum37 = 0\n    var factorizationSum38 = 0\n    var factorizationSum39\
    \ = 0\n    var factorizationSum40 = 0\n    var factorizationSum41 = 0\n    var\
    \ factorizationSum42 = 0\n    var factorizationSum43 = 0\n    var factorizationSum44\
    \ = 0\n    var factorizationSum45 = 0\n    var factorizationSum46 = 0\n    var\
    \ factorizationSum47 = 0\n    var factorizationSum48 = 0\n    var factorizationSum49\
    \ = 0\n    var factorizationSum50 = 0\n    var factorizationSum51 = 0\n    var\
    \ factorizationSum52 = 0\n    var factorizationSum53 = 0\n    var factorizationSum54\
    \ = 0\n    var factorizationSum55 = 0\n    var factorizationSum56 = 0\n    var\
    \ factorizationSum57 = 0\n    var factorizationSum58 = 0\n    var factorizationSum59\
    \ = 0\n    var factorizationSum60 = 0\n    var factorizationSum61 = 0\n    var\
    \ factorizationSum62 = 0\n    var factorizationSum63 = 0\n    var factorizationSum64\
    \ = 0\n    var factorizationSum65 = 0\n    var factorizationSum66 = 0\n    var\
    \ factorizationSum67 = 0\n    var factorizationSum68 = 0\n    var factorizationSum69\
    \ = 0\n    var factorizationSum70 = 0\n    var factorizationSum71 = 0\n    var\
    \ factorization", "    var factors = [Int]()\n    var i = 2\n    var j = 1\n \
    \   var k = 0\n    var factorization = [Int]()\n    var factorizationCount = 0\n\
    \n    while i < n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            factorizationCount += 1\n        }\n        i += 1\n    }\n\n   \
    \ for factor in factors {\n        factorization[k] = factor\n        k += 1\n\
    \    }\n\n    for factor in factors {\n        for _ in 0..<factorizationCount\
    \ {\n            if factor == factorization[k] {\n                factorization.removeAtIndex(k)\n\
    \                k -= 1\n            }\n        }\n    }\n\n    return factorization",
  "    var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex = 0\n    var isPrimeFactorsCountMaxIndexMax\
    \ = Int(arc4random_uniform(UInt32(UInt32.max)))\n    var isPrimeFactorsCountMaxIndexMax\
    \ = 0\n    var isPrimeFactorsCountMaxIndexMaxMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndexMaxMax = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMax\
    \ = Int(arc4random_uniform(UInt32(UInt32.max)))\n    var isPrimeFactorsCountMaxIndexMaxMaxMax\
    \ = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndexMaxMaxMaxMax = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMax\
    \ = Int(arc4random_uniform(UInt32(UInt32.max)))\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMax\
    \ = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMax = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMax\
    \ = Int(arc4random_uniform(UInt32(UInt32.max)))\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMax\
    \ = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMaxMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMaxMax = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMaxMaxMax = 0\n    var\
    \ isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMaxMaxMax = 0\n    var isPrimeFactorsCountMaxIndexMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0\n    var isPrimeFactorsCountMaxIndex", "    var factors = [Int]()\n    var\
    \ primes = [Int]()\n    var primeFactors = [Int]()\n    var isPrime = [Bool]()\n\
    \    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount = [Int]()\n  \
    \  var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex = Int()\n\
    \    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()", "    var factorization: [Int] = []\n    var factorizationCount =\
    \ 0\n    var factorizationIndex = 0\n    var factorizationValue = 1\n    var isPrime\
    \ = true\n    var isPrimeIndex = 0\n    var isPrimeValue = 1\n    var isPrimeValueIndex\
    \ = 0\n    var isPrimeValueIndex2 = 0\n    var isPrimeValueIndex3 = 0\n    var\
    \ isPrimeValueIndex4 = 0\n    var isPrimeValueIndex5 = 0\n    var isPrimeValueIndex6\
    \ = 0\n    var isPrimeValueIndex7 = 0\n    var isPrimeValueIndex8 = 0\n    var\
    \ isPrimeValueIndex9 = 0\n    var isPrimeValueIndex10 = 0\n    var isPrimeValueIndex11\
    \ = 0\n    var isPrimeValueIndex12 = 0\n    var isPrimeValueIndex13 = 0\n    var\
    \ isPrimeValueIndex14 = 0\n    var isPrimeValueIndex15 = 0\n    var isPrimeValueIndex16\
    \ = 0\n    var isPrimeValueIndex17 = 0\n    var isPrimeValueIndex18 = 0\n    var\
    \ isPrimeValueIndex19 = 0\n    var isPrimeValueIndex20 = 0\n    var isPrimeValueIndex21\
    \ = 0\n    var isPrimeValueIndex22 = 0\n    var isPrimeValueIndex23 = 0\n    var\
    \ isPrimeValueIndex24 = 0\n    var isPrimeValueIndex25 = 0\n    var isPrimeValueIndex26\
    \ = 0\n    var isPrimeValueIndex27 = 0\n    var isPrimeValueIndex28 = 0\n    var\
    \ isPrimeValueIndex29 = 0\n    var isPrimeValueIndex30 = 0\n    var isPrimeValueIndex31\
    \ = 0\n    var isPrimeValueIndex32 = 0\n    var isPrimeValueIndex33 = 0\n    var\
    \ isPrimeValueIndex34 = 0\n    var isPrimeValueIndex35 = 0\n    var isPrimeValueIndex36\
    \ = 0\n    var isPrimeValueIndex37 = 0\n    var isPrimeValueIndex38 = 0\n    var\
    \ isPrimeValueIndex39 = 0\n    var isPrimeValueIndex40 = 0\n    var isPrimeValueIndex41\
    \ = 0\n    var isPrimeValueIndex42 = 0\n    var isPrimeValueIndex43 = 0\n    var\
    \ isPrimeValueIndex44 = 0\n    var isPrimeValueIndex45 = 0\n    var isPrimeValueIndex46\
    \ = 0\n    var isPrimeValueIndex47 = 0\n    var isPrimeValueIndex48 = 0\n    var\
    \ isPrimeValueIndex49 = 0\n    var isPrimeValueIndex50 = 0\n    var isPrimeValueIndex51\
    \ = 0\n    var isPrimeValueIndex52 = 0\n", "    var factorization: [Int] = []\n\
    \    var factorizationCount = 0\n    var factorizationSum = 0\n    var factorizationSum2\
    \ = 0\n    var factorizationSum3 = 0\n    var factorizationSum4 = 0\n    var factorizationSum5\
    \ = 0\n    var factorizationSum6 = 0\n    var factorizationSum7 = 0\n    var factorizationSum8\
    \ = 0\n    var factorizationSum9 = 0\n    var factorizationSum10 = 0\n    var\
    \ factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var factorizationSum13\
    \ = 0\n    var factorizationSum14 = 0\n    var factorizationSum15 = 0\n    var\
    \ factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var factorizationSum18\
    \ = 0\n    var factorizationSum19 = 0\n    var factorizationSum20 = 0\n    var\
    \ factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var factorizationSum23\
    \ = 0\n    var factorizationSum24 = 0\n    var factorizationSum25 = 0\n    var\
    \ factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var factorizationSum28\
    \ = 0\n    var factorizationSum29 = 0\n    var factorizationSum30 = 0\n    var\
    \ factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var factorizationSum33\
    \ = 0\n    var factorizationSum34 = 0\n    var factorizationSum35 = 0\n    var\
    \ factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var factorizationSum38\
    \ = 0\n    var factorizationSum39 = 0\n    var factorizationSum40 = 0\n    var\
    \ factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var factorizationSum43\
    \ = 0\n    var factorizationSum44 = 0\n    var factorizationSum45 = 0\n    var\
    \ factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var factorizationSum48\
    \ = 0\n    var factorizationSum49 = 0\n    var factorizationSum50 = 0\n    var\
    \ factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var factorizationSum53\
    \ = 0\n    var factorizationSum54 = 0\n    var factorizationSum55 = 0\n    var\
    \ factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var factorizationSum58\
    \ = 0\n    var factorizationSum59 = 0\n    var factorizationSum60 = 0\n    var\
    \ factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var factorizationSum63\
    \ = 0\n    var factorizationSum64 = 0\n    var factorizationSum65 = 0\n    var\
    \ factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var factorizationSum68\
    \ = 0\n    var factorizationSum69 = 0\n    var factorizationSum70 = 0\n    var\
    \ factorizationSum71 = 0\n    var factorization", "    var factors = [Int]()\n\
    \    var primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount\
    \ = 0\n    var isPrimeIndex = 0\n    var isPrimeIndexMax = 0\n    var isPrimeIndexMaxIndex\
    \ = 0\n    var isPrimeIndexMin = 0\n    var isPrimeIndexMinIndex = 0\n    var\
    \ isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMax = 0\n    var isPrimeIndexMinIndexMax\
    \ = 0\n    var isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMin =\
    \ 0\n    var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMaxIndexMin = 0\n\
    \    var isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin = 0\n  \
    \  var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMinIndexMin = 0\n    var\
    \ isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin\
    \ = 0\n    var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMinIndexMin =\
    \ 0\n    var isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMax = 0\n\
    \    var isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMin = 0\n  \
    \  var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMaxIndexMin = 0\n    var\
    \ isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMin\
    \ = 0\n    var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMaxIndexMin =\
    \ 0\n    var isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin = 0\n\
    \    var isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin = 0\n  \
    \  var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMinIndexMin = 0\n    var\
    \ isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin\
    \ = 0\n    var isPrimeIndexMinIndexMax = 0\n    var isPrimeIndexMaxIndexMin =\
    \ 0\n    var isPrimeIndexMinIndexMin = 0\n    var isPrimeIndexMinIndexMin = 0\n\
    \    var isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMax = 0\n  \
    \  var isPrimeIndexMaxIndexMin = 0\n    var isPrimeIndexMinIndexMax = 0\n", " \
    \   var factors = [Int]()\n    var i = 2\n    var factor = 1\n    while i < n\
    \ {\n        if n % i == 0 {\n            factors.append(factor)\n           \
    \ factor = 1\n        } else {\n            factor *= i\n        }\n        i\
    \ += 1\n    }\n    factors.append(factor)\n    return factors", "    var factors\
    \ = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n    var\
    \ isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCount = [Int]()\n    var isPrimeFactorsIndexCountMax\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndex = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCount\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndex = [Int]()\n  \
    \  var isPrimeFactorsIndexCountMaxIndexCountIndexIndex = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndexCountIndexIndexIndexIndexIndexIndexIndexIndex\
    \ = [Int]()\n    var isPrimeFactorsIndexCountMaxIndex", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var factorizationIndex2 = 0\n    var factorizationIndex3 = 0\n    var factorizationIndex4\
    \ = 0\n    var factorizationIndex5 = 0\n    var factorizationIndex6 = 0\n    var\
    \ factorizationIndex7 = 0\n    var factorizationIndex8 = 0\n    var factorizationIndex9\
    \ = 0\n    var factorizationIndex10 = 0\n    var factorizationIndex11 = 0\n  \
    \  var factorizationIndex12 = 0\n    var factorizationIndex13 = 0\n    var factorizationIndex14\
    \ = 0\n    var factorizationIndex15 = 0\n    var factorizationIndex16 = 0\n  \
    \  var factorizationIndex17 = 0\n    var factorizationIndex18 = 0\n    var factorizationIndex19\
    \ = 0\n    var factorizationIndex20 = 0\n    var factorizationIndex21 = 0\n  \
    \  var factorizationIndex22 = 0\n    var factorizationIndex23 = 0\n    var factorizationIndex24\
    \ = 0\n    var factorizationIndex25 = 0\n    var factorizationIndex26 = 0\n  \
    \  var factorizationIndex27 = 0\n    var factorizationIndex28 = 0\n    var factorizationIndex29\
    \ = 0\n    var factorizationIndex30 = 0\n    var factorizationIndex31 = 0\n  \
    \  var factorizationIndex32 = 0\n    var factorizationIndex33 = 0\n    var factorizationIndex34\
    \ = 0\n    var factorizationIndex35 = 0\n    var factorizationIndex36 = 0\n  \
    \  var factorizationIndex37 = 0\n    var factorizationIndex38 = 0\n    var factorizationIndex39\
    \ = 0\n    var factorizationIndex40 = 0\n    var factorizationIndex41 = 0\n  \
    \  var factorizationIndex42 = 0\n    var factorizationIndex43 = 0\n    var factorizationIndex44\
    \ = 0\n    var factorizationIndex45 = 0\n    var factorizationIndex46 = 0\n  \
    \  var factorizationIndex47 = 0\n    var factorizationIndex48 = 0\n    var factorizationIndex49\
    \ = 0\n    var factorizationIndex50 = 0\n    var factorizationIndex51 = 0\n  \
    \  var factorizationIndex52 = 0\n    var factorizationIndex53 = 0\n    var factorizationIndex54\
    \ = 0\n    var factorizationIndex55 = 0\n    var factorizationIndex56 = 0\n  \
    \  var factorizationIndex57 = 0\n    var factorizationIndex58 = 0\n    var factorizationIndex59\
    \ = 0\n    var factorizationIndex60 = 0\n    var factorizationIndex61 = 0\n  \
    \  var factorizationIndex62 = 0\n    var factorizationIndex63 = 0\n    var factorizationIndex64\
    \ = 0\n    var factorizationIndex65 = 0\n    var factorizationIndex66 = 0\n  \
    \  var factorizationIndex67 = 0\n    var factorizationIndex68 = 0\n    var factorizationIndex69\
    \ = 0\n    var factorizationIndex70 = 0\n    var factorizationIndex71 = 0\n  \
    \  var factorization", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var isPrime: [Bool] = []\n    var isPrimeCount: [Int] = []\n\
    \    var isPrimeCountMax: Int = 1\n    var isPrimeCountMin: Int = 1\n    var isPrimeCountMinMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n  \
    \  var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int =\
    \ 1\n    var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n  \
    \  var isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax: Int = 1\n    var\
    \ isPrimeCountMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax", "    var factors: [Int] =\
    \ []\n    var factorization: [Int] = []\n    var current: Int = 0\n    var factor:\
    \ Int = 0\n    var isPrime: Bool = false\n    var isPrimeCount: Int = 0\n    var\
    \ isPrimeFactor: Bool = false\n    var isPrimeFactorCount: Int = 0\n    var isPrimeFactor2:\
    \ Bool = false\n    var isPrimeFactor2Count: Int = 0\n    var isPrimeFactor3:\
    \ Bool = false\n    var isPrimeFactor3Count: Int = 0\n    var isPrimeFactor4:\
    \ Bool = false\n    var isPrimeFactor4Count: Int = 0\n    var isPrimeFactor5:\
    \ Bool = false\n    var isPrimeFactor5Count: Int = 0\n    var isPrimeFactor6:\
    \ Bool = false\n    var isPrimeFactor6Count: Int = 0\n    var isPrimeFactor7:\
    \ Bool = false\n    var isPrimeFactor7Count: Int = 0\n    var isPrimeFactor8:\
    \ Bool = false\n    var isPrimeFactor8Count: Int = 0\n    var isPrimeFactor9:\
    \ Bool = false\n    var isPrimeFactor9Count: Int = 0\n    var isPrimeFactor10:\
    \ Bool = false\n    var isPrimeFactor10Count: Int = 0\n    var isPrimeFactor11:\
    \ Bool = false\n    var isPrimeFactor11Count: Int = 0\n    var isPrimeFactor12:\
    \ Bool = false\n    var isPrimeFactor12Count: Int = 0\n    var isPrimeFactor13:\
    \ Bool = false\n    var isPrimeFactor13Count: Int = 0\n    var isPrimeFactor14:\
    \ Bool = false\n    var isPrimeFactor14Count: Int = 0\n    var isPrimeFactor15:\
    \ Bool = false\n    var isPrimeFactor15Count: Int = 0\n    var isPrimeFactor16:\
    \ Bool = false\n    var isPrimeFactor16Count: Int = 0\n    var isPrimeFactor17:\
    \ Bool = false\n    var isPrimeFactor17Count: Int = 0\n    var isPrimeFactor18:\
    \ Bool = false\n    var isPrimeFactor18Count: Int = 0\n    var isPrimeFactor19:\
    \ Bool = false\n    var isPrimeFactor19Count: Int = 0\n    var isPrimeFactor20:\
    \ Bool = false\n    var isPrimeFactor20Count: Int = 0\n    var isPrimeFactor21:\
    \ Bool = false\n    var isPrimeFactor21Count: Int = 0\n    var isPrimeFactor22:\
    \ Bool = false\n    var isPrimeFactor22Count: Int = 0\n    var isPrimeFactor23:\
    \ Bool = false\n    var isPrime", "    var factors: [Int] = []\n    var factorization:\
    \ [Int] = [1]\n    var i: Int = 0\n    var j: Int = 0\n    var factor: Int = 0\n\
    \    var factorizationCount: Int = 0\n    var isPrime: Bool = false\n    var isPrime2:\
    \ Bool = false\n    var isPrime3: Bool = false\n    var isPrime4: Bool = false\n\
    \    var isPrime5: Bool = false\n    var isPrime6: Bool = false\n    var isPrime7:\
    \ Bool = false\n    var isPrime8: Bool = false\n    var isPrime9: Bool = false\n\
    \    var isPrime10: Bool = false\n    var isPrime11: Bool = false\n    var isPrime12:\
    \ Bool = false\n    var isPrime13: Bool = false\n    var isPrime14: Bool = false\n\
    \    var isPrime15: Bool = false\n    var isPrime16: Bool = false\n    var isPrime17:\
    \ Bool = false\n    var isPrime18: Bool = false\n    var isPrime19: Bool = false\n\
    \    var isPrime20: Bool = false\n    var isPrime21: Bool = false\n    var isPrime22:\
    \ Bool = false\n    var isPrime23: Bool = false\n    var isPrime24: Bool = false\n\
    \    var isPrime25: Bool = false\n    var isPrime26: Bool = false\n    var isPrime27:\
    \ Bool = false\n    var isPrime28: Bool = false\n    var isPrime29: Bool = false\n\
    \    var isPrime30: Bool = false\n    var isPrime31: Bool = false\n    var isPrime32:\
    \ Bool = false\n    var isPrime33: Bool = false\n    var isPrime34: Bool = false\n\
    \    var isPrime35: Bool = false\n    var isPrime36: Bool = false\n    var isPrime37:\
    \ Bool = false\n    var isPrime38: Bool = false\n    var isPrime39: Bool = false\n\
    \    var isPrime40: Bool = false\n    var isPrime41: Bool = false\n    var isPrime42:\
    \ Bool = false\n    var isPrime43: Bool = false\n    var isPrime44: Bool = false\n\
    \    var isPrime45: Bool = false\n    var isPrime46: Bool = false\n    var isPrime47:\
    \ Bool = false\n    var isPrime48: Bool = false\n    var isPrime49: Bool = false\n\
    \    var isPrime50: Bool = false\n    var isPrime51: Bool = false\n    var isPrime52:\
    \ Bool = false\n    var isPrime53: Bool = false\n    var ", "    var factors =\
    \ [Int]()\n    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n  \
    \          factors.append(i)\n            n /= i\n        } else {\n         \
    \   i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n    }\n\
    \    return factors", "    var factors: [Int] = []\n    var factorization: [Int]\
    \ = [1]\n    var factorizationIndex = 0\n    var factorizationIndexMax = factorizationIndex\n\
    \    var factorizationIndexMin = factorizationIndex\n    var factorizationIndexMaxMin\
    \ = factorizationIndex\n    var factorizationIndexMinMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMin = factorizationIndex\n    var factorizationIndexMinMaxMinMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMin = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMax = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMin\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMin = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMax = factorizationIndex\n\
    \    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax =\
    \ factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factorizationIndexMinMaxMinMaxMinMaxMinMaxMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = factorizationIndex\n    var factor", "    var factorization: [Int] = []\n\
    \    var primeFactorization: [Int] = []\n    var primeFactorizationCount = 0\n\
    \    var factorizationCount = 0\n    var factorizationCountMax = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMaxInt = Int(factorizationCountMax)\n    var factorizationCountMaxDouble\
    \ = Double(factorizationCountMax)\n    var factorizationCountMaxDoubleInt = Int(factorizationCountMaxDouble)\n\
    \    var factorizationCountMaxFloat = Float(factorizationCountMax)\n    var factorizationCountMaxFloatInt\
    \ = Int(factorizationCountMaxFloat)\n    var factorizationCountMaxInt = Int(factorizationCountMax)\n\
    \    var factorizationCountMaxIntInt = Int(factorizationCountMax)\n    var factorizationCountMaxDouble\
    \ = Double(factorizationCountMax)\n    var factorizationCountMaxDoubleInt = Int(factorizationCountMaxDouble)\n\
    \    var factorizationCountMaxFloat = Float(factorizationCountMax)\n    var factorizationCountMaxFloatInt\
    \ = Int(factorizationCountMaxFloat)\n    var factorizationCountMaxInt = Int(factorizationCountMax)\n\
    \    var factorizationCountMaxIntInt = Int(factorizationCountMax)\n    var factorizationCountMaxDouble\
    \ = Double(factorizationCountMax)\n    var factorizationCountMaxDoubleInt = Int(factorizationCountMaxDouble)\n\
    \    var factorizationCountMaxFloat = Float(factorizationCountMax)\n    var factorizationCountMaxFloatInt\
    \ = Int(factorizationCountMaxFloat)\n    var factorizationCountMaxInt = Int(factorizationCountMax)\n\
    \    var factorizationCountMaxIntInt = Int(factorizationCountMax)\n    var factorizationCountMaxDouble\
    \ = Double(factorizationCountMax)\n    var factorizationCountMaxDoubleInt = Int(factorizationCountMaxDouble)\n\
    \    var factorizationCountMaxFloat = Float(factorizationCountMax)\n    var factorizationCountMaxFloatInt\
    \ = Int(factorizationCountMaxFloat)\n    var factorizationCountMaxInt = Int(factorizationCountMax)\n\
    \    var factorizationCountMaxIntInt = Int(factorizationCountMax)\n    var factorizationCountMaxDouble\
    \ = Double(factorizationCountMax)\n    var factorizationCountMaxDoubleInt = Int(factorizationCountMaxDouble)\n\
    \    var factorizationCountMaxFloat = Float(factorizationCountMax)\n    var factorizationCountMaxFloatInt\
    \ = Int(factorizationCountMaxFloat)\n    var factorizationCountMaxInt = Int(factorizationCountMax)\n\
    \    var factorizationCountMaxIntInt = Int(factorizationCountMax)\n    var factorization",
  "    var factorization: [Int] = []\n    var factor = 2\n    while factor <= n {\n\
    \        if n % factor == 0 {\n            factorization[factor] = factorization[factor]\
    \ + 1\n            n /= factor\n        } else {\n            factor++\n     \
    \   }\n    }\n    return factorization", "    var factorization: [Int] = []\n\
    \    var primeFactorization: [Int] = []\n    var primeFactorizationCount = 0\n\
    \    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrime", "    var factorization: [Int] = []\n    var factor: Int\
    \ = 0\n    var i: Int = 0\n    var j: Int = 0\n    var factorizationCount: Int\
    \ = 0\n    var factorizationSum: Int = 0\n    var isPrime: Bool = false\n    var\
    \ isPrimeSum: Int = 0\n    var isPrimeSum2: Int = 0\n    var isPrimeSum3: Int\
    \ = 0\n    var isPrimeSum4: Int = 0\n    var isPrimeSum5: Int = 0\n    var isPrimeSum6:\
    \ Int = 0\n    var isPrimeSum7: Int = 0\n    var isPrimeSum8: Int = 0\n    var\
    \ isPrimeSum9: Int = 0\n    var isPrimeSum10: Int = 0\n    var isPrimeSum11: Int\
    \ = 0\n    var isPrimeSum12: Int = 0\n    var isPrimeSum13: Int = 0\n    var isPrimeSum14:\
    \ Int = 0\n    var isPrimeSum15: Int = 0\n    var isPrimeSum16: Int = 0\n    var\
    \ isPrimeSum17: Int = 0\n    var isPrimeSum18: Int = 0\n    var isPrimeSum19:\
    \ Int = 0\n    var isPrimeSum20: Int = 0\n    var isPrimeSum21: Int = 0\n    var\
    \ isPrimeSum22: Int = 0\n    var isPrimeSum23: Int = 0\n    var isPrimeSum24:\
    \ Int = 0\n    var isPrimeSum25: Int = 0\n    var isPrimeSum26: Int = 0\n    var\
    \ isPrimeSum27: Int = 0\n    var isPrimeSum28: Int = 0\n    var isPrimeSum29:\
    \ Int = 0\n    var isPrimeSum30: Int = 0\n    var isPrimeSum31: Int = 0\n    var\
    \ isPrimeSum32: Int = 0\n    var isPrimeSum33: Int = 0\n    var isPrimeSum34:\
    \ Int = 0\n    var isPrimeSum35: Int = 0\n    var isPrimeSum36: Int = 0\n    var\
    \ isPrimeSum37: Int = 0\n    var isPrimeSum38: Int = 0\n    var isPrimeSum39:\
    \ Int = 0\n    var isPrimeSum40: Int = 0\n    var isPrimeSum41: Int = 0\n    var\
    \ isPrimeSum42: Int = 0\n    var isPrimeSum43: Int = 0\n    var isPrimeSum44:\
    \ Int = 0\n    var isPrimeSum45: Int = 0\n    var isPrimeSum46: Int = 0\n    var\
    \ isPrimeSum47: Int = 0", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSum2 = 0\n    var factorizationSum3\
    \ = 0\n    var factorizationSum4 = 0\n    var factorizationSum5 = 0\n    var factorizationSum6\
    \ = 0\n    var factorizationSum7 = 0\n    var factorizationSum8 = 0\n    var factorizationSum9\
    \ = 0\n    var factorizationSum10 = 0\n    var factorizationSum11 = 0\n    var\
    \ factorizationSum12 = 0\n    var factorizationSum13 = 0\n    var factorizationSum14\
    \ = 0\n    var factorizationSum15 = 0\n    var factorizationSum16 = 0\n    var\
    \ factorizationSum17 = 0\n    var factorizationSum18 = 0\n    var factorizationSum19\
    \ = 0\n    var factorizationSum20 = 0\n    var factorizationSum21 = 0\n    var\
    \ factorizationSum22 = 0\n    var factorizationSum23 = 0\n    var factorizationSum24\
    \ = 0\n    var factorizationSum25 = 0\n    var factorizationSum26 = 0\n    var\
    \ factorizationSum27 = 0\n    var factorizationSum28 = 0\n    var factorizationSum29\
    \ = 0\n    var factorizationSum30 = 0\n    var factorizationSum31 = 0\n    var\
    \ factorizationSum32 = 0\n    var factorizationSum33 = 0\n    var factorizationSum34\
    \ = 0\n    var factorizationSum35 = 0\n    var factorizationSum36 = 0\n    var\
    \ factorizationSum37 = 0\n    var factorizationSum38 = 0\n    var factorizationSum39\
    \ = 0\n    var factorizationSum40 = 0\n    var factorizationSum41 = 0\n    var\
    \ factorizationSum42 = 0\n    var factorizationSum43 = 0\n    var factorizationSum44\
    \ = 0\n    var factorizationSum45 = 0\n    var factorizationSum46 = 0\n    var\
    \ factorizationSum47 = 0\n    var factorizationSum48 = 0\n    var factorizationSum49\
    \ = 0\n    var factorizationSum50 = 0\n    var factorizationSum51 = 0\n    var\
    \ factorizationSum52 = 0\n    var factorizationSum53 = 0\n    var factorizationSum54\
    \ = 0\n    var factorizationSum55 = 0\n    var factorizationSum56 = 0\n    var\
    \ factorizationSum57 = 0\n    var factorizationSum58 = 0\n    var factorizationSum59\
    \ = 0\n    var factorizationSum60 = 0\n    var factorizationSum61 = 0\n    var\
    \ factorizationSum62 = 0\n    var factorizationSum63 = 0\n    var factorizationSum64\
    \ = 0\n    var factorizationSum65 = 0\n    var factorizationSum66 = 0\n    var\
    \ factorizationSum67 = 0\n    var factorizationSum68 = 0\n    var factorizationSum69\
    \ = 0\n    var factorizationSum70 = 0\n    var factorizationSum71 = 0\n    var\
    \ factorization", "    var factorization: [Int] = []\n    var factor: Int\n  \
    \  var i: Int\n    var j: Int\n    for i = 2; i <= n / 2; i += 1 {\n        factorization\
    \ = factorization[..]\n        factor = i\n        for j = i; j < n / i; j +=\
    \ 1 {\n            if n % j == 0 {\n                factor *= j\n            \
    \    factorization = append(factorization, factor)\n                break\n  \
    \          }\n        }\n    }\n    return factorization", "    var factorization\
    \ = [Int]()\n    var factorizationCount = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var primeFactorizationCount = [Int]()\n    var isPrime = [Bool]()\n\
    \    var isPrimeCount = [Bool]()\n    var isPrimePrime = [Bool]()\n    var isPrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrime = [Bool]()\n    var isPrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePri", "    var factorization: [Int] =\
    \ []\n    var factorizationCount = 0\n    var factorizationSum = 0\n    var factorizationSum2\
    \ = 0\n    var factorizationSum3 = 0\n    var factorizationSum4 = 0\n    var factorizationSum5\
    \ = 0\n    var factorizationSum6 = 0\n    var factorizationSum7 = 0\n    var factorizationSum8\
    \ = 0\n    var factorizationSum9 = 0\n    var factorizationSum10 = 0\n    var\
    \ factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var factorizationSum13\
    \ = 0\n    var factorizationSum14 = 0\n    var factorizationSum15 = 0\n    var\
    \ factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var factorizationSum18\
    \ = 0\n    var factorizationSum19 = 0\n    var factorizationSum20 = 0\n    var\
    \ factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var factorizationSum23\
    \ = 0\n    var factorizationSum24 = 0\n    var factorizationSum25 = 0\n    var\
    \ factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var factorizationSum28\
    \ = 0\n    var factorizationSum29 = 0\n    var factorizationSum30 = 0\n    var\
    \ factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var factorizationSum33\
    \ = 0\n    var factorizationSum34 = 0\n    var factorizationSum35 = 0\n    var\
    \ factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var factorizationSum38\
    \ = 0\n    var factorizationSum39 = 0\n    var factorizationSum40 = 0\n    var\
    \ factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var factorizationSum43\
    \ = 0\n    var factorizationSum44 = 0\n    var factorizationSum45 = 0\n    var\
    \ factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var factorizationSum48\
    \ = 0\n    var factorizationSum49 = 0\n    var factorizationSum50 = 0\n    var\
    \ factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var factorizationSum53\
    \ = 0\n    var factorizationSum54 = 0\n    var factorizationSum55 = 0\n    var\
    \ factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var factorizationSum58\
    \ = 0\n    var factorizationSum59 = 0\n    var factorizationSum60 = 0\n    var\
    \ factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var factorizationSum63\
    \ = 0\n    var factorizationSum64 = 0\n    var factorizationSum65 = 0\n    var\
    \ factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var factorizationSum68\
    \ = 0\n    var factorizationSum69 = 0\n    var factorizationSum70 = 0\n    var\
    \ factorizationSum71 = 0\n    var factorization", "    var factorization: [Int]\
    \ = []\n    var i = 2\n    while i < n {\n        if n % i == 0 {\n          \
    \  factorization = append(factorization, i)\n            n /= i\n        } else\
    \ {\n            i += 1\n        }\n    }\n    if n > 1 {\n        factorization\
    \ = append(factorization, n)\n    }\n    return factorization", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationSum = 0\n \
    \   var factorizationSum2 = 0\n    var factorizationSum3 = 0\n    var factorizationSum4\
    \ = 0\n    var factorizationSum5 = 0\n    var factorizationSum6 = 0\n    var factorizationSum7\
    \ = 0\n    var factorizationSum8 = 0\n    var factorizationSum9 = 0\n    var factorizationSum10\
    \ = 0\n    var factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var\
    \ factorizationSum13 = 0\n    var factorizationSum14 = 0\n    var factorizationSum15\
    \ = 0\n    var factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var\
    \ factorizationSum18 = 0\n    var factorizationSum19 = 0\n    var factorizationSum20\
    \ = 0\n    var factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var\
    \ factorizationSum23 = 0\n    var factorizationSum24 = 0\n    var factorizationSum25\
    \ = 0\n    var factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var\
    \ factorizationSum28 = 0\n    var factorizationSum29 = 0\n    var factorizationSum30\
    \ = 0\n    var factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var\
    \ factorizationSum33 = 0\n    var factorizationSum34 = 0\n    var factorizationSum35\
    \ = 0\n    var factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var\
    \ factorizationSum38 = 0\n    var factorizationSum39 = 0\n    var factorizationSum40\
    \ = 0\n    var factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var\
    \ factorizationSum43 = 0\n    var factorizationSum44 = 0\n    var factorizationSum45\
    \ = 0\n    var factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var\
    \ factorizationSum48 = 0\n    var factorizationSum49 = 0\n    var factorizationSum50\
    \ = 0\n    var factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var\
    \ factorizationSum53 = 0\n    var factorizationSum54 = 0\n    var factorizationSum55\
    \ = 0\n    var factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var\
    \ factorizationSum58 = 0\n    var factorizationSum59 = 0\n    var factorizationSum60\
    \ = 0\n    var factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var\
    \ factorizationSum63 = 0\n    var factorizationSum64 = 0\n    var factorizationSum65\
    \ = 0\n    var factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var\
    \ factorizationSum68 = 0\n    var factorizationSum69 = 0\n    var factorizationSum70\
    \ = 0\n    var factorizationSum71 = 0\n    var factorization", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime: [Bool]\
    \ = []\n    var isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int = 1\n \
    \   var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMaxIndex2: Int = 0\n\
    \    var isPrimeCountMaxIndex3: Int = 0\n    var isPrimeCountMaxIndex4: Int =\
    \ 0\n    var isPrimeCountMaxIndex5: Int = 0\n    var isPrimeCountMaxIndex6: Int\
    \ = 0\n    var isPrimeCountMaxIndex7: Int = 0\n    var isPrimeCountMaxIndex8:\
    \ Int = 0\n    var isPrimeCountMaxIndex9: Int = 0\n    var isPrimeCountMaxIndex10:\
    \ Int = 0\n    var isPrimeCountMaxIndex11: Int = 0\n    var isPrimeCountMaxIndex12:\
    \ Int = 0\n    var isPrimeCountMaxIndex13: Int = 0\n    var isPrimeCountMaxIndex14:\
    \ Int = 0\n    var isPrimeCountMaxIndex15: Int = 0\n    var isPrimeCountMaxIndex16:\
    \ Int = 0\n    var isPrimeCountMaxIndex17: Int = 0\n    var isPrimeCountMaxIndex18:\
    \ Int = 0\n    var isPrimeCountMaxIndex19: Int = 0\n    var isPrimeCountMaxIndex20:\
    \ Int = 0\n    var isPrimeCountMaxIndex21: Int = 0\n    var isPrimeCountMaxIndex22:\
    \ Int = 0\n    var isPrimeCountMaxIndex23: Int = 0\n    var isPrimeCountMaxIndex24:\
    \ Int = 0\n    var isPrimeCountMaxIndex25: Int = 0\n    var isPrimeCountMaxIndex26:\
    \ Int = 0\n    var isPrimeCountMaxIndex27: Int = 0\n    var isPrimeCountMaxIndex28:\
    \ Int = 0\n    var isPrimeCountMaxIndex29: Int = 0\n    var isPrimeCountMaxIndex30:\
    \ Int = 0\n    var isPrimeCountMaxIndex31: Int = 0\n    var isPrimeCountMaxIndex32:\
    \ Int = 0\n    var isPrimeCountMaxIndex33: Int = 0\n    var isPrimeCountMaxIndex34:\
    \ Int = 0\n    var isPrimeCountMaxIndex35: Int = 0\n    var isPrimeCountMaxIndex36:\
    \ Int = 0\n    var isPrimeCountMaxIndex37: Int = 0\n    var isPrimeCountMaxIndex38:\
    \ Int = 0\n    var isPrimeCountMaxIndex39: Int = 0\n    var isPrimeCountMax",
  "    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n   \
    \ var primeFactorizationIndex = 0\n    var primeFactorizationCount = 0\n    var\
    \ primeFactorizationIsPrime = true\n    var primeFactorizationIsPrimeIndex = -1\n\
    \    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorizationIsPrimeCount = 0\n    var primeFactorizationIsPrimeIndex\
    \ = -1\n    var primeFactorization", "    var factorization: [Int] = []\n    var\
    \ primeFactorization: [Int] = []\n    var primeFactorizationCount = 0\n    var\
    \ factorizationCount = 0\n    var isPrime = true\n    var isPrimeCount = 0\n \
    \   var isPrimeFactorization = true\n    var isPrimeFactorizationCount = 0\n \
    \   var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimeFactorization\
    \ = true\n    var isPrimePrimeFactorizationCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeFactorizationCount = 0\n   \
    \ var isPrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization = true\n   \
    \ var isPrimePrimePrimePrimePrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePri",
  "    var factors = [Int]()\n    var i = 2\n    var p = 2\n    var q = 2\n    var\
    \ r = 2\n    var s = 2\n    var t = 2\n    var u = 2\n    var v = 1\n    var w\
    \ = 1\n    var x = 1\n    var y = 1\n    var z = 1\n    var a = 2\n    var b =\
    \ 2\n    var c = 2\n    var d = 2\n    var e = 2\n    var f = 2\n    var g = 2\n\
    \    var h = 2\n    var i = 2\n    var j = 2\n    var k = 2\n    var l = 2\n \
    \   var m = 2\n    var n = 2\n    var o = 2\n    var p = 2\n    var q = 2\n  \
    \  var r = 2\n    var s = 2\n    var t = 2\n    var u = 2\n    var v = 1\n   \
    \ var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n    var a = 2\n    var\
    \ b = 2\n    var c = 2\n    var d = 2\n    var e = 2\n    var f = 2\n    var g\
    \ = 2\n    var h = 2\n    var i = 2\n    var j = 2\n    var k = 2\n    var l =\
    \ 2\n    var m = 2\n    var n = 2\n    var o = 2\n    var p = 2\n    var q = 2\n\
    \    var r = 2\n    var s = 2\n    var t = 2\n    var u = 2\n    var v = 1\n \
    \   var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n    var a = 2\n  \
    \  var b = 2\n    var c = 2\n    var d = 2\n    var e = 2\n    var f = 2\n   \
    \ var g = 2\n    var h = 2\n    var i = 2\n    var j = 2\n    var k = 2\n    var\
    \ l = 2\n    var m = 2\n    var n = 2\n    var o = 2\n    var p = 2\n    var q\
    \ = 2\n    var r = 2\n    var s = 2\n    var t = 2\n    var u = 2\n    var v =\
    \ 1\n    var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n    var a = 2\n\
    \    var b = 2\n    var c = 2\n    var d = 2\n    var e = 2\n    var f = 2\n \
    \   var g = 2\n    var h = 2\n    var i = 2\n    var j = 2\n    var k = 2\n  \
    \  var l = 2\n    var m = 2\n    var n = 2\n    var o = 2\n    var p = 2\n   \
    \ var q = 2\n    var r = 2\n    var s = 2\n    var t = 2\n    var u = 2\n    var\
    \ v = 1\n    var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n    var a\
    \ = 2\n    var b = 2\n    var c = 2\n    var d = 2\n    var e = 2\n    var f =\
    \ 2\n    var g = 2\n    var h = 2\n    var i = 2\n    var j = 2\n    var ", " \
    \   var factors = [Int]()\n    var factorization = [Int]()\n    var factorizationCount\
    \ = 1\n    var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeIndex2 = 0\n    var isPrimeCount2\
    \ = 0\n    var isPrimeIndex3 = 0\n    var isPrimeCount3 = 0\n    var isPrimeIndex4\
    \ = 0\n    var isPrimeCount4 = 0\n    var isPrimeIndex5 = 0\n    var isPrimeCount5\
    \ = 0\n    var isPrimeIndex6 = 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7\
    \ = 0\n    var isPrimeCount7 = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8\
    \ = 0\n    var isPrimeIndex9 = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10\
    \ = 0\n    var isPrimeCount10 = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11\
    \ = 0\n    var isPrimeIndex12 = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13\
    \ = 0\n    var isPrimeCount13 = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14\
    \ = 0\n    var isPrimeIndex15 = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16\
    \ = 0\n    var isPrimeCount16 = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17\
    \ = 0\n    var isPrimeIndex18 = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19\
    \ = 0\n    var isPrimeCount19 = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20\
    \ = 0\n    var isPrimeIndex21 = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22\
    \ = 0\n    var isPrimeCount22 = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23\
    \ = 0\n    var isPrimeIndex24 = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25\
    \ = 0\n    var isPrimeCount25 = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26\
    \ = 0\n    var isPrimeIndex27 = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28\
    \ = 0\n    var isPrimeCount28 = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29\
    \ = 0\n    var isPrimeIndex30 = 0\n    var isPrimeCount30 = 0\n    var ", "  \
    \  var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var\
    \ primeFactorizationCount = [Int]()\n    var primeFactorizationIndex = 0\n   \
    \ var isPrime = true\n    var isPrimeCount = 0\n    var isPrimeIndex = 0\n   \
    \ var isPrimeFactorization = false\n    var isPrimeFactorizationCount = 0\n  \
    \  var isPrimeFactorizationIndex = 0\n    var isPrimePrimeFactorization = false\n\
    \    var isPrimePrimeFactorizationCount = 0\n    var isPrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrime = false\n    var isPrimePrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeIndex = 0\n    var isPrimePrimeFactorizationPrimePrime\
    \ = false\n    var isPrimePrimeFactorizationPrimePrimeCount = 0\n    var isPrimePrimeFactorizationPrimePrimeIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimePrimePrime = false\n    var isPrimePrimeFactorizationPrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimePrimePrimeIndex = 0\n    var isPrimePrimeFactorizationPrimePrimePrimePrime\
    \ = false\n    var isPrimePrimeFactorizationPrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimeFactorizationPrimePrimePrimePrimeIndex = 0\n    var isPrimePrimeFactorizationPrimePrimePrimePrimePrime\
    \ = false\n    var isPrimePrimeFactorizationPrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimeFactorizationPrimePrimePrimePrimePrimeIndex = 0\n    var\
    \ isPrimePrimeFactorizationPrimePrimePrimePrimePrimePrime = false\n    var isPrimePrimeFactorizationPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimePrimePrimePrimePrimeIndex = 0\n \
    \   var isPrimePrimeFactorizationPrimePrimePrimePrimePrimePrime = false\n    var\
    \ isPrimePrimeFactorizationPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimeFactorizationPrimePrimePrimePrimePrimePrimeIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimePrimePrimePrimePrime", "    var factors\
    \ = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            i += 1\n            factors.append(i)\n        }\n    }\n    return\
    \ factors", "    var factorization = [Int]()\n    var primeFactorization = [Int]()\n\
    \    var primeFactorizationCount = [Int]()\n    var isPrime = [Bool]()\n    var\
    \ isPrimeCount = [Int]()\n    var isPrimeCountMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeCountMin = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var\
    \ isPrimeCountSum = 0\n    var isPrimeCountSumMax = 0\n    var isPrimeCountSumMin\
    \ = 0\n    var isPrimeCountSumMaxMax = 0\n    var isPrimeCountSumMinMax = 0\n\
    \    var isPrimeCountSumMaxMin = 0\n    var isPrimeCountSumMinMin = 0\n    var\
    \ isPrimeCountSumMaxMaxMin = 0\n    var isPrimeCountSumMinMinMax = 0\n    var\
    \ isPrimeCountSumMaxMinMin = 0\n    var isPrimeCountSumMinMinMin = 0\n    var\
    \ isPrimeCountSumMaxMaxMinMin = 0\n    var isPrimeCountSumMinMinMinMax = 0\n \
    \   var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMaxMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSumMinMinMinMinMax = 0\n    var isPrimeCountSumMinMinMinMinMax\
    \ = 0\n    var isPrimeCountSum", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for factor in factorization {\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for factor in factorization {\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = [Int]()\n    var currentFactorization = [1]\n    var currentFactorizationIndex\
    \ = 0\n    var currentFactorizationValue = 1\n    var currentFactorizationValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMax = 0\n    var currentFactorizationValueIndexMin\
    \ = 0\n    var currentFactorizationValueMax = 0\n    var currentFactorizationValueMin\
    \ = 0\n    var currentFactorizationValueSum = 0\n    var currentFactorizationValueSumMax\
    \ = 0\n    var currentFactorizationValueSumMin = 0\n    var currentFactorizationValueSumSum\
    \ = 0\n    var currentFactorizationValueSumSumMax = 0\n    var currentFactorizationValueSumSumMin\
    \ = 0\n    var currentFactorizationValueSumSumSum = 0\n    var currentFactorizationValueSumSumSumMax\
    \ = 0\n    var currentFactorizationValueSumSumSumMin = 0\n    var currentFactorizationValueSumSumSumSum\
    \ = 0\n    var currentFactorizationValueSumSumSumSumMax = 0\n    var currentFactorizationValueSumSumSumSumMin\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSum = 0\n    var currentFactorizationValueSumSumSumSumSumMax\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumMin = 0\n    var currentFactorizationValueSumSumSumSumSumSum\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumMax = 0\n    var currentFactorizationValueSumSumSumSumSumMin\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumSum = 0\n    var currentFactorizationValueSumSumSumSumSumSumMax\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumSumMin = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumSum\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumMax = 0\n    var\
    \ currentFactorizationValueSumSumSumSumSumSumSumMin = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumSum\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumMax = 0\n    var\
    \ currentFactorizationValueSumSumSumSumSumSumSumMin = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumSumSum\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumSumMax = 0\n    var\
    \ currentFactorizationValueSumSumSumSumSumSumSumSumSumMin = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumSumSum\
    \ = 0\n    var currentFactorizationValueSumSumSumSumSumSumSumSumMax = 0\n    var\
    \ currentFactorizationValueSumSumSumSumSumSumSumSumMin = 0\n    var currentFactorizationValueSumSum",
  "    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n   \
    \ var primeFactorizationCount = 0\n    var primeFactorizationIndex = 0\n    var\
    \ primeFactorizationIsPrime = true\n    var primeFactorizationIsPrimeCount = 0\n\
    \    var primeFactorizationIsPrimeIndex = 0\n    var primeFactorizationIsPrimeIsPrime\
    \ = true\n    var primeFactorizationIsPrimeIsPrimeCount = 0\n    var primeFactorizationIsPrimeIsPrimeIndex\
    \ = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrime = true\n    var primeFactorizationIsPrimeIsPrimeIsPrimeCount\
    \ = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIndex = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrime\
    \ = true\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeCount = 0\n  \
    \  var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIndex = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrime\
    \ = true\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeCount =\
    \ 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIndex = 0\n\
    \    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrime = true\n\
    \    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeCount = 0\n\
    \    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIndex = 0\n\
    \    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrime =\
    \ true\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeCount\
    \ = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIndex\
    \ = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrime\
    \ = true\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeCount\
    \ = 0\n    var primeFactorizationIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPrimeIsPri",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var isPrime\
    \ = true\n    var isPrimeCount = 0\n    var isPrimeFactorization = false\n   \
    \ var isPrimeFactorizationCount = 0\n    var isPrimeFactorizationPrime = false\n\
    \    var isPrimeFactorizationPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationCount = 0\n    var isPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeCount = 0\n    var\
    \ isPrimeFactorizationPrimeFactorizationPrimeFactorization = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime =\
    \ false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime",
  "    var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var\
    \ primeFactorizationCount = [Int]()\n    var primeFactorizationSum = [Int]()\n\
    \    var primeFactorizationSumCount = [Int]()\n    var primeFactorizationSumCountMax\
    \ = Int()\n    var primeFactorizationSumCountMaxIndex = Int()\n    var primeFactorizationSumCountMin\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var primeFactorizationSumCountMaxIndex\
    \ = Int()\n    var primeFactorizationSumCountMinIndex = Int()\n    var prime",
  "    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n   \
    \ var primeFactorizationCount: Int = 0\n    var factorizationCount: Int = 0\n\
    \    var factorizationSum: Int = 0\n    var factorizationSumOfPrimeFactors: Int\
    \ = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactors: Int = 0\n    var\
    \ factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactors: Int = 0\n    var\
    \ factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors: Int\
    \ = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactors:\
    \ Int = 0\n    var factorizationSumOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOfPrimeFactorsOf",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var currentFactorizationCount\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization", " \
    \   var factorization = [Int]()\n    var factorizationCount = [Int]()\n    var\
    \ factorizationSum = 0\n    var factorizationSumCount = 0\n    var factorizationSumCountMax\
    \ = 0\n    var factorizationSumCountMaxIndex = 0\n    var factorizationSumCountMin\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex = 0\n    var factorizationSumCountMaxIndex\
    \ = 0\n    var factorizationSumCountMinIndex", "    var factors = [Int]()\n  \
    \  var primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount\
    \ = 0\n    var isPrimeSum = 0\n    var isPrimeSumCount = 0\n    var isPrimeSumPrimeCount\
    \ = 0\n    var isPrimeSumPrimeSum = 0\n    var isPrimeSumPrimeSumCount = 0\n \
    \   var isPrimeSumPrimeSumPrimeCount = 0\n    var isPrimeSumPrimeSumPrimeSum =\
    \ 0\n    var isPrimeSumPrimeSumPrimeSumCount = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSum = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeCount = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSum\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumCount = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSum = 0\n    var\
    \ isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumCount = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSum\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSum\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSum\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeCount\
    \ = 0\n    var isPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPrimeSumPri",
  "    var factors = [Int]()\n    var primes = factorize(n: n)\n    var primeFactors\
    \ = primes.reduce(into: [Int](), {$0 += $1})\n    var factorization = primeFactors.reduce(into:\
    \ [Int](), {$0 += $1})\n    var factorizationCount = factorization.count\n   \
    \ var factorizationSum = factorization.reduce(into: 0) {$0 + $1} / factorizationCount\n\
    \    var factorizationSumInt = Int(factorizationSum)\n    var factorizationSumInt64\
    \ = Int64(factorizationSum)\n    var factorizationSumFloat = Float(factorizationSum)\n\
    \    var factorizationSumDouble = Double(factorizationSum)\n    var factorizationSumFloat64\
    \ = Float64(factorizationSum)\n    var factorizationSumInt = Int(factorizationSumInt64)\n\
    \    var factorizationSumInt64 = Int64(factorizationSumInt64)\n    var factorizationSumFloat\
    \ = Float(factorizationSumInt64)\n    var factorizationSumDouble = Double(factorizationSumInt64)\n\
    \    var factorizationSumFloat64 = Float64(factorizationSumInt64)\n    var factorizationSumInt\
    \ = Int(factorizationSumFloat64)\n    var factorizationSumInt64 = Int64(factorizationSumFloat64)\n\
    \    var factorizationSumFloat = Float(factorizationSumFloat64)\n    var factorizationSumDouble\
    \ = Double(factorizationSumFloat64)\n    var factorizationSumFloat64 = Float64(factorizationSumFloat64)\n\
    \    var factorizationSumInt = Int(factorizationSumDouble)\n    var factorizationSumInt64\
    \ = Int64(factorizationSumDouble)\n    var factorizationSumFloat = Float(factorizationSumDouble)\n\
    \    var factorizationSumDouble = Double(factorizationSumDouble)\n    var factorizationSumFloat64\
    \ = Float64(factorizationSumDouble)\n    var factorizationSumInt = Int(factorizationSumFloat64)\n\
    \    var factorizationSumInt64 = Int64(factorizationSumFloat64)\n    var factorizationSumFloat\
    \ = Float(factorizationSumFloat64)\n    var factorizationSumDouble = Double(factorizationSumFloat64)\n\
    \    var factorizationSumFloat64 = Float64(factorizationSumFloat64)\n    var factorizationSumInt\
    \ = Int(factorizationSumDouble)\n    var factorizationSumInt64 = Int64(factorizationSumDouble)\n\
    \    var factorizationSumFloat = Float(factorizationSumDouble)\n    var factorizationSumDouble\
    \ = Double(factorizationSumDouble)\n    var factorizationSumFloat64 = Float64(factorizationSumDouble)\n\
    \    var factorizationSumInt = Int(factorizationSum", "    var factorization =\
    \ [Int]()\n    var factorizationCount = [Int]()\n    var primeFactorization =\
    \ [Int]()\n    var primeFactorizationCount = [Int]()\n    var primeFactorizationIndex\
    \ = [Int]()\n    var primeFactorizationIndexCount = [Int]()\n    var primeFactorizationIndexCountMax\
    \ = Int()\n    var primeFactorizationIndexCountMin = Int()\n    var primeFactorizationIndexCountMaxIndex\
    \ = Int()\n    var primeFactorizationIndexCountMinIndex = Int()\n    var primeFactorizationIndexCountMaxValue\
    \ = Int()\n    var primeFactorizationIndexCountMinValue = Int()\n    var primeFactorizationIndexCountMaxValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMinValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValue = Int()\n    var primeFactorizationIndexCountMinValueValue\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueIndex = Int()\n  \
    \  var primeFactorizationIndexCountMinValueValueIndex = Int()\n    var primeFactorizationIndexCountMaxValueValueValue\
    \ = Int()\n    var primeFactorizationIndexCountMinValueValueValue = Int()\n  \
    \  var primeFactorizationIndexCountMaxValueValueValueIndex = Int()\n    var primeFactorizationIndexCountMinValueValueValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValue = Int()\n\
    \    var primeFactorizationIndexCountMinValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueIndex = Int()\n    var primeFactorizationIndexCountMinValueValueValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValue = Int()\n\
    \    var primeFactorizationIndexCountMinValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueIndex = Int()\n    var primeFactorizationIndexCountMinValueValueValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValue = Int()\n\
    \    var primeFactorizationIndexCountMinValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueIndex = Int()\n    var primeFactorizationIndexCountMinValueValueValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValue = Int()\n\
    \    var primeFactorizationIndexCountMinValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueIndex = Int()\n    var primeFactorizationIndexCountMinValueValueValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValue = Int()\n\
    \    var primeFactorizationIndexCountMinValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValue", "    var factorization: [Int] =\
    \ []\n    var factorizationCount = 0\n    var factorizationSum = 0\n    var factorizationSum2\
    \ = 0\n    var factorizationSum3 = 0\n    var factorizationSum4 = 0\n    var factorizationSum5\
    \ = 0\n    var factorizationSum6 = 0\n    var factorizationSum7 = 0\n    var factorizationSum8\
    \ = 0\n    var factorizationSum9 = 0\n    var factorizationSum10 = 0\n    var\
    \ factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var factorizationSum13\
    \ = 0\n    var factorizationSum14 = 0\n    var factorizationSum15 = 0\n    var\
    \ factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var factorizationSum18\
    \ = 0\n    var factorizationSum19 = 0\n    var factorizationSum20 = 0\n    var\
    \ factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var factorizationSum23\
    \ = 0\n    var factorizationSum24 = 0\n    var factorizationSum25 = 0\n    var\
    \ factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var factorizationSum28\
    \ = 0\n    var factorizationSum29 = 0\n    var factorizationSum30 = 0\n    var\
    \ factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var factorizationSum33\
    \ = 0\n    var factorizationSum34 = 0\n    var factorizationSum35 = 0\n    var\
    \ factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var factorizationSum38\
    \ = 0\n    var factorizationSum39 = 0\n    var factorizationSum40 = 0\n    var\
    \ factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var factorizationSum43\
    \ = 0\n    var factorizationSum44 = 0\n    var factorizationSum45 = 0\n    var\
    \ factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var factorizationSum48\
    \ = 0\n    var factorizationSum49 = 0\n    var factorizationSum50 = 0\n    var\
    \ factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var factorizationSum53\
    \ = 0\n    var factorizationSum54 = 0\n    var factorizationSum55 = 0\n    var\
    \ factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var factorizationSum58\
    \ = 0\n    var factorizationSum59 = 0\n    var factorizationSum60 = 0\n    var\
    \ factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var factorizationSum63\
    \ = 0\n    var factorizationSum64 = 0\n    var factorizationSum65 = 0\n    var\
    \ factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var factorizationSum68\
    \ = 0\n    var factorizationSum69 = 0\n    var factorizationSum70 = 0\n    var\
    \ factorizationSum71 = 0\n    var factorization", "    var factorization = [Int]()\n\
    \    var primeFactorization = [Int]()\n    var primeFactorizationCount = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeCount = [Int]()\n    var isPrimeCountMax\
    \ = Int()\n    var isPrimeCountMaxIndex = Int()\n    var isPrimeCountMaxValue\
    \ = Int()\n    var isPrimeCountMaxValueIndex = Int()\n    var isPrimeCountMaxValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n    var isPrimeCountMaxValueValueValueValueIndex = Int()\n    var isPrimeCountMaxValueValueValueValueValue\
    \ = Int()\n", "    var factors = [Int]()\n    var i = 2\n    while i * i <= n\
    \ {\n        if n % i == 0 {\n            factors.append(i)\n            n /=\
    \ i\n        }\n        i += 1\n    }\n    if n != 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var factorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationCount = 0\n    var isPrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationCount = 0\n    var isPrimePrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationCount = 0\n\
    \    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorization: Bool =\
    \ false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrime", " \
    \   var factorization = [Int]()\n    var factorizationCount = [Int]()\n    var\
    \ factorizationSum = 0\n    var factorizationProduct = 1\n    var factorizationProductSum\
    \ = 0\n    var factorizationProductProduct = 1\n    var factorizationProductProductSum\
    \ = 0\n    var factorizationProductProductProduct = 1\n    var factorizationProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProduct = 1\n    var factorizationProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProduct = 1\n    var factorizationProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProduct = 1\n \
    \   var factorizationProductProductProductProductProductProductSum = 0\n    var\
    \ factorizationProductProductProductProductProductProductProduct = 1\n    var\
    \ factorizationProductProductProductProductProductProductProductSum = 0\n    var\
    \ factorizationProductProductProductProductProductProductProductProduct = 1\n\
    \    var factorizationProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factor", "    var factors: [Int] = []\n    var i = 2\n    var j\
    \ = 0\n    var factor: Int\n    var isPrime: Bool\n    var isPrime2: Bool\n  \
    \  var isPrime3: Bool\n    var isPrime4: Bool\n    var isPrime5: Bool\n    var\
    \ isPrime6: Bool\n    var isPrime7: Bool\n    var isPrime8: Bool\n    var isPrime9:\
    \ Bool\n    var isPrime10: Bool\n    var isPrime11: Bool\n    var isPrime12: Bool\n\
    \    var isPrime13: Bool\n    var isPrime14: Bool\n    var isPrime15: Bool\n \
    \   var isPrime16: Bool\n    var isPrime17: Bool\n    var isPrime18: Bool\n  \
    \  var isPrime19: Bool\n    var isPrime20: Bool\n    var isPrime21: Bool\n   \
    \ var isPrime22: Bool\n    var isPrime23: Bool\n    var isPrime24: Bool\n    var\
    \ isPrime25: Bool\n    var isPrime26: Bool\n    var isPrime27: Bool\n    var isPrime28:\
    \ Bool\n    var isPrime29: Bool\n    var isPrime30: Bool\n    var isPrime31: Bool\n\
    \    var isPrime32: Bool\n    var isPrime33: Bool\n    var isPrime34: Bool\n \
    \   var isPrime35: Bool\n    var isPrime36: Bool\n    var isPrime37: Bool\n  \
    \  var isPrime38: Bool\n    var isPrime39: Bool\n    var isPrime40: Bool\n   \
    \ var isPrime41: Bool\n    var isPrime42: Bool\n    var isPrime43: Bool\n    var\
    \ isPrime44: Bool\n    var isPrime45: Bool\n    var isPrime46: Bool\n    var isPrime47:\
    \ Bool\n    var isPrime48: Bool\n    var isPrime49: Bool\n    var isPrime50: Bool\n\
    \    var isPrime51: Bool\n    var isPrime52: Bool\n    var isPrime53: Bool\n \
    \   var isPrime54: Bool\n    var isPrime55: Bool\n    var isPrime56: Bool\n  \
    \  var isPrime57: Bool\n    var isPrime58: Bool\n    var isPrime59: Bool\n   \
    \ var isPrime60: Bool\n    var isPrime61: Bool\n    var isPrime62: Bool\n    var\
    \ is", "    var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n \
    \   var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax = Int()\n\
    \    var isPrimeFactorsCountMaxIndex = Int()\n    var isPrimeFactorsCountMaxValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValue", "    var factorization = [Int]()\n\
    \    var primeFactorization = [Int]()\n    var primeFactorizationCount = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeCount = [Int]()\n    var isPrimeCountMax\
    \ = Int(arc4random_uniform(UInt32(UInt32.max)))\n    var isPrimeCountMin = Int(arc4random_uniform(UInt32(UInt32.min)))\n\
    \    var isPrimeCountMin2 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var\
    \ isPrimeCountMin3 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin4\
    \ = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin5 = Int(arc4random_uniform(UInt32(UInt32.min)))\n\
    \    var isPrimeCountMin6 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var\
    \ isPrimeCountMin7 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin8\
    \ = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin9 = Int(arc4random_uniform(UInt32(UInt32.min)))\n\
    \    var isPrimeCountMin10 = Int(arc4random_uniform(UInt32(UInt32.min)))\n   \
    \ var isPrimeCountMin11 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var\
    \ isPrimeCountMin12 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin13\
    \ = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin14 = Int(arc4random_uniform(UInt32(UInt32.min)))\n\
    \    var isPrimeCountMin15 = Int(arc4random_uniform(UInt32(UInt32.min)))\n   \
    \ var isPrimeCountMin16 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var\
    \ isPrimeCountMin17 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin18\
    \ = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var isPrimeCountMin19 = Int(arc4random_uniform(UInt32(UInt32.min)))\n\
    \    var isPrimeCountMin20 = Int(arc4random_uniform(UInt32(UInt32.min)))\n   \
    \ var isPrimeCountMin21 = Int(arc4random_uniform(UInt32(UInt32.min)))\n    var\
    \ isPrimeCountMin22 = Int(arc4random_uniform(UInt32(UInt", "    var factorization\
    \ = [Int]()\n    var i = 2\n    var factor = 1\n    while i <= n {\n        if\
    \ n % i == 0 {\n            factorization[factor] = i\n            factor += 1\n\
    \        }\n        i += 1\n    }\n    return factorization", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeCount = 0\n\
    \    var isPrimeIndex2 = 0\n    var isPrimeCount2 = 0\n    var isPrimeIndex3 =\
    \ 0\n    var isPrimeCount3 = 0\n    var isPrimeIndex4 = 0\n    var isPrimeCount4\
    \ = 0\n    var isPrimeIndex5 = 0\n    var isPrimeCount5 = 0\n    var isPrimeIndex6\
    \ = 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7 = 0\n    var isPrimeCount7\
    \ = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8 = 0\n    var isPrimeIndex9\
    \ = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10 = 0\n    var isPrimeCount10\
    \ = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11 = 0\n    var isPrimeIndex12\
    \ = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13 = 0\n    var isPrimeCount13\
    \ = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14 = 0\n    var isPrimeIndex15\
    \ = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16 = 0\n    var isPrimeCount16\
    \ = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17 = 0\n    var isPrimeIndex18\
    \ = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19 = 0\n    var isPrimeCount19\
    \ = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20 = 0\n    var isPrimeIndex21\
    \ = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22 = 0\n    var isPrimeCount22\
    \ = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23 = 0\n    var isPrimeIndex24\
    \ = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25 = 0\n    var isPrimeCount25\
    \ = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26 = 0\n    var isPrimeIndex27\
    \ = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28 = 0\n    var isPrimeCount28\
    \ = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29 = 0\n    var isPrimeIndex30\
    \ = 0\n    var isPrimeCount30 = 0\n    var isPrimeIndex31 = 0\n    var ", "  \
    \  var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        if factors.contains(factor) {\n   \
    \         factors[factor] += 1\n        } else {\n            factors.append(factor)\n\
    \        }\n    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    var factorizationCount = 1\n    var factorizationIndex\
    \ = 0\n    var factorizationNumber = 0\n    var factorizationNumberIndex = 0\n\
    \    var factorizationNumberCount = 0\n    var factorizationNumberCountIndex =\
    \ 0\n    var factorizationNumberCountMax = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMax2 = 0\n    var factorizationNumberCountMax2Index\
    \ = 0\n    var factorizationNumberCountMax3 = 0\n    var factorizationNumberCountMax3Index\
    \ = 0\n    var factorizationNumberCountMax4 = 0\n    var factorizationNumberCountMax4Index\
    \ = 0\n    var factorizationNumberCountMax5 = 0\n    var factorizationNumberCountMax5Index\
    \ = 0\n    var factorizationNumberCountMax6 = 0\n    var factorizationNumberCountMax6Index\
    \ = 0\n    var factorizationNumberCountMax7 = 0\n    var factorizationNumberCountMax7Index\
    \ = 0\n    var factorizationNumberCountMax8 = 0\n    var factorizationNumberCountMax8Index\
    \ = 0\n    var factorizationNumberCountMax9 = 0\n    var factorizationNumberCountMax9Index\
    \ = 0\n    var factorizationNumberCountMax10 = 0\n    var factorizationNumberCountMax10Index\
    \ = 0\n    var factorizationNumberCountMax11 = 0\n    var factorizationNumberCountMax11Index\
    \ = 0\n    var factorizationNumberCountMax12 = 0\n    var factorizationNumberCountMax12Index\
    \ = 0\n    var factorizationNumberCountMax13 = 0\n    var factorizationNumberCountMax13Index\
    \ = 0\n    var factorizationNumberCountMax14 = 0\n    var factorizationNumberCountMax14Index\
    \ = 0\n    var factorizationNumberCountMax15 = 0\n    var factorizationNumberCountMax15Index\
    \ = 0\n    var factorizationNumberCountMax16 = 0\n    var factorizationNumberCountMax16Index\
    \ = 0\n    var factorizationNumberCountMax17 = 0\n    var factorizationNumberCountMax17Index\
    \ = 0\n    var factorizationNumberCountMax18 = 0\n    var factorizationNumberCountMax18Index\
    \ = 0\n    var factorizationNumberCountMax19 = 0\n    var factorizationNumberCountMax19Index\
    \ = 0\n    var factorizationNumberCountMax20 = 0\n    var factorizationNumberCountMax20Index\
    \ = 0\n    var factorizationNumberCountMax21 = 0\n    var factorizationNumberCountMax21Index\
    \ = 0\n    var factorizationNumberCountMax22 = 0\n    var factorizationNumberCountMax22Index\
    \ = 0\n    var factorizationNumberCountMax23 = 0\n    var factorizationNumberCountMax23Index\
    \ = 0\n    var factorizationNumberCountMax24 = 0\n    var factorizationNumberCountMax24Index\
    \ = 0\n    var ", "    var factorization = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeIndex = 0\n    var isPrimeIndexMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeMax = Int(sqrt(Double(n)))\n    var isPrimeIndexMax2\
    \ = Int(sqrt(Double(n)))\n    var isPrimeMax2 = Int(sqrt(Double(n)))\n    var\
    \ isPrimeIndexMax3 = Int(sqrt(Double(n)))\n    var isPrimeMax3 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax4 = Int(sqrt(Double(n)))\n    var isPrimeMax4 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax5 = Int(sqrt(Double(n)))\n    var isPrimeMax5 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax6 = Int(sqrt(Double(n)))\n    var isPrimeMax6 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax7 = Int(sqrt(Double(n)))\n    var isPrimeMax7 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax8 = Int(sqrt(Double(n)))\n    var isPrimeMax8 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax9 = Int(sqrt(Double(n)))\n    var isPrimeMax9 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax10 = Int(sqrt(Double(n)))\n    var isPrimeMax10 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax11 = Int(sqrt(Double(n)))\n    var isPrimeMax11 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax12 = Int(sqrt(Double(n)))\n    var isPrimeMax12 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax13 = Int(sqrt(Double(n)))\n    var isPrimeMax13 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax14 = Int(sqrt(Double(n)))\n    var isPrimeMax14 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax15 = Int(sqrt(Double(n)))\n    var isPrimeMax15 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax16 = Int(sqrt(Double(n)))\n    var isPrimeMax16 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax17 = Int(sqrt(Double(n)))\n    var isPrimeMax17 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax18 = Int(sqrt(Double(n)))\n    var isPrimeMax18 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax19 = Int(sqrt(Double(n)))\n    var isPri", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var primeFactorizationIndex = 0\n    var factorizationIndex = 0\n \
    \   var factorizationCount = 0\n    var factorizationIndex2 = 0\n    var factorizationCount2\
    \ = 0\n    var factorizationIndex3 = 0\n    var factorizationCount3 = 0\n    var\
    \ factorizationIndex4 = 0\n    var factorizationCount4 = 0\n    var factorizationIndex5\
    \ = 0\n    var factorizationCount5 = 0\n    var factorizationIndex6 = 0\n    var\
    \ factorizationCount6 = 0\n    var factorizationIndex7 = 0\n    var factorizationCount7\
    \ = 0\n    var factorizationIndex8 = 0\n    var factorizationCount8 = 0\n    var\
    \ factorizationIndex9 = 0\n    var factorizationCount9 = 0\n    var factorizationIndex10\
    \ = 0\n    var factorizationCount10 = 0\n    var factorizationIndex11 = 0\n  \
    \  var factorizationCount11 = 0\n    var factorizationIndex12 = 0\n    var factorizationCount12\
    \ = 0\n    var factorizationIndex13 = 0\n    var factorizationCount13 = 0\n  \
    \  var factorizationIndex14 = 0\n    var factorizationCount14 = 0\n    var factorizationIndex15\
    \ = 0\n    var factorizationCount15 = 0\n    var factorizationIndex16 = 0\n  \
    \  var factorizationCount16 = 0\n    var factorizationIndex17 = 0\n    var factorizationCount17\
    \ = 0\n    var factorizationIndex18 = 0\n    var factorizationCount18 = 0\n  \
    \  var factorizationIndex19 = 0\n    var factorizationCount19 = 0\n    var factorizationIndex20\
    \ = 0\n    var factorizationCount20 = 0\n    var factorizationIndex21 = 0\n  \
    \  var factorizationCount21 = 0\n    var factorizationIndex22 = 0\n    var factorizationCount22\
    \ = 0\n    var factorizationIndex23 = 0\n    var factorizationCount23 = 0\n  \
    \  var factorizationIndex24 = 0\n    var factorizationCount24 = 0\n    var factorizationIndex25\
    \ = 0\n    var factorizationCount25 = 0\n    var factorizationIndex26 = 0\n  \
    \  var factorizationCount26 = 0\n    var factorizationIndex27 = 0\n    var factorizationCount27\
    \ = 0\n    var factorizationIndex28 = 0\n    var factorizationCount28 = 0\n  \
    \  var factorizationIndex29 = 0\n    var factorizationCount29 = 0\n    var factorizationIndex30\
    \ = 0\n    var factorizationCount30 = 0\n    var factorizationIndex31 = 0\n  \
    \  var factorizationCount31 = 0\n    var factorizationIndex32 = 0\n    var factorizationCount32\
    \ = 0\n    var factorizationIndex33 = 0\n    var factorizationCount33 = 0\n  \
    \  var factorizationIndex34 = 0\n    var factorizationCount34 = 0\n    var factorizationIndex35\
    \ = 0\n    var factor", "    var factors = [Int]()\n    var i = 2\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n       \
    \     n /= i\n        } else {\n            i += 1\n        }\n    }\n    if n\
    \ > 1 {\n        factors.append(n)\n    }\n    return factors", "    var factors:\
    \ [Int] = []\n    var primes: [Int] = []\n    var factorization: [Int] = []\n\
    \    var primeFactorization: [Int] = []\n    var factorizationCount = 0\n    var\
    \ primeFactorizationCount = 0\n    var factorizationSum = 0\n    var primeFactorizationSum\
    \ = 0\n    var isPrime = true\n    var isPrimeSum = 0\n    var isPrimeSum2 = 0\n\
    \    var isPrimeSum3 = 0\n    var isPrimeSum4 = 0\n    var isPrimeSum5 = 0\n \
    \   var isPrimeSum6 = 0\n    var isPrimeSum7 = 0\n    var isPrimeSum8 = 0\n  \
    \  var isPrimeSum9 = 0\n    var isPrimeSum10 = 0\n    var isPrimeSum11 = 0\n \
    \   var isPrimeSum12 = 0\n    var isPrimeSum13 = 0\n    var isPrimeSum14 = 0\n\
    \    var isPrimeSum15 = 0\n    var isPrimeSum16 = 0\n    var isPrimeSum17 = 0\n\
    \    var isPrimeSum18 = 0\n    var isPrimeSum19 = 0\n    var isPrimeSum20 = 0\n\
    \    var isPrimeSum21 = 0\n    var isPrimeSum22 = 0\n    var isPrimeSum23 = 0\n\
    \    var isPrimeSum24 = 0\n    var isPrimeSum25 = 0\n    var isPrimeSum26 = 0\n\
    \    var isPrimeSum27 = 0\n    var isPrimeSum28 = 0\n    var isPrimeSum29 = 0\n\
    \    var isPrimeSum30 = 0\n    var isPrimeSum31 = 0\n    var isPrimeSum32 = 0\n\
    \    var isPrimeSum33 = 0\n    var isPrimeSum34 = 0\n    var isPrimeSum35 = 0\n\
    \    var isPrimeSum36 = 0\n    var isPrimeSum37 = 0\n    var isPrimeSum38 = 0\n\
    \    var isPrimeSum39 = 0\n    var isPrimeSum40 = 0\n    var isPrimeSum41 = 0\n\
    \    var isPrimeSum42 = 0\n    var isPrimeSum43 = 0\n    var isPrimeSum44 = 0\n\
    \    var isPrimeSum45 = 0\n    var isPrimeSum46 = 0\n    var isPrimeSum47 = 0\n\
    \    var isPrimeSum48 = 0\n    var isPrimeSum49 = 0\n    var isPrimeSum50 = 0\n\
    \    var isPrimeSum51 = 0\n    var isPrimeSum52 = 0\n    var isPrimeSum53 = 0\n\
    \    var isPrimeSum54 = 0\n    var isPrimeSum55 = 0\n    var isPrimeSum56 = 0\n\
    \    var isPrimeSum57", "    var factorization = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n    var isPrimeCountMax\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax2 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax3 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax4\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax5 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax6 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax7\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax8 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax9 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax10\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax11 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax12 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax13\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax14 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax15 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax16\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax17 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax18 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax19\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax20 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax21 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax22\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax23 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax24 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax25\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax26 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax27 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax28\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax29 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax30 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax31\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax32 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax33 = Int(ceil(sqrt(", "    var factorization: [Int] =\
    \ []\n    var factorizationCount = 0\n    var currentFactorizationCount = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization", "    var\
    \ factors: [Int] = []\n    var factorization: [Int] = []\n    var factorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeIndex = 0\n    var isPrimeFactorizationPrimeFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorIndex = 0\n    var\
    \ isPrimeFactorizationPrimeFactorFactorFactorFactor = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactor = false\n\
    \    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorIndex = 0\n  \
    \  var isPrimeFactorizationPrimeFactorFactorFactorFactorFactor = false\n    var\
    \ isPrimeFactorizationPrimeFactorFactorFactorFactorFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor =\
    \ false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n", "    var factorization: [Int] = []\n    var primeFactorization: [Int]\
    \ = []\n    var primeFactorizationCount = 0\n    var isPrime: Bool = false\n \
    \   var isPrimeCount = 0\n    var isPrimePrime: Bool = false\n    var isPrimePrimeCount\
    \ = 0\n    var isPrimePrimePrime: Bool = false\n    var isPrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool =\
    \ false\n    var isPrimePri", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSum2 = 0\n    var factorizationSum3\
    \ = 0\n    var factorizationSum4 = 0\n    var factorizationSum5 = 0\n    var factorizationSum6\
    \ = 0\n    var factorizationSum7 = 0\n    var factorizationSum8 = 0\n    var factorizationSum9\
    \ = 0\n    var factorizationSum10 = 0\n    var factorizationSum11 = 0\n    var\
    \ factorizationSum12 = 0\n    var factorizationSum13 = 0\n    var factorizationSum14\
    \ = 0\n    var factorizationSum15 = 0\n    var factorizationSum16 = 0\n    var\
    \ factorizationSum17 = 0\n    var factorizationSum18 = 0\n    var factorizationSum19\
    \ = 0\n    var factorizationSum20 = 0\n    var factorizationSum21 = 0\n    var\
    \ factorizationSum22 = 0\n    var factorizationSum23 = 0\n    var factorizationSum24\
    \ = 0\n    var factorizationSum25 = 0\n    var factorizationSum26 = 0\n    var\
    \ factorizationSum27 = 0\n    var factorizationSum28 = 0\n    var factorizationSum29\
    \ = 0\n    var factorizationSum30 = 0\n    var factorizationSum31 = 0\n    var\
    \ factorizationSum32 = 0\n    var factorizationSum33 = 0\n    var factorizationSum34\
    \ = 0\n    var factorizationSum35 = 0\n    var factorizationSum36 = 0\n    var\
    \ factorizationSum37 = 0\n    var factorizationSum38 = 0\n    var factorizationSum39\
    \ = 0\n    var factorizationSum40 = 0\n    var factorizationSum41 = 0\n    var\
    \ factorizationSum42 = 0\n    var factorizationSum43 = 0\n    var factorizationSum44\
    \ = 0\n    var factorizationSum45 = 0\n    var factorizationSum46 = 0\n    var\
    \ factorizationSum47 = 0\n    var factorizationSum48 = 0\n    var factorizationSum49\
    \ = 0\n    var factorizationSum50 = 0\n    var factorizationSum51 = 0\n    var\
    \ factorizationSum52 = 0\n    var factorizationSum53 = 0\n    var factorizationSum54\
    \ = 0\n    var factorizationSum55 = 0\n    var factorizationSum56 = 0\n    var\
    \ factorizationSum57 = 0\n    var factorizationSum58 = 0\n    var factorizationSum59\
    \ = 0\n    var factorizationSum60 = 0\n    var factorizationSum61 = 0\n    var\
    \ factorizationSum62 = 0\n    var factorizationSum63 = 0\n    var factorizationSum64\
    \ = 0\n    var factorizationSum65 = 0\n    var factorizationSum66 = 0\n    var\
    \ factorizationSum67 = 0\n    var factorizationSum68 = 0\n    var factorizationSum69\
    \ = 0\n    var factorizationSum70 = 0\n    var factorizationSum71 = 0\n    var\
    \ factorization", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationIndexCount = 0\n \
    \   var factorizationIndexCountMax = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMin\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMaxMin = Int(ceil(sqrt(Double(n))))\n\
    \    var factorizationIndexCountMinMax = Int(floor(sqrt(Double(n))))\n    var\
    \ factorizationIndexCountMinMaxMin = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMin\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMin\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(ceil(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(floor(sqrt(Double(n))))\n    var factorizationIndexCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax",
  "    var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var primeFactorsCount = [Int]()\n    var primeFactorsCountMax = Int()\n \
    \   var primeFactorsCountMaxIndex = -1\n    var primeFactorsCountMaxValue = Int()\n\
    \    var primeFactorsCountMaxValueIndex = -1\n    var primeFactorsCountMaxValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueValueIndex = -1\n    var\
    \ primeFactorsCountMaxValueValueValueValueValue = Int()\n    var primeFactorsCountMaxValueValueValueValueIndex\
    \ = -1\n    var primeFactorsCountMaxValueValueValueValueValue = Int()\n    var\
    \ primeFactorsCountMaxValueValueValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n \
    \   var primeFactorsCountMaxValueValueValueValueValueValue = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex\
    \ = -1\n    var primeFactorsCountMaxValueValueValueValueValueValue = Int()\n \
    \   var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValueValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n \
    \   var primeFactorsCountMaxValueValueValueValueValueValue = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex\
    \ = -1\n    var primeFactorsCountMaxValueValueValueValueValueValueValue = Int()\n\
    \    var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValueValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n \
    \   var primeFactorsCountMaxValueValueValueValueValueValue = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex\
    \ = -1\n    var primeFactorsCountMaxValueValueValueValueValueValue = Int()\n \
    \   var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n    var primeFactorsCountMaxValueValueValueValueValueValue\
    \ = Int()\n    var primeFactorsCountMaxValueValueValueValueValueIndex = -1\n",
  "    var factorization: [Int] = []\n    var factor: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int =\
    \ 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n\
    \    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int =\
    \ 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int\
    \ = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t:\
    \ Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n   \
    \ var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n\
    \    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int =\
    \ 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int\
    \ = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r:\
    \ Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var\
    \ v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n   \
    \ var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n\
    \    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int =\
    \ 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int\
    \ = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p:\
    \ Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var\
    \ t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n   \
    \ var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n\
    \    var b: Int = 0\n    var c: Int = 0\n", "    var factorization: [Int] = []\n\
    \    var factorizationCount = 0\n    var factorizationSum = 0\n    var factorizationSum2\
    \ = 0\n    var factorizationSum3 = 0\n    var factorizationSum4 = 0\n    var factorizationSum5\
    \ = 0\n    var factorizationSum6 = 0\n    var factorizationSum7 = 0\n    var factorizationSum8\
    \ = 0\n    var factorizationSum9 = 0\n    var factorizationSum10 = 0\n    var\
    \ factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var factorizationSum13\
    \ = 0\n    var factorizationSum14 = 0\n    var factorizationSum15 = 0\n    var\
    \ factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var factorizationSum18\
    \ = 0\n    var factorizationSum19 = 0\n    var factorizationSum20 = 0\n    var\
    \ factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var factorizationSum23\
    \ = 0\n    var factorizationSum24 = 0\n    var factorizationSum25 = 0\n    var\
    \ factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var factorizationSum28\
    \ = 0\n    var factorizationSum29 = 0\n    var factorizationSum30 = 0\n    var\
    \ factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var factorizationSum33\
    \ = 0\n    var factorizationSum34 = 0\n    var factorizationSum35 = 0\n    var\
    \ factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var factorizationSum38\
    \ = 0\n    var factorizationSum39 = 0\n    var factorizationSum40 = 0\n    var\
    \ factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var factorizationSum43\
    \ = 0\n    var factorizationSum44 = 0\n    var factorizationSum45 = 0\n    var\
    \ factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var factorizationSum48\
    \ = 0\n    var factorizationSum49 = 0\n    var factorizationSum50 = 0\n    var\
    \ factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var factorizationSum53\
    \ = 0\n    var factorizationSum54 = 0\n    var factorizationSum55 = 0\n    var\
    \ factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var factorizationSum58\
    \ = 0\n    var factorizationSum59 = 0\n    var factorizationSum60 = 0\n    var\
    \ factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var factorizationSum63\
    \ = 0\n    var factorizationSum64 = 0\n    var factorizationSum65 = 0\n    var\
    \ factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var factorizationSum68\
    \ = 0\n    var factorizationSum69 = 0\n    var factorizationSum70 = 0\n    var\
    \ factorizationSum71 = 0\n    var factorization", "    var factorization = [Int]()\n\
    \    var factors = [1]\n    var i = 2\n    while i < n {\n        if n % i ==\
    \ 0 {\n            factors.append(i)\n            factorization = factorization\
    \ + factors\n            factors = [1]\n            i += 1\n        } else {\n\
    \            i += 1\n        }\n    }\n    return factorization", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime: [Bool]\
    \ = []\n    var isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int = 1\n \
    \   var isPrimeCountMin: Int = 1\n    var isPrimeCountMaxMin: Int = 1\n    var\
    \ isPrimeCountMaxMinMin: Int = 1\n    var isPrimeCountMaxMinMin: Int = 1\n   \
    \ var isPrimeCountMaxMinMin: Int = 1\n    var isPrimeCountMaxMinMinMin: Int =\
    \ 1\n    var isPrimeCountMaxMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin:\
    \ Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin: Int = 1\n    var isPrimeCountMaxMinMinMinMinMinMinMin:\
    \ In", "    var factorization = [Int]()\n    var factorizationCount = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeCount = [Int]()\n    var isPrimeCountMax\
    \ = Int()\n    var isPrimeCountMaxIndex = Int()\n    var isPrimeCountMaxValue\
    \ = Int()\n    var isPrimeCountMin = Int()\n    var isPrimeCountMinIndex = Int()\n\
    \    var isPrimeCountMinValue = Int()\n    var isPrimeCountSum = Int()\n    var\
    \ isPrimeCountSumIndex = Int()\n    var isPrimeCountSumValue = Int()\n    var\
    \ isPrimeCountSumMax = Int()\n    var isPrimeCountSumMaxIndex = Int()\n    var\
    \ isPrimeCountSumMaxValue = Int()\n    var isPrimeCountSumMin = Int()\n    var\
    \ isPrimeCountSumMinIndex = Int()\n    var isPrimeCountSumMinValue = Int()\n \
    \   var isPrimeCountSumSum = Int()\n    var isPrimeCountSumSumIndex = Int()\n\
    \    var isPrimeCountSumSumValue = Int()\n    var isPrimeCountSumSumMax = Int()\n\
    \    var isPrimeCountSumSumMaxIndex = Int()\n    var isPrimeCountSumSumMaxValue\
    \ = Int()\n    var isPrimeCountSumSumMin = Int()\n    var isPrimeCountSumSumMinIndex\
    \ = Int()\n    var isPrimeCountSumSumMinValue = Int()\n    var isPrimeCountSumSumSum\
    \ = Int()\n    var isPrimeCountSumSumSumIndex = Int()\n    var isPrimeCountSumSumSumValue\
    \ = Int()\n    var isPrimeCountSumSumSumMax = Int()\n    var isPrimeCountSumSumSumMaxIndex\
    \ = Int()\n    var isPrimeCountSumSumSumMaxValue = Int()\n    var isPrimeCountSumSumSumMin\
    \ = Int()\n    var isPrimeCountSumSumSumMinIndex = Int()\n    var isPrimeCountSumSumSumMinValue\
    \ = Int()\n    var isPrimeCountSumSumSumSum = Int()\n    var isPrimeCountSumSumSumSumIndex\
    \ = Int()\n    var isPrimeCountSumSumSumSumValue = Int()\n    var isPrimeCountSumSumSumSumMax\
    \ = Int()\n    var isPrimeCountSumSumSumSumMaxIndex = Int()\n    var isPrimeCountSumSumSumSumMaxValue\
    \ = Int()\n    var isPrimeCountSumSumSumSumMin = Int()\n    var isPrimeCountSum",
  "    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n   \
    \ var primeFactorizationCount = 0\n    var isPrime = true\n    var isPrimeCount\
    \ = 0\n    var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePri", "    var factors = [Int]()\n\
    \    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n > 1 {\n        factors.append(n)\n    }\n    return factors", "    var\
    \ factorization: [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime:\
    \ [Bool] = []\n    var isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int\
    \ = 1\n    var isPrimeCountMin: Int = 0\n    var isPrimeCountSum: Int = 0\n  \
    \  var isPrimeCountSumMax: Int = 0\n    var isPrimeCountSumMin: Int = 0\n    var\
    \ isPrimeCountSumSum: Int = 0\n    var isPrimeCountSumSumMax: Int = 0\n    var\
    \ isPrimeCountSumSumMin: Int = 0\n    var isPrimeCountSumSumSum: Int = 0\n   \
    \ var isPrimeCountSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumMin: Int\
    \ = 0\n    var isPrimeCountSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSum", "    var factors = [Int]()\n\
    \    var i = 2\n    var j = 1\n    var k = 0\n    var m = 1\n    var n = n\n \
    \   var prime = true\n    var primeFactors = [Int]()\n    var primeFactorsCount\
    \ = 0\n    var factorization = [Int]()\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var isPrime = true\n    var isPrimeCount = 0\n \
    \   var isPrimeIndex = 0\n    var isPrimeFactorization = false\n    var isPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeCount = 0\n    var isPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactor = false\n    var isPrimeFactorizationPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactor = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeCount = 0\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeIndex = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorIndex = 0\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime = false\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorCount = 0\n    var\
    \ isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorIndex = 0\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime = false\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorPrime", "    var factors =\
    \ [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n    var factorization\
    \ = [Int]()\n    var factorizationIndex = 0\n    var isPrime = true\n    var isFactorization\
    \ = false\n    var isPrimeFactorization = false\n    var isPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrime = false\n    var isPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimePrime = false\n    var isPrimeFactorizationPrimePrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimePrimePrime = false\n    var isPrimeFactorizationPrimePrimePrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimePrimePrimePrime = false\n    var isPrimeFactorizationPrimePrimePrimePrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimePrimePrimePrimePrime = false\n    var\
    \ isPrimeFactorizationPrimePrimePrimePrimePrimeIndex = 0\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrime = false\n\
    \    var isPrimeFactorizationPrimePrimePrimePrimePrimePrime = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = false\n    var isPrimeFactorizationPrimePrimePrime", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationSum = 0\n \
    \   var factorizationSumCount = 0\n    var factorizationSumCountMax = 0\n    var\
    \ factorizationSumCountMaxIndex = 0\n    var factorizationSumCountMaxIndex2 =\
    \ 0\n    var factorizationSumCountMaxIndex3 = 0\n    var factorizationSumCountMaxIndex4\
    \ = 0\n    var factorizationSumCountMaxIndex5 = 0\n    var factorizationSumCountMaxIndex6\
    \ = 0\n    var factorizationSumCountMaxIndex7 = 0\n    var factorizationSumCountMaxIndex8\
    \ = 0\n    var factorizationSumCountMaxIndex9 = 0\n    var factorizationSumCountMaxIndex10\
    \ = 0\n    var factorizationSumCountMaxIndex11 = 0\n    var factorizationSumCountMaxIndex12\
    \ = 0\n    var factorizationSumCountMaxIndex13 = 0\n    var factorizationSumCountMaxIndex14\
    \ = 0\n    var factorizationSumCountMaxIndex15 = 0\n    var factorizationSumCountMaxIndex16\
    \ = 0\n    var factorizationSumCountMaxIndex17 = 0\n    var factorizationSumCountMaxIndex18\
    \ = 0\n    var factorizationSumCountMaxIndex19 = 0\n    var factorizationSumCountMaxIndex20\
    \ = 0\n    var factorizationSumCountMaxIndex21 = 0\n    var factorizationSumCountMaxIndex22\
    \ = 0\n    var factorizationSumCountMaxIndex23 = 0\n    var factorizationSumCountMaxIndex24\
    \ = 0\n    var factorizationSumCountMaxIndex25 = 0\n    var factorizationSumCountMaxIndex26\
    \ = 0\n    var factorizationSumCountMaxIndex27 = 0\n    var factorizationSumCountMaxIndex28\
    \ = 0\n    var factorizationSumCountMaxIndex29 = 0\n    var factorizationSumCountMaxIndex30\
    \ = 0\n    var factorizationSumCountMaxIndex31 = 0\n    var factorizationSumCountMaxIndex32\
    \ = 0\n    var factorizationSumCountMaxIndex33 = 0\n    var factorizationSumCountMaxIndex34\
    \ = 0\n    var factorizationSumCountMaxIndex35 = 0\n    var factorizationSumCountMaxIndex36\
    \ = 0\n    var factorizationSumCountMaxIndex37 = 0\n    var factorizationSumCountMaxIndex38\
    \ = 0\n    var factorizationSumCountMaxIndex39 = 0\n    var factorizationSumCountMaxIndex40\
    \ = 0\n    var factorizationSumCountMaxIndex41 = 0\n    var factorizationSumCountMaxIndex42\
    \ = 0\n    var factorizationSumCountMaxIndex43 = 0\n    var factorizationSumCountMaxIndex44\
    \ = 0\n    var factorizationSumCountMaxIndex45 = 0\n    var factorizationSumCountMaxIndex46\
    \ = 0\n    var factorizationSumCountMaxIndex47 = 0\n    var factorizationSumCountMaxIndex48\
    \ = 0", "    var factors: [Int] = []\n    var factorization: [Int] = []\n    var\
    \ isPrime: [Bool] = []\n    var isPrimeCount: Int = 0\n    var isPrimeCountMax:\
    \ Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMin: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n", "    var factorization: [Int]\
    \ = []\n    var factor: Int\n    var i: Int\n    var j: Int\n    var k: Int\n\
    \    var l: Int\n    var m: Int\n    var n: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n\
    \    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n\
    \    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n\
    \    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n\
    \    var l: Int\n    var m: Int\n    var n: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n\
    \    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n\
    \    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n\
    \    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n\
    \    var l: Int\n    var m: Int\n    var n: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n\
    \    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n\
    \    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n\
    \    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n\
    \    var l: Int\n    var m: Int\n    var n: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n\
    \    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n\
    \    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n\
    \    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n\
    \    var l: Int\n    var m: Int\n    var n: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n\
    \    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n    var a: ",
  "    var factors = [Int]()\n    var i = 2\n    var factor = 1\n    while i <= n\
    \ {\n        if n % i == 0 {\n            factors.append(factor)\n           \
    \ factor = 1\n        } else {\n            factor *= i\n        }\n        i\
    \ += 1\n    }\n    factors.append(factor)\n    return factors", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    var primeFactorization\
    \ = factorizationOfNumber(n)\n    var primeFactorizationCount = 1\n    var factorizationCount\
    \ = 1\n    var factorizationCountMax = factorizationCount\n\n    while factorizationCount\
    \ < factorizationCountMax {\n        if primeFactorizationCount == 0 {\n     \
    \       break\n        }\n        if factorizationCount == factorizationCountMax\
    \ {\n            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 1 {\n   \
    \         factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 2 {\n   \
    \         factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 3 {\n   \
    \         factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 4 {\n   \
    \         factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 5 {\n   \
    \         factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 6 {\n   \
    \         factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            factors.append(primeFactorization)\n            factors.append(factorization)\n\
    \            break\n        }\n        if primeFactorizationCount == 7 {\n   \
    \         factors.append(primeFactorization)\n            factor", "    var factorization\
    \ = [Int]()\n    var factorizationCount = [Int]()\n    var isPrime = [Bool]()\n\
    \    var isPrimeCount = [Int]()\n    var isPrimeSum = [Int]()\n    var isPrimeSumCount\
    \ = [Int]()\n    var isPrimeSumPrime = [Int]()\n    var isPrimeSumPrimeCount =\
    \ [Int]()\n    var isPrimeSumPrimePrime = [Int]()\n    var isPrimeSumPrimePrimeCount\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrime = [Int]()\n    var isPrimeSumPrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePrime = [Int]()\n    var isPrimeSumPrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrime = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrime = [Int]()\n    var\
    \ isPrimeSumPrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrime\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrimeCount = [Int]()\n\
    \    var isPrimeSumPrimePrimePrimePrimePrimePrimePrime = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrimePrime = [Int]()\n\
    \    var isPrimeSumPrimePrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrimePrime\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n\
    \    var isPrimeSumPrimePrimePrimePrimePrimePrimePrime = [Int]()\n    var isPrimeSumPrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimeSumPrimePrimePrimePri", "    var factors = [Int]()\n\
    \    var primes = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount =\
    \ [Int]()\n    var isPrimeCountMax = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()\n\
    \    var isPrimeCountMaxValue = Int()\n    var isPrimeCountMaxIndex = Int()",
  "    var factorization = [Int]()\n    var factorizationCount = [Int]()\n    var\
    \ primeFactorization = [Int]()\n    var primeFactorizationCount = [Int]()\n  \
    \  var isPrime = [Bool]()\n    var isPrimeCount = [Bool]()\n    var isPrimePrime\
    \ = [Bool]()\n    var isPrimePrimeCount = [Bool]()\n    var isPrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount = [Bool]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Bool]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePri",
  "    var factors = [Int]()\n    var factorization = [Int]()\n    var factorizationIndex\
    \ = 0\n    var currentFactor = 1\n    var currentFactorIndex = 0\n    var isPrime\
    \ = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization = false\n   \
    \ var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrime = false\n\
    \    var isPrimeFactorizationPrimeIndex = 0\n    var isPrimeFactorizationPrimeFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorIndex = 0\n    var isPrimeFactorizationPrimeFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorIndex = 0\n    var\
    \ isPrimeFactorizationPrimeFactorFactorFactorFactor = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactor = false\n\
    \    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorIndex = 0\n  \
    \  var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactor = false\n\
    \    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorIndex =\
    \ 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorFactorFactorFactor", "    var\
    \ factorization: [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime:\
    \ [Bool] = []\n    var isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int\
    \ = 1\n    var isPrimeCountMin: Int = 1\n    var isPrimeCountMaxMin: Int = 1\n\
    \    var isPrimeCountMinMax: Int = 1\n    var isPrimeCountMaxMinMax: Int = 1\n\
    \    var isPrimeCountMinMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMax: Int\
    \ = 1\n    var isPrimeCountMinMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCountMinMaxMaxMaxMax: Int = 1\n    var isPrimeCountMinMaxMaxMaxMax:\
    \ Int = 1\n    var isPrimeCount", "    var factorization: [Int] = []\n    var\
    \ factor = 2\n    var factorCount = 0\n    var isPrime = true\n    var isPrimeCount\
    \ = 0\n    var isPrimeFactorization = false\n    var isPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrime = false\n    var isPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactor = false\n    var isPrimeFactorizationPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrime = false\n    var isPrimeFactorizationPrimeFactorPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactor = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrime = false\n    var\
    \ isPrimeFactorizationPrimeFactorPrimeFactorPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime = false\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorCount = 0\n    var\
    \ isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime = false\n    var\
    \ isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorCount = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactor\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrime", "    var factors\
    \ = [Int]()\n    var primes = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeIndex\
    \ = 0\n    var isPrimeIndexMax = Int(sqrt(Double(n)))\n    var isPrimeIndexMax2\
    \ = Int(sqrt(Double(n)))\n    var isPrimeIndexMax3 = Int(sqrt(Double(n)))\n  \
    \  var isPrimeIndexMax4 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax5 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax6 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax7 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax8 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax9 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax10 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax11 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax12 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax13 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax14 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax15 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax16 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax17 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax18 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax19 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax20 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax21 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax22 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax23 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax24 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax25 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax26 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax27 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax28 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax29 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax30 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax31 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax32 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax33 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax34 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax35 = Int(sqrt(Double(n)))\n    var isPrime", "    var\
    \ factorization: [Int] = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrime", "    var factorization = [Int]()\n    var factorizationCount\
    \ = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationCount\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = [Int]()\n    var\
    \ isPrimePrime = [Bool]()\n    var isPrimePrimeCount = [Int]()\n    var isPrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount = [Int]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePri",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for i in 0..<factorization.count {\n        if factorization[i] > 1 {\n  \
    \          factors.append(factorization[i])\n        }\n    }\n    return factors",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n    var factorizationProduct = 1\n    var factorizationProductSum = 0\n\
    \    var factorizationProductSum2 = 0\n    var factorizationProductSum3 = 0\n\
    \    var factorizationProductSum4 = 0\n    var factorizationProductSum5 = 0\n\
    \    var factorizationProductSum6 = 0\n    var factorizationProductSum7 = 0\n\
    \    var factorizationProductSum8 = 0\n    var factorizationProductSum9 = 0\n\
    \    var factorizationProductSum10 = 0\n    var factorizationProductSum11 = 0\n\
    \    var factorizationProductSum12 = 0\n    var factorizationProductSum13 = 0\n\
    \    var factorizationProductSum14 = 0\n    var factorizationProductSum15 = 0\n\
    \    var factorizationProductSum16 = 0\n    var factorizationProductSum17 = 0\n\
    \    var factorizationProductSum18 = 0\n    var factorizationProductSum19 = 0\n\
    \    var factorizationProductSum20 = 0\n    var factorizationProductSum21 = 0\n\
    \    var factorizationProductSum22 = 0\n    var factorizationProductSum23 = 0\n\
    \    var factorizationProductSum24 = 0\n    var factorizationProductSum25 = 0\n\
    \    var factorizationProductSum26 = 0\n    var factorizationProductSum27 = 0\n\
    \    var factorizationProductSum28 = 0\n    var factorizationProductSum29 = 0\n\
    \    var factorizationProductSum30 = 0\n    var factorizationProductSum31 = 0\n\
    \    var factorizationProductSum32 = 0\n    var factorizationProductSum33 = 0\n\
    \    var factorizationProductSum34 = 0\n    var factorizationProductSum35 = 0\n\
    \    var factorizationProductSum36 = 0\n    var factorizationProductSum37 = 0\n\
    \    var factorizationProductSum38 = 0\n    var factorizationProductSum39 = 0\n\
    \    var factorizationProductSum40 = 0\n    var factorizationProductSum41 = 0\n\
    \    var factorizationProductSum42 = 0\n    var factorizationProductSum43 = 0\n\
    \    var factorizationProductSum44 = 0\n    var factorizationProductSum45 = 0\n\
    \    var factorizationProductSum46 = 0\n    var factorizationProductSum47 = 0\n\
    \    var factorizationProductSum48 = 0\n    var factorizationProductSum49 = 0\n\
    \    var factorizationProductSum50 = 0\n    var factorizationProductSum51 = 0\n\
    \    var factorizationProductSum52 = 0\n    var factorizationProductSum53 = 0\n\
    \    var factorizationProductSum54 = 0\n    var factorizationProductSum55 = 0\n\
    \    var factorizationProductSum56 = 0\n    var factorizationProductSum57 = 0\n\
    \    var factorizationProductSum58 = 0\n    var factorizationProductSum59 = 0\n\
    \    var factorizationProductSum60 = 0\n    var factorizationProductSum61 = 0\n",
  "    var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            factors.append(i)\n            n /= i\n        } else\
    \ {\n            i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var primes = [Int]()\n\
    \    var primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors\
    \ = [Bool]()\n    var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax\
    \ = Int()\n    var isPrimeFactorsCountMaxIndex = Int()\n    var isPrimeFactorsCountMaxValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValue", "    var factorization: [Int]\
    \ = []\n    var factorizationCount = 0\n    var currentFactorizationCount = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization", "    var\
    \ factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()", "    var factors = [Int]()\n    var i = 2\n    var factor = 1\n\
    \    while i <= n {\n        while n % i == 0 {\n            factors.append(factor)\n\
    \            n /= i\n        }\n        i += 1\n        factor = 1\n    }\n  \
    \  if n > 1 {\n        factors.append(n)\n    }\n    return factors", "    var\
    \ factors = [Int]()\n    var factorization = [Int]()\n    var currentFactorization\
    \ = [1]\n    var currentFactor = 1\n    var currentFactorizationIndex = 0\n  \
    \  var currentFactorizationIndexMax = 0\n    var currentFactorizationIndexMaxIndex\
    \ = 0\n    var currentFactorizationIndexMin = 0\n    var currentFactorizationIndexMinIndex\
    \ = 0\n    var currentFactorizationIndexMaxValue = 0\n    var currentFactorizationIndexMinValue\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMaxValueIndex = 0\n    var currentFactorizationIndexMinValueIndex\
    \ = 0\n    var currentFactorizationIndexMax", "    var factors = [Int]()\n   \
    \ var factorization = factorizationOfNumber(n)\n    for i in factorization {\n\
    \        if factors.contains(i) {\n            factors.append(i)\n        } else\
    \ {\n            factors.append(1)\n        }\n    }\n    return factors", " \
    \   var factors: [Int] = []\n    var factorization: [Int] = [1]\n    var factorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization\
    \ = true\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeIndex = 0\n    var isPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeIndex = 0\n    var\
    \ isPrimeFactorizationPrimeFactorizationPrimeFactorization = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime =\
    \ true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPri", "    var factorization: [Int] = []\n\
    \    var primeFactorization: [Int] = []\n    var isPrime: [Bool] = []\n    var\
    \ isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int = 1\n    var isPrimeCountMin:\
    \ Int = 2\n    var isPrimeCountMaxMin: Int = 2\n    var isPrimeCountMinMax: Int\
    \ = 2\n    var isPrimeCountMinMaxMin: Int = 2\n    var isPrimeCountMinMaxMinMax:\
    \ Int = 2\n    var isPrimeCountMinMaxMinMaxMin: Int = 2\n    var isPrimeCountMinMaxMinMaxMinMax:\
    \ Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMin: Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMax:\
    \ Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMin: Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMax:\
    \ Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMin: Int = 2\n  \
    \  var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax: Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax:\
    \ Int = 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin: Int =\
    \ 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax: Int = 2\n\
    \    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax: Int = 2\n   \
    \ var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax: Int = 2\n    var\
    \ isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin: Int = 2\n    var\
    \ isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax: Int = 2\n    var\
    \ isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin: Int = 2\n \
    \   var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin: Int =\
    \ 2\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin:\
    \ Int = 2\n    var isPrimeCountMinMaxMinMaxMin", "    var factors = [Int]()\n\
    \    var factorization = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeCountIndex = 0\n    var isPrimeCountMax\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMin = 0\n    var\
    \ isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n  \
    \  var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n  \
    \  var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n  \
    \  var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n  \
    \  var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n  \
    \  var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n  \
    \  var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n  \
    \  var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n  \
    \  var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex\
    \ = 0\n    var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n  \
    \  var isPrimeCountMaxIndex = 0\n    var isPrimeCountMinIndex = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMinIndex = 0\n", "    var factors = [Int]()\n    var\
    \ factorization = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var primeFactorsCount = 0\n    var isPrime = [Bool]()\n    var\
    \ isPrimeCount = 0\n    var isPrimePrime = [Bool]()\n    var isPrimePrimeCount\
    \ = 0\n    var isPrimePrimePrime = [Bool]()\n    var isPrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n   \
    \ var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n\
    \    var isPrimePrimePrime", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var isPrime: [Bool] = []\n    var isPrimeCount: Int = 0\n  \
    \  var isPrimeIndex: Int = 0\n    var isPrimeCountIndex: Int = 0\n    var isPrimeCountMax:\
    \ Int = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMin: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMaxIndex: Int\
    \ = 0\n    var isPrimeCountMinIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var ", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationIndex = 0\n \
    \   var factorizationIndex = 0\n    var primeFactorizationArray: [Int] = []\n\
    \    var factorizationArray: [Int] = []\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorizationArrayIndex\
    \ = 0\n    var factorizationArrayIndex = 0\n    var primeFactorizationArrayCount\
    \ = 0\n    var factorizationArrayCount = 0\n    var primeFactorization", "   \
    \ var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var factorization = [Int]()\n    var factorizationCount = 0\n    var isPrime\
    \ = true\n    var isPrimeFactorization = true\n    var isPrimeFactorizationCount\
    \ = true\n    var isPrimeFactorizationPrime = true\n    var isPrimeFactorizationPrimeCount\
    \ = true\n    var isPrimeFactorizationPrimePrime = true\n    var isPrimeFactorizationPrimePrimeCount\
    \ = true\n    var isPrimeFactorizationPrimePrimePrime = true\n    var isPrimeFactorizationPrimePrimePrimeCount\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrime = true\n    var isPrimeFactorizationPrimePrimePrimePrimeCount\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrime = true\n    var\
    \ isPrimeFactorizationPrimePrimePrimePrimePrimeCount = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimeCount = true\n\
    \    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrime = true\n    var\
    \ isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimeCount = true\n    var\
    \ isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrime = true\n    var\
    \ isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimeCount = true\n \
    \   var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimeFactorizationPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = true\n    var is", "    var factorization: [Int] = []\n    var i = 2\n   \
    \ while i <= n {\n        if n % i == 0 {\n            factorization = append(factorization,\
    \ i)\n            n /= i\n        } else {\n            i += 1\n        }\n  \
    \  }\n    return factorization", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for i in 0..<factorization.count {\n       \
    \ if factorization[i] == 1 {\n            factors.append(i)\n        }\n    }\n\
    \    return factors", "    var factorization: [Int] = []\n    var factor: Int\
    \ = 0\n    var prime: Int = 0\n    var primeFactorization: [Int] = []\n    var\
    \ primeFactor: Int = 0\n    var isPrime: Bool = false\n    var isPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactor: Bool = false\n    var isPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactor: Bool = false\n    var\
    \ isPrimeFactorizationPrimeFactorization: Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactor: Bool\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorization: Bool\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var ", "    var factors: [Int] = []\n    var factorization:\
    \ [Int] = [1]\n    var factorizationIndex = 0\n    var currentFactorizationIndex\
    \ = 0\n    var currentFactorization = factorization[currentFactorizationIndex]\n\
    \    var currentFactorizationIndexInFactorization = 0\n    var currentFactorizationIndexInFactorizationMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMin\
    \ = 0\n    var currentFactorizationIndexInFactorizationMinMax = factorization.count\
    \ - 1\n    var currentFactorizationIndexInFactorizationMaxMin = 0\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n    var currentFactorizationIndexInFactorizationMaxMinMax\
    \ = factorization.count - 1\n", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationMax = Int(sqrt(Double(n)))\n\
    \    var factorizationMin = factorizationMax\n    var factorizationMaxIndex =\
    \ 0\n    var factorizationMinIndex = 0\n    var factorizationMaxCount = 0\n  \
    \  var factorizationMinCount = 0\n    var factorizationMaxSum = 0\n    var factorizationMinSum\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSumCount = 0\n    var\
    \ factorizationSumIndex = 0\n    var factorizationSumMax = 0\n    var factorizationSumMin\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxCount = 0\n    var factorizationSumMinCount\
    \ = 0\n    var factorizationSumMaxSum = 0\n    var factorizationSumMinSum = 0\n\
    \    var factorizationSumSum = 0\n    var factorizationSumSumCount = 0\n    var\
    \ factorizationSumSumIndex = 0\n    var factorizationSumSumMax = 0\n    var factorizationSumSumMin\
    \ = 0\n    var factorizationSumSumMaxIndex = 0\n    var factorizationSumSumMinIndex\
    \ = 0\n    var factorizationSumSumMaxCount = 0\n    var factorizationSumSumMinCount\
    \ = 0\n    var factorizationSumSumMaxSum = 0\n    var factorizationSumSumMinSum\
    \ = 0\n    var factorizationSumSumSum = 0\n    var factorizationSumSumSumCount\
    \ = 0\n    var factorizationSumSumSumIndex = 0\n    var factorizationSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumMin = 0\n    var factorizationSumSumSumMaxIndex\
    \ = 0\n    var factorizationSumSumSumMinIndex = 0\n    var factorizationSumSumSumMaxCount\
    \ = 0\n    var factorizationSumSumSumMinCount = 0\n    var factorizationSumSumSumMaxSum\
    \ = 0\n    var factorizationSumSumSumMinSum = 0\n    var factorizationSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumCount = 0\n    var factorizationSumSumSumSumIndex\
    \ = 0\n    var factorizationSumSumSumSumMax = 0\n    var factorizationSumSumSumSumMin\
    \ = 0\n    var factorizationSumSumSumSumMaxIndex = 0\n    var factorizationSumSumSumSumMinIndex\
    \ = 0\n    var factorizationSumSumSumSumMaxCount = 0\n    var factorizationSumSumSumSumMinCount\
    \ = 0\n    var factorizationSumSumSumSumMaxSum = 0\n    var factorizationSumSumSumSumMinSum\
    \ = 0\n    var factorizationSumSumSumSumSum = 0\n    var factorizationSumSumSumSumSumCount\
    \ = 0\n    var factorizationSumSumSumSumSumIndex = 0\n    var factorizationSumSum",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        factors.append(factor)\n    }\n   \
    \ return factors", "    var factorization: [Int] = []\n    var factor: Int = 0\n\
    \    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var count: Int\
    \ = 0\n    var isPrime: Bool = false\n    var isPrime2: Bool = false\n    var\
    \ isPrime3: Bool = false\n    var isPrime4: Bool = false\n    var isPrime5: Bool\
    \ = false\n    var isPrime6: Bool = false\n    var isPrime7: Bool = false\n  \
    \  var isPrime8: Bool = false\n    var isPrime9: Bool = false\n    var isPrime10:\
    \ Bool = false\n    var isPrime11: Bool = false\n    var isPrime12: Bool = false\n\
    \    var isPrime13: Bool = false\n    var isPrime14: Bool = false\n    var isPrime15:\
    \ Bool = false\n    var isPrime16: Bool = false\n    var isPrime17: Bool = false\n\
    \    var isPrime18: Bool = false\n    var isPrime19: Bool = false\n    var isPrime20:\
    \ Bool = false\n    var isPrime21: Bool = false\n    var isPrime22: Bool = false\n\
    \    var isPrime23: Bool = false\n    var isPrime24: Bool = false\n    var isPrime25:\
    \ Bool = false\n    var isPrime26: Bool = false\n    var isPrime27: Bool = false\n\
    \    var isPrime28: Bool = false\n    var isPrime29: Bool = false\n    var isPrime30:\
    \ Bool = false\n    var isPrime31: Bool = false\n    var isPrime32: Bool = false\n\
    \    var isPrime33: Bool = false\n    var isPrime34: Bool = false\n    var isPrime35:\
    \ Bool = false\n    var isPrime36: Bool = false\n    var isPrime37: Bool = false\n\
    \    var isPrime38: Bool = false\n    var isPrime39: Bool = false\n    var isPrime40:\
    \ Bool = false\n    var isPrime41: Bool = false\n    var isPrime42: Bool = false\n\
    \    var isPrime43: Bool = false\n    var isPrime44: Bool = false\n    var isPrime45:\
    \ Bool = false\n    var isPrime46: Bool = false\n    var isPrime47: Bool = false\n\
    \    var isPrime48: Bool = false\n    var isPrime49: Bool = false\n    var isPrime50:\
    \ Bool = false\n    var isPrime51: Bool = false\n    var isPrime52: Bool = false\n\
    \    var isPrime53: Bool = false\n    var isPrime54: ", "    var factorization\
    \ = [Int]()\n    var factorizationCount = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var primeFactorizationCount = [Int]()\n    var isPrime = [Bool]()\n\
    \    var isPrimeCount = [Int]()\n    var isPrimePrime = [Bool]()\n    var isPrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrime = [Bool]()\n    var isPrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var\
    \ isPrimePrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = [Int]()\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = [Int]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime = [Bool]()\n\
    \    var isPrimePri", "    var factors: [Int] = []\n    var factorization: [Int]\
    \ = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationIndex\
    \ = 0\n    var primeFactorizationIndex2 = 0\n    var primeFactorizationIndex3\
    \ = 0\n    var primeFactorizationIndex4 = 0\n    var primeFactorizationIndex5\
    \ = 0\n    var primeFactorizationIndex6 = 0\n    var primeFactorizationIndex7\
    \ = 0\n    var primeFactorizationIndex8 = 0\n    var primeFactorizationIndex9\
    \ = 0\n    var primeFactorizationIndex10 = 0\n    var primeFactorizationIndex11\
    \ = 0\n    var primeFactorizationIndex12 = 0\n    var primeFactorizationIndex13\
    \ = 0\n    var primeFactorizationIndex14 = 0\n    var primeFactorizationIndex15\
    \ = 0\n    var primeFactorizationIndex16 = 0\n    var primeFactorizationIndex17\
    \ = 0\n    var primeFactorizationIndex18 = 0\n    var primeFactorizationIndex19\
    \ = 0\n    var primeFactorizationIndex20 = 0\n    var primeFactorizationIndex21\
    \ = 0\n    var primeFactorizationIndex22 = 0\n    var primeFactorizationIndex23\
    \ = 0\n    var primeFactorizationIndex24 = 0\n    var primeFactorizationIndex25\
    \ = 0\n    var primeFactorizationIndex26 = 0\n    var primeFactorizationIndex27\
    \ = 0\n    var primeFactorizationIndex28 = 0\n    var primeFactorizationIndex29\
    \ = 0\n    var primeFactorizationIndex30 = 0\n    var primeFactorizationIndex31\
    \ = 0\n    var primeFactorizationIndex32 = 0\n    var primeFactorizationIndex33\
    \ = 0\n    var primeFactorizationIndex34 = 0\n    var primeFactorizationIndex35\
    \ = 0\n    var primeFactorizationIndex36 = 0\n    var primeFactorizationIndex37\
    \ = 0\n    var primeFactorizationIndex38 = 0\n    var primeFactorizationIndex39\
    \ = 0\n    var primeFactorizationIndex40 = 0\n    var primeFactorizationIndex41\
    \ = 0\n    var primeFactorizationIndex42 = 0\n    var primeFactorizationIndex43\
    \ = 0\n    var primeFactorizationIndex44 = 0\n    var primeFactorizationIndex45\
    \ = 0\n    var primeFactorizationIndex46 = 0\n    var primeFactorizationIndex47\
    \ = 0\n    var primeFactorizationIndex48 = 0\n    var primeFactorizationIndex49\
    \ = 0\n    var primeFactorizationIndex50 = 0\n    var primeFactorizationIndex51\
    \ = 0\n    var primeFactorizationIndex52 = 0\n    var primeFactorizationIndex53\
    \ = 0\n    var primeFactorizationIndex54 = 0\n    var primeFactorizationIndex55\
    \ = 0\n    var primeFactorizationIndex56 = 0\n    var primeFactorizationIndex57\
    \ = 0\n    var primeFactorizationIndex58 = 0\n    var primeFactorizationIndex59\
    \ = 0\n    var primeFactorizationIndex60 = 0\n    var primeFactorizationIndex61\
    \ = 0\n    var primeFactorization", "    var factors = [Int]()\n    var factorization\
    \ = [Int]()\n    var i = 2\n    var j = 1\n    var k = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationIndexMax = 0\n    var factorizationIndexMaxIndex =\
    \ 0\n    var factorizationIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndex\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndex = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax = 0\n    var factorizationIndexMaxIndexMaxIndexMaxIndexMax\
    \ = 0\n    var factorizationIndexMaxIndexMaxIndex", "    var factors = [Int]()\n\
    \    var primes = [Int]()\n    var primeFactors = [Int]()\n    var primeFactorsCount\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = [Int]()\n    var\
    \ isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCount2\
    \ = [Int]()\n    var isPrimeFactorsCount3 = [Int]()\n    var isPrimeFactorsCount4\
    \ = [Int]()\n    var isPrimeFactorsCount5 = [Int]()\n    var isPrimeFactorsCount6\
    \ = [Int]()\n    var isPrimeFactorsCount7 = [Int]()\n    var isPrimeFactorsCount8\
    \ = [Int]()\n    var isPrimeFactorsCount9 = [Int]()\n    var isPrimeFactorsCount10\
    \ = [Int]()\n    var isPrimeFactorsCount11 = [Int]()\n    var isPrimeFactorsCount12\
    \ = [Int]()\n    var isPrimeFactorsCount13 = [Int]()\n    var isPrimeFactorsCount14\
    \ = [Int]()\n    var isPrimeFactorsCount15 = [Int]()\n    var isPrimeFactorsCount16\
    \ = [Int]()\n    var isPrimeFactorsCount17 = [Int]()\n    var isPrimeFactorsCount18\
    \ = [Int]()\n    var isPrimeFactorsCount19 = [Int]()\n    var isPrimeFactorsCount20\
    \ = [Int]()\n    var isPrimeFactorsCount21 = [Int]()\n    var isPrimeFactorsCount22\
    \ = [Int]()\n    var isPrimeFactorsCount23 = [Int]()\n    var isPrimeFactorsCount24\
    \ = [Int]()\n    var isPrimeFactorsCount25 = [Int]()\n    var isPrimeFactorsCount26\
    \ = [Int]()\n    var isPrimeFactorsCount27 = [Int]()\n    var isPrimeFactorsCount28\
    \ = [Int]()\n    var isPrimeFactorsCount29 = [Int]()\n    var isPrimeFactorsCount30\
    \ = [Int]()\n    var isPrimeFactorsCount31 = [Int]()\n    var isPrimeFactorsCount32\
    \ = [Int]()\n    var isPrimeFactorsCount33 = [Int]()\n    var isPrimeFactorsCount34\
    \ = [Int]()\n    var isPrimeFactorsCount35 = [", "    var factorization: [Int]\
    \ = []\n    var factorizationCount = 0\n    var currentFactorizationCount = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n\
    \    var currentFactorization: Int = 0\n    var currentFactorization", "    var\
    \ factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n    var factorizationSum2 = 0\n    var factorizationSum3 = 0\n    var factorizationSum4\
    \ = 0\n    var factorizationSum5 = 0\n    var factorizationSum6 = 0\n    var factorizationSum7\
    \ = 0\n    var factorizationSum8 = 0\n    var factorizationSum9 = 0\n    var factorizationSum10\
    \ = 0\n    var factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var\
    \ factorizationSum13 = 0\n    var factorizationSum14 = 0\n    var factorizationSum15\
    \ = 0\n    var factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var\
    \ factorizationSum18 = 0\n    var factorizationSum19 = 0\n    var factorizationSum20\
    \ = 0\n    var factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var\
    \ factorizationSum23 = 0\n    var factorizationSum24 = 0\n    var factorizationSum25\
    \ = 0\n    var factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var\
    \ factorizationSum28 = 0\n    var factorizationSum29 = 0\n    var factorizationSum30\
    \ = 0\n    var factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var\
    \ factorizationSum33 = 0\n    var factorizationSum34 = 0\n    var factorizationSum35\
    \ = 0\n    var factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var\
    \ factorizationSum38 = 0\n    var factorizationSum39 = 0\n    var factorizationSum40\
    \ = 0\n    var factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var\
    \ factorizationSum43 = 0\n    var factorizationSum44 = 0\n    var factorizationSum45\
    \ = 0\n    var factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var\
    \ factorizationSum48 = 0\n    var factorizationSum49 = 0\n    var factorizationSum50\
    \ = 0\n    var factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var\
    \ factorizationSum53 = 0\n    var factorizationSum54 = 0\n    var factorizationSum55\
    \ = 0\n    var factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var\
    \ factorizationSum58 = 0\n    var factorizationSum59 = 0\n    var factorizationSum60\
    \ = 0\n    var factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var\
    \ factorizationSum63 = 0\n    var factorizationSum64 = 0\n    var factorizationSum65\
    \ = 0\n    var factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var\
    \ factorizationSum68 = 0\n    var factorizationSum69 = 0\n    var factorizationSum70\
    \ = 0\n    var factorizationSum71 = 0\n    var factorization", "    var factors\
    \ = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n    var\
    \ isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()", "    var factors: [Int] = []\n    var primeFactors: [Int] = []\n\
    \    var isPrime: [Bool] = []\n    var isPrimeCount: [Int] = []\n    var isPrimeCountMax:\
    \ Int = 1\n    var isPrimeCountMin: Int = 1\n    var isPrimeCountSum: Int = 0\n\
    \    var isPrimeCountSumMax: Int = 0\n    var isPrimeCountSumMin: Int = 0\n  \
    \  var isPrimeCountSumSum: Int = 0\n    var isPrimeCountSumSumMax: Int = 0\n \
    \   var isPrimeCountSumSumMin: Int = 0\n    var isPrimeCountSumSumSum: Int = 0\n\
    \    var isPrimeCountSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumMax: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumMin:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSum: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSumMax:\
    \ Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSumMin: Int = 0\n    var isPrimeCountSumSumSumSumSumSumSumSumSum:\
    \ Int = 0\n    var isPrimeCountSumSumSumSum", "    var factorization = [Int]()\n\
    \    var primeFactorization = [Int]()\n    var primeFactorizationCount = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeCount = [Int]()\n    var isPrimeCountMax\
    \ = Int(arc4random_uniform(UInt32(UInt32.max)))\n    var isPrimeCountMin = Int(arc4random_uniform(UInt32(UInt32.min)))\n\
    \    var isPrimeCountMaxInt = Int(isPrimeCountMax)\n    var isPrimeCountMinInt\
    \ = Int(isPrimeCountMin)\n    var isPrimeCountMaxIntInt = Int(isPrimeCountMaxInt)\n\
    \    var isPrimeCountMinIntInt = Int(isPrimeCountMinInt)\n    var isPrimeCountMaxIntIntInt\
    \ = Int(isPrimeCountMaxIntInt)\n    var isPrimeCountMinIntIntInt = Int(isPrimeCountMinIntInt)\n\
    \    var isPrimeCountMaxIntIntIntInt = Int(isPrimeCountMaxIntIntInt)\n    var\
    \ isPrimeCountMinIntIntIntInt = Int(isPrimeCountMinIntIntInt)\n    var isPrimeCountMaxIntIntIntIntInt\
    \ = Int(isPrimeCountMaxIntIntIntInt)\n    var isPrimeCountMinIntIntIntIntInt =\
    \ Int(isPrimeCountMinIntIntIntInt)\n    var isPrimeCountMaxIntIntIntIntIntInt\
    \ = Int(isPrimeCountMaxIntIntIntIntInt)\n    var isPrimeCountMinIntIntIntIntIntInt\
    \ = Int(isPrimeCountMinIntIntIntIntInt)\n    var isPrimeCountMaxIntIntIntIntIntIntInt\
    \ = Int(isPrimeCountMaxIntIntIntIntIntInt)\n    var isPrimeCountMinIntIntIntIntIntIntInt\
    \ = Int(isPrimeCountMinIntIntIntIntIntIntInt)\n    var isPrimeCountMaxIntIntIntIntIntIntIntInt\
    \ = Int(isPrimeCountMaxIntIntIntIntIntIntIntInt)\n    var isPrimeCountMinIntIntIntIntIntIntIntInt\
    \ = Int(isPrimeCountMinIntIntIntIntIntIntIntInt)\n    var isPrimeCountMaxIntIntIntIntIntIntIntIntInt\
    \ = Int(isPrimeCountMaxIntIntIntIntIntIntIntIntInt)\n    var isPrimeCountMinIntIntIntIntIntIntIntIntInt\
    \ = Int(isPrimeCountMin", "    var factors = [Int]()\n    var primeFactors = [Int]()\n\
    \    var primeFactorsCount = 1\n    var isPrime = true\n    var isPrimeCount =\
    \ 0\n    var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePri", "    var factors = [Int]()\n    var i =\
    \ 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n > 1 {\n        factors.append(n)\n    }\n    return factors", "    var\
    \ factors = [Int]()\n    var n = n\n    var i = 2\n    var j = 1\n    var k =\
    \ 0\n    var factor = 1\n    var factorization = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var primeFactorizationIndex = 0\n    var isPrime = true\n   \
    \ var isPrimeIndex = 0\n    var isPrimeFactorization = false\n    var isPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorization = false\n    var isPrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorization = false\n    var isPrimePrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorization =\
    \ false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactor",
  "    var factors = [Int]()\n    var primeFactors = primeFactors(n)\n    var factorization\
    \ = factorizationOf(n: n)\n    var factorizationCount = 1\n    for prime in primeFactors\
    \ {\n        if factorization[factorizationCount] == prime {\n            factors.append(prime)\n\
    \            factorizationCount += 1\n        }\n    }\n    return factors", " \
    \   var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()", "    var factorization: [Int] = []\n    var factorizationCount =\
    \ 0\n    var currentFactorizationCount = 0\n    var currentFactorization = 0\n\
    \    var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n    var currentFactorization = 0\n    var currentFactorization\
    \ = 0\n    var currentFactorization = 0\n    var currentFactorization = 0\n  \
    \  var currentFactorization = 0\n", "    var factorization: [Int] = []\n    var\
    \ factorizationCount = 0\n    var currentFactorizationCount = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization: Int = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorization", "    var factorization = [Int]()\n \
    \   var factorizationCount = [Int]()\n    var factorizationSum = [Int]()\n   \
    \ var factorizationSumCount = [Int]()\n    var factorizationSumCountMax = Int()\n\
    \    var factorizationSumCountMaxIndex = Int()\n    var factorizationSumCountMin\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMinIndex = Int()\n    var factorizationSumCountMaxValue\
    \ = Int()\n    var factorizationSumCountMinValue = Int()\n    var factorizationSumCountMaxIndex\
    \ = Int()\n    var factorizationSumCountMin", "    var factorization = [Int]()\n\
    \    var primeFactorization = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeIndex\
    \ = 0\n    var isPrimeIndexMax = Int(sqrt(Double(n)))\n    var isPrimeIndexMax2\
    \ = Int(sqrt(Double(n)))\n    var isPrimeIndexMax3 = Int(sqrt(Double(n)))\n  \
    \  var isPrimeIndexMax4 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax5 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax6 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax7 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax8 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax9 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax10 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax11 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax12 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax13 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax14 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax15 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax16 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax17 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax18 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax19 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax20 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax21 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax22 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax23 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax24 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax25 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax26 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax27 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax28 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax29 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax30 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax31 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax32 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax33 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax34 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax35 = Int(sqrt(Double(n)))\n    var ", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    var primeFactorization\
    \ = factorizationOfPrimes(n)\n    var primeFactors = primeFactorization\n    var\
    \ primeFactorsCount = primeFactors.count\n    var factorizationCount = factorization.count\n\
    \    var factorizationIndex = factorizationCount - 1\n    var primeFactorsIndex\
    \ = primeFactorsCount - 1\n    var primeFactorsIndex2 = primeFactorsIndex - 1\n\
    \    var factorizationIndex2 = factorizationIndex - 1\n    var factorizationIndex3\
    \ = factorizationIndex - 1\n    var factorizationIndex4 = factorizationIndex -\
    \ 1\n    var factorizationIndex5 = factorizationIndex - 1\n    var factorizationIndex6\
    \ = factorizationIndex - 1\n    var factorizationIndex7 = factorizationIndex -\
    \ 1\n    var factorizationIndex8 = factorizationIndex - 1\n    var factorizationIndex9\
    \ = factorizationIndex - 1\n    var factorizationIndex10 = factorizationIndex\
    \ - 1\n    var factorizationIndex11 = factorizationIndex - 1\n    var factorizationIndex12\
    \ = factorizationIndex - 1\n    var factorizationIndex13 = factorizationIndex\
    \ - 1\n    var factorizationIndex14 = factorizationIndex - 1\n    var factorizationIndex15\
    \ = factorizationIndex - 1\n    var factorizationIndex16 = factorizationIndex\
    \ - 1\n    var factorizationIndex17 = factorizationIndex - 1\n    var factorizationIndex18\
    \ = factorizationIndex - 1\n    var factorizationIndex19 = factorizationIndex\
    \ - 1\n    var factorizationIndex20 = factorizationIndex - 1\n    var factorizationIndex21\
    \ = factorizationIndex - 1\n    var factorizationIndex22 = factorizationIndex\
    \ - 1\n    var factorizationIndex23 = factorizationIndex - 1\n    var factorizationIndex24\
    \ = factorizationIndex - 1\n    var factorizationIndex25 = factorizationIndex\
    \ - 1\n    var factorizationIndex26 = factorizationIndex - 1\n    var factorizationIndex27\
    \ = factorizationIndex - 1\n    var factorizationIndex28 = factorizationIndex\
    \ - 1\n    var factorizationIndex29 = factorizationIndex - 1\n    var factorizationIndex30\
    \ = factorizationIndex - 1\n    var factorizationIndex31 = factorizationIndex\
    \ - 1\n    var factorizationIndex32 = factorizationIndex - 1\n    var factorizationIndex33\
    \ = factorizationIndex - 1\n    var factorizationIndex34 = factorizationIndex\
    \ - 1\n    var factorizationIndex35 = factorizationIndex - 1\n    var factorizationIndex36\
    \ = factorizationIndex - 1\n    var factorizationIndex37 = factorizationIndex\
    \ - 1\n    var factorizationIndex38 = factorizationIndex - 1\n    var factorizationIndex39\
    \ = factorizationIndex - 1\n    var factorizationIndex40 = factorizationIndex\
    \ - 1\n    var factorizationIndex41 = ", "    var factors: [Int] = []\n    var\
    \ primes: [Int] = []\n    var max: Int = 1\n    for _ in 0..<n {\n        max\
    \ = max * 2\n    }\n    for _ in 0..<n {\n        if max % 2 == 0 {\n        \
    \    factors.append(2)\n        }\n        for _ in 0..<n {\n            if max\
    \ % max == 0 {\n                factors.append(max)\n                max /= max\n\
    \            }\n        }\n    }\n    for _ in 0..<n {\n        if max % 2 ==\
    \ 0 {\n            primes.append(2)\n        }\n        for _ in 0..<n {\n   \
    \         if max % max == 0 {\n                primes.append(max)\n          \
    \      max /= max\n            }\n        }\n    }\n    return factors", "   \
    \ var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationIndex\
    \ = 0\n    var currentFactorizationIndex = 0\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorization = [1]\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrime", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var currentFactorizationCount = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization", "    var factors = [Int]()\n    var primes\
    \ = [Int]()\n    var i = 2\n    var j = 0\n    var k = n - 1\n    var m = 1\n\
    \    var n = 2\n    var p = 1\n    var q = 1\n    var r = 1\n    var s = 2\n \
    \   var t = 0\n    var u = 1\n    var v = 1\n    var w = 1\n    var x = 1\n  \
    \  var y = 1\n    var z = 1\n    var a = 2\n    var b = 1\n    var c = 1\n   \
    \ var d = 1\n    var e = 1\n    var f = 1\n    var g = 1\n    var h = 1\n    var\
    \ i = 1\n    var j = 1\n    var k = 1\n    var l = 1\n    var m = 1\n    var n\
    \ = 2\n    var p = 1\n    var q = 1\n    var r = 1\n    var s = 2\n    var t =\
    \ 0\n    var u = 1\n    var v = 1\n    var w = 1\n    var x = 1\n    var y = 1\n\
    \    var z = 1\n    var a = 2\n    var b = 1\n    var c = 1\n    var d = 1\n \
    \   var e = 1\n    var f = 1\n    var g = 1\n    var h = 1\n    var i = 1\n  \
    \  var j = 1\n    var k = 1\n    var l = 1\n    var m = 1\n    var n = 2\n   \
    \ var p = 1\n    var q = 1\n    var r = 1\n    var s = 2\n    var t = 0\n    var\
    \ u = 1\n    var v = 1\n    var w = 1\n    var x = 1\n    var y = 1\n    var z\
    \ = 1\n    var a = 2\n    var b = 1\n    var c = 1\n    var d = 1\n    var e =\
    \ 1\n    var f = 1\n    var g = 1\n    var h = 1\n    var i = 1\n    var j = 1\n\
    \    var k = 1\n    var l = 1\n    var m = 1\n    var n = 2\n    var p = 1\n \
    \   var q = 1\n    var r = 1\n    var s = 2\n    var t = 0\n    var u = 1\n  \
    \  var v = 1\n    var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n   \
    \ var a = 2\n    var b = 1\n    var c = 1\n    var d = 1\n    var e = 1\n    var\
    \ f = 1\n    var g = 1\n    var h = 1\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var l = 1\n    var m = 1\n    var n = 2\n    var p = 1\n    var q =\
    \ 1\n    var r = 1\n    var s = 2\n    var t = 0\n    var u = 1\n    var v = 1\n\
    \    var w = 1\n    var x = 1\n    var y = 1\n    var z = 1\n    var a = 2\n \
    \   var b = 1\n    var c = 1\n    var d = 1\n    var e = 1\n    var f = 1\n  \
    \  var g = 1\n    var h = 1\n    var ", "    var factorization = [Int]()\n   \
    \ var factorizationIndex = 0\n    var factorizationCount = 1\n    var factorizationNumber\
    \ = 0\n    var factorizationNumberIndex = 0\n    var factorizationNumberCount\
    \ = 0\n    var factorizationNumberSum = 0\n    var factorizationNumberSumIndex\
    \ = 0\n    var factorizationNumberSumCount = 0\n    var factorizationNumberSumSum\
    \ = 0\n    var factorizationNumberSumSumIndex = 0\n    var factorizationNumberSumSumCount\
    \ = 0\n    var factorizationNumberSumSumSum = 0\n    var factorizationNumberSumSumSumIndex\
    \ = 0\n    var factorizationNumberSumSumSumCount = 0\n    var factorizationNumberSumSumSumSum\
    \ = 0\n    var factorizationNumberSumSumSumSumIndex = 0\n    var factorizationNumberSumSumSumSumCount\
    \ = 0\n    var factorizationNumberSumSumSumSumSum = 0\n    var factorizationNumberSumSumSumSumIndex\
    \ = 0\n    var factorizationNumberSumSumSumSumCount = 0\n    var factorizationNumberSumSumSumSumSum\
    \ = 0\n    var factorizationNumberSumSumSumSumSumIndex = 0\n    var factorizationNumberSumSumSumSumSumCount\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSum = 0\n    var factorizationNumberSumSumSumSumSumIndex\
    \ = 0\n    var factorizationNumberSumSumSumSumSumCount = 0\n    var factorizationNumberSumSumSumSumSumSum\
    \ = 0\n    var factorizationNumberSumSumSumSumSumIndex = 0\n    var factorizationNumberSumSumSumSumSumCount\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumSum = 0\n    var factorizationNumberSumSumSumSumSumSumIndex\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumCount = 0\n    var factorizationNumberSumSumSumSumSumSumSum\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumIndex = 0\n    var factorizationNumberSumSumSumSumSumCount\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumSum = 0\n    var factorizationNumberSumSumSumSumSumSumIndex\
    \ = 0\n    var factorizationNumberSumSumSumSumSumCount = 0\n    var factorizationNumberSumSumSumSumSumSumSum\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumIndex = 0\n    var factorizationNumberSumSumSumSumSumCount\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumSum = 0\n    var factorizationNumberSumSumSumSumSumSumIndex\
    \ = 0\n    var factorizationNumberSumSumSumSumSumCount = 0\n    var factorizationNumberSumSumSumSumSumSumSum\
    \ = 0\n    var factorizationNumberSumSumSumSumSumSumIndex = 0\n    var factorizationNumberSum",
  "    var factors = [Int]()\n    var i = 2\n    var factor = 1\n    var factorization\
    \ = factorizationOfNumber(n)\n    while i < factorization.count {\n        if\
    \ factorization[i] == 1 {\n            factors.append(factor)\n            factor\
    \ = 1\n        } else {\n            factor *= factorization[i]\n        }\n \
    \       i += 1\n    }\n    return factors", "    var factors = [Int]()\n    var\
    \ i = 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        }\n        i += 1\n    }\n    if n != 1 {\n     \
    \   factors.append(n)\n    }\n    return factors", "    var factorization: [Int]\
    \ = []\n    var primeFactorization: [Int] = []\n    var factorizationCount = 0\n\
    \    var primeFactorizationCount = 0\n    var factorizationPrimeCount = 0\n  \
    \  var primeFactorizationPrimeCount = 0\n    var factorizationPrimeCountMax =\
    \ 0\n    var primeFactorizationPrimeCountMax = 0\n    var factorizationPrimeCountMax2\
    \ = 0\n    var primeFactorizationPrimeCountMax2 = 0\n    var factorizationPrimeCountMax3\
    \ = 0\n    var primeFactorizationPrimeCountMax3 = 0\n    var factorizationPrimeCountMax4\
    \ = 0\n    var primeFactorizationPrimeCountMax4 = 0\n    var factorizationPrimeCountMax5\
    \ = 0\n    var primeFactorizationPrimeCountMax5 = 0\n    var factorizationPrimeCountMax6\
    \ = 0\n    var primeFactorizationPrimeCountMax6 = 0\n    var factorizationPrimeCountMax7\
    \ = 0\n    var primeFactorizationPrimeCountMax7 = 0\n    var factorizationPrimeCountMax8\
    \ = 0\n    var primeFactorizationPrimeCountMax8 = 0\n    var factorizationPrimeCountMax9\
    \ = 0\n    var primeFactorizationPrimeCountMax9 = 0\n    var factorizationPrimeCountMax10\
    \ = 0\n    var primeFactorizationPrimeCountMax10 = 0\n    var factorizationPrimeCountMax11\
    \ = 0\n    var primeFactorizationPrimeCountMax11 = 0\n    var factorizationPrimeCountMax12\
    \ = 0\n    var primeFactorizationPrimeCountMax12 = 0\n    var factorizationPrimeCountMax13\
    \ = 0\n    var primeFactorizationPrimeCountMax13 = 0\n    var factorizationPrimeCountMax14\
    \ = 0\n    var primeFactorizationPrimeCountMax14 = 0\n    var factorizationPrimeCountMax15\
    \ = 0\n    var primeFactorizationPrimeCountMax15 = 0\n    var factorizationPrimeCountMax16\
    \ = 0\n    var primeFactorizationPrimeCountMax16 = 0\n    var factorizationPrimeCountMax17\
    \ = 0\n    var primeFactorizationPrimeCountMax17 = 0\n    var factorizationPrimeCountMax18\
    \ = 0\n    var primeFactorizationPrimeCountMax18 = 0\n    var factorizationPrimeCountMax19\
    \ = 0\n    var primeFactorizationPrimeCountMax19 = 0\n    var factorizationPrimeCountMax20\
    \ = 0\n    var primeFactorizationPrimeCountMax20 = 0\n    var factorizationPrimeCountMax21\
    \ = 0\n    var primeFactorizationPrimeCountMax21 = 0\n    var factorizationPrimeCountMax22\
    \ = 0\n    var primeFactorizationPrimeCountMax22 = 0\n    var factorizationPrimeCountMax",
  "    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n   \
    \ var primeFactorizationIndex = 0\n    var factorizationIndex = 0\n    var primeFactorizationIndex2\
    \ = 0\n    var factorizationIndex2 = 0\n    var primeFactorizationIndex3 = 0\n\
    \    var factorizationIndex3 = 0\n    var primeFactorizationIndex4 = 0\n    var\
    \ factorizationIndex4 = 0\n    var primeFactorizationIndex5 = 0\n    var factorizationIndex5\
    \ = 0\n    var primeFactorizationIndex6 = 0\n    var factorizationIndex6 = 0\n\
    \    var primeFactorizationIndex7 = 0\n    var factorizationIndex7 = 0\n    var\
    \ primeFactorizationIndex8 = 0\n    var factorizationIndex8 = 0\n    var primeFactorizationIndex9\
    \ = 0\n    var factorizationIndex9 = 0\n    var primeFactorizationIndex10 = 0\n\
    \    var factorizationIndex10 = 0\n    var primeFactorizationIndex11 = 0\n   \
    \ var factorizationIndex11 = 0\n    var primeFactorizationIndex12 = 0\n    var\
    \ factorizationIndex12 = 0\n    var primeFactorizationIndex13 = 0\n    var factorizationIndex13\
    \ = 0\n    var primeFactorizationIndex14 = 0\n    var factorizationIndex14 = 0\n\
    \    var primeFactorizationIndex15 = 0\n    var factorizationIndex15 = 0\n   \
    \ var primeFactorizationIndex16 = 0\n    var factorizationIndex16 = 0\n    var\
    \ primeFactorizationIndex17 = 0\n    var factorizationIndex17 = 0\n    var primeFactorizationIndex18\
    \ = 0\n    var factorizationIndex18 = 0\n    var primeFactorizationIndex19 = 0\n\
    \    var factorizationIndex19 = 0\n    var primeFactorizationIndex20 = 0\n   \
    \ var factorizationIndex20 = 0\n    var primeFactorizationIndex21 = 0\n    var\
    \ factorizationIndex21 = 0\n    var primeFactorizationIndex22 = 0\n    var factorizationIndex22\
    \ = 0\n    var primeFactorizationIndex23 = 0\n    var factorizationIndex23 = 0\n\
    \    var primeFactorizationIndex24 = 0\n    var factorizationIndex24 = 0\n   \
    \ var primeFactorizationIndex25 = 0\n    var factorizationIndex25 = 0\n    var\
    \ primeFactorizationIndex26 = 0\n    var factorizationIndex26 = 0\n    var primeFactorizationIndex27\
    \ = 0\n    var factorizationIndex27 = 0\n    var primeFactorizationIndex28 = 0\n\
    \    var factorizationIndex28 = 0\n    var primeFactorizationIndex29 = 0\n   \
    \ var factorizationIndex29 = 0\n    var primeFactorizationIndex30 = 0\n    var\
    \ factorizationIndex30 = 0\n    var primeFactorizationIndex31 = 0\n    var factorizationIndex31\
    \ = 0\n    var primeFactorizationIndex32 = 0\n    var factorizationIndex32 = 0\n\
    \    var primeFactorizationIndex33 = 0\n    var factorizationIndex33 = 0\n   \
    \ var primeFactorization", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var primeFactorizationIndex\
    \ = 0\n    var primeFactorizationCountIndex = 0\n    var factorizationIndex =\
    \ 0\n    var factorizationCount = 0\n    var factorizationCountIndex = 0\n   \
    \ var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex = 0\n\
    \    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex = 0\n\
    \    var factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationCountIndex = 0\n    var primeFactorizationIndex = 0\n    var primeFactorizationCountIndex\
    \ = 0\n", "    var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n \
    \   var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax = Int()\n\
    \    var isPrimeFactorsCountMaxIndex = Int()\n    var isPrimeFactorsCountMaxValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValue", "    var factors = [Int]()\n\
    \    var factorization = factorizationOfNumber(n)\n    for factor in factorization\
    \ {\n        factors.append(factor)\n    }\n    return factors", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var primeFactorsCount\
    \ = 0\n    var isPrime = true\n    var isPrimeCount = 0\n    var isPrimePrime\
    \ = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime = true\n  \
    \  var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime = true\n   \
    \ var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePri", "    var factorization\
    \ = [Int]()\n    var factorizationCount = [Int]()\n    var factorizationSum =\
    \ 0\n    var factorizationSumCount = 0\n    var factorizationSumCountMax = 0\n\
    \    var factorizationSumCountMaxIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCountMaxIndexIndex\
    \ = 0\n    var factorizationSumCountMaxIndexIndex = 0\n    var factorizationSumCount",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        factors.append(factor)\n    }\n   \
    \ return factors"]
stop_tokens:
- "\n}"

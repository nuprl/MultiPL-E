language: swift
name: HumanEval_64_vowels_count
results:
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for c in s {\n        switch c\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            vowelCount += 1\n        default:\n\
    \            break\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp00qmlcdn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp00qmlcdn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp00qmlcdn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp00qmlcdn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s {\n        if vowels.contains(char) {\n            count += 1\n  \
    \      }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp77wsox25/tmp77wsox25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3c2e33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3c2b2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3c2b2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3c2b297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp77wsox25                        0x00005570078a8582 <unavailable> + 5506

    5    libc.so.6                          0x00002ab3c301f460 __libc_start_main +
    245

    6    tmp77wsox25                        0x00005570078a80b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        if letter\
    \ == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj5_jp679/tmpj5_jp679.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f01ed9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f01bd0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f01bd0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f01bcf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5_jp679                        0x0000564752b934bb <unavailable> + 5307

    5    libc.so.6                          0x00002b0f020c5460 __libc_start_main +
    245

    6    tmpj5_jp679                        0x0000564752b93099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for char in s {\n        switch\
    \ char {\n        case 'a':\n        case 'e':\n        case 'i':\n        case\
    \ 'o':\n        case 'u':\n            vowelCount += 1\n        default:\n   \
    \         break\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5s2belos.swift:15:14: error: single-quoted string literal found,\
    \ use '\"'\n        case 'a':\n             ^~~\n             \"a\"\n/tmp/tmp5s2belos.swift:15:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case 'a':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:16:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'e':\n   \
    \          ^~~\n             \"e\"\n/tmp/tmp5s2belos.swift:16:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'e':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:17:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'i':\n   \
    \          ^~~\n             \"i\"\n/tmp/tmp5s2belos.swift:17:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'i':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:18:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'o':\n   \
    \          ^~~\n             \"o\"\n/tmp/tmp5s2belos.swift:18:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'o':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:19:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'u':\n   \
    \          ^~~\n             \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            count += 2\n        default:\n            break\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpf_j22i1v/tmpf_j22i1v.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abed9b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abed980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abed980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abed980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf_j22i1v                        0x0000555e5cb114bb <unavailable> + 5307

    5    libc.so.6                          0x00002abed9d01460 __libc_start_main +
    245

    6    tmpf_j22i1v                        0x0000555e5cb11099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for char in s {\n        switch\
    \ char {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n    \
    \    case \"o\":\n        case \"u\":\n            vowelCount += 1\n        default:\n\
    \            break\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpcd4yl4te.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpcd4yl4te.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpcd4yl4te.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpcd4yl4te.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\",\"e\",\"i\",\"o\",\"\
    u\"]\n    var vowel_count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            vowel_count += 1\n        }\n    }\n    return vowel_count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpi8d3ivey/tmpi8d3ivey.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b20e491ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b20e4615b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b20e4615988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20e46147b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi8d3ivey                        0x00005651472d764b <unavailable> + 5707

    5    libc.so.6                          0x00002b20e4b0a460 __libc_start_main +
    245

    6    tmpi8d3ivey                        0x00005651472d7229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for char in s {\n        switch\
    \ char {\n        case 'a':\n        case 'e':\n        case 'i':\n        case\
    \ 'o':\n        case 'u':\n            vowelCount += 1\n        default:\n   \
    \         break\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5s2belos.swift:15:14: error: single-quoted string literal found,\
    \ use '\"'\n        case 'a':\n             ^~~\n             \"a\"\n/tmp/tmp5s2belos.swift:15:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case 'a':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:16:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'e':\n   \
    \          ^~~\n             \"e\"\n/tmp/tmp5s2belos.swift:16:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'e':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:17:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'i':\n   \
    \          ^~~\n             \"i\"\n/tmp/tmp5s2belos.swift:17:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'i':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:18:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'o':\n   \
    \          ^~~\n             \"o\"\n/tmp/tmp5s2belos.swift:18:9: error: 'case'\
    \ label in a 'switch' must have at least one executable statement\n        case\
    \ 'o':\n        ^~~~~~~~~\n                  break\n/tmp/tmp5s2belos.swift:19:14:\
    \ error: single-quoted string literal found, use '\"'\n        case 'u':\n   \
    \          ^~~\n             \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpua86llmg/tmpua86llmg.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af09c573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af09c26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af09c26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af09c2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpua86llmg                        0x0000560243f0a4db <unavailable> + 5339

    5    libc.so.6                          0x00002af09c75f460 __libc_start_main +
    245

    6    tmpua86llmg                        0x0000560243f0a0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s.characters {\n        if vowels.contains(char) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpjrcbycml.swift:14:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in s.characters {\n                  ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s {\n        if vowels.contains(char) {\n            count += 1\n  \
    \      }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp77wsox25/tmp77wsox25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3c2e33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3c2b2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3c2b2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3c2b297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp77wsox25                        0x00005570078a8582 <unavailable> + 5506

    5    libc.so.6                          0x00002ab3c301f460 __libc_start_main +
    245

    6    tmp77wsox25                        0x00005570078a80b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        if letter\
    \ == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj5_jp679/tmpj5_jp679.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f01ed9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f01bd0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f01bd0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f01bcf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5_jp679                        0x0000564752b934bb <unavailable> + 5307

    5    libc.so.6                          0x00002b0f020c5460 __libc_start_main +
    245

    6    tmpj5_jp679                        0x0000564752b93099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advancedBy(1)] {\n                count += 1\n   \
    \         }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmptziyex8m.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmptziyex8m.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmptziyex8m.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmptziyex8m.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmptziyex8m.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n           \
    \ if c == s[s.startIndex.advancedBy(1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s {\n        if vowels.contains(char) {\n            count += 1\n  \
    \      }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp77wsox25/tmp77wsox25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3c2e33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3c2b2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3c2b2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3c2b297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp77wsox25                        0x00005570078a8582 <unavailable> + 5506

    5    libc.so.6                          0x00002ab3c301f460 __libc_start_main +
    245

    6    tmp77wsox25                        0x00005570078a80b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = []\n    for c in s {\n     \
    \   if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n          \
    \  vowels.append(c)\n        }\n    }\n    return vowels.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpnsr5lsw7.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpnsr5lsw7.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpnsr5lsw7.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpnsr5lsw7.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpnsr5lsw7.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if count == 0 {\n                count += 1\n \
    \           }\n        default:\n            break\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmpkeh_p1pm/tmpkeh_p1pm.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed53db5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed53aacb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed53aac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed53aab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkeh_p1pm                        0x000055a81748c4bb <unavailable> + 5307

    5    libc.so.6                          0x00002aed53fa1460 __libc_start_main +
    245

    6    tmpkeh_p1pm                        0x000055a81748c099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advancedBy(1)] {\n                count += 1\n   \
    \         }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmptziyex8m.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmptziyex8m.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmptziyex8m.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmptziyex8m.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmptziyex8m.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advancedBy'\n           \
    \ if c == s[s.startIndex.advancedBy(1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = \"aeiouAEIOU\"\n    var vowel_count = 0\n\
    \    for char in s {\n        if vowels.contains(char) {\n            vowel_count\
    \ += 1\n        }\n    }\n    return vowel_count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpnf2r3kr6/tmpnf2r3kr6.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aec97643c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aec9733ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aec9733a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aec973397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnf2r3kr6                        0x0000562be7364582 <unavailable> + 5506

    5    libc.so.6                          0x00002aec9782f460 __libc_start_main +
    245

    6    tmpnf2r3kr6                        0x0000562be73640b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for c in\
    \ s.characters {\n        if vowels.contains(c) {\n            count += 1\n  \
    \      }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpll9sruij.swift:14:16: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in s.characters {\n               ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpypj2f5cg.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s {\n        if vowels.contains(char) {\n            count += 1\n  \
    \      }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp77wsox25/tmp77wsox25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3c2e33c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3c2b2ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3c2b2a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3c2b297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp77wsox25                        0x00005570078a8582 <unavailable> + 5506

    5    libc.so.6                          0x00002ab3c301f460 __libc_start_main +
    245

    6    tmp77wsox25                        0x00005570078a80b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            if c == s[s.startIndex.advancedBy(1)] {\n        \
    \        count += 1\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp8kb38au1.swift:18:36: error: value of type 'String.Index' has no\
    \ member 'advancedBy'\n            if c == s[s.startIndex.advancedBy(1)] {\n \
    \                     ~~~~~~~~~~~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for char\
    \ in s.characters {\n        if vowels.contains(String(char)) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppugmy0t_.swift:14:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in s.characters {\n                  ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for c in\
    \ s {\n        if vowels.contains(c) {\n            count += 1\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpizfnu538/tmpizfnu538.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4ae4032c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4ae3d29b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4ae3d29988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4ae3d287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpizfnu538                        0x000055c9386d34db <unavailable> + 5339

    5    libc.so.6                          0x00002b4ae421e460 __libc_start_main +
    245

    6    tmpizfnu538                        0x000055c9386d30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659978564
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        if letter\
    \ == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj5_jp679/tmpj5_jp679.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f01ed9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f01bd0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f01bd0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f01bcf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5_jp679                        0x0000564752b934bb <unavailable> + 5307

    5    libc.so.6                          0x00002b0f020c5460 __libc_start_main +
    245

    6    tmpj5_jp679                        0x0000564752b93099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = \"\"\n    for c in s {\n        switch c\
    \ {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            vowels += c\n\
    \        default:\n            break\n        }\n    }\n    return vowels.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp20li4u2g.swift:16:23: error: cannot convert value of type 'Character'\
    \ to expected argument type 'String'\n            vowels += c\n              \
    \        ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        if\
    \ letter == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" ||\
    \ letter == \"u\" {\n            vowelCount += 1\n        }\n    }\n    return\
    \ vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj5s7xv44/tmpj5s7xv44.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b996f405c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b996f0fcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b996f0fc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b996f0fb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5s7xv44                        0x000055d6327564bb <unavailable> + 5307

    5    libc.so.6                          0x00002b996f5f1460 __libc_start_main +
    245

    6    tmpj5s7xv44                        0x000055d632756099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            if c == s[s.startIndex.advanced(by: -1)] {\n     \
    \           count += 1\n            }\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5eo5l8ts.swift:18:36: error: value of type 'String.Index' has no\
    \ member 'advanced'\n            if c == s[s.startIndex.advanced(by: -1)] {\n\
    \                      ~~~~~~~~~~~~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: 1)] {\n                count += 1\n \
    \           }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpr8x3s_dd.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpr8x3s_dd.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpr8x3s_dd.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpr8x3s_dd.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpr8x3s_dd.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: 1)] {\n                      ~~~~~~~~~~~~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if s.endIndex == s.startIndex {\n             \
    \   count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpdky_v4gf.swift:14:9: error: switch must be exhaustive\n       \
    \ switch c {\n        ^\n/tmp/tmpdky_v4gf.swift:14:9: note: do you want to add\
    \ a default clause?\n        switch c {\n        ^\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        if letter\
    \ == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" || letter\
    \ == \"u\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj5_jp679/tmpj5_jp679.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f01ed9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f01bd0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f01bd0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f01bcf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj5_jp679                        0x0000564752b934bb <unavailable> + 5307

    5    libc.so.6                          0x00002b0f020c5460 __libc_start_main +
    245

    6    tmpj5_jp679                        0x0000564752b93099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824566
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = \"aeiouAEIOU\"\n    var vowel_count = 0\n\
    \    for letter in s {\n        if letter in vowels {\n            vowel_count++\n\
    \        }\n    }\n    return vowel_count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpqutebq3a.swift:15:19: error: expected '{' after 'if' condition\n\
    \        if letter in vowels {\n                  ^\n/tmp/tmpqutebq3a.swift:15:12:\
    \ error: cannot convert value of type 'Character' to expected condition type 'Bool'\n\
    \        if letter in vowels {\n           ^~~~~~\n/tmp/tmpqutebq3a.swift:16:24:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  vowel_count++\n                       ^~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for c in s {\n        switch c\
    \ {\n        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            vowelCount +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return vowelCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpuv_c9g6k/tmpuv_c9g6k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0fc4c70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0fc4967b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0fc4967988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0fc49667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuv_c9g6k                        0x00005647798384bb <unavailable> + 5307

    5    libc.so.6                          0x00002b0fc4e5c460 __libc_start_main +
    245

    6    tmpuv_c9g6k                        0x0000564779838099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5u2o432i.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmp5u2o432i.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmp5u2o432i.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmp5u2o432i.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmp5u2o432i.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for c in s {\n        switch c\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            vowelCount += 1\n        default:\n\
    \            if c == s[s.startIndex.advanced(by: -1)] {\n                vowelCount\
    \ += 1\n            }\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpurn0xrle.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpurn0xrle.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpurn0xrle.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpurn0xrle.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpurn0xrle.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480

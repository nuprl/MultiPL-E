name: HumanEval_162_string_to_md5
language: swift
prompt: "\n/// Given a string 'text', return its md5 hash equivalent string.\n///\
  \ If 'text' is an empty string, return None.\n/// >>> string_to_md5(text: \"Hello\
  \ world\")\n/// \"3e25960a79dbc69b674cd4ec67a72c62\"\nfunc string_to_md5(text: String)\
  \ -> String? {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(string_to_md5(text: \"Hello world\") ==\
  \ \"3e25960a79dbc69b674cd4ec67a72c62\")\nassert(string_to_md5(text: \"\") == nil)\n\
  assert(string_to_md5(text: \"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\
  assert(string_to_md5(text: \"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
  )"
completions: ["    if text == \"\" {\n        return nil\n    }\n    let data = text.data(using:\
    \ String.Encoding.utf8)!\n    let hash = MD5.hash(data: data)\n    return String(data:\
    \ hash, encoding: String.Encoding.utf8)", "    let data = text.data(using: String.Encoding.utf8)\n\
    \    if let hash = data.md5() {\n        return String(data: hash, encoding: String.Encoding.utf8)\n\
    \    }\n    return nil", "    if text == \"\" {\n        return nil\n    }\n \
    \   let data = text.data(using: String.Encoding.utf8)!\n    let hash = MD5.hash(data:\
    \ data)\n    return String(data: hash, encoding: String.Encoding.utf8)", "   \
    \ if text == \"\" {\n        return nil\n    }\n    let data = text.data(using:\
    \ String.Encoding.utf8)!\n    let hash = MD5.hash(data: data)\n    return String(data:\
    \ hash, encoding: String.Encoding.utf8)", "    if text == \"\" {\n        return\
    \ nil\n    }\n    let data = text.data(using: String.Encoding.utf8)\n    let hash\
    \ = data.md5()\n    return hash.base64EncodedString()", "    guard text != \"\"\
    \ else {\n        return nil\n    }\n    let data = text.data(using: .utf8)!\n\
    \    let hash = MD5.hash(data: data)\n    return hash.hexString", "    if text\
    \ == \"\" {\n        return nil\n    }\n    let data = text.data(using: .utf8)!\n\
    \    let hash = MD5(data: data)\n    return hash.base64EncodedString()", "   \
    \ if text == \"\" {\n        return nil\n    }\n    let data = text.data(using:\
    \ .utf8)\n    if let hash = data.md5() {\n        return String(hash)\n    }\n\
    \    return nil", "    let data = text.data(using: .utf8)\n    if let hash = data.md5()\
    \ {\n        return String(hash)\n    }\n    return nil", "    if text == \"\"\
    \ {\n        return nil\n    }\n    let data = text.data(using: .utf8)\n    let\
    \ hash = MD5(data!)\n    return hash.hexString", "    let data = text.data(using:\
    \ .utf8)\n    if let hash = data.md5() {\n        return String(data: hash, encoding:\
    \ .utf8)\n    }\n    return nil", "    guard let data = text.data(using: .utf8)\
    \ else {\n        return nil\n    }\n    let hash = MD5(data: data)\n    return\
    \ hash.base64EncodedString()", "    if text == \"\" {\n        return nil\n  \
    \  }\n    let data = text.data(using: .utf8)\n    if let hash = data.md5() {\n\
    \        return String(hash)\n    }\n    return nil", "    if text == \"\" {\n\
    \        return nil\n    }\n    let data = text.data(using: .utf8)!\n    let hash\
    \ = MD5(data: data)\n    return hash.base64EncodedString()", "    if text == \"\
    \" {\n        return nil\n    }\n    let data = text.data(using: String.Encoding.utf8)!\n\
    \    let hash = MD5.hash(data: data)\n    return String(data: hash, encoding:\
    \ String.Encoding.utf8) ?? nil", "    if text == \"\" {\n        return nil\n\
    \    }\n    let data = text.data(using: String.Encoding.utf8)\n    return String(data:\
    \ data, encoding: String.Encoding.md5) as String?", "    if text == \"\" {\n \
    \       return nil\n    }\n    let data = text.data(using: String.Encoding.utf8)\n\
    \    let hash = data.md5()\n    return hash?.base64EncodedString()", "    if text\
    \ == \"\" {\n        return nil\n    }\n    let data = text.data(using: String.Encoding.utf8)!\n\
    \    let hash = MD5.hash(data: data)\n    return String(data: hash, encoding:\
    \ String.Encoding.utf8)", "    if text == \"\" {\n        return nil\n    }\n\
    \    let data = text.data(using: .utf8)\n    if let hash = data.md5() {\n    \
    \    return String(hash)\n    }\n    return nil", "    if text == \"\" {\n   \
    \     return nil\n    }\n    let data = text.data(using: .utf8)\n    if let hash\
    \ = data.md5() {\n        return String(hash)\n    }\n    return nil"]
stop_tokens:
- "\n}"

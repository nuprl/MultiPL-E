name: HumanEval_78_hex_key
language: swift
prompt: "\n/// You have been tasked to write a function that receives \n/// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n/// digits that are\
  \ primes (prime number, or a prime, is a natural number \n/// greater than 1 that\
  \ is not a product of two smaller natural numbers).\n/// Hexadecimal digits are\
  \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n/// Prime numbers are 2, 3, 5,\
  \ 7, 11, 13, 17,...\n/// So you have to determine a number of the following digits:\
  \ 2, 3, 5, 7, \n/// B (=decimal 11), D (=decimal 13).\n/// Note: you may assume\
  \ the input is always correct or empty string, \n/// and symbols A,B,C,D,E,F are\
  \ always uppercase.\n/// Examples:\n/// >>> hex_key(num: \"AB\")\n/// 1\n/// >>>\
  \ hex_key(num: \"1077E\")\n/// 2\n/// >>> hex_key(num: \"ABED1A33\")\n/// 4\n///\
  \ >>> hex_key(num: \"123456789ABCDEF0\")\n/// 6\n/// >>> hex_key(num: \"2020\")\n\
  /// 2\nfunc hex_key(num: String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(hex_key(num: \"AB\") == 1)\nassert(hex_key(num:\
  \ \"1077E\") == 2)\nassert(hex_key(num: \"ABED1A33\") == 4)\nassert(hex_key(num:\
  \ \"2020\") == 2)\nassert(hex_key(num: \"123456789ABCDEF0\") == 6)\nassert(hex_key(num:\
  \ \"112233445566778899AABBCCDDEEFF00\") == 12)"
completions: ["    var count = 0\n    for char in num {\n        switch char {\n \
    \       case \"A\":\n        case \"B\":\n        case \"C\":\n        case \"\
    D\":\n        case \"E\":\n        case \"F\":\n            count += 1\n     \
    \   default:\n            break\n        }\n    }\n    return count", "    let\
    \ digits = num.characters\n    let len = digits.count\n    var count = 0\n   \
    \ var prime: Int = 0\n    var prime2: Int = 0\n    var prime3: Int = 0\n    var\
    \ prime4: Int = 0\n    var prime5: Int = 0\n    var prime6: Int = 0\n    var prime7:\
    \ Int = 0\n    var prime8: Int = 0\n    var prime9: Int = 0\n    var prime10:\
    \ Int = 0\n    var prime11: Int = 0\n    var prime12: Int = 0\n    var prime13:\
    \ Int = 0\n    var prime14: Int = 0\n    var prime15: Int = 0\n    var prime16:\
    \ Int = 0\n    var prime17: Int = 0\n    var prime18: Int = 0\n    var prime19:\
    \ Int = 0\n    var prime20: Int = 0\n    var prime21: Int = 0\n    var prime22:\
    \ Int = 0\n    var prime23: Int = 0\n    var prime24: Int = 0\n    var prime25:\
    \ Int = 0\n    var prime26: Int = 0\n    var prime27: Int = 0\n    var prime28:\
    \ Int = 0\n    var prime29: Int = 0\n    var prime30: Int = 0\n    var prime31:\
    \ Int = 0\n    var prime32: Int = 0\n    var prime33: Int = 0\n    var prime34:\
    \ Int = 0\n    var prime35: Int = 0\n    var prime36: Int = 0\n    var prime37:\
    \ Int = 0\n    var prime38: Int = 0\n    var prime39: Int = 0\n    var prime40:\
    \ Int = 0\n    var prime41: Int = 0\n    var prime42: Int = 0\n    var prime43:\
    \ Int = 0\n    var prime44: Int = 0\n    var prime45: Int = 0\n    var prime46:\
    \ Int = 0\n    var prime47: Int = 0\n    var prime48: Int = 0\n    var prime49:\
    \ Int = 0\n    var prime50: Int = 0\n    var prime51: Int = 0\n    var prime52:\
    \ Int = 0\n    var prime53: Int = 0\n    var prime54: Int = 0\n    var prime55:\
    \ Int = 0\n    var prime56: Int = 0\n    var prime57: Int = 0\n    var prime58:\
    \ Int = 0\n    var prime59: Int = 0\n    var prime60: Int = 0\n    var prime61:\
    \ Int = 0\n    var prime62: Int = 0\n    var prime63: Int = 0\n    var prime64:\
    \ Int = 0\n    var prime65: Int = 0\n    var prime66: Int = 0\n    var prime67:\
    \ Int = 0\n    var prime68: Int = 0\n    var prime69: Int = 0\n    var prime70:\
    \ Int = 0\n    var prime71: Int = 0\n    var prime72: Int", "    var hexDigits:\
    \ [String] = []\n    var hexNum: Int = 0\n    var hexDigit: Int = 0\n    var isPrime:\
    \ Bool = false\n    var isPrime2: Bool = false\n    var isPrime3: Bool = false\n\
    \    var isPrime4: Bool = false\n    var isPrime5: Bool = false\n    var isPrime6:\
    \ Bool = false\n    var isPrime7: Bool = false\n    var isPrime8: Bool = false\n\
    \    var isPrime9: Bool = false\n    var isPrime10: Bool = false\n    var isPrime11:\
    \ Bool = false\n    var isPrime12: Bool = false\n    var isPrime13: Bool = false\n\
    \    var isPrime14: Bool = false\n    var isPrime15: Bool = false\n    var isPrime16:\
    \ Bool = false\n    var isPrime17: Bool = false\n    var isPrime18: Bool = false\n\
    \    var isPrime19: Bool = false\n    var isPrime20: Bool = false\n    var isPrime21:\
    \ Bool = false\n    var isPrime22: Bool = false\n    var isPrime23: Bool = false\n\
    \    var isPrime24: Bool = false\n    var isPrime25: Bool = false\n    var isPrime26:\
    \ Bool = false\n    var isPrime27: Bool = false\n    var isPrime28: Bool = false\n\
    \    var isPrime29: Bool = false\n    var isPrime30: Bool = false\n    var isPrime31:\
    \ Bool = false\n    var isPrime32: Bool = false\n    var isPrime33: Bool = false\n\
    \    var isPrime34: Bool = false\n    var isPrime35: Bool = false\n    var isPrime36:\
    \ Bool = false\n    var isPrime37: Bool = false\n    var isPrime38: Bool = false\n\
    \    var isPrime39: Bool = false\n    var isPrime40: Bool = false\n    var isPrime41:\
    \ Bool = false\n    var isPrime42: Bool = false\n    var isPrime43: Bool = false\n\
    \    var isPrime44: Bool = false\n    var isPrime45: Bool = false\n    var isPrime46:\
    \ Bool = false\n    var isPrime47: Bool = false\n    var isPrime48: Bool = false\n\
    \    var isPrime49: Bool = false\n    var isPrime50: Bool = false\n    var isPrime51:\
    \ Bool = false\n    var isPrime52: Bool = false\n    var isPrime53: Bool = false\n\
    \    var isPrime54: Bool = false\n    var isPrime55: Bool = false\n    var ",
  "    var result = 0\n    var digits = num.characters\n    var index = 0\n    while\
    \ index < digits.count {\n        let digit = digits[index]\n        switch digit\
    \ {\n        case \"0\":\n            result += 0\n        case \"1\":\n     \
    \       result += 1\n        case \"2\":\n            result += 2\n        case\
    \ \"3\":\n            result += 3\n        case \"4\":\n            result +=\
    \ 4\n        case \"5\":\n            result += 5\n        case \"6\":\n     \
    \       result += 6\n        case \"7\":\n            result += 7\n        case\
    \ \"8\":\n            result += 8\n        case \"9\":\n            result +=\
    \ 9\n        case \"A\":\n            result += 10\n        case \"B\":\n    \
    \        result += 11\n        case \"C\":\n            result += 12\n       \
    \ case \"D\":\n            result += 13\n        case \"E\":\n            result\
    \ += 14\n        case \"F\":\n            result += 15\n        default:\n   \
    \         result += 0\n        }\n        index++\n    }\n    return result",
  "    var hex = num.characters.map { String($0, radix: 16) }\n    var primes = hex.filter\
    \ { $0.isPrime }\n    return primes.count", "    // Your code here\n    \n   \
    \ return 0", "    var nums: [Int] = []\n    for char in num.unicodeScalars {\n\
    \        if char.value > 0xFF {\n            return -1\n        }\n        nums.append(Int(char.value))\n\
    \    }\n    var result = 0\n    for num in nums {\n        if num == 2 {\n   \
    \         result += 1\n        }\n        if num == 3 {\n            result +=\
    \ 1\n        }\n        if num == 5 {\n            result += 1\n        }\n  \
    \      if num == 7 {\n            result += 1\n        }\n        if num == 11\
    \ {\n            result += 1\n        }\n        if num == 13 {\n            result\
    \ += 1\n        }\n    }\n    return result", "    let hex = num.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics.inverted)\n    let hexDigits = hex.unicodeScalars.map\
    \ { String($0) }\n    let hexDigitCount = hexDigits.count\n    let hexDigitPrimes\
    \ = hexDigits.filter { isPrime(hexDigit: $0) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    return hexDigitPrimeCount + hexDigitCount", "    var nums = num.characters\n\
    \    var count = 0\n    for index in 0..<nums.count {\n        let hex = nums[index]\
    \ as String\n        if hex.lowercased() == \"a\" {\n            count += 1\n\
    \        } else if hex.lowercased() == \"b\" {\n            count += 1\n     \
    \   } else if hex.lowercased() == \"c\" {\n            count += 1\n        } else\
    \ if hex.lowercased() == \"d\" {\n            count += 1\n        } else if hex.lowercased()\
    \ == \"e\" {\n            count += 1\n        } else if hex.lowercased() == \"\
    f\" {\n            count += 1\n        }\n    }\n    return count", "    var result\
    \ = 0\n    var i = 0\n    var isPrime = true\n    for char in num {\n        switch\
    \ char {\n        case \"A\":\n        case \"B\":\n        case \"C\":\n    \
    \    case \"D\":\n        case \"E\":\n        case \"F\":\n            isPrime\
    \ = false\n        default:\n            break\n        }\n        if isPrime\
    \ {\n            result += 1\n        }\n    }\n    return result", "    var nums\
    \ = num.characters\n    var numsCount = nums.count\n    var hexNumsCount = 0\n\
    \    var hexNumsPrimeCount = 0\n    var hexNumsPrimePrimeCount = 0\n    var hexNumsPrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimeCount = 0\n    var hexNumsPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimeCount = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var hexNumsPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime",
  "    var count = 0\n    var digits = \"\"\n    for c in num {\n        digits =\
    \ digits + String(c)\n    }\n    for c in digits {\n        if c >= '0' && c <=\
    \ '9' {\n            count = count + 1\n        }\n    }\n    if count >= 2 {\n\
    \        return count\n    }\n    if count >= 3 {\n        return count + 1\n\
    \    }\n    if count >= 5 {\n        return count + 2\n    }\n    if count >=\
    \ 7 {\n        return count + 3\n    }\n    if count >= 11 {\n        return count\
    \ + 4\n    }\n    if count >= 13 {\n        return count + 5\n    }\n    if count\
    \ >= 17 {\n        return count + 6\n    }\n    if count >= 19 {\n        return\
    \ count + 7\n    }\n    if count >= 21 {\n        return count + 8\n    }\n  \
    \  if count >= 23 {\n        return count + 9\n    }\n    if count >= 29 {\n \
    \       return count + 10\n    }\n    if count >= 31 {\n        return count +\
    \ 11\n    }\n    if count >= 33 {\n        return count + 12\n    }\n    if count\
    \ >= 37 {\n        return count + 13\n    }\n    if count >= 41 {\n        return\
    \ count + 14\n    }\n    if count >= 43 {\n        return count + 15\n    }\n\
    \    if count >= 47 {\n        return count + 16\n    }\n    if count >= 51 {\n\
    \        return count + 17\n    }\n    if count >= 55 {\n        return count\
    \ + 18\n    }\n    if count >= 59 {\n        return count + 19\n    }\n    if\
    \ count >= 63 {\n        return count + 20\n    }\n    if count >= 67 {\n    \
    \    return count + 21\n    }\n    if count >= 71 {\n        return count + 22\n\
    \    }\n    if count >= 73 {\n        return count + 23\n    }\n    if count >=\
    \ 79 {\n        return count + 24\n    }\n    if count >= 83 {\n        return\
    \ count + 25\n    }\n    if count >= 89 {\n        return count + 26\n    }\n\
    \    if count >= 97 {\n        return count + 27\n    }\n    if count >= 101 {\n\
    \        return count + 28\n    }\n    if count >= 103 {\n        return count\
    \ + 29\n    }\n    if count >= 107 {\n        return count + 30\n    }\n    if\
    \ count >= 109 {\n        return count + 31\n    }\n    if count >= 113 {\n  \
    \      return count + 32\n    }\n    if count >= 117 {\n        return count +\
    \ 33\n    }\n    if count >= 121 {\n        return count + 34\n    }\n    if count\
    \ >= 123 {\n        return count + 35\n    }", "    var result = 0\n    var digits\
    \ = num.characters\n    var digit = digits[0]\n    var prime = primes[digit]\n\
    \    if prime == nil {\n        return -1\n    }\n    for digit in digits {\n\
    \        result += primes[digit]\n    }\n    return result", "    let digits =\
    \ num.characters\n    var count = 0\n    var prime = 1\n    for digit in digits\
    \ {\n        if digit == \"A\" {\n            prime = 2\n        } else if digit\
    \ == \"B\" {\n            prime = 3\n        } else if digit == \"C\" {\n    \
    \        prime = 5\n        } else if digit == \"D\" {\n            prime = 7\n\
    \        } else if digit == \"E\" {\n            prime = 11\n        } else if\
    \ digit == \"F\" {\n            prime = 13\n        } else {\n            prime\
    \ = digit - 48\n        }\n        if prime > 1 {\n            count += prime\
    \ - 1\n        }\n    }\n    return count", "    var hex = num\n    var count\
    \ = 0\n    for char in hex {\n        if char >= '0' && char <= '9' {\n      \
    \      count = count + 1\n        }\n    }\n    if count % 2 == 0 {\n        return\
    \ count\n    }\n    var hex2 = hex\n    var hex3 = hex\n    var hex4 = hex\n \
    \   var hex5 = hex\n    var hex6 = hex\n    var hex7 = hex\n    var hex8 = hex\n\
    \    var hex9 = hex\n    var hex10 = hex\n    var hex11 = hex\n    var hex12 =\
    \ hex\n    var hex13 = hex\n    var hex14 = hex\n    var hex15 = hex\n    var\
    \ hex16 = hex\n    var hex17 = hex\n    var hex18 = hex\n    var hex19 = hex\n\
    \    var hex20 = hex\n    var hex21 = hex\n    var hex22 = hex\n    var hex23\
    \ = hex\n    var hex24 = hex\n    var hex25 = hex\n    var hex26 = hex\n    var\
    \ hex27 = hex\n    var hex28 = hex\n    var hex29 = hex\n    var hex30 = hex\n\
    \    var hex31 = hex\n    var hex32 = hex\n    var hex33 = hex\n    var hex34\
    \ = hex\n    var hex35 = hex\n    var hex36 = hex\n    var hex37 = hex\n    var\
    \ hex38 = hex\n    var hex39 = hex\n    var hex40 = hex\n    var hex41 = hex\n\
    \    var hex42 = hex\n    var hex43 = hex\n    var hex44 = hex\n    var hex45\
    \ = hex\n    var hex46 = hex\n    var hex47 = hex\n    var hex48 = hex\n    var\
    \ hex49 = hex\n    var hex50 = hex\n    var hex51 = hex\n    var hex52 = hex\n\
    \    var hex53 = hex\n    var hex54 = hex\n    var hex55 = hex\n    var hex56\
    \ = hex\n    var hex57 = hex\n    var hex58 = hex\n    var hex59 = hex\n    var\
    \ hex60 = hex\n    var hex61 = hex\n    var hex62 = hex\n    var hex63 = hex\n\
    \    var hex64 = hex\n    var hex65 = hex\n    var hex66 = hex\n    var hex67\
    \ = hex\n    var hex68 = hex\n    var hex69 = hex\n    var hex70 = hex\n    var\
    \ hex71 = hex\n    var hex72 = hex\n    var hex73 = hex\n    var hex74 = hex\n\
    \    var hex75 = hex\n    var hex76 = hex\n    var hex77 = hex\n    var hex78\
    \ = hex\n    var hex79 = hex\n    var hex80 = hex\n    var hex8", "    var count\
    \ = 0\n    for char in num {\n        switch char {\n        case \"A\":\n   \
    \     case \"B\":\n        case \"C\":\n        case \"D\":\n        case \"E\"\
    :\n        case \"F\":\n            count += 1\n        default:\n           \
    \ break\n        }\n    }\n    return count", "    var count = 0\n    var digits\
    \ = num.characters\n    for digit in digits {\n        if digit == \"A\" || digit\
    \ == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"E\" || digit == \"\
    F\" {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in num {\n        if c >= '0' && c <= '9' {\n            count\
    \ = count * 16 + c - '0'\n        } else if c == 'A' || c == 'B' || c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' {\n            count = count * 16 + 10 + c\
    \ - 'A'\n        } else {\n            return -1\n        }\n    }\n    return\
    \ count", "    var sum = 0\n    for char in num {\n        sum += Int(char) -\
    \ 48\n    }\n    return sum", "    var hex = num.unicodeScalars\n    var count\
    \ = 0\n    for hex in hex {\n        switch hex {\n        case 0x30, 0x31, 0x32,\
    \ 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41:\n        case 0x42, 0x43, 0x44,\
    \ 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C:\n        case 0x4D, 0x4E, 0x4F,\
    \ 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57:\n        case 0x58, 0x59, 0x5A,\
    \ 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69:\n        case 0x6A, 0x6B,\
    \ 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75:\n        case 0x76,\
    \ 0x77, 0x78, 0x79, 0x7A, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36:\n        case\
    \ 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49:\n  \
    \      case 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54,\
    \ 0x55:\n        case 0x56, 0x57, 0x58, 0x59, 0x5A, 0x61, 0x62, 0x63, 0x64, 0x65,\
    \ 0x66, 0x67:\n        case 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70,\
    \ 0x71, 0x72, 0x73:\n        case 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x30,\
    \ 0x31, 0x32, 0x33, 0x34:\n        case 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42,\
    \ 0x43, 0x44, 0x45, 0x46, 0x47:\n        case 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D,\
    \ 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53:\n        case 0x54, 0x55, 0x56, 0x57, 0x58,\
    \ 0x59, 0x5A, 0x61, 0x62, 0x63, 0x64, 0x65:\n        case 0x66, 0x67, 0x68, 0x69,\
    \ 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71:\n        case 0x72, 0x73, 0x74,\
    \ 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x30, 0x31, 0x32:\n        case 0x33, 0x34,\
    \ 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45:\n", "    var nums\
    \ = num.characters\n    var result = 0\n    for char in nums {\n        switch\
    \ char {\n        case \"A\":\n        case \"B\":\n        case \"C\":\n    \
    \    case \"D\":\n        case \"E\":\n        case \"F\":\n            result\
    \ += 1\n        default:\n            break\n        }\n    }\n    return result",
  "    var nums = num.characters\n    var hexNum = nums.map { String($0) }\n    var\
    \ hexNums = hexNum.map { String($0) }\n    var hexNumsCount = hexNums.count\n\
    \    var hexNumsCount2 = hexNumsCount * hexNumsCount\n    var hexNumsCount3 =\
    \ hexNumsCount2 * hexNumsCount\n    var hexNumsCount4 = hexNumsCount3 * hexNumsCount\n\
    \    var hexNumsCount5 = hexNumsCount4 * hexNumsCount\n    var hexNumsCount6 =\
    \ hexNumsCount5 * hexNumsCount\n    var hexNumsCount7 = hexNumsCount6 * hexNumsCount\n\
    \    var hexNumsCount8 = hexNumsCount7 * hexNumsCount\n    var hexNumsCount9 =\
    \ hexNumsCount8 * hexNumsCount\n    var hexNumsCount10 = hexNumsCount9 * hexNumsCount\n\
    \    var hexNumsCount11 = hexNumsCount10 * hexNumsCount\n    var hexNumsCount12\
    \ = hexNumsCount11 * hexNumsCount\n    var hexNumsCount13 = hexNumsCount12 * hexNumsCount\n\
    \    var hexNumsCount14 = hexNumsCount13 * hexNumsCount\n    var hexNumsCount15\
    \ = hexNumsCount14 * hexNumsCount\n    var hexNumsCount16 = hexNumsCount15 * hexNumsCount\n\
    \    var hexNumsCount17 = hexNumsCount16 * hexNumsCount\n    var hexNumsCount18\
    \ = hexNumsCount17 * hexNumsCount\n    var hexNumsCount19 = hexNumsCount18 * hexNumsCount\n\
    \    var hexNumsCount20 = hexNumsCount19 * hexNumsCount\n    var hexNumsCount21\
    \ = hexNumsCount20 * hexNumsCount\n    var hexNumsCount22 = hexNumsCount21 * hexNumsCount\n\
    \    var hexNumsCount23 = hexNumsCount22 * hexNumsCount\n    var hexNumsCount24\
    \ = hexNumsCount23 * hexNumsCount\n    var hexNumsCount25 = hexNumsCount24 * hexNumsCount\n\
    \    var hexNumsCount26 = hexNumsCount25 * hexNumsCount\n    var hexNumsCount27\
    \ = hexNumsCount26 * hexNumsCount\n    var hexNumsCount28 = hexNumsCount27 * hexNumsCount\n",
  "    var nums = [Int]()\n    var count = 0\n    for c in num.unicodeScalars {\n\
    \        if c.value > 0xFF {\n            return -1\n        }\n        nums.append(c.value)\n\
    \    }\n    for num in nums {\n        if num == 0xB {\n            count += 1\n\
    \        } else if num == 0xD {\n            count += 1\n        }\n    }\n  \
    \  return count", "    var nums = num.characters\n    var hexNum = nums.map {\
    \ Int($0) }\n    var hexNums = hexNum.map { String($0) }\n    var hexNumsCount\
    \ = hexNums.count\n    var hexNumsCount2 = hexNumsCount * hexNumsCount\n    var\
    \ hexNumsCount3 = hexNumsCount2 * hexNumsCount\n    var hexNumsCount4 = hexNumsCount3\
    \ * hexNumsCount\n    var hexNumsCount5 = hexNumsCount4 * hexNumsCount\n    var\
    \ hexNumsCount6 = hexNumsCount5 * hexNumsCount\n    var hexNumsCount7 = hexNumsCount6\
    \ * hexNumsCount\n    var hexNumsCount8 = hexNumsCount7 * hexNumsCount\n    var\
    \ hexNumsCount9 = hexNumsCount8 * hexNumsCount\n    var hexNumsCount10 = hexNumsCount9\
    \ * hexNumsCount\n    var hexNumsCount11 = hexNumsCount10 * hexNumsCount\n   \
    \ var hexNumsCount12 = hexNumsCount11 * hexNumsCount\n    var hexNumsCount13 =\
    \ hexNumsCount12 * hexNumsCount\n    var hexNumsCount14 = hexNumsCount13 * hexNumsCount\n\
    \    var hexNumsCount15 = hexNumsCount14 * hexNumsCount\n    var hexNumsCount16\
    \ = hexNumsCount15 * hexNumsCount\n    var hexNumsCount17 = hexNumsCount16 * hexNumsCount\n\
    \    var hexNumsCount18 = hexNumsCount17 * hexNumsCount\n    var hexNumsCount19\
    \ = hexNumsCount18 * hexNumsCount\n    var hexNumsCount20 = hexNumsCount19 * hexNumsCount\n\
    \    var hexNumsCount21 = hexNumsCount20 * hexNumsCount\n    var hexNumsCount22\
    \ = hexNumsCount21 * hexNumsCount\n    var hexNumsCount23 = hexNumsCount22 * hexNumsCount\n\
    \    var hexNumsCount24 = hexNumsCount23 * hexNumsCount\n    var hexNumsCount25\
    \ = hexNumsCount24 * hexNumsCount\n    var hexNumsCount26 = hexNumsCount25 * hexNumsCount\n\
    \    var hexNumsCount27 = hexNumsCount26 * hexNumsCount\n    var hexNumsCount28\
    \ = hexNumsCount27 * hexNumsCount\n", "    var nums = num.characters\n    var\
    \ count = 0\n    for char in nums {\n        let hex = Int(char) ?? 0\n      \
    \  if hex == 0 || hex > 9 {\n            continue\n        }\n        if hex ==\
    \ hex_key(hex: hex) {\n            count += 1\n        }\n    }\n    return count",
  "    \n    // Your code here\n    \n    return 0", "    var nums = num.characters\n\
    \    var count = 0\n    var primes = Set<Int>()\n    var prime = Int(2)\n    var\
    \ isPrime = true\n    for char in nums {\n        if char == \"A\" {\n       \
    \     prime = Int(11)\n        } else if char == \"B\" {\n            prime =\
    \ Int(13)\n        } else if char == \"C\" {\n            prime = Int(17)\n  \
    \      } else if char == \"D\" {\n            prime = Int(19)\n        } else\
    \ if char == \"E\" {\n            prime = Int(23)\n        } else if char == \"\
    F\" {\n            prime = Int(29)\n        } else {\n            prime = Int(Int(char)\
    \ - Int(Int(char.unicodeScalars.first!.value - 65)))\n        }\n        if prime\
    \ > 1 {\n            primes.insert(Int(prime))\n        }\n    }\n    for prime\
    \ in primes {\n        if nums.contains(String(prime)) {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    guard let num = num.lowercased()\
    \ else {\n        return 0\n    }\n    var count = 0\n    var prime: Int = 0\n\
    \    var prime2: Int = 0\n    var prime3: Int = 0\n    var prime4: Int = 0\n \
    \   var prime5: Int = 0\n    var prime6: Int = 0\n    var prime7: Int = 0\n  \
    \  var prime8: Int = 0\n    var prime9: Int = 0\n    var prime10: Int = 0\n  \
    \  var prime11: Int = 0\n    var prime12: Int = 0\n    var prime13: Int = 0\n\
    \    var prime14: Int = 0\n    var prime15: Int = 0\n    var prime16: Int = 0\n\
    \    var prime17: Int = 0\n    var prime18: Int = 0\n    var prime19: Int = 0\n\
    \    var prime20: Int = 0\n    var prime21: Int = 0\n    var prime22: Int = 0\n\
    \    var prime23: Int = 0\n    var prime24: Int = 0\n    var prime25: Int = 0\n\
    \    var prime26: Int = 0\n    var prime27: Int = 0\n    var prime28: Int = 0\n\
    \    var prime29: Int = 0\n    var prime30: Int = 0\n    var prime31: Int = 0\n\
    \    var prime32: Int = 0\n    var prime33: Int = 0\n    var prime34: Int = 0\n\
    \    var prime35: Int = 0\n    var prime36: Int = 0\n    var prime37: Int = 0\n\
    \    var prime38: Int = 0\n    var prime39: Int = 0\n    var prime40: Int = 0\n\
    \    var prime41: Int = 0\n    var prime42: Int = 0\n    var prime43: Int = 0\n\
    \    var prime44: Int = 0\n    var prime45: Int = 0\n    var prime46: Int = 0\n\
    \    var prime47: Int = 0\n    var prime48: Int = 0\n    var prime49: Int = 0\n\
    \    var prime50: Int = 0\n    var prime51: Int = 0\n    var prime52: Int = 0\n\
    \    var prime53: Int = 0\n    var prime54: Int = 0\n    var prime55: Int = 0\n\
    \    var prime56: Int = 0\n    var prime57: Int = 0\n    var prime58: Int = 0\n\
    \    var prime59: Int = 0\n    var prime60: Int = 0\n    var prime61: Int = 0\n\
    \    var prime62: Int = 0\n    var prime63: Int = 0\n    var prime64: Int = 0\n\
    \    var prime65: Int = 0\n    var prime66: Int = 0\n    var prime67: Int = 0\n\
    \    var prime68: Int = 0\n    var prime69: Int = 0\n    var prime70: Int = 0\n\
    \    var prime71: Int = 0\n    var prime", "    var nums: [Int] = []\n    var\
    \ numStr = \"\"\n    for c in num {\n        if c.isUpper() {\n            numStr\
    \ += c.lowercased()\n        } else {\n            numStr += c\n        }\n  \
    \  }\n    for c in numStr {\n        if c.isDigit() {\n            nums.append(Int(c))\n\
    \        }\n    }\n    var prime: Int = 0\n    var primes: [Int] = []\n    for\
    \ c in nums {\n        if c % 2 == 0 {\n            primes.append(c)\n       \
    \ }\n    }\n    for p in primes {\n        if p > 1 {\n            for c in nums\
    \ {\n                if c % p == 0 {\n                    primes.append(p)\n \
    \                   break\n                }\n            }\n        }\n    }\n\
    \    return primes.count", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime($0) }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitCount < hexDigitPrimeCount\
    \ {\n        return 0\n    }\n    return hexDigitPrimes.count", "    var hexDigits:\
    \ [Int] = []\n    var numDigits = num.characters.count\n    for i in 0..<numDigits\
    \ {\n        let digit = Int(num.characters[i])\n        if digit < 48 || digit\
    \ > 57 {\n            return -1\n        }\n        hexDigits.append(digit)\n\
    \    }\n    var hexKey = 0\n    for i in 0..<hexDigits.count {\n        let digit\
    \ = hexDigits[i]\n        if digit == 0 {\n            continue\n        }\n \
    \       if digit == 1 {\n            hexKey += 2\n            continue\n     \
    \   }\n        if digit == 2 {\n            hexKey += 3\n            continue\n\
    \        }\n        if digit == 3 {\n            hexKey += 5\n            continue\n\
    \        }\n        if digit == 4 {\n            hexKey += 7\n            continue\n\
    \        }\n        if digit == 5 {\n            hexKey += 11\n            continue\n\
    \        }\n        if digit == 6 {\n            hexKey += 13\n            continue\n\
    \        }\n        if digit == 7 {\n            hexKey += 17\n            continue\n\
    \        }\n        if digit == 8 {\n            hexKey += 19\n            continue\n\
    \        }\n        if digit == 9 {\n            hexKey += 23\n            continue\n\
    \        }\n        if digit == 10 {\n            hexKey += 29\n            continue\n\
    \        }\n        if digit == 11 {\n            hexKey += 31\n            continue\n\
    \        }\n        if digit == 12 {\n            hexKey += 37\n            continue\n\
    \        }\n        if digit == 13 {\n            hexKey += 41\n            continue\n\
    \        }\n        if digit == 14 {\n            hexKey += 43\n            continue\n\
    \        }\n        if digit == 15 {\n            hexKey += 47\n            continue\n\
    \        }\n        if digit == 16 {\n            hexKey += 53\n            continue\n\
    \        }\n        if digit == 17 {\n            hexKey += 59\n            continue\n\
    \        }\n        if digit == 18 {\n            hexKey += 61\n            continue\n\
    \        }\n        if digit == 19 {\n            hexKey += 67\n            continue\n\
    \        }\n        if digit == 20 {\n            hexKey += 71\n            continue\n\
    \        }\n        if digit == 21 {\n            hexKey += 73\n            continue\n\
    \        }\n        if digit == 22 {\n            hexKey += 79\n            continue\n\
    \        }\n        if digit == 23 {\n            hexKey += 83\n            continue\n\
    \        }\n        if digit == 24 {\n            hexKey += 89\n            continue\n\
    \        }\n        if digit == 25 {\n            hexKey += 97\n            continue\n\
    \        }\n        if digit == 26 {\n            hexKey += 101\n            continue\n\
    \        }\n        if digit == 27 {\n            hexKey += 103", "    var hex\
    \ = num.characters.map { String($0) }\n    var hexDigits: [String] = []\n    var\
    \ primeCount = 0\n    var prime: Int = 0\n    var primes: [Int] = []\n    var\
    \ primesCount = 0\n    var primesSum = 0\n    var primesSum2 = 0\n    var primesSum3\
    \ = 0\n    var primesSum4 = 0\n    var primesSum5 = 0\n    var primesSum6 = 0\n\
    \    var primesSum7 = 0\n    var primesSum8 = 0\n    var primesSum9 = 0\n    var\
    \ primesSum10 = 0\n    var primesSum11 = 0\n    var primesSum12 = 0\n    var primesSum13\
    \ = 0\n    var primesSum14 = 0\n    var primesSum15 = 0\n    var primesSum16 =\
    \ 0\n    var primesSum17 = 0\n    var primesSum18 = 0\n    var primesSum19 = 0\n\
    \    var primesSum20 = 0\n    var primesSum21 = 0\n    var primesSum22 = 0\n \
    \   var primesSum23 = 0\n    var primesSum24 = 0\n    var primesSum25 = 0\n  \
    \  var primesSum26 = 0\n    var primesSum27 = 0\n    var primesSum28 = 0\n   \
    \ var primesSum29 = 0\n    var primesSum30 = 0\n    var primesSum31 = 0\n    var\
    \ primesSum32 = 0\n    var primesSum33 = 0\n    var primesSum34 = 0\n    var primesSum35\
    \ = 0\n    var primesSum36 = 0\n    var primesSum37 = 0\n    var primesSum38 =\
    \ 0\n    var primesSum39 = 0\n    var primesSum40 = 0\n    var primesSum41 = 0\n\
    \    var primesSum42 = 0\n    var primesSum43 = 0\n    var primesSum44 = 0\n \
    \   var primesSum45 = 0\n    var primesSum46 = 0\n    var primesSum47 = 0\n  \
    \  var primesSum48 = 0\n    var primesSum49 = 0\n    var primesSum50 = 0\n   \
    \ var primesSum51 = 0\n    var primesSum52 = 0\n    var primesSum53 = 0\n    var\
    \ primesSum54 = 0\n    var primesSum55 = 0\n    var primesSum56 = 0\n    var primesSum57\
    \ = 0\n    var primesSum58 = 0\n    var primesSum59 = 0\n    var primesSum60 =\
    \ 0\n    var primesSum61 = 0\n    var primesSum62 = 0\n    var primesSum63 = 0\n\
    \    var primesSum64 = 0\n    var primesSum65 = 0\n    var primesSum66 = 0\n \
    \   var primesSum67 = 0\n    var ", "    var result = 0\n    var digits = num.characters\n\
    \    var i = 0\n    for _ in 0..<num.characters.count {\n        if digits[i]\
    \ == \"A\" {\n            result += 2\n        } else if digits[i] == \"B\" {\n\
    \            result += 3\n        } else if digits[i] == \"C\" {\n           \
    \ result += 5\n        } else if digits[i] == \"D\" {\n            result += 7\n\
    \        } else if digits[i] == \"E\" {\n            result += 11\n        } else\
    \ if digits[i] == \"F\" {\n            result += 13\n        } else {\n      \
    \      result += digits[i] - 48\n        }\n        i += 1\n    }\n    return\
    \ result", "    var result = 0\n    var digits = num.characters\n    for i in\
    \ 0..<digits.count {\n        let digit = digits[i]\n        if digit == \"A\"\
    \ || digit == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"E\" || digit\
    \ == \"F\" {\n            result += 1\n        }\n    }\n    return result", " \
    \   var count = 0\n    for c in num {\n        switch c {\n        case \"A\"\
    :\n        case \"B\":\n        case \"C\":\n        case \"D\":\n        case\
    \ \"E\":\n        case \"F\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count", "    var count = 0\n    var\
    \ digits = num.characters\n    for digit in digits {\n        if digit == \"A\"\
    \ {\n            count += 1\n        } else if digit == \"B\" {\n            count\
    \ += 1\n        } else if digit == \"C\" {\n            count += 1\n        }\
    \ else if digit == \"D\" {\n            count += 1\n        } else if digit ==\
    \ \"E\" {\n            count += 1\n        } else if digit == \"F\" {\n      \
    \      count += 1\n        } else if digit == \"0\" {\n            count += 1\n\
    \        } else if digit == \"1\" {\n            count += 1\n        } else if\
    \ digit == \"2\" {\n            count += 1\n        } else if digit == \"3\" {\n\
    \            count += 1\n        } else if digit == \"4\" {\n            count\
    \ += 1\n        } else if digit == \"5\" {\n            count += 1\n        }\
    \ else if digit == \"6\" {\n            count += 1\n        } else if digit ==\
    \ \"7\" {\n            count += 1\n        } else if digit == \"8\" {\n      \
    \      count += 1\n        } else if digit == \"9\" {\n            count += 1\n\
    \        } else if digit == \"a\" {\n            count += 1\n        } else if\
    \ digit == \"b\" {\n            count += 1\n        } else if digit == \"c\" {\n\
    \            count += 1\n        } else if digit == \"d\" {\n            count\
    \ += 1\n        } else if digit == \"e\" {\n            count += 1\n        }\
    \ else if digit == \"f\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var result = 0\n    var digits = num.characters\n    for digit\
    \ in digits {\n        switch digit {\n        case \"0\":\n        case \"1\"\
    :\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case\
    \ \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n    \
    \    case \"9\":\n        case \"A\":\n        case \"B\":\n        case \"C\"\
    :\n        case \"D\":\n        case \"E\":\n        case \"F\":\n        default:\n\
    \            result += 1\n        }\n    }\n    return result", "    var count\
    \ = 0\n    var digit = 0\n    var isPrime = true\n    var isHex = true\n    var\
    \ isHexDigit = true\n    var isHexDigit2 = true\n    var isHexDigit3 = true\n\
    \    var isHexDigit4 = true\n    var isHexDigit5 = true\n    var isHexDigit6 =\
    \ true\n    var isHexDigit7 = true\n    var isHexDigit8 = true\n    var isHexDigit9\
    \ = true\n    var isHexDigit0 = true\n    var isHexDigit1 = true\n    var isHexDigit2\
    \ = true\n    var isHexDigit3 = true\n    var isHexDigit4 = true\n    var isHexDigit5\
    \ = true\n    var isHexDigit6 = true\n    var isHexDigit7 = true\n    var isHexDigit8\
    \ = true\n    var isHexDigit9 = true\n    var isHexDigit0 = true\n    var isHexDigit1\
    \ = true\n    var isHexDigit2 = true\n    var isHexDigit3 = true\n    var isHexDigit4\
    \ = true\n    var isHexDigit5 = true\n    var isHexDigit6 = true\n    var isHexDigit7\
    \ = true\n    var isHexDigit8 = true\n    var isHexDigit9 = true\n    var isHexDigit0\
    \ = true\n    var isHexDigit1 = true\n    var isHexDigit2 = true\n    var isHexDigit3\
    \ = true\n    var isHexDigit4 = true\n    var isHexDigit5 = true\n    var isHexDigit6\
    \ = true\n    var isHexDigit7 = true\n    var isHexDigit8 = true\n    var isHexDigit9\
    \ = true\n    var isHexDigit0 = true\n    var isHexDigit1 = true\n    var isHexDigit2\
    \ = true\n    var isHexDigit3 = true\n    var isHexDigit4 = true\n    var isHexDigit5\
    \ = true\n    var isHexDigit6 = true\n    var isHexDigit7 = true\n    var isHexDigit8\
    \ = true\n    var isHexDigit9 = true\n    var isHexDigit0 = true\n    var isHexDigit1\
    \ = true\n    var isHexDigit2 = true\n    var isHexDigit3 = true\n    var isHexDigit4\
    \ = true\n    var isHexDigit5 = true\n    var isHexDigit6 = true\n    var isHexDigit7\
    \ = true\n    var isHexDigit8 = true\n    var isHexDigit9 = true\n    var isHexDigit0\
    \ = true\n    var isHexDigit1 = true\n    var isHexDigit2 = true\n    var isHexDigit3\
    \ = true\n    var isHexDigit4 = true\n    var isHexDigit5 = true\n    var isHexDigit6\
    \ = true\n    var isHexDigit7 = true\n    var isHexDigit8 = true\n    var isHexDigit9\
    \ = true\n    var isHexDigit0 = true\n    var isHexDigit1 = ", "    var sum =\
    \ 0\n    var digits = num.characters\n    for i in 0..<digits.count {\n      \
    \  let digit = Int(digits[i])\n        if digit == 0 || digit == 1 {\n       \
    \     continue\n        }\n        if digit % 2 == 0 {\n            sum += digit\n\
    \        }\n        else {\n            sum += digit * 3\n        }\n    }\n \
    \   return sum", "    // Your code here\n    var numString = num\n    var numStringArray:\
    \ [String] = numString.characters\n    var numStringArrayLength = numStringArray.count\n\
    \    var numStringArrayIndex = 0\n    var hexString = \"\"\n    var hexStringArray:\
    \ [String] = hexString.characters\n    var hexStringArrayLength = hexStringArray.count\n\
    \    var hexStringArrayIndex = 0\n    var hexStringArrayIndex2 = 0\n    var hexStringArrayIndex3\
    \ = 0\n    var hexStringArrayIndex4 = 0\n    var hexStringArrayIndex5 = 0\n  \
    \  var hexStringArrayIndex6 = 0\n    var hexStringArrayIndex7 = 0\n    var hexStringArrayIndex8\
    \ = 0\n    var hexStringArrayIndex9 = 0\n    var hexStringArrayIndex10 = 0\n \
    \   var hexStringArrayIndex11 = 0\n    var hexStringArrayIndex12 = 0\n    var\
    \ hexStringArrayIndex13 = 0\n    var hexStringArrayIndex14 = 0\n    var hexStringArrayIndex15\
    \ = 0\n    var hexStringArrayIndex16 = 0\n    var hexStringArrayIndex17 = 0\n\
    \    var hexStringArrayIndex18 = 0\n    var hexStringArrayIndex19 = 0\n    var\
    \ hexStringArrayIndex20 = 0\n    var hexStringArrayIndex21 = 0\n    var hexStringArrayIndex22\
    \ = 0\n    var hexStringArrayIndex23 = 0\n    var hexStringArrayIndex24 = 0\n\
    \    var hexStringArrayIndex25 = 0\n    var hexStringArrayIndex26 = 0\n    var\
    \ hexStringArrayIndex27 = 0\n    var hexStringArrayIndex28 = 0\n    var hexStringArrayIndex29\
    \ = 0\n    var hexStringArrayIndex30 = 0\n    var hexStringArrayIndex31 = 0\n\
    \    var hexStringArrayIndex32 = 0\n    var hexStringArrayIndex33 = 0\n    var\
    \ hexStringArrayIndex34 = 0\n    var hexStringArrayIndex35 = 0\n    var hexStringArrayIndex36\
    \ = 0\n    var hexStringArrayIndex37 = 0\n    var hexStringArrayIndex38 = 0\n\
    \    var hexStringArrayIndex39 = 0\n    var hexStringArrayIndex40 = 0\n    var\
    \ hexStringArrayIndex41 = 0\n    var hexStringArrayIndex42 = 0\n    var hexStringArrayIndex43\
    \ = 0\n    var hexStringArrayIndex44 = 0\n    var hexStringArrayIndex45 = 0\n\
    \    var hexStringArrayIndex46 = 0\n    var hexStringArrayIndex47 = 0\n    var\
    \ hexStringArrayIndex48 = 0\n    var hexStringArrayIndex49 = 0\n    var hexStringArrayIndex50\
    \ = 0\n    var hexStringArrayIndex51 = 0\n    var hexStringArrayIndex52 = 0\n\
    \    var hexStringArrayIndex53 = 0\n    var hexStringArrayIndex54 = 0\n    var\
    \ hexStringArrayIndex55 = 0\n    var hexStringArrayIndex56 = 0\n    var ", " \
    \   var hexDigits = [UInt8](repeating: 0, count: 16)\n    var digits = [UInt8](repeating:\
    \ 0, count: 16)\n    var numDigits = num.count\n    var numHexDigits = numDigits.toHexString().count\n\
    \    var numHexChars = numHexDigits.toHexString().count\n    var numHexCharsRemaining\
    \ = numHexChars\n    var hexDigitIndex = 0\n    var hexCharIndex = 0\n    var\
    \ hexChar = UInt8(0)\n    var hexCharRemaining = UInt8(0)\n    var hexDigit =\
    \ UInt8(0)\n    var hexDigitRemaining = UInt8(0)\n    var primeCount = 0\n   \
    \ var primeCountRemaining = UInt8(0)\n    var prime = UInt8(0)\n    var primeRemaining\
    \ = UInt8(0)\n    var isPrime = true\n    var isPrimeRemaining = true\n    var\
    \ isPrime2 = true\n    var isPrime2Remaining = true\n    var isPrime3 = true\n\
    \    var isPrime3Remaining = true\n    var isPrime4 = true\n    var isPrime4Remaining\
    \ = true\n    var isPrime5 = true\n    var isPrime5Remaining = true\n    var isPrime6\
    \ = true\n    var isPrime6Remaining = true\n    var isPrime7 = true\n    var isPrime7Remaining\
    \ = true\n    var isPrime8 = true\n    var isPrime8Remaining = true\n    var isPrime9\
    \ = true\n    var isPrime9Remaining = true\n    var isPrime10 = true\n    var\
    \ isPrime10Remaining = true\n    var isPrime11 = true\n    var isPrime11Remaining\
    \ = true\n    var isPrime12 = true\n    var isPrime12Remaining = true\n    var\
    \ isPrime13 = true\n    var isPrime13Remaining = true\n    var isPrime14 = true\n\
    \    var isPrime14Remaining = true\n    var isPrime15 = true\n    var isPrime15Remaining\
    \ = true\n    var isPrime16 = true\n    var isPrime16Remaining = true\n    var\
    \ isPrime17 = true\n    var isPrime17Remaining = true\n    var isPrime18 = true\n\
    \    var isPrime18Remaining = true\n    var isPrime19 = true\n    var isPrime19Remaining\
    \ = true\n    var isPrime20 = true\n    var isPrime20Remaining = true\n    var\
    \ isPrime21 = true\n    var isPrime21Remaining = true\n    var isPrime22 = true\n\
    \    var isPrime22Remaining = true\n    var isPrime23 = true\n    var isPrime23",
  "    var nums = num.characters\n    var count = 0\n    var primes = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97]\n    for _ in 0..<nums.count {\n        if nums[_] >= 'A' && nums[_]\
    \ <= 'F' {\n            count += 1\n        }\n    }\n    for _ in 0..<nums.count\
    \ {\n        if nums[_] >= '0' && nums[_] <= '9' {\n            if primes.contains(Int(nums[_]))\
    \ {\n                count += 1\n            }\n        }\n    }\n    return count",
  "    let numAsString = num.lowercased()\n    var count = 0\n    for char in numAsString\
    \ {\n        if char == \"a\" || char == \"b\" || char == \"c\" || char == \"\
    d\" || char == \"e\" || char == \"f\" {\n            count += 1\n        }\n \
    \   }\n    return count", "    var nums = num.characters\n    var count = 0\n\
    \    for index in 0..<nums.count {\n        let char = nums[index]\n        if\
    \ char == \"A\" || char == \"B\" || char == \"C\" || char == \"D\" || char ==\
    \ \"E\" || char == \"F\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var nums = num.characters\n    var count = 0\n    var prime = 0\n\
    \    var prime_found = false\n    var prime_found2 = false\n    var prime_found3\
    \ = false\n    var prime_found4 = false\n    var prime_found5 = false\n    var\
    \ prime_found6 = false\n    var prime_found7 = false\n    var prime_found8 = false\n\
    \    var prime_found9 = false\n    var prime_found10 = false\n    var prime_found11\
    \ = false\n    var prime_found12 = false\n    var prime_found13 = false\n    var\
    \ prime_found14 = false\n    var prime_found15 = false\n    var prime_found16\
    \ = false\n    var prime_found17 = false\n    var prime_found18 = false\n    var\
    \ prime_found19 = false\n    var prime_found20 = false\n    var prime_found21\
    \ = false\n    var prime_found22 = false\n    var prime_found23 = false\n    var\
    \ prime_found24 = false\n    var prime_found25 = false\n    var prime_found26\
    \ = false\n    var prime_found27 = false\n    var prime_found28 = false\n    var\
    \ prime_found29 = false\n    var prime_found30 = false\n    var prime_found31\
    \ = false\n    var prime_found32 = false\n    var prime_found33 = false\n    var\
    \ prime_found34 = false\n    var prime_found35 = false\n    var prime_found36\
    \ = false\n    var prime_found37 = false\n    var prime_found38 = false\n    var\
    \ prime_found39 = false\n    var prime_found40 = false\n    var prime_found41\
    \ = false\n    var prime_found42 = false\n    var prime_found43 = false\n    var\
    \ prime_found44 = false\n    var prime_found45 = false\n    var prime_found46\
    \ = false\n    var prime_found47 = false\n    var prime_found48 = false\n    var\
    \ prime_found49 = false\n    var prime_found50 = false\n    var prime_found51\
    \ = false\n    var prime_found52 = false\n    var prime_found53 = false\n    var\
    \ prime_found54 = false\n    var prime_found55 = false\n    var prime_found56\
    \ = false\n    var prime_found57 = false\n    var prime_found58 = false\n    var\
    \ prime_found59 = false\n    var prime_found60 = false\n    var prime_found61\
    \ = false\n    var prime_found62 = false\n    var prime_found63 = false\n    var\
    \ prime_found64 = false\n    var prime_found65 = false\n    var prime_found66\
    \ = false\n    var prime_found67 = false\n    var prime_found68 = false\n    var\
    \ prime_found69 = false\n    var prime_", "    let digits = num.characters\n \
    \   var count = 0\n    for digit in digits {\n        if digit == \"A\" || digit\
    \ == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"E\" || digit == \"\
    F\" {\n            count += 1\n        }\n    }\n    return count", "    var hexNum\
    \ = num.characters.map { String($0) }\n    var hexNumString = hexNum.joined()\n\
    \    var hexNumArray = hexNumString.characters.map { String($0) }\n    var hexNumArrayString\
    \ = hexNumArray.joined()\n    var hexNumArrayArray = hexNumArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayString = hexNumArrayArray.joined()\n\
    \    var hexNumArrayArrayArray = hexNumArrayArrayString.characters.map { String($0)\
    \ }\n    var hexNumArrayArrayArrayString = hexNumArrayArrayArray.joined()\n  \
    \  var hexNumArrayArrayArrayArray = hexNumArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayString = hexNumArrayArrayArrayArray.joined()\n\
    \    var hexNumArrayArrayArrayArrayArray = hexNumArrayArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayArrayString = hexNumArrayArrayArrayArrayArray.joined()\n\
    \    var hexNumArrayArrayArrayArrayArrayArray = hexNumArrayArrayArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayArrayArrayString = hexNumArrayArrayArrayArrayArrayArray.joined()\n\
    \    var hexNumArrayArrayArrayArrayArrayArrayArray = hexNumArrayArrayArrayArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayArrayArrayArrayString = hexNumArrayArrayArrayArrayArrayArrayArrayArray.joined()\n\
    \    var hexNumArrayArrayArrayArrayArrayArrayArrayArray = hexNumArrayArrayArrayArrayArrayArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayString\
    \ = hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayString.joined()\n\
    \    var hexNumArrayArrayArrayArrayArrayArrayArrayArrayArray = hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayString\
    \ = hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayString.joined()\n\
    \    var hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArray =\
    \ hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayString.characters.map\
    \ { String($0) }\n    var hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayString\
    \ = hexNumArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayArrayString.joined()\n",
  "    // Your code here\n    \n    return 0", "    var hexNum = num.unicodeScalars.filter{\
    \ $0.isHexadecimal() }\n    if hexNum.count == 0 {\n        return 0\n    }\n\
    \    var primeNum = hexNum.count\n    var primeNum2 = primeNum\n    var primeNum3\
    \ = primeNum\n    var primeNum4 = primeNum\n    var primeNum5 = primeNum\n   \
    \ var primeNum6 = primeNum\n    var primeNum7 = primeNum\n    var primeNum8 =\
    \ primeNum\n    var primeNum9 = primeNum\n    var primeNum10 = primeNum\n    var\
    \ primeNum11 = primeNum\n    var primeNum12 = primeNum\n    var primeNum13 = primeNum\n\
    \    var primeNum14 = primeNum\n    var primeNum15 = primeNum\n    var primeNum16\
    \ = primeNum\n    var primeNum17 = primeNum\n    var primeNum18 = primeNum\n \
    \   var primeNum19 = primeNum\n    var primeNum20 = primeNum\n    var primeNum21\
    \ = primeNum\n    var primeNum22 = primeNum\n    var primeNum23 = primeNum\n \
    \   var primeNum24 = primeNum\n    var primeNum25 = primeNum\n    var primeNum26\
    \ = primeNum\n    var primeNum27 = primeNum\n    var primeNum28 = primeNum\n \
    \   var primeNum29 = primeNum\n    var primeNum30 = primeNum\n    var primeNum31\
    \ = primeNum\n    var primeNum32 = primeNum\n    var primeNum33 = primeNum\n \
    \   var primeNum34 = primeNum\n    var primeNum35 = primeNum\n    var primeNum36\
    \ = primeNum\n    var primeNum37 = primeNum\n    var primeNum38 = primeNum\n \
    \   var primeNum39 = primeNum\n    var primeNum40 = primeNum\n    var primeNum41\
    \ = primeNum\n    var primeNum42 = primeNum\n    var primeNum43 = primeNum\n \
    \   var primeNum44 = primeNum\n    var primeNum45 = primeNum\n    var primeNum46\
    \ = primeNum\n    var primeNum47 = primeNum\n    var primeNum48 = primeNum\n \
    \   var primeNum49 = primeNum\n    var primeNum50 = primeNum\n    var primeNum51\
    \ = primeNum\n    var primeNum52 = primeNum\n    var primeNum53 = primeNum\n \
    \   var primeNum54 = primeNum\n    var primeNum55 = primeNum\n    var primeNum56\
    \ = primeNum\n    var primeNum57 = primeNum\n    var primeNum58 = primeNum\n \
    \   var primeNum59 = primeNum\n    var primeNum60 = primeNum\n    var primeNum61\
    \ = primeNum\n    var primeNum", "    guard let num = num.lowercased() else {\n\
    \        return 0\n    }\n    var count = 0\n    var prime = 0\n    var prime_found\
    \ = false\n    var prime_found2 = false\n    var prime_found3 = false\n    var\
    \ prime_found4 = false\n    var prime_found5 = false\n    var prime_found6 = false\n\
    \    var prime_found7 = false\n    var prime_found8 = false\n    var prime_found9\
    \ = false\n    var prime_found10 = false\n    var prime_found11 = false\n    var\
    \ prime_found12 = false\n    var prime_found13 = false\n    var prime_found14\
    \ = false\n    var prime_found15 = false\n    var prime_found16 = false\n    var\
    \ prime_found17 = false\n    var prime_found18 = false\n    var prime_found19\
    \ = false\n    var prime_found20 = false\n    var prime_found21 = false\n    var\
    \ prime_found22 = false\n    var prime_found23 = false\n    var prime_found24\
    \ = false\n    var prime_found25 = false\n    var prime_found26 = false\n    var\
    \ prime_found27 = false\n    var prime_found28 = false\n    var prime_found29\
    \ = false\n    var prime_found30 = false\n    var prime_found31 = false\n    var\
    \ prime_found32 = false\n    var prime_found33 = false\n    var prime_found34\
    \ = false\n    var prime_found35 = false\n    var prime_found36 = false\n    var\
    \ prime_found37 = false\n    var prime_found38 = false\n    var prime_found39\
    \ = false\n    var prime_found40 = false\n    var prime_found41 = false\n    var\
    \ prime_found42 = false\n    var prime_found43 = false\n    var prime_found44\
    \ = false\n    var prime_found45 = false\n    var prime_found46 = false\n    var\
    \ prime_found47 = false\n    var prime_found48 = false\n    var prime_found49\
    \ = false\n    var prime_found50 = false\n    var prime_found51 = false\n    var\
    \ prime_found52 = false\n    var prime_found53 = false\n    var prime_found54\
    \ = false\n    var prime_found55 = false\n    var prime_found56 = false\n    var\
    \ prime_found57 = false\n    var prime_found58 = false\n    var prime_found59\
    \ = false\n    var prime_found60 = false\n    var prime_found61 = false\n    var\
    \ prime_found62 = false\n    var prime_found63 = false\n    var prime_found64\
    \ = false\n    var prime_found65 = false\n    var prime_found66 = false\n    var\
    \ prime_found67 = false\n    var prime_found68 = false\n    var prime", "    let\
    \ hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n    let\
    \ hexArray = hex.characters\n    var count = 0\n    for char in hexArray {\n \
    \       let hexDigit = Int(char) ?? 0\n        if hexDigit == hexDigit {\n   \
    \         count += 1\n        }\n    }\n    return count", "    let digits = num.characters\n\
    \    let hexDigits = digits.map { String($0, radix: 16) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime($0) }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitCount < hexDigitPrimeCount\
    \ {\n        return 0\n    }\n    return hexDigitPrimeCount", "    var hex = num.stringByReplacingOccurrencesOfString(\"\
    0x\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range:\
    \ nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"0\", withString:\
    \ \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex =\
    \ hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\", options:\
    \ NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    hex = hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\",\
    \ options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    hex = hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\",\
    \ options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    hex = hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\",\
    \ options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    hex = hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\",\
    \ options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    hex = hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\",\
    \ options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    hex = hex.stringByReplacingOccurrencesOfString(\"0x\", withString: \"\",\
    \ options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    0\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n",
  "    var hex = num\n    var count = 0\n    for char in hex {\n        switch char\
    \ {\n        case \"A\": hex = \"0\"; break\n        case \"B\": hex = \"1\";\
    \ break\n        case \"C\": hex = \"2\"; break\n        case \"D\": hex = \"\
    3\"; break\n        case \"E\": hex = \"4\"; break\n        case \"F\": hex =\
    \ \"5\"; break\n        case \"0\": hex = \"6\"; break\n        case \"1\": hex\
    \ = \"7\"; break\n        case \"2\": hex = \"8\"; break\n        case \"3\":\
    \ hex = \"9\"; break\n        case \"5\": hex = \"A\"; break\n        case \"\
    7\": hex = \"B\"; break\n        case \"9\": hex = \"C\"; break\n        case\
    \ \"A\": hex = \"D\"; break\n        case \"B\": hex = \"E\"; break\n        case\
    \ \"C\": hex = \"F\"; break\n        default: break\n        }\n    }\n    for\
    \ char in hex {\n        switch char {\n        case \"2\": count++; break\n \
    \       case \"3\": count++; break\n        case \"5\": count++; break\n     \
    \   case \"7\": count++; break\n        case \"B\": count++; break\n        case\
    \ \"D\": count++; break\n        case \"E\": count++; break\n        case \"F\"\
    : count++; break\n        default: break\n        }\n    }\n    return count",
  "    guard let num = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\
    \ else {\n        return 0\n    }\n    var count = 0\n    var prime = 2 // prime\
    \ number\n    var isPrime = true\n    var isPrime2 = true\n    var isPrime3 =\
    \ true\n    var isPrime4 = true\n    var isPrime5 = true\n    var isPrime6 = true\n\
    \    var isPrime7 = true\n    var isPrime8 = true\n    var isPrime9 = true\n \
    \   var isPrime10 = true\n    var isPrime11 = true\n    var isPrime12 = true\n\
    \    var isPrime13 = true\n    var isPrime14 = true\n    var isPrime15 = true\n\
    \    var isPrime16 = true\n    var isPrime17 = true\n    var isPrime18 = true\n\
    \    var isPrime19 = true\n    var isPrime20 = true\n    var isPrime21 = true\n\
    \    var isPrime22 = true\n    var isPrime23 = true\n    var isPrime24 = true\n\
    \    var isPrime25 = true\n    var isPrime26 = true\n    var isPrime27 = true\n\
    \    var isPrime28 = true\n    var isPrime29 = true\n    var isPrime30 = true\n\
    \    var isPrime31 = true\n    var isPrime32 = true\n    var isPrime33 = true\n\
    \    var isPrime34 = true\n    var isPrime35 = true\n    var isPrime36 = true\n\
    \    var isPrime37 = true\n    var isPrime38 = true\n    var isPrime39 = true\n\
    \    var isPrime40 = true\n    var isPrime41 = true\n    var isPrime42 = true\n\
    \    var isPrime43 = true\n    var isPrime44 = true\n    var isPrime45 = true\n\
    \    var isPrime46 = true\n    var isPrime47 = true\n    var isPrime48 = true\n\
    \    var isPrime49 = true\n    var isPrime50 = true\n    var isPrime51 = true\n\
    \    var isPrime52 = true\n    var isPrime53 = true\n    var isPrime54 = true\n\
    \    var isPrime55 = true\n    var isPrime56 = true\n    var isPrime57 = true\n\
    \    var isPrime58 = true\n    var isPrime59 = true\n    var isPrime60 = true\n\
    \    var isPrime61 = true\n    var isPrime62 = true\n    var isPrime63 = true\n\
    \    var isPrime64 = true\n    var isPrime65 = true\n    var isPrime66 = true",
  "    var count = 0\n    var digits = num.characters\n    for digit in digits {\n\
    \        if digit == \"A\" || digit == \"B\" || digit == \"C\" || digit == \"\
    D\" || digit == \"E\" || digit == \"F\" {\n            count += 1\n        }\n\
    \    }\n    return count", "    var hex = num.stringByTrimmingCharactersInSet(NSCharacterSet.uppercaseCharacterSet())\n\
    \    var hexDigits: [Int] = []\n    for char in hex {\n        let digit = Int(char,\
    \ radix: 16)\n        hexDigits.append(digit)\n    }\n    var primeCount = 0\n\
    \    for digit in hexDigits {\n        if digit % 2 == 0 {\n            primeCount\
    \ += 1\n        }\n    }\n    return primeCount", "    var nums = num.characters\n\
    \    var count = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    var primesLen =\
    \ primes.count\n    var primesLen2 = primesLen * primesLen\n    var primesLen3\
    \ = primesLen2 * primesLen\n    var primesLen4 = primesLen3 * primesLen\n    var\
    \ primesLen5 = primesLen4 * primesLen\n    var primesLen6 = primesLen5 * primesLen\n\
    \    var primesLen7 = primesLen6 * primesLen\n    var primesLen8 = primesLen7\
    \ * primesLen\n    var primesLen9 = primesLen8 * primesLen\n    var primesLen10\
    \ = primesLen9 * primesLen\n    var primesLen11 = primesLen10 * primesLen\n  \
    \  var primesLen12 = primesLen11 * primesLen\n    var primesLen13 = primesLen12\
    \ * primesLen\n    var primesLen14 = primesLen13 * primesLen\n    var primesLen15\
    \ = primesLen14 * primesLen\n    var primesLen16 = primesLen15 * primesLen\n \
    \   var primesLen17 = primesLen16 * primesLen\n    var primesLen18 = primesLen17\
    \ * primesLen\n    var primesLen19 = primesLen18 * primesLen\n    var primesLen20\
    \ = primesLen19 * primesLen\n    var primesLen21 = primesLen20 * primesLen\n \
    \   var primesLen22 = primesLen21 * primesLen\n    var primesLen23 = primesLen22\
    \ * primesLen\n    var primesLen24 = primesLen23 * primesLen\n    var primesLen25\
    \ = primesLen24 * primesLen\n    var primesLen26 = primesLen25 * primesLen\n \
    \   var primesLen27 = primesLen26 * primesLen\n    var primesLen28 = primesLen27\
    \ * primesLen\n    var primesLen29 = primesLen28 * primesLen\n    var primesLen30\
    \ = primesLen29 * primesLen\n    var primesLen31 = primesLen30 * primesLen\n \
    \   var primesLen32 = primesLen31 * primesLen\n    var primesLen33 = primesLen32",
  "    let nums = num.characters\n    let numsCount = nums.count\n    var hexDigits\
    \ = [String]()\n    var hexDigitCount = 0\n    var hexDigitCount2 = 0\n    var\
    \ hexDigitCount3 = 0\n    var hexDigitCount4 = 0\n    var hexDigitCount5 = 0\n\
    \    var hexDigitCount6 = 0\n    var hexDigitCount7 = 0\n    var hexDigitCount8\
    \ = 0\n    var hexDigitCount9 = 0\n    var hexDigitCount10 = 0\n    var hexDigitCount11\
    \ = 0\n    var hexDigitCount12 = 0\n    var hexDigitCount13 = 0\n    var hexDigitCount14\
    \ = 0\n    var hexDigitCount15 = 0\n    var hexDigitCount16 = 0\n    var hexDigitCount17\
    \ = 0\n    var hexDigitCount18 = 0\n    var hexDigitCount19 = 0\n    var hexDigitCount20\
    \ = 0\n    var hexDigitCount21 = 0\n    var hexDigitCount22 = 0\n    var hexDigitCount23\
    \ = 0\n    var hexDigitCount24 = 0\n    var hexDigitCount25 = 0\n    var hexDigitCount26\
    \ = 0\n    var hexDigitCount27 = 0\n    var hexDigitCount28 = 0\n    var hexDigitCount29\
    \ = 0\n    var hexDigitCount30 = 0\n    var hexDigitCount31 = 0\n    var hexDigitCount32\
    \ = 0\n    var hexDigitCount33 = 0\n    var hexDigitCount34 = 0\n    var hexDigitCount35\
    \ = 0\n    var hexDigitCount36 = 0\n    var hexDigitCount37 = 0\n    var hexDigitCount38\
    \ = 0\n    var hexDigitCount39 = 0\n    var hexDigitCount40 = 0\n    var hexDigitCount41\
    \ = 0\n    var hexDigitCount42 = 0\n    var hexDigitCount43 = 0\n    var hexDigitCount44\
    \ = 0\n    var hexDigitCount45 = 0\n    var hexDigitCount46 = 0\n    var hexDigitCount47\
    \ = 0\n    var hexDigitCount48 = 0\n    var hexDigitCount49 = 0\n    var hexDigitCount50\
    \ = 0\n    var hexDigitCount51 = 0\n    var hexDigitCount52 = 0\n    var hexDigitCount53\
    \ = 0\n    var hexDigitCount54 = 0\n    var hexDigitCount55 = 0\n    var hexDigitCount56\
    \ = 0\n    var hexDigitCount57 = 0\n    var hexDigitCount58 = 0\n    var hexDigitCount59\
    \ = 0\n    var hexDigitCount60 = 0\n    var hexDigitCount61 = 0\n    var hexDigitCount62\
    \ = 0\n    var hexDigitCount63 = 0\n    var hexDigitCount64 = 0\n    var hexDigitCount65\
    \ = 0\n    var hexDigitCount66 = 0\n    var hexDigitCount67 = 0\n    var hexDigitCount68\
    \ = 0\n    var hexDigitCount69 = 0\n    var hexDigitCount70 = 0\n", "    // Your\
    \ code here\n    \n    return 0", "    // Your code here\n    \n    return 0",
  "    var hex = num.characters.map { String($0) }\n    hex = hex.filter{ $0.isHexadecimal()\
    \ }\n    hex = hex.filter{ $0.isUppercase() }\n    hex = hex.filter{ $0.count\
    \ > 1 }\n    hex = hex.filter{ $0.count <= hex.count }\n    return hex.count",
  "    let digits = num.characters\n    var prime = 0\n    var prime_count = 0\n \
    \   var digit_count = 0\n    for digit in digits {\n        if digit == \"A\"\
    \ {\n            digit_count += 1\n        }\n        if digit == \"B\" {\n  \
    \          digit_count += 1\n        }\n        if digit == \"C\" {\n        \
    \    digit_count += 1\n        }\n        if digit == \"D\" {\n            digit_count\
    \ += 1\n        }\n        if digit == \"E\" {\n            digit_count += 1\n\
    \        }\n        if digit == \"F\" {\n            digit_count += 1\n      \
    \  }\n    }\n    if digit_count == 0 {\n        return 0\n    }\n    if digit_count\
    \ == 1 {\n        if digit_count == 2 {\n            if digit_count == 3 {\n \
    \               if digit_count == 5 {\n                    if digit_count == 7\
    \ {\n                        if digit_count == 11 {\n                        \
    \    if digit_count == 13 {\n                                if digit_count ==\
    \ 17 {\n                                    if digit_count == 19 {\n         \
    \                               if digit_count == 21 {\n                     \
    \                       if digit_count == 25 {\n                             \
    \                   if digit_count == 29 {\n                                 \
    \                   if digit_count == 31 {\n                                 \
    \                       if digit_count == 37 {\n                             \
    \                               if digit_count == 41 {\n                     \
    \                                           if digit_count == 47 {\n         \
    \                                           if digit_count == 53 {\n         \
    \                                               if digit_count == 59 {\n     \
    \                                                       if digit_count == 63 {\n\
    \                                                                if digit_count\
    \ == 67 {\n                                                    if digit_count\
    \ == 71 {\n                                                        if digit_count\
    \ == 79 {\n                                                            if digit_count\
    \ == 83 {\n                                                                if\
    \ digit_count == 89 {\n                                                    if\
    \ digit_count == 97 {\n                                                      \
    \  if digit_count == 101 {\n                                                 \
    \           if digit_count == 107 {\n                                        \
    \                        if digit_count == 113 {\n                           \
    \                                         if digit_count == 119 {\n          \
    \                                                              if digit_count\
    \ == 123 {\n                                                                 \
    \           if digit_count == 127 {\n                                        \
    \                                        if digit_count == 131 {\n           \
    \                                                                         if digit_count\
    \ == 137 {\n                                                                 \
    \                       if digit_count == 143 {\n                            \
    \                                                                if digit_count\
    \ == 149 {\n                                                                 \
    \                               if digit_count == 153 {\n                    \
    \                                                                            \
    \    if digit_count == 159 {\n                                               \
    \                                                         if digit_count == 163\
    \ {\n                                                                        \
    \                                    if digit_count == 167 {\n               \
    \                                                                            \
    \                     if digit_count == 171 {\n                              \
    \                                                                            \
    \          if digit_count == 177 {\n                                         \
    \                                                                            \
    \   if digit_count == 183 {\n                                                \
    \                                                                            if\
    \ digit_count == 189 {\n                                                     \
    \                                                                           if\
    \ digit_count == 193 {\n                                                     \
    \                                                                            \
    \   if digit_count == 197 {\n                                                \
    \                                                                            \
    \            if digit_count == 201 {\n                                       \
    \                                                                            \
    \                         if digit_count == 207 {\n                          \
    \                                                                            \
    \                                          if digit_count == 211 {\n         \
    \                                                                            \
    \                                                               if digit_count\
    \ == 215 {\n                                                                 \
    \                                                                            \
    \           if digit_count == 219 {\n                                        \
    \                                                                            \
    \                                        if digit_count == 223 {\n           \
    \                                                                            \
    \                                                                         if digit_count\
    \ == 227 {\n                                                                 \
    \                                                                            \
    \                       if digit_count == 231 {\n                            \
    \                                                                            \
    \                                                                if digit_count\
    \ == 237 {\n                                                                 \
    \                                                                            \
    \                               if digit_count == ", "    var hex = num.unicodeScalars\n\
    \    var hexDigits = hex.count\n    var hexDigit = 0\n    var hexDigitCount =\
    \ 0\n    var hexDigitCount2 = 0\n    var hexDigitCount3 = 0\n    var hexDigitCount4\
    \ = 0\n    var hexDigitCount5 = 0\n    var hexDigitCount6 = 0\n    var hexDigitCount7\
    \ = 0\n    var hexDigitCount8 = 0\n    var hexDigitCount9 = 0\n    var hexDigitCount10\
    \ = 0\n    var hexDigitCount11 = 0\n    var hexDigitCount12 = 0\n    var hexDigitCount13\
    \ = 0\n    var hexDigitCount14 = 0\n    var hexDigitCount15 = 0\n    var hexDigitCount16\
    \ = 0\n    var hexDigitCount17 = 0\n    var hexDigitCount18 = 0\n    var hexDigitCount19\
    \ = 0\n    var hexDigitCount20 = 0\n    var hexDigitCount21 = 0\n    var hexDigitCount22\
    \ = 0\n    var hexDigitCount23 = 0\n    var hexDigitCount24 = 0\n    var hexDigitCount25\
    \ = 0\n    var hexDigitCount26 = 0\n    var hexDigitCount27 = 0\n    var hexDigitCount28\
    \ = 0\n    var hexDigitCount29 = 0\n    var hexDigitCount30 = 0\n    var hexDigitCount31\
    \ = 0\n    var hexDigitCount32 = 0\n    var hexDigitCount33 = 0\n    var hexDigitCount34\
    \ = 0\n    var hexDigitCount35 = 0\n    var hexDigitCount36 = 0\n    var hexDigitCount37\
    \ = 0\n    var hexDigitCount38 = 0\n    var hexDigitCount39 = 0\n    var hexDigitCount40\
    \ = 0\n    var hexDigitCount41 = 0\n    var hexDigitCount42 = 0\n    var hexDigitCount43\
    \ = 0\n    var hexDigitCount44 = 0\n    var hexDigitCount45 = 0\n    var hexDigitCount46\
    \ = 0\n    var hexDigitCount47 = 0\n    var hexDigitCount48 = 0\n    var hexDigitCount49\
    \ = 0\n    var hexDigitCount50 = 0\n    var hexDigitCount51 = 0\n    var hexDigitCount52\
    \ = 0\n    var hexDigitCount53 = 0\n    var hexDigitCount54 = 0\n    var hexDigitCount55\
    \ = 0\n    var hexDigitCount56 = 0\n    var hexDigitCount57 = 0\n    var hexDigitCount58\
    \ = 0\n    var hexDigitCount59 = 0\n    var hexDigitCount60 = 0\n    var hexDigitCount61\
    \ = 0\n    var hexDigitCount62 = 0\n    var hexDigitCount63 = 0\n    var hexDigitCount64\
    \ = 0\n    var hexDigitCount65 = 0\n    var hexDigitCount66 = 0\n    var hexDigitCount67\
    \ = 0\n    var hexDigitCount68 = 0\n    var hexDigitCount69 = 0\n    var hexDigitCount70\
    \ = 0\n    var ", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime(hexDigit:\
    \ $0) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitPrimeCount\
    \ > hexDigitCount {\n        return hexDigitPrimeCount\n    } else {\n       \
    \ return hexDigitCount\n    }", "    var nums = num.characters\n    var count\
    \ = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    for i in 0..<nums.count {\n   \
    \     if nums[i] == 'A' || nums[i] == 'B' || nums[i] == 'C' || nums[i] == 'D'\
    \ || nums[i] == 'E' || nums[i] == 'F' {\n            count += 1\n        }\n \
    \   }\n    for i in 0..<primes.count {\n        if nums.contains(String(primes[i]))\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var nums\
    \ = num.characters\n    var count = 0\n    for index in 0..<nums.count {\n   \
    \     let char = nums[index] as Character\n        if char == hexDigits.first\
    \ {\n            count += 1\n        } else if char == hexDigits.second {\n  \
    \          count += 1\n        } else if char == hexDigits.third {\n         \
    \   count += 1\n        } else if char == hexDigits.fourth {\n            count\
    \ += 1\n        } else if char == hexDigits.fifth {\n            count += 1\n\
    \        } else if char == hexDigits.sixth {\n            count += 1\n       \
    \ } else if char == hexDigits.seventh {\n            count += 1\n        } else\
    \ if char == hexDigits.eighth {\n            count += 1\n        } else if char\
    \ == hexDigits.ninth {\n            count += 1\n        }\n    }\n    return count",
  "    var nums = num.characters\n    var numsLen = nums.count\n    var primesLen\
    \ = numsLen / 2\n    var primes = [Int](repeating: 0, count: primesLen)\n    var\
    \ primesLen2 = primes.count\n    var primes2 = [Int](repeating: 0, count: primesLen2)\n\
    \    var primesLen3 = primes2.count\n    var primes3 = [Int](repeating: 0, count:\
    \ primesLen3)\n    var primesLen4 = primes3.count\n    var primes4 = [Int](repeating:\
    \ 0, count: primesLen4)\n    var primesLen5 = primes4.count\n    var primes5 =\
    \ [Int](repeating: 0, count: primesLen5)\n    var primesLen6 = primes5.count\n\
    \    var primes6 = [Int](repeating: 0, count: primesLen6)\n    var primesLen7\
    \ = primes6.count\n    var primes7 = [Int](repeating: 0, count: primesLen7)\n\
    \    var primesLen8 = primes7.count\n    var primes8 = [Int](repeating: 0, count:\
    \ primesLen8)\n    var primesLen9 = primes8.count\n    var primes9 = [Int](repeating:\
    \ 0, count: primesLen9)\n    var primesLen10 = primes9.count\n    var primes10\
    \ = [Int](repeating: 0, count: primesLen10)\n    var primesLen11 = primes10.count\n\
    \    var primes11 = [Int](repeating: 0, count: primesLen11)\n    var primesLen12\
    \ = primes11.count\n    var primes12 = [Int](repeating: 0, count: primesLen12)\n\
    \    var primesLen13 = primes12.count\n    var primes13 = [Int](repeating: 0,\
    \ count: primesLen13)\n    var primesLen14 = primes13.count\n    var primes14\
    \ = [Int](repeating: 0, count: primesLen14)\n    var primesLen15 = primes14.count\n\
    \    var primes15 = [Int](repeating: 0, count: primesLen15)\n    var primesLen16\
    \ = primes15.count\n    var primes16 = [Int](repeating: 0, count: primesLen16)\n\
    \    var primesLen17 = primes16.count\n    var primes17 = [Int](repeating: 0,\
    \ count: primesLen17)\n    var primesLen18 = primes17.count\n    var primes18\
    \ = [Int](repeating: 0, count: primesLen18)\n    var primesLen19 = primes18.count\n\
    \    var primes19 = [Int](repeating: 0, count: primesLen19)\n", "    var nums\
    \ = num.characters\n    var result = 0\n    for _ in 0..<nums.count {\n      \
    \  let digit = Int(nums[_], radix: 16)\n        if digit == 0 || digit == 1 {\n\
    \            continue\n        }\n        if digit % 2 == 0 {\n            result\
    \ += 1\n        }\n    }\n    return result", "    var nums = num.characters\n\
    \    var primes = Array<Int>()\n    var prime_digits = Array<Int>()\n    var prime_digits_count\
    \ = Array<Int>()\n    var prime_digits_count_max = Array<Int>()\n    var prime_digits_count_min\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<Int>()\n    var prime_digits_count_min = Array<Int>()\n    var prime_digits_count_max\
    \ = Array<", "    let digits = num.characters\n    var prime = 0\n    var count\
    \ = 0\n    for digit in digits {\n        switch digit {\n        case \"0\",\
    \ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\":\n           \
    \ prime = prime * 10 + Int(digit)!\n        case \"A\", \"B\", \"C\", \"D\", \"\
    E\", \"F\":\n            prime = prime * 10 + Int(digit)!\n        default:\n\
    \            count = count + 1\n        }\n    }\n    return count", "    guard\
    \ let num = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted) else\
    \ {\n        return 0\n    }\n    var count = 0\n    for char in num.unicodeScalars\
    \ {\n        let hex = char.value as UInt\n        if hex > 57 { continue }\n\
    \        if hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n       \
    \ if hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n        if hex\
    \ > 47 { hex -= 48 }\n        if hex > 57 { continue }\n        if hex > 47 {\
    \ hex -= 48 }\n        if hex > 57 { continue }\n        if hex > 47 { hex -=\
    \ 48 }\n        if hex > 57 { continue }\n        if hex > 47 { hex -= 48 }\n\
    \        if hex > 57 { continue }\n        if hex > 47 { hex -= 48 }\n       \
    \ if hex > 57 { continue }\n        if hex > 47 { hex -= 48 }\n        if hex\
    \ > 57 { continue }\n        if hex > 47 { hex -= 48 }\n        if hex > 57 {\
    \ continue }\n        if hex > 47 { hex -= 48 }\n        if hex > 57 { continue\
    \ }\n        if hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n   \
    \     if hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n        if\
    \ hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n        if hex > 47\
    \ { hex -= 48 }\n        if hex > 57 { continue }\n        if hex > 47 { hex -=\
    \ 48 }\n        if hex > 57 { continue }\n        if hex > 47 { hex -= 48 }\n\
    \        if hex > 57 { continue }\n        if hex > 47 { hex -= 48 }\n       \
    \ if hex > 57 { continue }\n        if hex > 47 { hex -= 48 }\n        if hex\
    \ > 57 { continue }\n        if hex > 47 { hex -= 48 }\n        if hex > 57 {\
    \ continue }\n        if hex > 47 { hex -= 48 }\n        if hex > 57 { continue\
    \ }\n        if hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n   \
    \     if hex > 47 { hex -= 48 }\n        if hex > 57 { continue }\n        if\
    \ hex > 47 { hex -= 48 }\n        if hex > 57 ", "    var result = 0\n    var\
    \ digits = num.characters\n    for index in 0..<digits.count {\n        let digit\
    \ = digits[index]\n        if digit == \"A\" {\n            result += 2\n    \
    \    } else if digit == \"B\" {\n            result += 3\n        } else if digit\
    \ == \"C\" {\n            result += 5\n        } else if digit == \"D\" {\n  \
    \          result += 7\n        } else if digit == \"E\" {\n            result\
    \ += 11\n        } else if digit == \"F\" {\n            result += 13\n      \
    \  } else {\n            result += digit.unicodeScalars.filter({$0.isUppercase}).count\n\
    \        }\n    }\n    return result", "    // Your code here\n    \n    return\
    \ 0", "    var nums = num.characters\n    var primes = Set<Int>()\n    var prime:\
    \ Int = 0\n    var primeCount = 0\n    for index in 0..<nums.count {\n       \
    \ let digit = Int(nums[index])\n        if digit < 48 || digit > 57 {\n      \
    \      return -1\n        }\n        if prime == 0 {\n            prime = digit\n\
    \        }\n        if prime % 2 == 0 {\n            primes.insert(prime)\n  \
    \      }\n        if prime % 3 == 0 {\n            primes.insert(prime + 2)\n\
    \        }\n        if prime % 5 == 0 {\n            primes.insert(prime + 3)\n\
    \        }\n        if prime % 7 == 0 {\n            primes.insert(prime + 5)\n\
    \        }\n        if prime % 11 == 0 {\n            primes.insert(prime + 7)\n\
    \        }\n        if prime % 13 == 0 {\n            primes.insert(prime + 11)\n\
    \        }\n        if prime % 17 == 0 {\n            primes.insert(prime + 13)\n\
    \        }\n        if prime % 19 == 0 {\n            primes.insert(prime + 17)\n\
    \        }\n        if prime % 23 == 0 {\n            primes.insert(prime + 19)\n\
    \        }\n        if prime % 29 == 0 {\n            primes.insert(prime + 23)\n\
    \        }\n        if prime % 31 == 0 {\n            primes.insert(prime + 29)\n\
    \        }\n        if prime % 37 == 0 {\n            primes.insert(prime + 31)\n\
    \        }\n        if prime % 41 == 0 {\n            primes.insert(prime + 37)\n\
    \        }\n        if prime % 43 == 0 {\n            primes.insert(prime + 41)\n\
    \        }\n        if prime % 47 == 0 {\n            primes.insert(prime + 43)\n\
    \        }\n        if prime % 53 == 0 {\n            primes.insert(prime + 47)\n\
    \        }\n        if prime % 59 == 0 {\n            primes.insert(prime + 53)\n\
    \        }\n        if prime % 61 == 0 {\n            primes.insert(prime + 59)\n\
    \        }\n        if prime % 67 == 0 {\n            primes.insert(prime + 61)\n\
    \        }\n        if prime % 71 == 0 {\n            primes.insert(prime + 67)\n\
    \        }\n        if prime % 73 == 0 {\n            primes.insert(prime + 71)\n\
    \        }\n        if prime % 79 == 0 {\n            primes.insert(prime + 73)\n\
    \        }\n        if prime % 83 == 0 {\n            primes.insert(prime + 79)\n\
    \        }\n        if prime % 89 == 0 {\n            primes.insert(prime + 83)\n\
    \        }\n        if prime % 97 == 0 {\n            primes.insert(prime + 89)\n\
    \        }\n        if prime ", "    var count = 0\n    var digits = num.characters\n\
    \    for digit in digits {\n        if digit == \"A\" {\n            count +=\
    \ 2\n        } else if digit == \"B\" {\n            count += 1\n        } else\
    \ if digit == \"C\" {\n            count += 3\n        } else if digit == \"D\"\
    \ {\n            count += 5\n        } else if digit == \"E\" {\n            count\
    \ += 7\n        } else if digit == \"F\" {\n            count += 11\n        }\n\
    \    }\n    return count", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { Int($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { $0 % 2 == 0 }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter { $0 % 3 == 0 }\n    let hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter { $0 % 5 == 0 }\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n    let\
    \ hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter { $0 % 7 ==\
    \ 0 }\n    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter\
    \ { $0 % 11 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter\
    \ { $0 % 13 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { $0 % 17 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter { $0 % 19 ==\
    \ 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hex",
  "    var numAsString = \"\"\n    for c in num {\n        if c.isUpper() {\n    \
    \        numAsString += \"A\"\n        } else {\n            numAsString += String(c)\n\
    \        }\n    }\n    var numAsInt = Int(numAsString)\n    var primesAsInt =\
    \ 2\n    var primesAsString = \"\"\n    for prime in primesAsInt...1000 {\n  \
    \      if numAsInt == prime {\n            primesAsString += String(prime)\n \
    \       }\n    }\n    if primesAsString.isEmpty {\n        return 0\n    }\n \
    \   return primesAsString.count", "    var hex = num.unicodeScalars\n    var hexDigits\
    \ = \"\"\n    var primeDigits = \"\"\n    var primeCount = 0\n    var primeCountDigits\
    \ = 0\n    var primeCountHexDigits = 0\n    var primeCountHexDigitDigits = 0\n\
    \    var primeCountHexDigitPrimes = 0\n    var primeCountHexDigitPrimesDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPrimesDigitDigits = 0\n    var primeCountHexDigitPrimesDigitDigits\
    \ = 0\n    var primeCountHexDigitPri", "    var count = 0\n    var digits = num.characters\n\
    \    for digit in digits {\n        if digit == \"A\" {\n            count +=\
    \ 2\n        } else if digit == \"B\" {\n            count += 1\n        } else\
    \ if digit == \"C\" {\n            count += 3\n        } else if digit == \"D\"\
    \ {\n            count += 5\n        } else if digit == \"E\" {\n            count\
    \ += 7\n        } else if digit == \"F\" {\n            count += 11\n        }\
    \ else {\n            count += 1\n        }\n    }\n    return count", "    let\
    \ hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n    let\
    \ hexArray = hex.unicodeScalars.map { String($0) }\n    let hexCount = hexArray.count\n\
    \    let hexDigits = hexArray.map { Int($0) }\n    let hexDigitCount = hexDigits.count\n\
    \    let hexDigitPrimes = hexDigits.filter { $0 % 2 == 0 }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimePrimes = hexDigitPrimes.filter\
    \ { $0 % 3 == 0 }\n    let hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter { $0 % 5 == 0 }\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n    let\
    \ hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter { $0 % 7 ==\
    \ 0 }\n    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter\
    \ { $0 % 11 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimes.filter\
    \ { $0 % 13 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { $0 % 17 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrime",
  "    var nums: [Int] = []\n    var num: Int = 0\n    for c in num {\n        if\
    \ c >= '0' && c <= '9' {\n            num = num * 16 + Int(c - UInt('0'))\n  \
    \      } else if c >= 'A' && c <= 'F' {\n            num = num * 16 + Int(c -\
    \ UInt('A') + 10)\n        } else if c >= 'a' && c <= 'f' {\n            num =\
    \ num * 16 + Int(c - UInt('a') + 10)\n        } else {\n            return -1\n\
    \        }\n        nums.append(num)\n    }\n    for num in nums {\n        if\
    \ num == 2 {\n            return num\n        }\n    }\n    return -1", "    var\
    \ nums = num.characters\n    var numsCount = nums.count\n    var hexDigits = [UInt8]()\n\
    \    var hexDigitsCount = nums.count\n    var hexDigitsCount2 = hexDigitsCount\n\
    \    var hexDigitsCount3 = hexDigitsCount2\n    var hexDigitsCount4 = hexDigitsCount3\n\
    \    var hexDigitsCount5 = hexDigitsCount4\n    var hexDigitsCount6 = hexDigitsCount5\n\
    \    var hexDigitsCount7 = hexDigitsCount6\n    var hexDigitsCount8 = hexDigitsCount7\n\
    \    var hexDigitsCount9 = hexDigitsCount8\n    var hexDigitsCount10 = hexDigitsCount9\n\
    \    var hexDigitsCount11 = hexDigitsCount10\n    var hexDigitsCount12 = hexDigitsCount11\n\
    \    var hexDigitsCount13 = hexDigitsCount12\n    var hexDigitsCount14 = hexDigitsCount13\n\
    \    var hexDigitsCount15 = hexDigitsCount14\n    var hexDigitsCount16 = hexDigitsCount15\n\
    \    var hexDigitsCount17 = hexDigitsCount16\n    var hexDigitsCount18 = hexDigitsCount17\n\
    \    var hexDigitsCount19 = hexDigitsCount18\n    var hexDigitsCount20 = hexDigitsCount19\n\
    \    var hexDigitsCount21 = hexDigitsCount20\n    var hexDigitsCount22 = hexDigitsCount21\n\
    \    var hexDigitsCount23 = hexDigitsCount22\n    var hexDigitsCount24 = hexDigitsCount23\n\
    \    var hexDigitsCount25 = hexDigitsCount24\n    var hexDigitsCount26 = hexDigitsCount25\n\
    \    var hexDigitsCount27 = hexDigitsCount26\n    var hexDigitsCount28 = hexDigitsCount27\n\
    \    var hexDigitsCount29 = hexDigitsCount28\n    var hexDigitsCount30 = hexDigitsCount29\n\
    \    var hexDigitsCount31 = hexDigitsCount30\n    var hexDigitsCount32 = hexDigitsCount31\n\
    \    var hexDigitsCount33 = hexDigitsCount32\n    var hexDigitsCount34 = hexDigitsCount33\n\
    \    var hexDigitsCount35 = hexDigitsCount34\n    var hexDigitsCount36 = hexDigitsCount35\n\
    \    var hexDigitsCount37 = hexDigitsCount36\n    var hexDigitsCount38 = hexDigitsCount37\n\
    \    var hexDigitsCount39 = hexDigitsCount", "    guard let num = num.lowercased(),\
    \ num.isEmpty else {\n        return 0\n    }\n    var count = 0\n    var prime\
    \ = 2 // start from 2\n    var prime2 = 2\n    var prime3 = 2\n    var prime4\
    \ = 2\n    var prime5 = 2\n    var prime6 = 2\n    var prime7 = 2\n    var prime8\
    \ = 2\n    var prime9 = 2\n    var prime10 = 2\n    var prime11 = 2\n    var prime12\
    \ = 2\n    var prime13 = 2\n    var prime14 = 2\n    var prime15 = 2\n    var\
    \ prime16 = 2\n    var prime17 = 2\n    var prime18 = 2\n    var prime19 = 2\n\
    \    var prime20 = 2\n    var prime21 = 2\n    var prime22 = 2\n    var prime23\
    \ = 2\n    var prime24 = 2\n    var prime25 = 2\n    var prime26 = 2\n    var\
    \ prime27 = 2\n    var prime28 = 2\n    var prime29 = 2\n    var prime30 = 2\n\
    \    var prime31 = 2\n    var prime32 = 2\n    var prime33 = 2\n    var prime34\
    \ = 2\n    var prime35 = 2\n    var prime36 = 2\n    var prime37 = 2\n    var\
    \ prime38 = 2\n    var prime39 = 2\n    var prime40 = 2\n    var prime41 = 2\n\
    \    var prime42 = 2\n    var prime43 = 2\n    var prime44 = 2\n    var prime45\
    \ = 2\n    var prime46 = 2\n    var prime47 = 2\n    var prime48 = 2\n    var\
    \ prime49 = 2\n    var prime50 = 2\n    var prime51 = 2\n    var prime52 = 2\n\
    \    var prime53 = 2\n    var prime54 = 2\n    var prime55 = 2\n    var prime56\
    \ = 2\n    var prime57 = 2\n    var prime58 = 2\n    var prime59 = 2\n    var\
    \ prime60 = 2\n    var prime61 = 2\n    var prime62 = 2\n    var prime63 = 2\n\
    \    var prime64 = 2\n    var prime65 = 2\n    var prime66 = 2\n    var prime67\
    \ = 2\n    var prime68 = 2\n    var prime69 = 2\n    var prime70 = 2\n    var\
    \ prime71 = 2\n    var prime72 = 2\n    var prime73 = 2\n    var prime74 = 2\n\
    \    var prime75 = 2\n    var prime76 = 2\n    var prime77 = 2\n    var prime78\
    \ = 2\n    var prime79 = 2\n    var prime80 = 2\n    var prime81 = 2\n    var\
    \ prime82 = 2\n    var prime83 = 2\n    var prime84 = 2\n    var prime85 = 2\n\
    \    var prime86 = 2\n    var prime87 = 2\n    var prime88 = 2\n    var prime89\
    \ = 2\n    var prime90 = 2\n    var prime91 = 2\n    var prime92 = 2\n    var\
    \ prime9", "    guard let num = num.lowercased() else {\n        return 0\n  \
    \  }\n    var count = 0\n    var prime = 0\n    var prime2 = 0\n    var prime3\
    \ = 0\n    var prime4 = 0\n    var prime5 = 0\n    var prime6 = 0\n    var prime7\
    \ = 0\n    var prime8 = 0\n    var prime9 = 0\n    var prime10 = 0\n    var prime11\
    \ = 0\n    var prime12 = 0\n    var prime13 = 0\n    var prime14 = 0\n    var\
    \ prime15 = 0\n    var prime16 = 0\n    var prime17 = 0\n    var prime18 = 0\n\
    \    var prime19 = 0\n    var prime20 = 0\n    var prime21 = 0\n    var prime22\
    \ = 0\n    var prime23 = 0\n    var prime24 = 0\n    var prime25 = 0\n    var\
    \ prime26 = 0\n    var prime27 = 0\n    var prime28 = 0\n    var prime29 = 0\n\
    \    var prime30 = 0\n    var prime31 = 0\n    var prime32 = 0\n    var prime33\
    \ = 0\n    var prime34 = 0\n    var prime35 = 0\n    var prime36 = 0\n    var\
    \ prime37 = 0\n    var prime38 = 0\n    var prime39 = 0\n    var prime40 = 0\n\
    \    var prime41 = 0\n    var prime42 = 0\n    var prime43 = 0\n    var prime44\
    \ = 0\n    var prime45 = 0\n    var prime46 = 0\n    var prime47 = 0\n    var\
    \ prime48 = 0\n    var prime49 = 0\n    var prime50 = 0\n    var prime51 = 0\n\
    \    var prime52 = 0\n    var prime53 = 0\n    var prime54 = 0\n    var prime55\
    \ = 0\n    var prime56 = 0\n    var prime57 = 0\n    var prime58 = 0\n    var\
    \ prime59 = 0\n    var prime60 = 0\n    var prime61 = 0\n    var prime62 = 0\n\
    \    var prime63 = 0\n    var prime64 = 0\n    var prime65 = 0\n    var prime66\
    \ = 0\n    var prime67 = 0\n    var prime68 = 0\n    var prime69 = 0\n    var\
    \ prime70 = 0\n    var prime71 = 0\n    var prime72 = 0\n    var prime73 = 0\n\
    \    var prime74 = 0\n    var prime75 = 0\n    var prime76 = 0\n    var prime77\
    \ = 0\n    var prime78 = 0\n    var prime79 = 0\n    var prime80 = 0\n    var\
    \ prime81 = 0\n    var prime82 = 0\n    var prime83 = 0\n    var prime84 = 0\n\
    \    var prime85 = 0\n    var prime86 = 0\n    var prime87 = 0\n    var prime88\
    \ = 0\n    var prime89 = 0\n    var prime90 = 0\n    var prime91 = 0\n    var\
    \ prime92 = 0\n    var prime93 = 0\n    var prime94 = 0\n    var prime95 = 0\n\
    \    var prime96 = 0\n    var prime97 = 0\n    var prime98 = 0\n    var prime99\
    \ = 0\n", "    var nums = num.characters\n    var count = 0\n    for _ in 0..<nums.count\
    \ {\n        if nums[_] == \"A\" {\n            count += 1\n        } else if\
    \ nums[_] == \"B\" {\n            count += 1\n        } else if nums[_] == \"\
    C\" {\n            count += 1\n        } else if nums[_] == \"D\" {\n        \
    \    count += 1\n        } else if nums[_] == \"E\" {\n            count += 1\n\
    \        } else if nums[_] == \"F\" {\n            count += 1\n        }\n   \
    \ }\n    return count", "    guard let num = num.lowercased() else {\n       \
    \ return 0\n    }\n    var count = 0\n    for char in num {\n        guard let\
    \ digit = Int(String(char).uppercased(), radix: 16) else {\n            return\
    \ 0\n        }\n        if digit == 11 || digit == 13 {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    var count = 0\n    for c in num\
    \ {\n        switch c {\n        case \"0\":\n        case \"1\":\n        case\
    \ \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n    \
    \    case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\"\
    :\n        case \"A\":\n        case \"B\":\n        case \"C\":\n        case\
    \ \"D\":\n        case \"E\":\n        case \"F\":\n            count += 1\n \
    \       default:\n            break\n        }\n    }\n    return count", "  \
    \  let numAsString = num.lowercased()\n    var hexDigits: [Int] = []\n    var\
    \ primeCount = 0\n    for char in numAsString.unicodeScalars {\n        let hexDigit\
    \ = Int(char.value)\n        hexDigits.append(hexDigit)\n    }\n    for hexDigit\
    \ in hexDigits {\n        if hexDigit == hexDigits.last! {\n            primeCount\
    \ += 1\n        }\n    }\n    return primeCount", "    var sum = 0\n    for char\
    \ in num {\n        sum += Int(char) - 48\n    }\n    if sum < 2 {\n        return\
    \ 0\n    }\n    if sum < 4 {\n        return 1\n    }\n    if sum < 6 {\n    \
    \    return 2\n    }\n    if sum < 8 {\n        return 3\n    }\n    if sum <\
    \ 10 {\n        return 4\n    }\n    if sum < 12 {\n        return 5\n    }\n\
    \    if sum < 14 {\n        return 6\n    }\n    if sum < 16 {\n        return\
    \ 7\n    }\n    if sum < 18 {\n        return 8\n    }\n    if sum < 20 {\n  \
    \      return 9\n    }\n    if sum < 22 {\n        return 10\n    }\n    if sum\
    \ < 24 {\n        return 11\n    }\n    if sum < 26 {\n        return 12\n   \
    \ }\n    if sum < 28 {\n        return 13\n    }\n    if sum < 30 {\n        return\
    \ 14\n    }\n    if sum < 32 {\n        return 15\n    }\n    if sum < 34 {\n\
    \        return 16\n    }\n    if sum < 36 {\n        return 17\n    }\n    if\
    \ sum < 38 {\n        return 18\n    }\n    if sum < 40 {\n        return 19\n\
    \    }\n    if sum < 42 {\n        return 20\n    }\n    if sum < 44 {\n     \
    \   return 21\n    }\n    if sum < 46 {\n        return 22\n    }\n    if sum\
    \ < 48 {\n        return 23\n    }\n    if sum < 50 {\n        return 24\n   \
    \ }\n    if sum < 52 {\n        return 25\n    }\n    if sum < 54 {\n        return\
    \ 26\n    }\n    if sum < 56 {\n        return 27\n    }\n    if sum < 58 {\n\
    \        return 28\n    }\n    if sum < 60 {\n        return 29\n    }\n    if\
    \ sum < 62 {\n        return 30\n    }\n    if sum < 64 {\n        return 31\n\
    \    }\n    if sum < 66 {\n        return 32\n    }\n    if sum < 68 {\n     \
    \   return 33\n    }\n    if sum < 70 {\n        return 34\n    }\n    if sum\
    \ < 72 {\n        return 35\n    }\n    if sum < 74 {\n        return 36\n   \
    \ }\n    if sum < 76 {\n        return 37\n    }\n    if sum < 78 {\n        return\
    \ 38\n    }\n    if sum < 80 {\n        return 39\n    }\n    if sum < 82 {\n\
    \        return 40\n    }\n    if sum < 84 {\n        return 41\n    }\n    if\
    \ sum < 86 {\n        return 42\n    }\n    if sum < 88 {\n        return 43\n\
    \    }\n    if sum < 90 {\n        return 44\n    }\n    if sum < ", "    let\
    \ hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n    let\
    \ hexDigits = hex.characters\n    var count = 0\n    for digit in hexDigits {\n\
    \        guard let digitInt = Int(digit, radix: 16) else {\n            return\
    \ count\n        }\n        if digitInt == 2 {\n            count += 1\n     \
    \   }\n    }\n    return count", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n \
    \   let hexDigitCount = hexDigitCount / hexDigits.count\n    let hexDigitCount\
    \ = hexDigitCount * hexDigitCount\n    let hexDigitCount = hexDigitCount / hexDigits.count\n\
    \    let hexDigitCount = hexDigitCount * hexDigitCount\n    let hexDigitCount\
    \ = hexDigitCount / hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n\
    \    let hexDigitCount = hexDigitCount / hexDigits.count\n    let hexDigitCount\
    \ = hexDigitCount * hexDigitCount\n    let hexDigitCount = hexDigitCount / hexDigits.count\n\
    \    let hexDigitCount = hexDigitCount * hexDigitCount\n    let hexDigitCount\
    \ = hexDigitCount / hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n\
    \    let hexDigitCount = hexDigitCount / hexDigits.count\n    let hexDigitCount\
    \ = hexDigitCount * hexDigitCount\n    let hexDigitCount = hexDigitCount / hexDigits.count\n\
    \    let hexDigitCount = hexDigitCount * hexDigitCount\n    let hexDigitCount\
    \ = hexDigitCount / hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n\
    \    let hexDigitCount = hexDigitCount / hexDigits.count\n    let hexDigitCount\
    \ = hexDigitCount * hexDigitCount\n    let hexDigitCount = hexDigitCount / hexDigits.count\n\
    \    let hexDigitCount = hexDigitCount * hexDigitCount\n    let hexDigitCount\
    \ = hexDigitCount / hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n\
    \    let hexDigitCount = hexDigitCount / hexDigits.count\n    let hexDigitCount\
    \ = hexDigitCount * hexDigitCount\n    let hexDigitCount = hexDigitCount / hexDigits.count\n\
    \    let hexDigitCount = hexDigitCount * hexDigitCount\n    let hexDigitCount\
    \ = hexDigitCount / hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n\
    \    let hexDigitCount = hexDigitCount / hexDigits.count\n    let hexDigitCount\
    \ = hexDigitCount * hexDigitCount\n    let hexDigitCount = hexDigitCount / hexDigits.count\n\
    \    let hexDigitCount = hexDigitCount * hexDigitCount\n    let hexDigitCount\
    \ = hexDigitCount / hexDigits.count\n    let hexDigitCount = hexDigitCount * hexDigitCount\n\
    \    let hexDigitCount = ", "    var count = 0\n    var digit = 0\n    var hex\
    \ = num\n    var hexDigit = hex\n    var hexDigits = hex.characters\n    var hexDigitCount\
    \ = hexDigits.count\n    \n    for _ in 0..<hexDigitCount {\n        digit = hexDigits.first!\n\
    \        hexDigits.remove(at: 0)\n        \n        if digit == hexDigit {\n \
    \           count += 1\n        }\n    }\n    \n    return count", "    // Your\
    \ code here\n    \n    return 0", "    var hexNum = num.characters.map { String($0)\
    \ }\n    var hexNum2 = hexNum.map { Int($0, radix: 16) }\n    var hexNum3 = hexNum2.map\
    \ { $0 % 2 != 0 }\n    var hexNum4 = hexNum3.map { $0 % 3 != 0 }\n    var hexNum5\
    \ = hexNum4.map { $0 % 5 != 0 }\n    var hexNum6 = hexNum5.map { $0 % 7 != 0 }\n\
    \    var hexNum7 = hexNum6.map { $0 % 11 != 0 }\n    var hexNum8 = hexNum7.map\
    \ { $0 % 13 != 0 }\n    var hexNum9 = hexNum8.map { $0 % 17 != 0 }\n    var hexNum10\
    \ = hexNum9.map { $0 % 19 != 0 }\n    var hexNum11 = hexNum10.map { $0 % 23 !=\
    \ 0 }\n    var hexNum12 = hexNum11.map { $0 % 29 != 0 }\n    var hexNum13 = hexNum12.map\
    \ { $0 % 31 != 0 }\n    var hexNum14 = hexNum13.map { $0 % 37 != 0 }\n    var\
    \ hexNum15 = hexNum14.map { $0 % 41 != 0 }\n    var hexNum16 = hexNum15.map {\
    \ $0 % 43 != 0 }\n    var hexNum17 = hexNum16.map { $0 % 47 != 0 }\n    var hexNum18\
    \ = hexNum17.map { $0 % 51 != 0 }\n    var hexNum19 = hexNum18.map { $0 % 53 !=\
    \ 0 }\n    var hexNum20 = hexNum19.map { $0 % 59 != 0 }\n    var hexNum21 = hexNum20.map\
    \ { $0 % 61 != 0 }\n    var hexNum22 = hexNum21.map { $0 % 67 != 0 }\n    var\
    \ hexNum23 = hexNum22.map { $0 % 71 != 0 }\n    var hexNum24 = hexNum23.map {\
    \ $0 % 73 != 0 }\n    var hexNum25 = hexNum24.map { $0 % 79 != 0 }\n    var hexNum26\
    \ = hexNum25.map { $0 % 83 != 0 }\n    var hexNum27 = hexNum26.map { $0 % 89 !=\
    \ 0 }\n    var hexNum28 = hexNum27.map { $0 % 93 != 0 }\n    var hexNum29 = hexNum28.map\
    \ { $0 % 97 != 0 }", "    var nums = num.characters\n    var count = 0\n    var\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97]\n    for _ in 0..<nums.count {\n        let digit\
    \ = Int(nums[_])\n        if digit == 0 || digit == 1 {\n            count +=\
    \ 1\n            continue\n        }\n        for prime in primes {\n        \
    \    if digit % prime == 0 {\n                count += 1\n                break\n\
    \            }\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ c in num {\n        if c >= '0' && c <= '9' {\n            count += Int(c -\
    \ '0')\n        } else if c >= 'A' && c <= 'F' {\n            count += Int(c -\
    \ 'A') + 10\n        } else if c >= 'a' && c <= 'f' {\n            count += Int(c\
    \ - 'a') + 10\n        } else {\n            return -1\n        }\n    }\n   \
    \ return count", "    var count = 0\n    for char in num {\n        switch char\
    \ {\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case\
    \ \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n    \
    \    case \"7\":\n        case \"8\":\n        case \"9\":\n        case \"A\"\
    :\n        case \"B\":\n        case \"C\":\n        case \"D\":\n        case\
    \ \"E\":\n        case \"F\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count", "    var hexNum = num.characters.map\
    \ { String($0) }\n    hexNum = hexNum.filter{ $0.isHexadecimal() }\n    hexNum\
    \ = hexNum.filter{ $0.isUppercase() }\n    hexNum = hexNum.filter{ $0.isNumber()\
    \ }\n    hexNum = hexNum.filter{ $0.characters.count > 1 }\n    hexNum = hexNum.filter{\
    \ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count\
    \ <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count\
    \ }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum\
    \ = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{\
    \ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count\
    \ <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count\
    \ }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum\
    \ = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{\
    \ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count\
    \ <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count\
    \ }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum\
    \ = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{\
    \ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count\
    \ <= hexNum.count }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count\
    \ }\n    hexNum = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum\
    \ = hexNum.filter{ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{\
    \ $0.characters.count <= hexNum.count }\n    hexNum = hexNum.filter{ $", "   \
    \ let digits = num.characters\n    let hexDigits = digits.map { String($0) }\n\
    \    let hexDigitCount = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter\
    \ { $0.isPrime }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter { $0.isPrime && $0.isPrime }\n    let hexDigitPrimePrimeCount\
    \ = hexDigitPrimePrimes.count\n    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePri", "    var nums = [Int]()\n    var numString = \"\"\n\
    \    var numStringInt: Int = 0\n    var numStringInt2: Int = 0\n    var numStringInt3:\
    \ Int = 0\n    var numStringInt4: Int = 0\n    var numStringInt5: Int = 0\n  \
    \  var numStringInt6: Int = 0\n    var numStringInt7: Int = 0\n    var numStringInt8:\
    \ Int = 0\n    var numStringInt9: Int = 0\n    var numStringInt10: Int = 0\n \
    \   var numStringInt11: Int = 0\n    var numStringInt12: Int = 0\n    var numStringInt13:\
    \ Int = 0\n    var numStringInt14: Int = 0\n    var numStringInt15: Int = 0\n\
    \    var numStringInt16: Int = 0\n    var numStringInt17: Int = 0\n    var numStringInt18:\
    \ Int = 0\n    var numStringInt19: Int = 0\n    var numStringInt20: Int = 0\n\
    \    var numStringInt21: Int = 0\n    var numStringInt22: Int = 0\n    var numStringInt23:\
    \ Int = 0\n    var numStringInt24: Int = 0\n    var numStringInt25: Int = 0\n\
    \    var numStringInt26: Int = 0\n    var numStringInt27: Int = 0\n    var numStringInt28:\
    \ Int = 0\n    var numStringInt29: Int = 0\n    var numStringInt30: Int = 0\n\
    \    var numStringInt31: Int = 0\n    var numStringInt32: Int = 0\n    var numStringInt33:\
    \ Int = 0\n    var numStringInt34: Int = 0\n    var numStringInt35: Int = 0\n\
    \    var numStringInt36: Int = 0\n    var numStringInt37: Int = 0\n    var numStringInt38:\
    \ Int = 0\n    var numStringInt39: Int = 0\n    var numStringInt40: Int = 0\n\
    \    var numStringInt41: Int = 0\n    var numStringInt42: Int = 0\n    var numStringInt43:\
    \ Int = 0\n    var numStringInt44: Int = 0\n    var numStringInt45: Int = 0\n\
    \    var numStringInt46: Int = 0\n    var numStringInt47: Int = 0\n    var numStringInt48:\
    \ Int = 0\n    var numStringInt49: Int = 0\n    var numStringInt50: Int = 0\n\
    \    var numStringInt51: Int = 0\n    var numStringInt52: Int = 0\n    var numStringInt53:\
    \ Int = 0\n    var numStringInt54: Int = 0\n    var numStringInt55: Int = 0\n\
    \    var numStringInt56: Int = 0\n    var ", "    var hex = num.unicodeScalars\n\
    \    var hexCount = hex.count\n    var hexDigits = [UInt8](repeating: 0, count:\
    \ hexCount)\n    for i in 0..<hexCount {\n        hexDigits[i] = hex[i]\n    }\n\
    \    var hexDigitCount = hexDigits.count\n    var hexDigitPrimes = [UInt8](repeating:\
    \ 0, count: hexDigitCount)\n    for i in 0..<hexDigitCount {\n        if hexDigits[i]\
    \ == hexDigits[i+1] {\n            hexDigitPrimes[i] = hexDigits[i]\n        }\n\
    \    }\n    var hexDigitPrimeCount = hexDigitPrimes.count\n    var hexDigitPrimePrimes\
    \ = [UInt8](repeating: 0, count: hexDigitPrimeCount)\n    for i in 0..<hexDigitPrimeCount\
    \ {\n        if hexDigitPrimes[i] == hexDigitPrimes[i+1] {\n            hexDigitPrimePrimes[i]\
    \ = hexDigitPrimes[i]\n        }\n    }\n    var hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimes = [UInt8](repeating: 0, count: hexDigitPrimePrimeCount)\n\
    \    for i in 0..<hexDigitPrimePrimeCount {\n        if hexDigitPrimePrimes[i]\
    \ == hexDigitPrimePrimes[i+1] {\n            hexDigitPrimePrimePrimes[i] = hexDigitPrimePrimes[i]\n\
    \        }\n    }\n    var hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimes = [UInt8](repeating: 0, count: hexDigitPrimePrimePrimeCount)\n\
    \    for i in 0..<hexDigitPrimePrimePrimeCount {\n        if hexDigitPrimePrimePrimes[i]\
    \ == hexDigitPrimePrimePrimes[i+1] {\n            hexDigitPrimePrimePrimePrimes[i]\
    \ = hexDigitPrimePrimePrimes[i]\n        }\n    }\n    var hexDigitPrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimes.count\n    var hexDigitPrimePrimePrimePrimePrimes\
    \ = [UInt8](repeating: 0, count: hexDigitPrimePrimePrimePrimePrimeCount)\n   \
    \ for i in 0..<hexDigitPrimePrimePrimePrimePrimeCount {\n        if hexDigitPrimePrimePrimePrimePrimes[i]\
    \ == hexDigitPrimePrimePrimePrimePrimes[i+1] {\n            ", "    var numAsString\
    \ = \"\"\n    for char in num {\n        if char >= '0' && char <= '9' {\n   \
    \         numAsString += char\n        }\n    }\n    var numAsInt = Int(numAsString)\n\
    \    var numAsInt2 = numAsInt * numAsInt\n    var numAsInt3 = numAsInt2 * numAsInt\n\
    \    var numAsInt4 = numAsInt3 * numAsInt\n    var numAsInt5 = numAsInt4 * numAsInt\n\
    \    var numAsInt6 = numAsInt5 * numAsInt\n    var numAsInt7 = numAsInt6 * numAsInt\n\
    \    var numAsInt8 = numAsInt7 * numAsInt\n    var numAsInt9 = numAsInt8 * numAsInt\n\
    \    var numAsInt10 = numAsInt9 * numAsInt\n    var numAsInt11 = numAsInt10 *\
    \ numAsInt\n    var numAsInt12 = numAsInt11 * numAsInt\n    var numAsInt13 = numAsInt12\
    \ * numAsInt\n    var numAsInt14 = numAsInt13 * numAsInt\n    var numAsInt15 =\
    \ numAsInt14 * numAsInt\n    var numAsInt16 = numAsInt15 * numAsInt\n    var numAsInt17\
    \ = numAsInt16 * numAsInt\n    var numAsInt18 = numAsInt17 * numAsInt\n    var\
    \ numAsInt19 = numAsInt18 * numAsInt\n    var numAsInt20 = numAsInt19 * numAsInt\n\
    \    var numAsInt21 = numAsInt20 * numAsInt\n    var numAsInt22 = numAsInt21 *\
    \ numAsInt\n    var numAsInt23 = numAsInt22 * numAsInt\n    var numAsInt24 = numAsInt23\
    \ * numAsInt\n    var numAsInt25 = numAsInt24 * numAsInt\n    var numAsInt26 =\
    \ numAsInt25 * numAsInt\n    var numAsInt27 = numAsInt26 * numAsInt\n    var numAsInt28\
    \ = numAsInt27 * numAsInt\n    var numAsInt29 = numAsInt28 * numAsInt\n    var\
    \ numAsInt30 = numAsInt29 * numAsInt\n    var numAsInt31 = numAsInt30 * numAsInt\n\
    \    var numAsInt32 = numAsInt31 * numAsInt\n    var numAsInt33 = numAsInt32 *\
    \ numAsInt\n    var numAsInt34 = ", "    var count = 0\n    for char in num {\n\
    \        switch char {\n        case \"0\":\n        case \"1\":\n        case\
    \ \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n    \
    \    case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\"\
    :\n        case \"A\":\n        case \"B\":\n        case \"C\":\n        case\
    \ \"D\":\n        case \"E\":\n        case \"F\":\n            count += 1\n \
    \       default:\n            break\n        }\n    }\n    return count", "  \
    \  var nums = num.characters\n    var count = 0\n    for char in nums {\n    \
    \    switch char {\n        case \"A\":\n        case \"B\":\n        case \"\
    C\":\n        case \"D\":\n        case \"E\":\n        case \"F\":\n        \
    \    count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    let digits = num.characters\n    var count = 0\n    for digit in\
    \ digits {\n        switch digit {\n        case \"0\":\n        case \"1\":\n\
    \        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"\
    5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n        case\
    \ \"9\":\n        case \"A\":\n        case \"B\":\n        case \"C\":\n    \
    \    case \"D\":\n        case \"E\":\n        case \"F\":\n            count\
    \ += 1\n        default:\n            break\n        }\n    }\n    return count",
  "    var nums = num.characters\n    var nums_len = nums.count\n    var prime_digits\
    \ = [Int]()\n    var prime_digits_len = prime_digits.count\n    var prime_digits_sum\
    \ = 0\n    var prime_digits_sum_len = prime_digits_sum.count\n    var prime_digits_product\
    \ = 1\n    var prime_digits_product_len = prime_digits_product.count\n    var\
    \ prime_digits_product_product = 1\n    var prime_digits_product_product_len =\
    \ prime_digits_product_product.count\n    var prime_digits_product_product_product\
    \ = 1\n    var prime_digits_product_product_product_len = prime_digits_product_product_product.count\n\
    \    var prime_digits_product_product_product_len = prime_digits_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_product_product_len = prime_digits_product_product_product_product_len.count\n\
    \    var prime_digits_product_product_", "    var hex = num.uppercased()\n   \
    \ var count = 0\n    for char in hex {\n        if char == \"A\" {\n         \
    \   count += 1\n        } else if char == \"B\" {\n            count += 1\n  \
    \      } else if char == \"C\" {\n            count += 1\n        } else if char\
    \ == \"D\" {\n            count += 1\n        } else if char == \"E\" {\n    \
    \        count += 1\n        } else if char == \"F\" {\n            count += 1\n\
    \        } else {\n            count += 1\n        }\n    }\n    return count",
  "    var hexDigits: [Int] = []\n    for c in num.unicodeScalars {\n        hexDigits.append(Int(c.value))\n\
    \    }\n    var primeCount = 0\n    for hexDigit in hexDigits {\n        if hexDigit\
    \ == 2 || hexDigit == 3 || hexDigit == 5 || hexDigit == 7 || hexDigit == 11 ||\
    \ hexDigit == 13 {\n            primeCount += 1\n        }\n    }\n    return\
    \ primeCount", "    var hex = num.unicodeScalars\n    var count = 0\n    for hex\
    \ in hex {\n        if hex.value > 0xFF {\n            break\n        }\n    \
    \    count += 1\n    }\n    return count", "    guard let num = num.lowercased()\
    \ else {\n        return 0\n    }\n    var count = 0\n    var digit = 0\n    var\
    \ remainder = 0\n    var isPrime = true\n    var isPrime2 = true\n    var isPrime3\
    \ = true\n    var isPrime4 = true\n    var isPrime5 = true\n    var isPrime6 =\
    \ true\n    var isPrime7 = true\n    var isPrime8 = true\n    var isPrime9 = true\n\
    \    var isPrime10 = true\n    var isPrime11 = true\n    var isPrime12 = true\n\
    \    var isPrime13 = true\n    var isPrime14 = true\n    var isPrime15 = true\n\
    \    var isPrime16 = true\n    var isPrime17 = true\n    var isPrime18 = true\n\
    \    var isPrime19 = true\n    var isPrime20 = true\n    var isPrime21 = true\n\
    \    var isPrime22 = true\n    var isPrime23 = true\n    var isPrime24 = true\n\
    \    var isPrime25 = true\n    var isPrime26 = true\n    var isPrime27 = true\n\
    \    var isPrime28 = true\n    var isPrime29 = true\n    var isPrime30 = true\n\
    \    var isPrime31 = true\n    var isPrime32 = true\n    var isPrime33 = true\n\
    \    var isPrime34 = true\n    var isPrime35 = true\n    var isPrime36 = true\n\
    \    var isPrime37 = true\n    var isPrime38 = true\n    var isPrime39 = true\n\
    \    var isPrime40 = true\n    var isPrime41 = true\n    var isPrime42 = true\n\
    \    var isPrime43 = true\n    var isPrime44 = true\n    var isPrime45 = true\n\
    \    var isPrime46 = true\n    var isPrime47 = true\n    var isPrime48 = true\n\
    \    var isPrime49 = true\n    var isPrime50 = true\n    var isPrime51 = true\n\
    \    var isPrime52 = true\n    var isPrime53 = true\n    var isPrime54 = true\n\
    \    var isPrime55 = true\n    var isPrime56 = true\n    var isPrime57 = true\n\
    \    var isPrime58 = true\n    var isPrime59 = true\n    var isPrime60 = true\n\
    \    var isPrime61 = true\n    var isPrime62 = true\n    var isPrime63 = true\n\
    \    var isPrime64 = true\n    var isPrime65 = true\n    var isPrime66 = true\n\
    \    var isPrime67 = true\n    var isPrime", "    var nums = num.characters\n\
    \    var count = 0\n    for char in nums {\n        let digit = Int(char) ?? 0\n\
    \        if digit == 0 || digit == 1 || digit == 2 || digit == 3 || digit == 4\
    \ || digit == 5 || digit == 6 || digit == 7 || digit == 8 || digit == 9 || digit\
    \ == 10 || digit == 11 || digit == 13 || digit == 17 {\n            count += 1\n\
    \        }\n    }\n    return count", "    let hex = num.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics.inverted)\n    let hexDigits = hex.unicodeScalars.map\
    \ { Int($0) }\n    let primes = hexDigits.filter { isPrime($0) }\n    return primes.count",
  "    var hexNum = num.unicodeScalars\n    var hexNumLen = hexNum.count\n    var\
    \ hexNumLen2 = hexNumLen/2\n    var hexNumLen3 = hexNumLen2/3\n    var hexNumLen4\
    \ = hexNumLen2/4\n    var hexNumLen5 = hexNumLen2/5\n    var hexNumLen6 = hexNumLen2/6\n\
    \    var hexNumLen7 = hexNumLen2/7\n    var hexNumLen8 = hexNumLen2/8\n    var\
    \ hexNumLen9 = hexNumLen2/9\n    var hexNumLen10 = hexNumLen2/10\n    var hexNumLen11\
    \ = hexNumLen2/11\n    var hexNumLen12 = hexNumLen2/12\n    var hexNumLen13 =\
    \ hexNumLen2/13\n    var hexNumLen14 = hexNumLen2/14\n    var hexNumLen15 = hexNumLen2/15\n\
    \    var hexNumLen16 = hexNumLen2/16\n    var hexNumLen17 = hexNumLen2/17\n  \
    \  var hexNumLen18 = hexNumLen2/18\n    var hexNumLen19 = hexNumLen2/19\n    var\
    \ hexNumLen20 = hexNumLen2/20\n    var hexNumLen21 = hexNumLen2/21\n    var hexNumLen22\
    \ = hexNumLen2/22\n    var hexNumLen23 = hexNumLen2/23\n    var hexNumLen24 =\
    \ hexNumLen2/24\n    var hexNumLen25 = hexNumLen2/25\n    var hexNumLen26 = hexNumLen2/26\n\
    \    var hexNumLen27 = hexNumLen2/27\n    var hexNumLen28 = hexNumLen2/28\n  \
    \  var hexNumLen29 = hexNumLen2/29\n    var hexNumLen30 = hexNumLen2/30\n    var\
    \ hexNumLen31 = hexNumLen2/31\n    var hexNumLen32 = hexNumLen2/32\n    var hexNumLen33\
    \ = hexNumLen2/33\n    var hexNumLen34 = hexNumLen2/34\n    var hexNumLen35 =\
    \ hexNumLen2/35\n    var hexNumLen36 = hexNumLen2/36\n    var hexNumLen37 = hexNumLen2/37\n\
    \    var hexNumLen38 = hexNumLen2/38\n    var hexNumLen39 = hexNumLen2/39\n  \
    \  var hexNumLen40 = hexNumLen2/40\n    var hexNumLen41 = hexNumLen2/41\n    var\
    \ hexNumLen42 = hexNumLen2/42\n    var hexNumLen43 = hexNumLen2/43\n", "    var\
    \ hex = num.characters\n    var hexCount = hex.count\n    var hexDigits = [String]()\n\
    \    var hexDigitCount = 0\n    var hexDigitCount2 = 0\n    var hexDigitCount3\
    \ = 0\n    var hexDigitCount4 = 0\n    var hexDigitCount5 = 0\n    var hexDigitCount6\
    \ = 0\n    var hexDigitCount7 = 0\n    var hexDigitCount8 = 0\n    var hexDigitCount9\
    \ = 0\n    var hexDigitCount10 = 0\n    var hexDigitCount11 = 0\n    var hexDigitCount12\
    \ = 0\n    var hexDigitCount13 = 0\n    var hexDigitCount14 = 0\n    var hexDigitCount15\
    \ = 0\n    var hexDigitCount16 = 0\n    var hexDigitCount17 = 0\n    var hexDigitCount18\
    \ = 0\n    var hexDigitCount19 = 0\n    var hexDigitCount20 = 0\n    var hexDigitCount21\
    \ = 0\n    var hexDigitCount22 = 0\n    var hexDigitCount23 = 0\n    var hexDigitCount24\
    \ = 0\n    var hexDigitCount25 = 0\n    var hexDigitCount26 = 0\n    var hexDigitCount27\
    \ = 0\n    var hexDigitCount28 = 0\n    var hexDigitCount29 = 0\n    var hexDigitCount30\
    \ = 0\n    var hexDigitCount31 = 0\n    var hexDigitCount32 = 0\n    var hexDigitCount33\
    \ = 0\n    var hexDigitCount34 = 0\n    var hexDigitCount35 = 0\n    var hexDigitCount36\
    \ = 0\n    var hexDigitCount37 = 0\n    var hexDigitCount38 = 0\n    var hexDigitCount39\
    \ = 0\n    var hexDigitCount40 = 0\n    var hexDigitCount41 = 0\n    var hexDigitCount42\
    \ = 0\n    var hexDigitCount43 = 0\n    var hexDigitCount44 = 0\n    var hexDigitCount45\
    \ = 0\n    var hexDigitCount46 = 0\n    var hexDigitCount47 = 0\n    var hexDigitCount48\
    \ = 0\n    var hexDigitCount49 = 0\n    var hexDigitCount50 = 0\n    var hexDigitCount51\
    \ = 0\n    var hexDigitCount52 = 0\n    var hexDigitCount53 = 0\n    var hexDigitCount54\
    \ = 0\n    var hexDigitCount55 = 0\n    var hexDigitCount56 = 0\n    var hexDigitCount57\
    \ = 0\n    var hexDigitCount58 = 0\n    var hexDigitCount59 = 0\n    var hexDigitCount60\
    \ = 0\n    var hexDigitCount61 = 0\n    var hexDigitCount62 = 0\n    var hexDigitCount63\
    \ = 0\n    var hexDigitCount64 = 0\n    var hexDigitCount65 = 0\n    var hexDigitCount66\
    \ = 0\n    var hexDigitCount67 = 0\n    var hexDigitCount68 = 0\n    var hexDigitCount69\
    \ = 0\n    var hexDigitCount70 = 0\n    var ", "    var count = 0\n    for char\
    \ in num {\n        if char >= '0' && char <= '9' {\n            count += char\
    \ - '0'\n        } else if char >= 'A' && char <= 'F' {\n            count +=\
    \ char - 'A' + 10\n        } else if char >= 'a' && char <= 'f' {\n          \
    \  count += char - 'a' + 10\n        }\n    }\n    return count", "    let digits\
    \ = num.characters\n    let hexDigits = digits.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime(hexDigit:\
    \ $0) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    return hexDigitPrimeCount\
    \ + hexDigitCount", "    var nums = num.characters\n    var numsLen = nums.count\n\
    \    var numsLen2 = numsLen * 2\n    var numsLen3 = numsLen * 3\n    var numsLen4\
    \ = numsLen * 4\n    var numsLen5 = numsLen * 5\n    var numsLen6 = numsLen *\
    \ 6\n    var numsLen7 = numsLen * 7\n    var numsLen8 = numsLen * 8\n    var numsLen9\
    \ = numsLen * 9\n    var numsLen10 = numsLen * 10\n    var numsLen11 = numsLen\
    \ * 11\n    var numsLen12 = numsLen * 12\n    var numsLen13 = numsLen * 13\n \
    \   var numsLen14 = numsLen * 14\n    var numsLen15 = numsLen * 15\n    var numsLen16\
    \ = numsLen * 16\n    var numsLen17 = numsLen * 17\n    var numsLen18 = numsLen\
    \ * 18\n    var numsLen19 = numsLen * 19\n    var numsLen20 = numsLen * 20\n \
    \   var numsLen21 = numsLen * 21\n    var numsLen22 = numsLen * 22\n    var numsLen23\
    \ = numsLen * 23\n    var numsLen24 = numsLen * 24\n    var numsLen25 = numsLen\
    \ * 25\n    var numsLen26 = numsLen * 26\n    var numsLen27 = numsLen * 27\n \
    \   var numsLen28 = numsLen * 28\n    var numsLen29 = numsLen * 29\n    var numsLen30\
    \ = numsLen * 30\n    var numsLen31 = numsLen * 31\n    var numsLen32 = numsLen\
    \ * 32\n    var numsLen33 = numsLen * 33\n    var numsLen34 = numsLen * 34\n \
    \   var numsLen35 = numsLen * 35\n    var numsLen36 = numsLen * 36\n    var numsLen37\
    \ = numsLen * 37\n    var numsLen38 = numsLen * 38\n    var numsLen39 = numsLen\
    \ * 39\n    var numsLen40 = numsLen * 40\n    var numsLen41 = numsLen * 41\n \
    \   var numsLen42 = numsLen * 42\n    var numsLen43 = numsLen * 43\n    var numsLen",
  "    var nums = num.characters\n    var result = 0\n    for _ in 0..<nums.count\
    \ {\n        let digit = nums[_] as UInt8\n        if digit == 0xA || digit ==\
    \ 0xB || digit == 0xC || digit == 0xD || digit == 0xE || digit == 0xF {\n    \
    \        result += digit as Int\n        } else {\n            result += digit\
    \ as Int\n        }\n    }\n    return result", "    var nums = num.characters\n\
    \    var hexNum = nums.map { String($0) }\n    var hexNums = hexNum.map { String($0)\
    \ }\n    var hexNumsCount = hexNums.count\n    var hexNumsCount2 = hexNumsCount\
    \ / 2\n    var hexNumsCount3 = hexNumsCount2 / 2\n    var hexNumsCount4 = hexNumsCount3\
    \ / 2\n    var hexNumsCount5 = hexNumsCount4 / 2\n    var hexNumsCount6 = hexNumsCount5\
    \ / 2\n    var hexNumsCount7 = hexNumsCount6 / 2\n    var hexNumsCount8 = hexNumsCount7\
    \ / 2\n    var hexNumsCount9 = hexNumsCount8 / 2\n    var hexNumsCount10 = hexNumsCount9\
    \ / 2\n    var hexNumsCount11 = hexNumsCount10 / 2\n    var hexNumsCount12 = hexNumsCount11\
    \ / 2\n    var hexNumsCount13 = hexNumsCount12 / 2\n    var hexNumsCount14 = hexNumsCount13\
    \ / 2\n    var hexNumsCount15 = hexNumsCount14 / 2\n    var hexNumsCount16 = hexNumsCount15\
    \ / 2\n    var hexNumsCount17 = hexNumsCount16 / 2\n    var hexNumsCount18 = hexNumsCount17\
    \ / 2\n    var hexNumsCount19 = hexNumsCount18 / 2\n    var hexNumsCount20 = hexNumsCount19\
    \ / 2\n    var hexNumsCount21 = hexNumsCount20 / 2\n    var hexNumsCount22 = hexNumsCount21\
    \ / 2\n    var hexNumsCount23 = hexNumsCount22 / 2\n    var hexNumsCount24 = hexNumsCount23\
    \ / 2\n    var hexNumsCount25 = hexNumsCount24 / 2\n    var hexNumsCount26 = hexNumsCount25\
    \ / 2\n    var hexNumsCount27 = hexNumsCount26 / 2\n    var hexNumsCount28 = hexNumsCount27\
    \ / 2\n    var hexNumsCount29 = hexNumsCount28 / 2\n    var hexNumsCount30 = hexNumsCount29\
    \ / 2\n    var hexNumsCount31 = hexNumsCount30 / 2\n    var hexNumsCount32 = hexNumsCount31\
    \ / 2\n    var hexNumsCount33 = hexNumsCount32 / 2\n    var ", "    let hex =\
    \ num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n    let hexDigits\
    \ = hex.unicodeScalars.map { String($0) }\n    let hexDigitCount = hexDigits.count\n\
    \    let hexDigitPrimes = hexDigits.filter { isPrime(hexDigit: $0) }\n    let\
    \ hexDigitPrimeCount = hexDigitPrimes.count\n    return hexDigitPrimeCount + hexDigitCount",
  "    var nums = num.characters\n    var numsCount = nums.count\n    var numsDigit\
    \ = nums.characters\n    var numsDigitCount = numsDigit.count\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit = numsDigit.characters\n    var numsDigitCount\
    \ = numsDigitCount - 1\n    var numsDigit", "    guard let num = num.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics.inverted) else {\n        return 0\n    }\n    var\
    \ nums: [Int] = []\n    for char in num.unicodeScalars {\n        if char.value\
    \ > 0xFF {\n            return 0\n        }\n        nums.append(char.value)\n\
    \    }\n    let hex = nums.reduce(0) { (sum, value) in\n        sum * 16 + value\n\
    \    }\n    let hexString = String(hex)\n    let hexDigits = hexString.unicodeScalars\n\
    \        .filter({ $0.value > 0xFF })\n        .reduce(0) { (sum, value) in\n\
    \            sum * 16 + value\n    }\n    let primes = hexDigits.filter { $0 %\
    \ 2 == 0 }\n        .filter { $0 % 3 == 0 }\n        .filter { $0 % 5 == 0 }\n\
    \        .filter { $0 % 7 == 0 }\n        .filter { $0 % 11 == 0 }\n        .filter\
    \ { $0 % 13 == 0 }\n        .filter { $0 % 17 == 0 }\n        .filter { $0 % 19\
    \ == 0 }\n        .filter { $0 % 23 == 0 }\n        .filter { $0 % 29 == 0 }\n\
    \        .filter { $0 % 31 == 0 }\n        .filter { $0 % 37 == 0 }\n        .filter\
    \ { $0 % 41 == 0 }\n        .filter { $0 % 43 == 0 }\n        .filter { $0 % 47\
    \ == 0 }\n        .filter { $0 % 53 == 0 }\n        .filter { $0 % 59 == 0 }\n\
    \        .filter { $0 % 61 == 0 }\n        .filter { $0 % 67 == 0 }\n        .filter\
    \ { $0 % 71 == 0 }\n        .filter { $0 % 73 == 0 }\n        .filter { $0 % 79\
    \ == 0 }\n        .filter { $0 % 83 == 0 }\n        .filter { $0 % 89 == 0 }\n\
    \        .filter { $0 % 97 == 0 }\n        .filter { $0 % 101 == 0:}\n       \
    \ .filter { $0 % 103 == 0:}\n        .filter { $0 % 105 == 0:}\n        .filter\
    \ { $0 % 107 == 0:}\n        .filter { $0 % 109 == 0:}\n        .filter { $0 %\
    \ 113 == 0:}\n        .filter { $0 % 117 == 0:}\n        .filter { $0 % 121 ==\
    \ 0:}\n        .filter { $0 % 123 == 0:}\n        .filter { $0 % 127 == 0:}",
  "    var hex = num.characters\n    var hexDigits = [UInt8]()\n    for char in hex\
    \ {\n        hexDigits.append(UInt8(String(char).unicodeScalars.first!.value -\
    \ 48))\n    }\n    var primes = [UInt8]()\n    var primeCount = 0\n    for digit\
    \ in hexDigits {\n        if digit == 2 {\n            primes.append(digit)\n\
    \            primeCount += 1\n        }\n    }\n    if primeCount > 1 {\n    \
    \    return primeCount\n    }\n    return 0", "    var count = 0\n    for char\
    \ in num {\n        switch char {\n        case \"0\": count++\n        case \"\
    1\": count++\n        case \"2\": count++\n        case \"3\": count++\n     \
    \   case \"4\": count++\n        case \"5\": count++\n        case \"6\": count++\n\
    \        case \"7\": count++\n        case \"8\": count++\n        case \"9\"\
    : count++\n        case \"A\": count++\n        case \"B\": count++\n        case\
    \ \"C\": count++\n        case \"D\": count++\n        case \"E\": count++\n \
    \       case \"F\": count++\n        default: break\n        }\n    }\n    return\
    \ count", "    var hex = num.unicodeScalars\n    var hexDigits = \"\"\n    var\
    \ count = 0\n    for hex in hex {\n        hexDigits += String(hex)\n    }\n \
    \   for hexDigit in hexDigits {\n        if hexDigit == \"A\" {\n            count\
    \ += 1\n        } else if hexDigit == \"B\" {\n            count += 1\n      \
    \  } else if hexDigit == \"C\" {\n            count += 1\n        } else if hexDigit\
    \ == \"D\" {\n            count += 1\n        } else if hexDigit == \"E\" {\n\
    \            count += 1\n        } else if hexDigit == \"F\" {\n            count\
    \ += 1\n        }\n    }\n    return count", "    // Your code here\n    \n  \
    \  return 0", "    var numAsString = \"\"\n    for char in num {\n        if char\
    \ >= '0' && char <= '9' {\n            numAsString += char\n        }\n    }\n\
    \    let hexAsString = numAsString.toHexString()\n    let hexAsArray = hexAsString.characters\n\
    \    var primeCount = 0\n    for char in hexAsArray {\n        if char == hexAsArray[0]\
    \ {\n            primeCount += 1\n        }\n    }\n    return primeCount", " \
    \   var result = 0\n    for char in num {\n        switch char {\n        case\
    \ \"0\":\n        case \"1\":\n        case \"2\":\n        case \"3\":\n    \
    \    case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"7\"\
    :\n        case \"8\":\n        case \"9\":\n        case \"A\":\n        case\
    \ \"B\":\n        case \"C\":\n        case \"D\":\n        case \"E\":\n    \
    \    case \"F\":\n        default:\n            result += 1\n        }\n    }\n\
    \    return result", "    var hexNum = num.characters.map { String($0) }\n   \
    \ var hexNum2 = hexNum.map { Int($0, radix: 16) }\n    var hexNum3 = hexNum2.filter\
    \ { $0 % 2 == 0 }\n    var hexNum4 = hexNum3.filter { $0 % 3 == 0 }\n    var hexNum5\
    \ = hexNum4.filter { $0 % 5 == 0 }\n    var hexNum6 = hexNum5.filter { $0 % 7\
    \ == 0 }\n    var hexNum7 = hexNum6.filter { $0 % 11 == 0 }\n    var hexNum8 =\
    \ hexNum7.filter { $0 % 13 == 0 }\n    var hexNum9 = hexNum8.filter { $0 % 17\
    \ == 0 }\n    var hexNum10 = hexNum9.filter { $0 % 19 == 0 }\n    var hexNum11\
    \ = hexNum10.filter { $0 % 23 == 0 }\n    var hexNum12 = hexNum11.filter { $0\
    \ % 29 == 0 }\n    var hexNum13 = hexNum12.filter { $0 % 31 == 0 }\n    var hexNum14\
    \ = hexNum13.filter { $0 % 37 == 0 }\n    var hexNum15 = hexNum14.filter { $0\
    \ % 41 == 0 }\n    var hexNum16 = hexNum15.filter { $0 % 43 == 0 }\n    var hexNum17\
    \ = hexNum16.filter { $0 % 47 == 0 }\n    var hexNum18 = hexNum17.filter { $0\
    \ % 53 == 0 }\n    var hexNum19 = hexNum18.filter { $0 % 59 == 0 }\n    var hexNum20\
    \ = hexNum19.filter { $0 % 61 == 0 }\n    var hexNum21 = hexNum20.filter { $0\
    \ % 67 == 0 }\n    var hexNum22 = hexNum21.filter { $0 % 71 == 0 }\n    var hexNum23\
    \ = hexNum22.filter { $0 % 73 == 0 }\n    var hexNum24 = hexNum23.filter { $0\
    \ % 79 == 0 }\n    var hexNum25 = hexNum24.filter { $0 % 83 == 0 }\n    var hexNum26\
    \ = hexNum25.filter { $0 % 89 == 0 }\n    var hexNum27 = hexNum26.filter { $0\
    \ % 97 == 0 }\n    var hexNum28 = hexNum27.filter { $0 % 101 == 0 }\n    var hexNum29\
    \ = hexNum28.filter { $0 % 103 == 0 }\n    var hexNum30 = hex", "    var nums\
    \ = num.characters\n    var numsLen = nums.count\n    var result = 0\n    var\
    \ primes = Set<Int>()\n    var primesLen = 0\n    var primesSum = 0\n    var primesSumLen\
    \ = 0\n    var primesSum2 = 0\n    var primesSum2Len = 0\n    var primesSum3 =\
    \ 0\n    var primesSum3Len = 0\n    var primesSum4 = 0\n    var primesSum4Len\
    \ = 0\n    var primesSum5 = 0\n    var primesSum5Len = 0\n    var primesSum6 =\
    \ 0\n    var primesSum6Len = 0\n    var primesSum7 = 0\n    var primesSum7Len\
    \ = 0\n    var primesSum8 = 0\n    var primesSum8Len = 0\n    var primesSum9 =\
    \ 0\n    var primesSum9Len = 0\n    var primesSum10 = 0\n    var primesSum10Len\
    \ = 0\n    var primesSum11 = 0\n    var primesSum11Len = 0\n    var primesSum12\
    \ = 0\n    var primesSum12Len = 0\n    var primesSum13 = 0\n    var primesSum13Len\
    \ = 0\n    var primesSum14 = 0\n    var primesSum14Len = 0\n    var primesSum15\
    \ = 0\n    var primesSum15Len = 0\n    var primesSum16 = 0\n    var primesSum16Len\
    \ = 0\n    var primesSum17 = 0\n    var primesSum17Len = 0\n    var primesSum18\
    \ = 0\n    var primesSum18Len = 0\n    var primesSum19 = 0\n    var primesSum19Len\
    \ = 0\n    var primesSum20 = 0\n    var primesSum20Len = 0\n    var primesSum21\
    \ = 0\n    var primesSum21Len = 0\n    var primesSum22 = 0\n    var primesSum22Len\
    \ = 0\n    var primesSum23 = 0\n    var primesSum23Len = 0\n    var primesSum24\
    \ = 0\n    var primesSum24Len = 0\n    var primesSum25 = 0\n    var primesSum25Len\
    \ = 0\n    var primesSum26 = 0\n    var primesSum26Len = 0\n    var primesSum27\
    \ = 0\n    var primesSum27Len = 0\n    var primesSum28 = 0\n    var primesSum28Len\
    \ = 0\n    var primesSum29 = 0\n    var primesSum29Len = 0\n    var primesSum30\
    \ = 0\n    var primesSum30Len = 0\n    var primesSum31 = 0\n    var primesSum31Len\
    \ = 0\n    var primesSum32 = 0\n    var primesSum32Len = 0", "    var hexNum =\
    \ num.unicodeScalars\n    var hexNumLen = hexNum.count\n    var hexNumStr = hexNum.map\
    \ { String($0) }\n    var hexNumStrLen = hexNumStr.count\n    var hexNumStrArr\
    \ = hexNumStr.map { String($0) }\n    var hexNumStrArrLen = hexNumStrArr.count\n\
    \    var hexNumStrArrArr = hexNumStrArr.map { String($0) }\n    var hexNumStrArrArrLen\
    \ = hexNumStrArrArr.count\n    var hexNumStrArrArrArrLen = hexNumStrArrArrArr.count\n\
    \    var hexNumStrArrArrArrArrLen = hexNumStrArrArrArrArr.count\n    var hexNumStrArrArrArrArrArrLen\
    \ = hexNumStrArrArrArrArrArr.count\n    var hexNumStrArrArrArrArrArrArrLen = hexNumStrArrArrArrArrArrArr.count\n\
    \    var hexNumStrArrArrArrArrArrArrArrLen = hexNumStrArrArrArrArrArrArrArr.count\n\
    \    var hexNumStrArrArrArrArrArrArrArrArrLen = hexNumStrArrArrArrArrArrArrArrArrArr.count\n\
    \    var hexNumStrArrArrArrArrArrArrArrArrArrArrLen = hexNumStrArrArrArrArrArrArrArrArrArrArrArrArrArr.count\n\
    \    var hexNumStrArrArrArrArrArrArrArrArrArrArrArrArrLen = hexNumStrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArr.count\n\
    \    var hexNumStrArrArrArrArrArrArrArrArrArrArrArrArrArrArrLen = hexNumStrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArrArr",
  "    var nums = num.characters\n    var numsCount = nums.count\n    var hexDigits\
    \ = [UInt8]()\n    var hexDigitsCount = nums.count\n    var hexDigitsCount2 =\
    \ hexDigitsCount\n    var hexDigitsCount3 = hexDigitsCount2\n    var hexDigitsCount4\
    \ = hexDigitsCount3\n    var hexDigitsCount5 = hexDigitsCount4\n    var hexDigitsCount6\
    \ = hexDigitsCount5\n    var hexDigitsCount7 = hexDigitsCount6\n    var hexDigitsCount8\
    \ = hexDigitsCount7\n    var hexDigitsCount9 = hexDigitsCount8\n    var hexDigitsCount10\
    \ = hexDigitsCount9\n    var hexDigitsCount11 = hexDigitsCount10\n    var hexDigitsCount12\
    \ = hexDigitsCount11\n    var hexDigitsCount13 = hexDigitsCount12\n    var hexDigitsCount14\
    \ = hexDigitsCount13\n    var hexDigitsCount15 = hexDigitsCount14\n    var hexDigitsCount16\
    \ = hexDigitsCount15\n    var hexDigitsCount17 = hexDigitsCount16\n    var hexDigitsCount18\
    \ = hexDigitsCount17\n    var hexDigitsCount19 = hexDigitsCount18\n    var hexDigitsCount20\
    \ = hexDigitsCount19\n    var hexDigitsCount21 = hexDigitsCount20\n    var hexDigitsCount22\
    \ = hexDigitsCount21\n    var hexDigitsCount23 = hexDigitsCount22\n    var hexDigitsCount24\
    \ = hexDigitsCount23\n    var hexDigitsCount25 = hexDigitsCount24\n    var hexDigitsCount26\
    \ = hexDigitsCount25\n    var hexDigitsCount27 = hexDigitsCount26\n    var hexDigitsCount28\
    \ = hexDigitsCount27\n    var hexDigitsCount29 = hexDigitsCount28\n    var hexDigitsCount30\
    \ = hexDigitsCount29\n    var hexDigitsCount31 = hexDigitsCount30\n    var hexDigitsCount32\
    \ = hexDigitsCount31\n    var hexDigitsCount33 = hexDigitsCount32\n    var hexDigitsCount34\
    \ = hexDigitsCount33\n    var hexDigitsCount35 = hexDigitsCount34\n    var hexDigitsCount36\
    \ = hexDigitsCount35\n    var hexDigitsCount37 = hexDigitsCount36\n    var hexDigitsCount38\
    \ = hexDigitsCount37\n    var hexDigitsCount39 = hexDigitsCount", "    let hex\
    \ = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n    let hexDigits\
    \ = hex.unicodeScalars.map { Int($0.value) }\n    let hexDigitCount = hexDigits.count\n\
    \    let hexDigitPrimes = hexDigits.filter { $0 % 2 == 0 }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimes = hexDigitPrimes.map { Int($0\
    \ * 2) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimes\
    \ = hexDigitPrimes.map { Int($0 * 3) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    let hexDigitPrimes = hexDigitPrimes.map { Int($0 * 5) }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimes = hexDigitPrimes.map { Int($0\
    \ * 7) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimes\
    \ = hexDigitPrimes.map { Int($0 * 11) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    let hexDigitPrimes = hexDigitPrimes.map { Int($0 * 13) }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimes = hexDigitPrimes.map { Int($0\
    \ * 17) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimes\
    \ = hexDigitPrimes.map { Int($0 * 19) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    let hexDigitPrimes = hexDigitPrimes.map { Int($0 * 23) }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimes = hexDigitPrimes.map { Int($0\
    \ * 29) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimes\
    \ = hexDigitPrimes.map { Int($0 * 31) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    let hexDigitPrimes = hexDigitPrimes.map { Int($0 * 37) }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimes = hexDigitPrimes.map { Int($0\
    \ * 41) }\n    let hexDigitPrimeCount = hexDigit", "    var nums = [Int]()\n \
    \   var numsCount = 0\n    var numsCount2 = 0\n    var numsCount3 = 0\n    var\
    \ numsCount4 = 0\n    var numsCount5 = 0\n    var numsCount6 = 0\n    var numsCount7\
    \ = 0\n    var numsCount8 = 0\n    var numsCount9 = 0\n    var numsCount10 = 0\n\
    \    var numsCount11 = 0\n    var numsCount12 = 0\n    var numsCount13 = 0\n \
    \   var numsCount14 = 0\n    var numsCount15 = 0\n    var numsCount16 = 0\n  \
    \  var numsCount17 = 0\n    var numsCount18 = 0\n    var numsCount19 = 0\n   \
    \ var numsCount20 = 0\n    var numsCount21 = 0\n    var numsCount22 = 0\n    var\
    \ numsCount23 = 0\n    var numsCount24 = 0\n    var numsCount25 = 0\n    var numsCount26\
    \ = 0\n    var numsCount27 = 0\n    var numsCount28 = 0\n    var numsCount29 =\
    \ 0\n    var numsCount30 = 0\n    var numsCount31 = 0\n    var numsCount32 = 0\n\
    \    var numsCount33 = 0\n    var numsCount34 = 0\n    var numsCount35 = 0\n \
    \   var numsCount36 = 0\n    var numsCount37 = 0\n    var numsCount38 = 0\n  \
    \  var numsCount39 = 0\n    var numsCount40 = 0\n    var numsCount41 = 0\n   \
    \ var numsCount42 = 0\n    var numsCount43 = 0\n    var numsCount44 = 0\n    var\
    \ numsCount45 = 0\n    var numsCount46 = 0\n    var numsCount47 = 0\n    var numsCount48\
    \ = 0\n    var numsCount49 = 0\n    var numsCount50 = 0\n    var numsCount51 =\
    \ 0\n    var numsCount52 = 0\n    var numsCount53 = 0\n    var numsCount54 = 0\n\
    \    var numsCount55 = 0\n    var numsCount56 = 0\n    var numsCount57 = 0\n \
    \   var numsCount58 = 0\n    var numsCount59 = 0\n    var numsCount60 = 0\n  \
    \  var numsCount61 = 0\n    var numsCount62 = 0\n    var numsCount63 = 0\n   \
    \ var numsCount64 = 0\n    var numsCount65 = 0\n    var numsCount66 = 0\n    var\
    \ numsCount67 = 0\n    var numsCount68 = 0\n    var numsCount69 = 0\n    var numsCount70\
    \ = 0\n    var numsCount71 = 0\n    var numsCount72 = 0\n    var num", "    let\
    \ digits = num.characters\n    let hexDigits = digits.map { String($0) }\n   \
    \ let hexDigitCount = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter\
    \ { $0.isPrime }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter { $0.isPrime && $0.isPrime }\n    let hexDigitPrimePrimeCount\
    \ = hexDigitPrimePrimes.count\n    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePri", "    var count = 0\n    var digit = num[0]\n    for\
    \ _ in 0..<num.count {\n        let digit = num[num]\n        if digit == \"A\"\
    \ || digit == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"E\" || digit\
    \ == \"F\" {\n            count += 1\n        }\n    }\n    return count", " \
    \   var nums = [Int]()\n    for c in num {\n        if c >= '0' && c <= '9' {\n\
    \            nums.append(c - '0')\n        } else if c >= 'A' && c <= 'F' {\n\
    \            nums.append(c - 'A' + 10)\n        } else if c >= 'a' && c <= 'f'\
    \ {\n            nums.append(c - 'a' + 10)\n        } else {\n            return\
    \ -1\n        }\n    }\n    var result = 0\n    for num in nums {\n        if\
    \ num == 2 {\n            result += 1\n        } else if num == 3 {\n        \
    \    result += 1\n        } else if num == 5 {\n            result += 1\n    \
    \    } else if num == 7 {\n            result += 1\n        } else if num == 11\
    \ {\n            result += 1\n        } else if num == 13 {\n            result\
    \ += 1\n        } else if num == 17 {\n            result += 1\n        } else\
    \ if num == 19 {\n            result += 1\n        } else if num == 29 {\n   \
    \         result += 1\n        } else if num == 39 {\n            result += 1\n\
    \        } else if num == 49 {\n            result += 1\n        } else if num\
    \ == 59 {\n            result += 1\n        } else if num == 69 {\n          \
    \  result += 1\n        } else if num == 91 {\n            result += 1\n     \
    \   } else if num == 99 {\n            result += 1\n        } else if num == 109\
    \ {\n            result += 1\n        } else if num == 119 {\n            result\
    \ += 1\n        } else if num == 129 {\n            result += 1\n        } else\
    \ if num == 139 {\n            result += 1\n        } else if num == 159 {\n \
    \           result += 1\n        } else if num == 169 {\n            result +=\
    \ 1\n        } else if num == 179 {\n            result += 1\n        } else if\
    \ num == 189 {\n            result += 1\n        } else if num == 199 {\n    \
    \        result += 1\n        } else if num == 199 {\n            result += 1\n\
    \        } else if num == 199 {\n            result += 1\n        } else if num\
    \ == 199 {\n            result += 1\n        } else if num == 199 {\n        \
    \    result += 1\n        } else if num == 199 {\n            result += 1\n  \
    \      } else if num == 199 {\n            result += 1\n        } else if num\
    \ == 199 {\n            result += 1\n        } else if num == 199 {\n        \
    \    result += 1\n        } else if num == 199 {\n            result += 1\n  \
    \      } else if num == 199 {\n            result += 1\n        } else if num\
    \ == 199 {\n            result += 1\n        } else if num", "    var sum = 0\n\
    \    for c in num {\n        sum += Int(c) - 48\n    }\n    if sum < 2 {\n   \
    \     return 0\n    }\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    var prime = primes[0]\n\
    \    for prime in primes {\n        if prime * prime > sum {\n            break\n\
    \        }\n    }\n    return prime * prime", "    var nums = num.characters\n\
    \    var count = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    for index in 0..<nums.count\
    \ {\n        let digit = Int(nums[index])\n        if digit == 0 || digit == 1\
    \ {\n            count += 1\n            continue\n        }\n        for prime\
    \ in primes {\n            if digit % prime == 0 {\n                count += 1\n\
    \                break\n            }\n        }\n    }\n    return count", " \
    \   var nums = num.characters\n    var numsCount = nums.count\n    var hexDigits\
    \ = [UInt8](repeating: 0, count: numsCount)\n    var hexDigitsCount = numsCount\n\
    \    for index in 0..<numsCount {\n        let hexDigit = UInt8(nums[index])\n\
    \        hexDigits[hexDigitsCount] = hexDigit\n        hexDigitsCount += 1\n \
    \   }\n    var hexDigitsCount2 = hexDigitsCount\n    var hexDigitsCount3 = hexDigitsCount\n\
    \    var hexDigitsCount4 = hexDigitsCount\n    var hexDigitsCount5 = hexDigitsCount\n\
    \    var hexDigitsCount6 = hexDigitsCount\n    var hexDigitsCount7 = hexDigitsCount\n\
    \    var hexDigitsCount8 = hexDigitsCount\n    var hexDigitsCount9 = hexDigitsCount\n\
    \    var hexDigitsCount10 = hexDigitsCount\n    var hexDigitsCount11 = hexDigitsCount\n\
    \    var hexDigitsCount12 = hexDigitsCount\n    var hexDigitsCount13 = hexDigitsCount\n\
    \    var hexDigitsCount14 = hexDigitsCount\n    var hexDigitsCount15 = hexDigitsCount\n\
    \    var hexDigitsCount16 = hexDigitsCount\n    var hexDigitsCount17 = hexDigitsCount\n\
    \    var hexDigitsCount18 = hexDigitsCount\n    var hexDigitsCount19 = hexDigitsCount\n\
    \    var hexDigitsCount20 = hexDigitsCount\n    var hexDigitsCount21 = hexDigitsCount\n\
    \    var hexDigitsCount22 = hexDigitsCount\n    var hexDigitsCount23 = hexDigitsCount\n\
    \    var hexDigitsCount24 = hexDigitsCount\n    var hexDigitsCount25 = hexDigitsCount\n\
    \    var hexDigitsCount26 = hexDigitsCount\n    var hexDigitsCount27 = hexDigitsCount\n\
    \    var hexDigitsCount28 = hexDigitsCount\n    var hexDigitsCount29 = hexDigitsCount\n\
    \    var hexDigitsCount30 = hexDigitsCount\n    var hexDigitsCount31 = hexDigitsCount\n\
    \    var hexDigitsCount32 = hexDigitsCount\n    var hexDigitsCount33 = hexDigitsCount\n\
    \    var hexDigitsCount34 = hexDigitsCount\n    var hexDigitsCount35 = hexDigitsCount\n\
    \    var hexDigitsCount36 = hexDigitsCount\n    var hexDigitsCount37 = hexDigitsCount\n\
    \    var hexDigitsCount38 = hexDigits", "    var nums = num.characters\n    var\
    \ count = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    for _ in 0..<nums.count\
    \ {\n        let digit = Int(String(nums[_]).uppercaseHexDigit())\n        if\
    \ digit == 0 {\n            count += 1\n        } else {\n            if primes.contains(digit)\
    \ {\n                count += 1\n            }\n        }\n    }\n    return count",
  "    let nums = num.characters\n    var sum = 0\n    for n in nums {\n        sum\
    \ += Int(n) * 16\n    }\n    return sum % 10", "    var hexDigits = \"\"\n   \
    \ var count = 0\n    for char in num {\n        hexDigits += char\n    }\n   \
    \ for char in hexDigits {\n        if char == \"A\" {\n            count += 2\n\
    \        } else if char == \"B\" {\n            count += 1\n        } else if\
    \ char == \"C\" {\n            count += 2\n        } else if char == \"D\" {\n\
    \            count += 1\n        } else if char == \"E\" {\n            count\
    \ += 2\n        } else if char == \"F\" {\n            count += 1\n        }\n\
    \    }\n    return count", "    var result = 0\n    var digits = num.characters\n\
    \    var i = 0\n    for digit in digits {\n        if digit == \"A\" {\n     \
    \       result += 2\n        } else if digit == \"B\" {\n            result +=\
    \ 3\n        } else if digit == \"C\" {\n            result += 5\n        } else\
    \ if digit == \"D\" {\n            result += 7\n        } else if digit == \"\
    E\" {\n            result += 11\n        } else if digit == \"F\" {\n        \
    \    result += 13\n        } else {\n            result += digit - 48\n      \
    \  }\n    }\n    return result", "    // Your code here\n    \n    return 0",
  "    var hex = num.characters.map { String($0) }\n    var hexDigits = hex.map {\
    \ Int(String($0)) }\n    var primes = hexDigits.filter { $0 % 2 == 0 }\n    var\
    \ primesCount = primes.count\n    if primesCount == 0 {\n        return primesCount\n\
    \    }\n    var hexDigitCount = hexDigits.count\n    var hexDigitPrimes = hexDigits.filter\
    \ { $0 % 2 == 0 }\n    var hexDigitPrimesCount = hexDigitPrimes.count\n    var\
    \ hexDigitPrimePrimes = hexDigitPrimes.filter { $0 % 3 == 0 }\n    var hexDigitPrimePrimesCount\
    \ = hexDigitPrimePrimes.count\n    var hexDigitPrimePrimePrimesCount = hexDigitPrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimesCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimesCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime", "    var\
    \ result = 0\n    for char in num.characters {\n        switch char {\n      \
    \  case 'A':\n        case 'B':\n        case 'C':\n        case 'D':\n      \
    \  case 'E':\n        case 'F':\n            result += 1\n        default:\n \
    \           break\n        }\n    }\n    return result", "    let digits = num.characters\n\
    \    var hexDigits = 0\n    for digit in digits {\n        hexDigits += Int(digit)\
    \ - Int(Int(digit)!)\n    }\n    return hexDigits", "    var nums = num.characters\n\
    \    var count = 0\n    for num in nums {\n        if nums.contains(where: { $0.isHexadecimal()\
    \ }) {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ hexDigits = [Int]()\n    var count = 0\n    for char in num {\n        guard\
    \ let digit = Int(String(char).uppercased(), radix: 16) else {\n            return\
    \ count\n        }\n        hexDigits.append(digit)\n        count += 1\n    }\n\
    \    var primes = [Int]()\n    for digit in hexDigits {\n        if digit == 2\
    \ {\n            primes.append(digit)\n        }\n    }\n    return primes.count",
  "    var count = 0\n    for c in num {\n        switch c {\n        case \"0\":\n\
    \        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"\
    4\":\n        case \"5\":\n        case \"6\":\n        case \"7\":\n        case\
    \ \"8\":\n        case \"9\":\n        case \"A\":\n        case \"B\":\n    \
    \    case \"C\":\n        case \"D\":\n        case \"E\":\n        case \"F\"\
    :\n            count += 1\n        default:\n            break\n        }\n  \
    \  }\n    return count", "    var nums = num.characters\n    var result = 0\n\
    \    for index in 0..<nums.count {\n        let digit = nums[index]\n        switch\
    \ digit {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"\
    , \"8\", \"9\":\n            result += 1\n        case \"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\":\n            result += 2\n        default:\n            break\n\
    \        }\n    }\n    return result", "    var nums = num.characters\n    var\
    \ result = 0\n    var i = 0\n    for _ in 0..<nums.count {\n        let hex =\
    \ nums[i]\n        switch hex {\n        case \"0\": \n        case \"1\": \n\
    \        case \"2\": \n        case \"3\": \n        case \"4\": \n        case\
    \ \"5\": \n        case \"6\": \n        case \"7\": \n        case \"8\": \n\
    \        case \"9\": \n        case \"A\": \n        case \"B\": \n        case\
    \ \"C\": \n        case \"D\": \n        case \"E\": \n        case \"F\": \n\
    \        default: \n            break\n        }\n        i += 1\n    }\n    return\
    \ result", "    var count = 0\n    var digit = 0\n    for digit in num {\n   \
    \     switch digit {\n        case \"0\":\n            count = count + 1\n   \
    \     case \"1\":\n            count = count + 1\n        case \"2\":\n      \
    \      count = count + 1\n        case \"3\":\n            count = count + 1\n\
    \        case \"4\":\n            count = count + 1\n        case \"5\":\n   \
    \         count = count + 1\n        case \"6\":\n            count = count +\
    \ 1\n        case \"7\":\n            count = count + 1\n        case \"8\":\n\
    \            count = count + 1\n        case \"9\":\n            count = count\
    \ + 1\n        case \"A\":\n            count = count + 1\n        case \"B\"\
    :\n            count = count + 1\n        case \"C\":\n            count = count\
    \ + 1\n        case \"D\":\n            count = count + 1\n        case \"E\"\
    :\n            count = count + 1\n        case \"F\":\n            count = count\
    \ + 1\n        default:\n            break\n        }\n    }\n    return count",
  "    var nums = num.characters\n    var count = 0\n    for char in nums {\n    \
    \    let digit = Int(char) ?? 0\n        if digit == 0 || digit == 1 {\n     \
    \       continue\n        }\n        if digit == 2 {\n            count += 2\n\
    \            continue\n        }\n        if digit == 3 {\n            count +=\
    \ 3\n            continue\n        }\n        if digit == 5 {\n            count\
    \ += 5\n            continue\n        }\n        if digit == 7 {\n           \
    \ count += 7\n            continue\n        }\n        if digit == 11 {\n    \
    \        count += 11\n            continue\n        }\n        if digit == 13\
    \ {\n            count += 13\n            continue\n        }\n        if digit\
    \ == 17 {\n            count += 17\n            continue\n        }\n        if\
    \ digit == 19 {\n            count += 19\n            continue\n        }\n  \
    \      if digit == 29 {\n            count += 29\n            continue\n     \
    \   }\n        if digit == 37 {\n            count += 37\n            continue\n\
    \        }\n        if digit == 41 {\n            count += 41\n            continue\n\
    \        }\n        if digit == 43  {\n            count += 43\n            continue\n\
    \        }\n        if digit == 47  {\n            count += 47\n            continue\n\
    \        }\n        if digit == 53  {\n            count += 53\n            continue\n\
    \        }\n        if digit == 59  {\n            count += 59\n            continue\n\
    \        }\n        if digit == 63 {\n            count += 63\n            continue\n\
    \        }\n        if digit == 67  {\n            count += 67\n            continue\n\
    \        }\n        if digit == 73 {\n            count += 73\n            continue\n\
    \        }\n        if digit == 79  {\n            count += 79\n            continue\n\
    \        }\n        if digit == 83  {\n            count += 83\n            continue\n\
    \        }\n        if digit == 89  {\n            count += 89\n            continue\n\
    \        }\n        if digit == 97  {\n            count += 97\n            continue\n\
    \        }\n        if digit == 103 {\n            count += 103\n            continue\n\
    \        }\n        if digit == 109 {\n            count += 109\n            continue\n\
    \        }\n        if digit == 113  {\n            count += 113\n           \
    \ continue\n        }\n        if digit == 117  {\n            count += 117\n\
    \            continue\n        }\n        if digit == 121  {\n            count\
    \ += 121\n            continue\n        }\n        if digit == 127  {\n      \
    \      count += 127\n            continue\n        }\n        if digit == 131\
    \ {\n            count += 131\n            continue\n        }\n        if digit\
    \ == 137  {\n            count += 137\n            continue\n        }\n     \
    \   if digit == 143 {\n            count += 143\n            continue\n      \
    \  }\n        if digit == 149  {\n            ", "    guard let num = num.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics) else { return 0 }\n    guard let hex = num.trimmingCharacters(in:\
    \ CharacterSet.lowercase) else { return 0 }\n    var count = 0\n    for char in\
    \ hex.unicodeScalars {\n        guard let digit = Int(char.value, radix: 16) else\
    \ { return 0 }\n        guard digit != 0 else { return 0 }\n        guard digit\
    \ != 1 && !(digit == 2 || digit == 3 || digit == 5 || digit == 7 || digit == 11\
    \ || digit == 13 || digit == 17 || digit == 19 || digit == 23 || digit == 29 ||\
    \ digit == 31 || digit == 37 || digit == 43 || digit == 51) else { return 0 }\n\
    \        count += 1\n    }\n    return count", "    var count = 0\n    for char\
    \ in num {\n        switch char {\n        case \"A\":\n        case \"B\":\n\
    \        case \"C\":\n        case \"D\":\n        case \"E\":\n        case \"\
    F\":\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case\
    \ \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n    \
    \    case \"7\":\n        case \"8\":\n        case \"9\":\n        case \"a\"\
    :\n        case \"b\":\n        case \"c\":\n        case \"d\":\n        case\
    \ \"e\":\n        case \"f\":\n        default:\n            count += 1\n    \
    \    }\n    }\n    return count", "    let numAsString = num.lowercased()\n  \
    \  var count = 0\n    var digit = 0\n    var isPrime = true\n    var isPrime2\
    \ = true\n    var isPrime3 = true\n    var isPrime4 = true\n    var isPrime5 =\
    \ true\n    var isPrime6 = true\n    var isPrime7 = true\n    var isPrime8 = true\n\
    \    var isPrime9 = true\n    var isPrime10 = true\n    var isPrime11 = true\n\
    \    var isPrime12 = true\n    var isPrime13 = true\n    var isPrime14 = true\n\
    \    var isPrime15 = true\n    var isPrime16 = true\n    var isPrime17 = true\n\
    \    var isPrime18 = true\n    var isPrime19 = true\n    var isPrime20 = true\n\
    \    var isPrime21 = true\n    var isPrime22 = true\n    var isPrime23 = true\n\
    \    var isPrime24 = true\n    var isPrime25 = true\n    var isPrime26 = true\n\
    \    var isPrime27 = true\n    var isPrime28 = true\n    var isPrime29 = true\n\
    \    var isPrime30 = true\n    var isPrime31 = true\n    var isPrime32 = true\n\
    \    var isPrime33 = true\n    var isPrime34 = true\n    var isPrime35 = true\n\
    \    var isPrime36 = true\n    var isPrime37 = true\n    var isPrime38 = true\n\
    \    var isPrime39 = true\n    var isPrime40 = true\n    var isPrime41 = true\n\
    \    var isPrime42 = true\n    var isPrime43 = true\n    var isPrime44 = true\n\
    \    var isPrime45 = true\n    var isPrime46 = true\n    var isPrime47 = true\n\
    \    var isPrime48 = true\n    var isPrime49 = true\n    var isPrime50 = true\n\
    \    var isPrime51 = true\n    var isPrime52 = true\n    var isPrime53 = true\n\
    \    var isPrime54 = true\n    var isPrime55 = true\n    var isPrime56 = true\n\
    \    var isPrime57 = true\n    var isPrime58 = true\n    var isPrime59 = true\n\
    \    var isPrime60 = true\n    var isPrime61 = true\n    var isPrime62 = true\n\
    \    var isPrime63 = true\n    var isPrime64 = true\n    var isPrime65 = true\n\
    \    var isPrime66 = true\n    var isPrime67 = true\n    var isPrime68 = true\n\
    \    var isPrime69 = true\n    var ", "    // Your code here\n    var count =\
    \ 0\n    for char in num {\n        switch char {\n        case \"A\":\n     \
    \   case \"B\":\n        case \"C\":\n        case \"D\":\n        case \"E\"\
    :\n        case \"F\":\n            count += 1\n        default:\n           \
    \ break\n        }\n    }\n    return count", "    var count = 0\n    var digit\
    \ = 0\n    var hexDigit = 0\n    var hexDigit2 = 0\n    var hexDigit3 = 0\n  \
    \  var hexDigit4 = 0\n    var hexDigit5 = 0\n    var hexDigit6 = 0\n    var hexDigit7\
    \ = 0\n    var hexDigit8 = 0\n    var hexDigit9 = 0\n    var hexDigit10 = 0\n\
    \    var hexDigit11 = 0\n    var hexDigit12 = 0\n    var hexDigit13 = 0\n    var\
    \ hexDigit14 = 0\n    var hexDigit15 = 0\n    var hexDigit16 = 0\n    var hexDigit17\
    \ = 0\n    var hexDigit18 = 0\n    var hexDigit19 = 0\n    var hexDigit20 = 0\n\
    \    var hexDigit21 = 0\n    var hexDigit22 = 0\n    var hexDigit23 = 0\n    var\
    \ hexDigit24 = 0\n    var hexDigit25 = 0\n    var hexDigit26 = 0\n    var hexDigit27\
    \ = 0\n    var hexDigit28 = 0\n    var hexDigit29 = 0\n    var hexDigit30 = 0\n\
    \    var hexDigit31 = 0\n    var hexDigit32 = 0\n    var hexDigit33 = 0\n    var\
    \ hexDigit34 = 0\n    var hexDigit35 = 0\n    var hexDigit36 = 0\n    var hexDigit37\
    \ = 0\n    var hexDigit38 = 0\n    var hexDigit39 = 0\n    var hexDigit40 = 0\n\
    \    var hexDigit41 = 0\n    var hexDigit42 = 0\n    var hexDigit43 = 0\n    var\
    \ hexDigit44 = 0\n    var hexDigit45 = 0\n    var hexDigit46 = 0\n    var hexDigit47\
    \ = 0\n    var hexDigit48 = 0\n    var hexDigit49 = 0\n    var hexDigit50 = 0\n\
    \    var hexDigit51 = 0\n    var hexDigit52 = 0\n    var hexDigit53 = 0\n    var\
    \ hexDigit54 = 0\n    var hexDigit55 = 0\n    var hexDigit56 = 0\n    var hexDigit57\
    \ = 0\n    var hexDigit58 = 0\n    var hexDigit59 = 0\n    var hexDigit60 = 0\n\
    \    var hexDigit61 = 0\n    var hexDigit62 = 0\n    var hexDigit63 = 0\n    var\
    \ hexDigit64 = 0\n    var hexDigit65 = 0\n    var hexDigit66 = 0\n    var hexDigit67\
    \ = 0\n    var hexDigit68 = 0\n    var hexDigit69 = 0\n    var hexDigit70 = 0\n\
    \    var hexDigit71 = 0\n    var hexDigit72 = 0\n    var hexDigit73 = 0\n    var\
    \ hexDigit74 = 0\n    var hexDigit75 = 0\n    var hexDigit76 = 0\n    var hexDigit77\
    \ = 0\n    var hexDigit78 = 0\n    var hexDigit79 = 0\n    var hexDigit80 = 0\n\
    \    var hexDigit81 = 0\n    var hexDigit82 = 0\n    var hexDigit83 = 0\n    var\
    \ hexDigit84 = 0\n    var hex", "    var nums = num.characters\n    var count\
    \ = 0\n    for _ in 0..<nums.count {\n        if nums[_] == \"A\" {\n        \
    \    count += 1\n        } else if nums[_] == \"B\" {\n            count += 1\n\
    \        } else if nums[_] == \"C\" {\n            count += 1\n        } else\
    \ if nums[_] == \"D\" {\n            count += 1\n        } else if nums[_] ==\
    \ \"E\" {\n            count += 1\n        } else if nums[_] == \"F\" {\n    \
    \        count += 1\n        } else {\n            count += 1\n        }\n   \
    \ }\n    return count", "    let numAsString = num.lowercased()\n    let numAsArray\
    \ = numAsString.characters\n    let numAsArray2 = numAsArray.filter({$0 != \"\
    A\" && $0 != \"B\" && $0 != \"C\" && $0 != \"D\" && $0 != \"E\" && $0 != \"F\"\
    })\n    let numAsArray3 = numAsArray2.filter({$0 != \"0\"})\n    let numAsArray4\
    \ = numAsArray3.filter({$0 != \"1\"})\n    let numAsArray5 = numAsArray4.filter({$0\
    \ != \"2\"})\n    let numAsArray6 = numAsArray5.filter({$0 != \"3\"})\n    let\
    \ numAsArray7 = numAsArray6.filter({$0 != \"4\"})\n    let numAsArray8 = numAsArray7.filter({$0\
    \ != \"5\"})\n    let numAsArray9 = numAsArray8.filter({$0 != \"6\"})\n    let\
    \ numAsArray10 = numAsArray9.filter({$0 != \"7\"})\n    let numAsArray11 = numAsArray10.filter({$0\
    \ != \"8\"})\n    let numAsArray12 = numAsArray11.filter({$0 != \"9\"})\n    let\
    \ numAsArray13 = numAsArray12.filter({$0 != \"A\"})\n    let numAsArray14 = numAsArray13.filter({$0\
    \ != \"B\"})\n    let numAsArray15 = numAsArray14.filter({$0 != \"C\"})\n    let\
    \ numAsArray16 = numAsArray15.filter({$0 != \"D\"})\n    let numAsArray17 = numAsArray16.filter({$0\
    \ != \"E\"})\n    let numAsArray18 = numAsArray17.filter({$0 != \"F\"})\n    let\
    \ numAsArray19 = numAsArray18.filter({$0 != \"A\"})\n    let numAsArray20 = numAsArray19.filter({$0\
    \ != \"B\"})\n    let numAsArray21 = numAsArray20.filter({$0 != \"C\"})\n    let\
    \ numAsArray22 = numAsArray21.filter({$0 != \"D\"})\n    let numAsArray23 = numAsArray22.filter({$0\
    \ != \"E\"})\n    let numAsArray24 = numAsArray23.filter({$0 != \"F\"})\n    let\
    \ numAsArray25 = numAsArray24.filter({$0 != \"0\"})\n    let numAsArray26 = numAsArray25.filter({$0\
    \ != \"1\"})\n    let numAsArray27 = numAsArray26.filter({$0 != \"2\"})\n    let\
    \ numAsArray28 = numAsArray27.filter({", "    var nums = num.characters\n    var\
    \ result = 0\n    for _ in 0..<nums.count {\n        let digit = Int(nums[_],\
    \ radix: 16)\n        if digit == 11 || digit == 13 {\n            result += 2\n\
    \        } else if digit == 10 {\n            result += 3\n        } else if digit\
    \ == 9 {\n            result += 5\n        } else if digit == 8 {\n          \
    \  result += 7\n        } else if digit == 7 {\n            result += 11\n   \
    \     } else if digit == 6 {\n            result += 13\n        } else if digit\
    \ == 5 {\n            result += 17\n        } else if digit == 4 {\n         \
    \   result += 19\n        } else if digit == 3 {\n            result += 23\n \
    \       } else if digit == 2 {\n            result += 29\n        } else if digit\
    \ == 1 {\n            result += 31\n        } else {\n            result += 33\n\
    \        }\n    }\n    return result", "    var count = 0\n    for char in num\
    \ {\n        if char >= '0' && char <= '9' {\n            count += Int(char) -\
    \ 48\n        } else if char >= 'A' && char <= 'F' {\n            count += Int(char)\
    \ - 55\n        }\n    }\n    return count", "    var nums = num.characters\n\
    \    var result = 0\n    for index in 0..<nums.count {\n        let digit = Int(nums[index])\n\
    \        if digit < '0' || digit > '9' {\n            return -1\n        }\n \
    \       result *= 16\n        result += digit\n    }\n    if result < 2 {\n  \
    \      return -1\n    }\n    return result", "    // Your code here\n    \n  \
    \  return 0", "    var nums = num.characters\n    var result = 0\n    var count\
    \ = 0\n    for index in 0..<nums.count {\n        let char = nums[index]\n   \
    \     switch char {\n        case \"0\": // 0\n        case \"1\": // 1\n    \
    \    case \"2\": // 2\n        case \"3\": // 3\n        case \"4\": // 4\n  \
    \      case \"5\": // 5\n        case \"6\": // 6\n        case \"7\": // 7\n\
    \        case \"8\": // 8\n        case \"9\": // 9\n        case \"A\": // A\n\
    \        case \"B\": // B\n        case \"C\": // C\n        case \"D\": // D\n\
    \        case \"E\": // E\n        case \"F\": // F\n        default:\n      \
    \      break\n        }\n        count += 1\n    }\n    for index in 0..<count\
    \ {\n        let char = nums[index]\n        switch char {\n        case \"2\"\
    : // 2\n        case \"3\": // 3\n        case \"5\": // 5\n        case \"7\"\
    : // 7\n        case \"B\": // B\n        case \"D\": // D\n        default:\n\
    \            break\n        }\n        result += 1\n    }\n    return result",
  "    let numAsString = num.lowercased()\n    let numAsArray = numAsString.characters\n\
    \    let numAsArray2 = numAsArray.filter({$0 != \"A\" && $0 != \"B\" && $0 !=\
    \ \"C\" && $0 != \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray3 =\
    \ numAsArray2.filter({$0 != \"0\"})\n    let numAsArray4 = numAsArray3.filter({$0\
    \ != \"1\"})\n    let numAsArray5 = numAsArray4.filter({$0 != \"2\"})\n    let\
    \ numAsArray6 = numAsArray5.filter({$0 != \"3\"})\n    let numAsArray7 = numAsArray6.filter({$0\
    \ != \"4\"})\n    let numAsArray8 = numAsArray7.filter({$0 != \"5\"})\n    let\
    \ numAsArray9 = numAsArray8.filter({$0 != \"6\"})\n    let numAsArray10 = numAsArray9.filter({$0\
    \ != \"7\"})\n    let numAsArray11 = numAsArray10.filter({$0 != \"8\"})\n    let\
    \ numAsArray12 = numAsArray11.filter({$0 != \"9\"})\n    let numAsArray13 = numAsArray12.filter({$0\
    \ != \"A\"})\n    let numAsArray14 = numAsArray13.filter({$0 != \"B\"})\n    let\
    \ numAsArray15 = numAsArray14.filter({$0 != \"C\"})\n    let numAsArray16 = numAsArray15.filter({$0\
    \ != \"D\"})\n    let numAsArray17 = numAsArray16.filter({$0 != \"E\"})\n    let\
    \ numAsArray18 = numAsArray17.filter({$0 != \"F\"})\n    let numAsArray19 = numAsArray18.filter({$0\
    \ != \"a\"})\n    let numAsArray20 = numAsArray19.filter({$0 != \"b\"})\n    let\
    \ numAsArray21 = numAsArray20.filter({$0 != \"c\"})\n    let numAsArray22 = numAsArray21.filter({$0\
    \ != \"d\"})\n    let numAsArray23 = numAsArray22.filter({$0 != \"e\"})\n    let\
    \ numAsArray24 = numAsArray23.filter({$0 != \"f\"})\n    let numAsArray25 = numAsArray24.filter({$0\
    \ != \"0\"})\n    let numAsArray26 = numAsArray25.filter({$0 != \"1\"})\n    let\
    \ numAsArray27 = numAsArray26.filter({$0 != \"2\"})\n    let numAsArray28 = numAsArray27.filter({",
  "    var nums = num.characters\n    var numsCount = nums.count\n    var numsDigits\
    \ = nums.map { UInt8(String($0)) }\n    var numsPrimes = numsDigits.filter { $0\
    \ % 2 == 0 }\n    var numsPrimesCount = numsPrimes.count\n    var numsPrimesDigits\
    \ = numsPrimes.map { UInt8(String($0)) }\n    var numsPrimesPrimes = numsPrimesDigits.filter\
    \ { $0 % 2 == 0 }\n    var numsPrimesPrimesCount = numsPrimesPrimes.count\n  \
    \  var numsPrimesPrimesDigits = numsPrimesPrimes.map { UInt8(String($0)) }\n \
    \   var numsPrimesPrimesPrimes = numsPrimesPrimesDigits.filter { $0 % 2 == 0 }\n\
    \    var numsPrimesPrimesPrimesCount = numsPrimesPrimesPrimes.count\n    var numsPrimesPrimesPrimesDigits\
    \ = numsPrimesPrimesPrimes.map { UInt8(String($0)) }\n    var numsPrimesPrimesPrimesPrimes\
    \ = numsPrimesPrimesPrimesDigits.filter { $0 % 2 == 0 }\n    var numsPrimesPrimesPrimesPrimesCount\
    \ = numsPrimesPrimesPrimesPrimes.count\n    var numsPrimesPrimesPrimesPrimesDigits\
    \ = numsPrimesPrimesPrimesPrimes.map { UInt8(String($0)) }\n    var numsPrimesPrimesPrimesPrimesPrimes\
    \ = numsPrimesPrimesPrimesPrimesDigits.filter { $0 % 2 == 0 }\n    var numsPrimesPrimesPrimesPrimesCount\
    \ = numsPrimesPrimesPrimesPrimesPrimes.count\n    var numsPrimesPrimesPrimesPrimesDigits\
    \ = numsPrimesPrimesPrimesPrimesPrimes.map { UInt8(String($0)) }\n    var numsPrimesPrimesPrimesPrimesPrimesPrimes\
    \ = numsPrimesPrimesPrimesPrimesPrimesDigits.filter { $0 % 2 == 0 }\n    var numsPrimesPrimesPrimesPrimesPrimesCount\
    \ = numsPrimesPrimesPrimesPrimesPrimesPrimes.count\n    var numsPrimesPrimesPrimesPrimesPrimesDigits\
    \ = numsPrimesPrimesPrimesPrimesPrimesPrimes.", "    guard let num = num.lowercased(),\
    \ num.isEmpty else {\n        return 0\n    }\n    var count = 0\n    for c in\
    \ num {\n        guard let digit = Int(c, radix: 16) else {\n            return\
    \ 0\n        }\n        if digit == 0 || digit == 1 {\n            continue\n\
    \        }\n        for d in 2...digit {\n            if digit % d == 0 {\n  \
    \              count += 1\n                break\n            }\n        }\n \
    \   }\n    return count", "    var count = 0\n    for char in num {\n        if\
    \ char >= '0' && char <= '9' {\n            count += Int(char) - Int(Int(char))\n\
    \        }\n    }\n    return count", "    var count = 0\n    var digits = num.characters\n\
    \    for digit in digits {\n        if digit == \"A\" || digit == \"B\" || digit\
    \ == \"C\" || digit == \"D\" || digit == \"E\" || digit == \"F\" {\n         \
    \   count += 1\n        }\n    }\n    return count", "    var sum = 0\n    for\
    \ char in num.characters {\n        switch char {\n        case \"A\":\n     \
    \       sum += 2\n        case \"B\":\n            sum += 3\n        case \"C\"\
    :\n            sum += 5\n        case \"D\":\n            sum += 7\n        case\
    \ \"E\":\n            sum += 11\n        case \"F\":\n            sum += 13\n\
    \        default:\n            sum += char.unicodeScalars.count\n        }\n \
    \   }\n    return sum", "    var hexDigits: [Int] = []\n    var hexNum: Int =\
    \ 0\n    var hexChar: Character\n    var hexString: String\n    var hexStringLen:\
    \ Int\n    var hexStringIndex: Int\n    var hexStringIndex2: Int\n    var hexStringIndex3:\
    \ Int\n    var hexStringIndex4: Int\n    var hexStringIndex5: Int\n    var hexStringIndex6:\
    \ Int\n    var hexStringIndex7: Int\n    var hexStringIndex8: Int\n    var hexStringIndex9:\
    \ Int\n    var hexStringIndex10: Int\n    var hexStringIndex11: Int\n    var hexStringIndex12:\
    \ Int\n    var hexStringIndex13: Int\n    var hexStringIndex14: Int\n    var hexStringIndex15:\
    \ Int\n    var hexStringIndex16: Int\n    var hexStringIndex17: Int\n    var hexStringIndex18:\
    \ Int\n    var hexStringIndex19: Int\n    var hexStringIndex20: Int\n    var hexStringIndex21:\
    \ Int\n    var hexStringIndex22: Int\n    var hexStringIndex23: Int\n    var hexStringIndex24:\
    \ Int\n    var hexStringIndex25: Int\n    var hexStringIndex26: Int\n    var hexStringIndex27:\
    \ Int\n    var hexStringIndex28: Int\n    var hexStringIndex29: Int\n    var hexStringIndex30:\
    \ Int\n    var hexStringIndex31: Int\n    var hexStringIndex32: Int\n    var hexStringIndex33:\
    \ Int\n    var hexStringIndex34: Int\n    var hexStringIndex35: Int\n    var hexStringIndex36:\
    \ Int\n    var hexStringIndex37: Int\n    var hexStringIndex38: Int\n    var hexStringIndex39:\
    \ Int\n    var hexStringIndex40: Int\n    var hexStringIndex41: Int\n    var hexStringIndex42:\
    \ Int\n    var hexStringIndex43: Int\n    var hexStringIndex44: Int\n    var hexStringIndex45:\
    \ Int\n    var hexStringIndex46: Int\n    var hexStringIndex47: Int\n    var hexStringIndex48:\
    \ Int\n    var hexStringIndex49: Int\n    var hexStringIndex50: Int\n    var hexStringIndex51:\
    \ Int\n    var hexStringIndex52: Int\n    var hexStringIndex53: Int\n    var hexStringIndex54:\
    \ Int\n    var hexStringIndex55: Int\n    var hexStringIndex56: Int\n    var hexStringIndex57:\
    \ Int\n    var hexStringIndex58: Int\n    var hexStringIndex59: Int\n    var hexStringIndex60:\
    \ Int\n    var hexStringIndex61", "    var hex = num.stringByTrimmingCharactersInSet(NSCharacterSet.uppercaseCharacterSet())\n\
    \    var hexDigits = hex.componentsSeparatedByString(\"0123456789ABCDEF\")\n \
    \   var hexDigitCount = hexDigits.count\n    var hexDigitPrimes = hexDigits.filter({$0\
    \ % 2 == 0})\n    var hexDigitPrimeCount = hexDigitPrimes.count\n    var hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter({$0 % 3 == 0})\n    var hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter({$0 % 5 == 0})\n\
    \    var hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n    var\
    \ hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter({$0 % 7 == 0})\n\
    \    var hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter({$0\
    \ % 11 == 0})\n    var hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter({$0\
    \ % 13 == 0})\n    var hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter({$0\
    \ % 17 == 0})\n    var hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    var hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter({$0\
    \ % 19 == 0})\n    var hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrime", "    var count = 0\n    for c in num {\n       \
    \ if c >= '0' && c <= '9' {\n            count += Int(c - '0')\n        } else\
    \ if c >= 'A' && c <= 'F' {\n            count += Int(c - 'A') + 10\n        }\
    \ else if c >= 'a' && c <= 'f' {\n            count += Int(c - 'a') + 10\n   \
    \     } else {\n            return -1\n        }\n    }\n    return count", " \
    \   var result = 0\n    var digits = num.characters\n    for i in 0..<digits.count\
    \ {\n        let digit = Int(digits[i])\n        if digit == 0 || digit == 1 {\n\
    \            continue\n        }\n        if digit == 2 {\n            result\
    \ += 2\n            continue\n        }\n        if digit == 3 {\n           \
    \ result += 3\n            continue\n        }\n        if digit == 5 {\n    \
    \        result += 5\n            continue\n        }\n        if digit == 7 {\n\
    \            result += 7\n            continue\n        }\n        if digit ==\
    \ 11 {\n            result += 11\n            continue\n        }\n        if\
    \ digit == 13 {\n            result += 13\n            continue\n        }\n \
    \       if digit == 17 {\n            result += 17\n            continue\n   \
    \     }\n        if digit == 19 {\n            result += 19\n            continue\n\
    \        }\n        if digit == 29 {\n            result += 29\n            continue\n\
    \        }\n        if digit == 37 {\n            result += 37\n            continue\n\
    \        }\n        if digit == 41 {\n            result += 41\n            continue\n\
    \        }\n        if digit == 431 {\n            result += 431\n           \
    \ continue\n        }\n        if digit == 479 {\n            result += 479\n\
    \            continue\n        }\n        if digit == 537 {\n            result\
    \ += 537\n            continue\n        }\n        if digit == 591 {\n       \
    \     result += 591\n            continue\n        }\n        if digit == 637\
    \ {\n            result += 637\n            continue\n        }\n        if digit\
    \ == 679 {\n            result += 679\n            continue\n        }\n     \
    \   if digit == 729 {\n            result += 729\n            continue\n     \
    \   }\n        if digit == 767 {\n            result += 767\n            continue\n\
    \        }\n        if digit == 811 {\n            result += 811\n           \
    \ continue\n        }\n        if digit == 837 {\n            result += 837\n\
    \            continue\n        }\n        if digit == 893 {\n            result\
    \ += 893\n            continue\n        }\n        if digit == 967 {\n       \
    \     result += 967\n            continue\n        }\n        if digit == 1023\
    \ {\n            result += 1023\n            continue\n        }\n        if digit\
    \ == 1059 {\n            result += 1059\n            continue\n        }\n   \
    \     if digit == 1091 {\n            result += 1091\n            continue\n \
    \       }\n        if digit == 1137 {\n            result += 1137\n          \
    \  continue\n        }\n        if digit == 1171 {\n            result += 1171\n\
    \            continue\n        }\n        if digit == 1213 {\n            result\
    \ += 1213\n            continue\n        }\n        if digit == 1249 {\n     \
    \       result += 1249\n            continue\n        }\n        if digit == 1277\
    \ {\n            result += 1277\n            continue\n        }\n        if digit\
    \ == 1311 {\n            result += 1311", "    let digits = num.characters\n \
    \   let primes = primes()\n    var count = 0\n    for digit in digits {\n    \
    \    if primes.contains(digit) {\n            count += 1\n        }\n    }\n \
    \   return count", "    let numAsString = num.lowercased()\n    var numAsInt:\
    \ Int = 0\n    var numAsChar: Character?\n    var numAsIntArray: [Int] = []\n\
    \    var numAsIntArrayIndex = 0\n    var numAsIntArrayIndex2 = 0\n    var numAsIntArrayIndex3\
    \ = 0\n    var numAsIntArrayIndex4 = 0\n    var numAsIntArrayIndex5 = 0\n    var\
    \ numAsIntArrayIndex6 = 0\n    var numAsIntArrayIndex7 = 0\n    var numAsIntArrayIndex8\
    \ = 0\n    var numAsIntArrayIndex9 = 0\n    var numAsIntArrayIndex10 = 0\n   \
    \ var numAsIntArrayIndex11 = 0\n    var numAsIntArrayIndex12 = 0\n    var numAsIntArrayIndex13\
    \ = 0\n    var numAsIntArrayIndex14 = 0\n    var numAsIntArrayIndex15 = 0\n  \
    \  var numAsIntArrayIndex16 = 0\n    var numAsIntArrayIndex17 = 0\n    var numAsIntArrayIndex18\
    \ = 0\n    var numAsIntArrayIndex19 = 0\n    var numAsIntArrayIndex20 = 0\n  \
    \  var numAsIntArrayIndex21 = 0\n    var numAsIntArrayIndex22 = 0\n    var numAsIntArrayIndex23\
    \ = 0\n    var numAsIntArrayIndex24 = 0\n    var numAsIntArrayIndex25 = 0\n  \
    \  var numAsIntArrayIndex26 = 0\n    var numAsIntArrayIndex27 = 0\n    var numAsIntArrayIndex28\
    \ = 0\n    var numAsIntArrayIndex29 = 0\n    var numAsIntArrayIndex30 = 0\n  \
    \  var numAsIntArrayIndex31 = 0\n    var numAsIntArrayIndex32 = 0\n    var numAsIntArrayIndex33\
    \ = 0\n    var numAsIntArrayIndex34 = 0\n    var numAsIntArrayIndex35 = 0\n  \
    \  var numAsIntArrayIndex36 = 0\n    var numAsIntArrayIndex37 = 0\n    var numAsIntArrayIndex38\
    \ = 0\n    var numAsIntArrayIndex39 = 0\n    var numAsIntArrayIndex40 = 0\n  \
    \  var numAsIntArrayIndex41 = 0\n    var numAsIntArrayIndex42 = 0\n    var numAsIntArrayIndex43\
    \ = 0\n    var numAsIntArrayIndex44 = 0\n    var numAsIntArrayIndex45 = 0\n  \
    \  var numAsIntArrayIndex46 = 0\n    var numAsIntArrayIndex47 = 0\n    var numAsIntArrayIndex48\
    \ = 0\n    var numAsIntArrayIndex49 = 0\n    var numAsIntArrayIndex50 = 0\n  \
    \  var numAsIntArrayIndex51 = 0\n    var numAsIntArrayIndex52 = 0\n    var numAsIntArrayIndex53\
    \ = 0\n    var num", "    var nums = num.characters\n    var primes = Array<Int>()\n\
    \    var prime = Int(2)\n    var count = 0\n    for char in nums {\n        let\
    \ digit = Int(char) - Int(97)\n        if digit < 0 || digit > 9 {\n         \
    \   return -1\n        }\n        if prime % digit == 0 {\n            primes.append(prime)\n\
    \            prime = Int(prime) + 1\n        }\n    }\n    for prime in primes\
    \ {\n        if prime % 2 == 0 {\n            count = count + 1\n        }\n \
    \   }\n    return count", "    // Your code here\n    var numArray: [Int] = []\n\
    \    for char in num {\n        let charInt = Int(char)\n        if charInt >=\
    \ 48 && charInt <= 57 {\n            numArray.append(charInt - 48)\n        }\n\
    \    }\n    var count = 0\n    for index in 0..<numArray.count {\n        let\
    \ index = numArray[index]\n        if index == 2 || index == 3 || index == 5 ||\
    \ index == 7 || index == 11 || index == 13 {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var hexDigits: [Int] = []\n    for c in num\
    \ {\n        guard let digit = Int(c, radix: 16) else {\n            return -1\n\
    \        }\n        hexDigits.append(digit)\n    }\n    var primeCount = 0\n \
    \   for digit in hexDigits {\n        if digit % 2 == 0 {\n            primeCount\
    \ += 1\n        }\n    }\n    return primeCount", "    var nums = num.characters\n\
    \    var count = 0\n    for index in 0..<nums.count {\n        let hex = nums[index]\
    \ as String\n        if hex.lowercased() == \"a\" {\n            count += 1\n\
    \        } else if hex.lowercased() == \"b\" {\n            count += 1\n     \
    \   } else if hex.lowercased() == \"c\" {\n            count += 1\n        } else\
    \ if hex.lowercased() == \"d\" {\n            count += 1\n        } else if hex.lowercased()\
    \ == \"e\" {\n            count += 1\n        } else if hex.lowercased() == \"\
    f\" {\n            count += 1\n        }\n    }\n    return count", "    var nums\
    \ = num.characters\n    var numsCount = nums.count\n    var numsLen = nums.count\n\
    \    var numsLen2 = numsLen / 2\n    var numsLen3 = numsLen / 3\n    var numsLen4\
    \ = numsLen / 4\n    var numsLen5 = numsLen / 5\n    var numsLen6 = numsLen /\
    \ 6\n    var numsLen7 = numsLen / 7\n    var numsLen8 = numsLen / 8\n    var numsLen9\
    \ = numsLen / 9\n    var numsLen10 = numsLen / 10\n    var numsLen11 = numsLen\
    \ / 11\n    var numsLen12 = numsLen / 12\n    var numsLen13 = numsLen / 13\n \
    \   var numsLen14 = numsLen / 14\n    var numsLen15 = numsLen / 15\n    var numsLen16\
    \ = numsLen / 16\n    var numsLen17 = numsLen / 17\n    var numsLen18 = numsLen\
    \ / 18\n    var numsLen19 = numsLen / 19\n    var numsLen20 = numsLen / 20\n \
    \   var numsLen21 = numsLen / 21\n    var numsLen22 = numsLen / 22\n    var numsLen23\
    \ = numsLen / 23\n    var numsLen24 = numsLen / 24\n    var numsLen25 = numsLen\
    \ / 25\n    var numsLen26 = numsLen / 26\n    var numsLen27 = numsLen / 27\n \
    \   var numsLen28 = numsLen / 28\n    var numsLen29 = numsLen / 29\n    var numsLen30\
    \ = numsLen / 30\n    var numsLen31 = numsLen / 31\n    var numsLen32 = numsLen\
    \ / 32\n    var numsLen33 = numsLen / 33\n    var numsLen34 = numsLen / 34\n \
    \   var numsLen35 = numsLen / 35\n    var numsLen36 = numsLen / 36\n    var numsLen37\
    \ = numsLen / 37\n    var numsLen38 = numsLen / 38\n    var numsLen39 = numsLen\
    \ / 39\n    var numsLen40 = numsLen / 40\n    var numsLen41 = numsLen / 41\n \
    \   var numsLen42 = numsLen / 42\n    var numsLen43 = num", "    let digits =\
    \ num.characters\n    var count = 0\n    for digit in digits {\n        if digit\
    \ == \"A\" || digit == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"\
    E\" || digit == \"F\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var numAsString = \"\"\n    for char in num {\n        if char\
    \ >= '0' && char <= '9' {\n            numAsString += char\n        }\n    }\n\
    \    var numAsInt: Int = 0\n    var isPrime: Bool = false\n    var prime: Int\
    \ = 0\n    var primes: Int = 0\n    var isPrime2: Bool = false\n    var prime2:\
    \ Int = 0\n    var primes2: Int = 0\n    var isPrime3: Bool = false\n    var prime3:\
    \ Int = 0\n    var primes3: Int = 0\n    var isPrime4: Bool = false\n    var prime4:\
    \ Int = 0\n    var primes4: Int = 0\n    var isPrime5: Bool = false\n    var prime5:\
    \ Int = 0\n    var primes5: Int = 0\n    var isPrime6: Bool = false\n    var prime6:\
    \ Int = 0\n    var primes6: Int = 0\n    var isPrime7: Bool = false\n    var prime7:\
    \ Int = 0\n    var primes7: Int = 0\n    var isPrime8: Bool = false\n    var prime8:\
    \ Int = 0\n    var primes8: Int = 0\n    var isPrime9: Bool = false\n    var prime9:\
    \ Int = 0\n    var primes9: Int = 0\n    var isPrime10: Bool = false\n    var\
    \ prime10: Int = 0\n    var primes10: Int = 0\n    var isPrime11: Bool = false\n\
    \    var prime11: Int = 0\n    var primes11: Int = 0\n    var isPrime12: Bool\
    \ = false\n    var prime12: Int = 0\n    var primes12: Int = 0\n    var isPrime13:\
    \ Bool = false\n    var prime13: Int = 0\n    var primes13: Int = 0\n    var isPrime14:\
    \ Bool = false\n    var prime14: Int = 0\n    var primes14: Int = 0\n    var isPrime15:\
    \ Bool = false\n    var prime15: Int = 0\n    var primes15: Int = 0\n    var isPrime16:\
    \ Bool = false\n    var prime16: Int = 0\n    var primes16: Int = 0\n    var isPrime17:\
    \ Bool = false\n    var prime17: Int = 0\n    var primes17: Int = 0\n    var isPrime18:\
    \ Bool = false\n    var prime18: Int = 0\n    var primes18: Int = 0\n    var isPrime19:\
    \ Bool = false\n    var prime19: Int = 0\n    var primes19: Int = 0\n    var isPrime20:\
    \ Bool = false\n    var prime20: Int = 0\n    var primes20: Int = 0\n    var isPrime21: ",
  "    guard let num = num.lowercased() else {\n        return 0\n    }\n    var count\
    \ = 0\n    var prime = 0\n    var prime2 = 0\n    var prime3 = 0\n    var prime4\
    \ = 0\n    var prime5 = 0\n    var prime6 = 0\n    var prime7 = 0\n    var prime8\
    \ = 0\n    var prime9 = 0\n    var prime10 = 0\n    var prime11 = 0\n    var prime12\
    \ = 0\n    var prime13 = 0\n    var prime14 = 0\n    var prime15 = 0\n    var\
    \ prime16 = 0\n    var prime17 = 0\n    var prime18 = 0\n    var prime19 = 0\n\
    \    var prime20 = 0\n    var prime21 = 0\n    var prime22 = 0\n    var prime23\
    \ = 0\n    var prime24 = 0\n    var prime25 = 0\n    var prime26 = 0\n    var\
    \ prime27 = 0\n    var prime28 = 0\n    var prime29 = 0\n    var prime30 = 0\n\
    \    var prime31 = 0\n    var prime32 = 0\n    var prime33 = 0\n    var prime34\
    \ = 0\n    var prime35 = 0\n    var prime36 = 0\n    var prime37 = 0\n    var\
    \ prime38 = 0\n    var prime39 = 0\n    var prime40 = 0\n    var prime41 = 0\n\
    \    var prime42 = 0\n    var prime43 = 0\n    var prime44 = 0\n    var prime45\
    \ = 0\n    var prime46 = 0\n    var prime47 = 0\n    var prime48 = 0\n    var\
    \ prime49 = 0\n    var prime50 = 0\n    var prime51 = 0\n    var prime52 = 0\n\
    \    var prime53 = 0\n    var prime54 = 0\n    var prime55 = 0\n    var prime56\
    \ = 0\n    var prime57 = 0\n    var prime58 = 0\n    var prime59 = 0\n    var\
    \ prime60 = 0\n    var prime61 = 0\n    var prime62 = 0\n    var prime63 = 0\n\
    \    var prime64 = 0\n    var prime65 = 0\n    var prime66 = 0\n    var prime67\
    \ = 0\n    var prime68 = 0\n    var prime69 = 0\n    var prime70 = 0\n    var\
    \ prime71 = 0\n    var prime72 = 0\n    var prime73 = 0\n    var prime74 = 0\n\
    \    var prime75 = 0\n    var prime76 = 0\n    var prime77 = 0\n    var prime78\
    \ = 0\n    var prime79 = 0\n    var prime80 = 0\n    var prime81 = 0\n    var\
    \ prime82 = 0\n    var prime83 = 0\n    var prime84 = 0\n    var prime85 = 0\n\
    \    var prime86 = 0\n    var prime87 = 0\n    var prime88 = 0\n    var prime89\
    \ = 0\n    var prime90 = 0\n    var prime91 = 0\n    var prime92 = 0\n    var\
    \ prime93 = 0\n    var prime94 = 0\n    var prime95 = 0\n    var prime96 = 0\n\
    \    var prime97 = 0\n    var prime98 = 0\n    var prime99 = 0\n", "    var nums\
    \ = num.characters\n    var nums_len = nums.count\n    var nums_hex = [Int]()\n\
    \    var nums_hex_len = nums_hex.count\n    var nums_hex_len2 = nums_hex_len *\
    \ 2\n    var nums_hex_len3 = nums_hex_len * 3\n    var nums_hex_len4 = nums_hex_len\
    \ * 4\n    var nums_hex_len5 = nums_hex_len * 5\n    var nums_hex_len6 = nums_hex_len\
    \ * 6\n    var nums_hex_len7 = nums_hex_len * 7\n    var nums_hex_len8 = nums_hex_len\
    \ * 8\n    var nums_hex_len9 = nums_hex_len * 9\n    var nums_hex_len10 = nums_hex_len\
    \ * 10\n    var nums_hex_len11 = nums_hex_len * 11\n    var nums_hex_len12 = nums_hex_len\
    \ * 12\n    var nums_hex_len13 = nums_hex_len * 13\n    var nums_hex_len14 = nums_hex_len\
    \ * 14\n    var nums_hex_len15 = nums_hex_len * 15\n    var nums_hex_len16 = nums_hex_len\
    \ * 16\n    var nums_hex_len17 = nums_hex_len * 17\n    var nums_hex_len18 = nums_hex_len\
    \ * 18\n    var nums_hex_len19 = nums_hex_len * 19\n    var nums_hex_len20 = nums_hex_len\
    \ * 20\n    var nums_hex_len21 = nums_hex_len * 21\n    var nums_hex_len22 = nums_hex_len\
    \ * 22\n    var nums_hex_len23 = nums_hex_len * 23\n    var nums_hex_len24 = nums_hex_len\
    \ * 24\n    var nums_hex_len25 = nums_hex_len * 25\n    var nums_hex_len26 = nums_hex_len\
    \ * 26\n    var nums_hex_len27 = nums_hex_len * 27\n    var nums_hex_len28 = nums_hex_len\
    \ * 28\n    var nums_hex_len29 = nums_hex_len * 29\n    var nums_hex_len30 = nums_hex_len\
    \ * 30\n    var nums_hex_len31 = nums_hex_len * 31\n    var nums_hex_len32 = nums_hex_len\
    \ * 32\n    var nums_hex_len33 = nums_hex_len * 33\n    var nums_hex_len34 = nums_hex_len\
    \ * 34\n    var nums_hex_len35 = nums_hex_len * 35\n    var nums_hex_len36 = nums_hex_len\
    \ * 36", "    var nums = num.characters\n    var count = 0\n    for index in 0..<nums.count\
    \ {\n        let char = nums[index]\n        if char == \"A\" || char == \"B\"\
    \ || char == \"C\" || char == \"D\" || char == \"E\" || char == \"F\" {\n    \
    \        count += 1\n        }\n    }\n    return count", "    var hexDigits:\
    \ [Int] = []\n    var primeCount = 0\n    var prime: Int = 0\n    var digit: Int\
    \ = 0\n    var digitString: String = \"\"\n    var digitStringLen: Int = 0\n \
    \   var digitStringLen2: Int = 0\n    var digitStringLen3: Int = 0\n    var digitStringLen4:\
    \ Int = 0\n    var digitStringLen5: Int = 0\n    var digitStringLen6: Int = 0\n\
    \    var digitStringLen7: Int = 0\n    var digitStringLen8: Int = 0\n    var digitStringLen9:\
    \ Int = 0\n    var digitStringLen10: Int = 0\n    var digitStringLen11: Int =\
    \ 0\n    var digitStringLen12: Int = 0\n    var digitStringLen13: Int = 0\n  \
    \  var digitStringLen14: Int = 0\n    var digitStringLen15: Int = 0\n    var digitStringLen16:\
    \ Int = 0\n    var digitStringLen17: Int = 0\n    var digitStringLen18: Int =\
    \ 0\n    var digitStringLen19: Int = 0\n    var digitStringLen20: Int = 0\n  \
    \  var digitStringLen21: Int = 0\n    var digitStringLen22: Int = 0\n    var digitStringLen23:\
    \ Int = 0\n    var digitStringLen24: Int = 0\n    var digitStringLen25: Int =\
    \ 0\n    var digitStringLen26: Int = 0\n    var digitStringLen27: Int = 0\n  \
    \  var digitStringLen28: Int = 0\n    var digitStringLen29: Int = 0\n    var digitStringLen30:\
    \ Int = 0\n    var digitStringLen31: Int = 0\n    var digitStringLen32: Int =\
    \ 0\n    var digitStringLen33: Int = 0\n    var digitStringLen34: Int = 0\n  \
    \  var digitStringLen35: Int = 0\n    var digitStringLen36: Int = 0\n    var digitStringLen37:\
    \ Int = 0\n    var digitStringLen38: Int = 0\n    var digitStringLen39: Int =\
    \ 0\n    var digitStringLen40: Int = 0\n    var digitStringLen41: Int = 0\n  \
    \  var digitStringLen42: Int = 0\n    var digitStringLen43: Int = 0\n    var digitStringLen44:\
    \ Int = 0\n    var digitStringLen45: Int = 0\n    var digitStringLen46: Int =\
    \ 0\n    var digitStringLen47: Int = 0\n    var digitStringLen48: Int = 0\n  \
    \  var digitStringLen49: Int = 0\n    var digitStringLen50: Int = 0\n    var digitStringLen51:\
    \ Int = 0\n    var digitStringLen52: Int = 0\n    var digitStringLen53: Int =\
    \ 0\n    var digitStringLen54: Int = 0\n    var ", "    var nums = num.characters\n\
    \    var count = 0\n    var prime = 0\n    var prime2 = 2\n    var prime3 = 3\n\
    \    var prime5 = 5\n    var prime7 = 7\n    var prime11 = 1\n    var prime13\
    \ = 3\n    var prime17 = 7\n    var prime19 = 7\n    var prime23 = 3\n    var\
    \ prime29 = 3\n    var prime31 = 5\n    var prime37 = 7\n    var prime41 = 7\n\
    \    var prime43 = 11\n    var prime47 = 13\n    var prime51 = 17\n    var prime59\
    \ = 19\n    var prime63 = 23\n    var prime67 = 29\n    var prime71 = 31\n   \
    \ var prime73 = 37\n    var prime79 = 41\n    var prime83 = 43\n    var prime89\
    \ = 47\n    var prime93 = 51\n    var prime97 = 59\n    var prime101 = 63\n  \
    \  var prime103 = 67\n    var prime107 = 71\n    var prime109 = 73\n    var prime113\
    \ = 79\n    var prime127 = 83\n    var prime131 = 89\n    var prime137 = 93\n\
    \    var prime143 = 97\n    var prime147 = 101\n    var prime151 = 103\n    var\
    \ prime157 = 107\n    var prime163 = 113\n    var prime167 = 127\n    var prime173\
    \ = 131\n    var prime177 = 137\n    var prime181 = 143\n    var prime183 = 147\n\
    \    var prime187 = 151\n    var prime191 = 157\n    var prime193 = 163\n    var\
    \ prime197 = 167\n    var prime201 = 181\n    var prime203 = 183\n    var prime207\
    \ = 187\n    var prime211 = 191\n    var prime213 = 193\n    var prime217 = 197\n\
    \    var prime221 = 201\n    var prime223 = 203\n    var prime227 = 207\n    var\
    \ prime229 = 211\n    var prime233 = 213\n    var prime237 = 217\n    var prime241\
    \ = 221\n    var prime243 = 223\n    var prime247 = 227\n    var prime251 = 229\n\
    \    var prime253 = 233\n    var prime257 = 247\n    var prime261 = 251\n    var\
    \ prime263 = 253\n    var prime267 = 257\n    var prime271 = 263\n    var prime273\
    \ = 267\n    var prime277 = 271\n    var prime281 = 273\n    var prime283 = 277\n\
    \    var prime287 = 281\n    var prime289 = 283\n    var prime293 = 287\n    var\
    \ prime297 = 289\n    var prime301 = 293\n    var prime303 = 297\n    var prime307\
    \ = 301\n    var prime311 = 3", "    var nums: [Int] = []\n    for c in num.unicodeScalars\
    \ {\n        if c.value > 0xFF {\n            return -1\n        }\n        nums.append(Int(c.value))\n\
    \    }\n    var primes: [Int] = []\n    for n in nums {\n        if n % 2 == 0\
    \ {\n            primes.append(n)\n        }\n    }\n    var result: Int = 0\n\
    \    for p in primes {\n        if p > 1 {\n            for q in primes {\n  \
    \              if q > p {\n                    if p % q == 0 {\n             \
    \           result = p\n                        break\n                    }\n\
    \                }\n            }\n        }\n    }\n    return result", "   \
    \ var result = 0\n    var digits = num.characters\n    for digit in digits {\n\
    \        if digit == \"A\" {\n            result = result + 2\n        } else\
    \ if digit == \"B\" {\n            result = result + 3\n        } else if digit\
    \ == \"C\" {\n            result = result + 5\n        } else if digit == \"D\"\
    \ {\n            result = result + 7\n        } else if digit == \"E\" {\n   \
    \         result = result + 11\n        } else if digit == \"F\" {\n         \
    \   result = result + 13\n        } else {\n            result = result + digit.unicodeScalars.count\n\
    \        }\n    }\n    return result", "    var count = 0\n    for c in num {\n\
    \        switch c {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"\
    6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\":\n        \
    \    count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    var result = 0\n    var digits = num.characters\n    for digit\
    \ in digits {\n        if digit == \"A\" {\n            result += 2\n        }\
    \ else if digit == \"B\" {\n            result += 3\n        } else if digit ==\
    \ \"C\" {\n            result += 5\n        } else if digit == \"D\" {\n     \
    \       result += 7\n        } else if digit == \"E\" {\n            result +=\
    \ 11\n        } else if digit == \"F\" {\n            result += 13\n        }\
    \ else {\n            result += digit - \"0\"\n        }\n    }\n    return result",
  "    var nums = num.characters\n    var numsCount = nums.count\n    var hexDigits\
    \ = [String]()\n    var hexDigitCount = 0\n    var hexDigitCount2 = 0\n    var\
    \ hexDigitCount3 = 0\n    var hexDigitCount4 = 0\n    var hexDigitCount5 = 0\n\
    \    var hexDigitCount6 = 0\n    var hexDigitCount7 = 0\n    var hexDigitCount8\
    \ = 0\n    var hexDigitCount9 = 0\n    var hexDigitCount10 = 0\n    var hexDigitCount11\
    \ = 0\n    var hexDigitCount12 = 0\n    var hexDigitCount13 = 0\n    var hexDigitCount14\
    \ = 0\n    var hexDigitCount15 = 0\n    var hexDigitCount16 = 0\n    var hexDigitCount17\
    \ = 0\n    var hexDigitCount18 = 0\n    var hexDigitCount19 = 0\n    var hexDigitCount20\
    \ = 0\n    var hexDigitCount21 = 0\n    var hexDigitCount22 = 0\n    var hexDigitCount23\
    \ = 0\n    var hexDigitCount24 = 0\n    var hexDigitCount25 = 0\n    var hexDigitCount26\
    \ = 0\n    var hexDigitCount27 = 0\n    var hexDigitCount28 = 0\n    var hexDigitCount29\
    \ = 0\n    var hexDigitCount30 = 0\n    var hexDigitCount31 = 0\n    var hexDigitCount32\
    \ = 0\n    var hexDigitCount33 = 0\n    var hexDigitCount34 = 0\n    var hexDigitCount35\
    \ = 0\n    var hexDigitCount36 = 0\n    var hexDigitCount37 = 0\n    var hexDigitCount38\
    \ = 0\n    var hexDigitCount39 = 0\n    var hexDigitCount40 = 0\n    var hexDigitCount41\
    \ = 0\n    var hexDigitCount42 = 0\n    var hexDigitCount43 = 0\n    var hexDigitCount44\
    \ = 0\n    var hexDigitCount45 = 0\n    var hexDigitCount46 = 0\n    var hexDigitCount47\
    \ = 0\n    var hexDigitCount48 = 0\n    var hexDigitCount49 = 0\n    var hexDigitCount50\
    \ = 0\n    var hexDigitCount51 = 0\n    var hexDigitCount52 = 0\n    var hexDigitCount53\
    \ = 0\n    var hexDigitCount54 = 0\n    var hexDigitCount55 = 0\n    var hexDigitCount56\
    \ = 0\n    var hexDigitCount57 = 0\n    var hexDigitCount58 = 0\n    var hexDigitCount59\
    \ = 0\n    var hexDigitCount60 = 0\n    var hexDigitCount61 = 0\n    var hexDigitCount62\
    \ = 0\n    var hexDigitCount63 = 0\n    var hexDigitCount64 = 0\n    var hexDigitCount65\
    \ = 0\n    var hexDigitCount66 = 0\n    var hexDigitCount67 = 0\n    var hexDigitCount68\
    \ = 0\n    var hexDigitCount69 = 0\n    var hexDigitCount70 = 0\n", "    var hexDigits\
    \ = [String]()\n    for char in num {\n        hexDigits.append(String(char).uppercase)\n\
    \    }\n    var primeDigits = [String]()\n    var primeCount = 0\n    var primeFound\
    \ = false\n    for char in hexDigits {\n        if char == \"A\" {\n         \
    \   primeDigits.append(\"B\")\n        } else if char == \"B\" {\n           \
    \ primeDigits.append(\"C\")\n        } else if char == \"C\" {\n            primeDigits.append(\"\
    D\")\n        } else if char == \"D\" {\n            primeDigits.append(\"E\"\
    )\n        } else if char == \"E\" {\n            primeDigits.append(\"F\")\n\
    \        } else {\n            primeDigits.append(char)\n        }\n    }\n  \
    \  for char in primeDigits {\n        if char == \"B\" {\n            primeCount\
    \ += 1\n        } else if char == \"C\" {\n            primeCount += 1\n     \
    \   } else if char == \"D\" {\n            primeCount += 1\n        } else if\
    \ char == \"E\" {\n            primeCount += 1\n        } else if char == \"F\"\
    \ {\n            primeCount += 1\n        } else {\n            primeCount +=\
    \ 1\n        }\n    }\n    if primeCount > 1 {\n        return primeCount\n  \
    \  }\n    return 0", "    var hexDigits: [Int] = []\n    for c in num.unicodeScalars\
    \ {\n        hexDigits.append(Int(c.value))\n    }\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n \
    \   hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n  \
    \  hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n   \
    \ hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n \
    \   hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n  \
    \  hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n   \
    \ hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n \
    \   hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n  \
    \  hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n   \
    \ hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n \
    \   hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n  \
    \  hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n   \
    \ hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n \
    \   hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n  \
    \  hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n   \
    \ hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n \
    \   hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n  \
    \  hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n   \
    \ hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n    hexDigits.append(0)\n\
    \    hexDigits.append(0)\n    hexDigits.append(0)\n    ", "    var count = 0\n\
    \    var digit = 0\n    var hexDigit = 0\n    var isPrime = true\n    var isHexDigit\
    \ = true\n    var isHexDigitUpper = true\n    var isHexDigitLowerUpper = true\n\
    \    var isHexDigitUpperLowerUpper = true\n    var isHexDigitLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerLowerUpperLowerUpper = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpper = true\n\
    \    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper = true\n\
    \    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = true\n    var isHexDigitUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_9_rolling_max
results:
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: 1
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    for number in numbers {\n    \
    \    if number > max[0] {\n            max = [number]\n        } else {\n    \
    \        max = append(max, number)\n        }\n    }\n    return max\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: SyntaxError
  stderr: "/tmp/tmplr48td_h.swift:12:19: error: cannot find 'append' in scope\n  \
    \          max = append(max, number)\n                  ^~~~~~\n"
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var rolling_max = [Int]()\n    var rolling_max_index\
    \ = 0\n    for number in numbers {\n        if number > rolling_max[rolling_max_index]\
    \ {\n            rolling_max[rolling_max_index] = number\n            rolling_max_index\
    \ += 1\n        }\n    }\n    return rolling_max\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) ==\
    \ [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002af4053f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4050ef561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002af4050ef286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002af4050ef13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002af4050eebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002af404eeee83 <unavailable> + 188035

    6    tmpadb9szcn                        0x0000563e55bf3b1d <unavailable> + 6941

    7    tmpadb9szcn                        0x0000563e55bf3635 <unavailable> + 5685

    8    libc.so.6                          0x00002af4055e4460 __libc_start_main +
    245

    9    tmpadb9szcn                        0x0000563e55bf3239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: 1
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    for number in numbers {\n    \
    \    if max != nil {\n            if number > max[0] {\n                max =\
    \ number\n            }\n        } else {\n            max = number\n        }\n\
    \    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(rolling_max(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers: [1, 2, 3, 4]) == [1,\
    \ 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers:\
    \ [3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])"
  status: SyntaxError
  stderr: "/tmp/tmpl3jgm3j5.swift:9:16: warning: comparing non-optional value of type\
    \ '[Int]' to 'nil' always returns true\n        if max != nil {\n           ~~~\
    \ ^  ~~~\n/tmp/tmpl3jgm3j5.swift:11:23: error: cannot assign value of type 'Int'\
    \ to type '[Int]'\n                max = number\n                      ^~~~~~\n\
    /tmp/tmpl3jgm3j5.swift:14:19: error: cannot assign value of type 'Int' to type\
    \ '[Int]'\n            max = number\n                  ^~~~~~\n"
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = numbers[0]\n    var rolling_max = numbers\n\
    \    for number in numbers {\n        if number > max {\n            max = number\n\
    \        } else {\n            rolling_max[rolling_max.index(of: max)!] = number\n\
    \        }\n    }\n    return rolling_max\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) ==\
    \ [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b0d423cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0d420c6561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0d420c6286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0d420c613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0d420c5bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b0d41ec5e83 <unavailable> + 188035

    6    tmpxohb_u6m                        0x0000564676e88b08 <unavailable> + 6920

    7    tmpxohb_u6m                        0x0000564676e885dd <unavailable> + 5597

    8    libc.so.6                          0x00002b0d425bb460 __libc_start_main +
    245

    9    tmpxohb_u6m                        0x0000564676e882e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: 1
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var index = 0\n    for n in numbers\
    \ {\n        if index == 0 {\n            max = n\n        } else {\n        \
    \    if n > max[index] {\n                max[index] = n\n            }\n    \
    \    }\n        index++\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) ==\
    \ [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])"
  status: SyntaxError
  stderr: "/tmp/tmpx3ypohhx.swift:11:19: error: cannot assign value of type 'Int'\
    \ to type '[Int]'\n            max = n\n                  ^\n/tmp/tmpx3ypohhx.swift:17:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        index++\n\
    \             ^~\n"
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var max = 0\n    for number\
    \ in numbers {\n        if number > max {\n            max = number\n        }\n\
    \    }\n    for number in numbers {\n        if number == max {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(rolling_max(numbers: [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) ==\
    \ [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])"
  status: Exception
  stderr: 'tmp3yhf0fiq/tmp3yhf0fiq.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba5030ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba502de2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba502de2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba502de17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3yhf0fiq                        0x000055d77e4936cd <unavailable> + 5837

    5    libc.so.6                          0x00002ba5032d7460 __libc_start_main +
    245

    6    tmp3yhf0fiq                        0x000055d77e4931e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var rolling_max = [Int]()\n    var rolling_max_index\
    \ = 0\n    for number in numbers {\n        if number > rolling_max[rolling_max_index]\
    \ {\n            rolling_max[rolling_max_index] = number\n        }\n        rolling_max_index\
    \ += 1\n    }\n    return rolling_max\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(rolling_max(numbers: [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) ==\
    \ [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b494e318c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b494e00f561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b494e00f286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b494e00f13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b494e00ebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b494de0ee83 <unavailable> + 188035

    6    tmpasne_fyn                        0x000055c79f363b1d <unavailable> + 6941

    7    tmpasne_fyn                        0x000055c79f363635 <unavailable> + 5685

    8    libc.so.6                          0x00002b494e504460 __libc_start_main +
    245

    9    tmpasne_fyn                        0x000055c79f363239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var result = [Int]()\n    var max = 0\n    for number\
    \ in numbers {\n        if number > max {\n            max = number\n        }\n\
    \    }\n    for number in numbers {\n        if number == max {\n            result.append(max)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(rolling_max(numbers: [] as [Int]) == [] as [Int])\nassert(rolling_max(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers: [4, 3, 2, 1]) ==\
    \ [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])"
  status: Exception
  stderr: 'tmpy90z_kxo/tmpy90z_kxo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1987378c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b198706fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b198706f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b198706e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy90z_kxo                        0x00005565cb7eb6cd <unavailable> + 5837

    5    libc.so.6                          0x00002b1987564460 __libc_start_main +
    245

    6    tmpy90z_kxo                        0x00005565cb7eb1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: -4
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    var maxIndex = 0\n    for number\
    \ in numbers {\n        if number > max[maxIndex] {\n            max[maxIndex]\
    \ = number\n            maxIndex += 1\n        }\n    }\n    return max\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ab9a66c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab9a63bc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab9a63bc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab9a63bc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab9a63bbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ab9a61bbe83 <unavailable> + 188035

    6    tmprs8w897a                        0x000055e184f95b1d <unavailable> + 6941

    7    tmprs8w897a                        0x000055e184f95635 <unavailable> + 5685

    8    libc.so.6                          0x00002ab9a68b1460 __libc_start_main +
    245

    9    tmprs8w897a                        0x000055e184f95239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824903
- exit_code: 1
  program: "\n/// From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n/// in the sequence.\n/// >>> rolling_max(numbers:\
    \ [1, 2, 3, 2, 3, 4, 2])\n/// [1, 2, 3, 3, 3, 4, 4]\nfunc rolling_max(numbers:\
    \ [Int]) -> [Int] {\n    var max = [Int]()\n    for number in numbers {\n    \
    \    if number > max[0] {\n            max = [number]\n        } else {\n    \
    \        max = append(max, number)\n        }\n    }\n    return max\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(rolling_max(numbers: [] as [Int]) == [] as [Int])\n\
    assert(rolling_max(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(rolling_max(numbers:\
    \ [4, 3, 2, 1]) == [4, 4, 4, 4])\nassert(rolling_max(numbers: [3, 2, 3, 100, 3])\
    \ == [3, 3, 3, 100, 100])"
  status: SyntaxError
  stderr: "/tmp/tmplr48td_h.swift:12:19: error: cannot find 'append' in scope\n  \
    \          max = append(max, number)\n                  ^~~~~~\n"
  stdout: ''
  timestamp: 1659824903

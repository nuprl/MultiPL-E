name: HumanEval_152_compare
language: swift
prompt: "\n/// I think we all remember that feeling when the result of some long-awaited\n\
  /// event is finally known. The feelings and thoughts you have at that moment are\n\
  /// definitely worth noting down and comparing.\n/// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n/// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n/// Return an array of the same length denoting how far off each guess was.\
  \ If they have guessed correctly,\n/// the value is 0, and if not, the value is\
  \ the absolute difference between the guess and the score.\n/// example:\n/// >>>\
  \ compare(game: [1, 2, 3, 4, 5, 1], guess: [1, 2, 3, 4, 2, -2])\n/// [0, 0, 0, 0,\
  \ 3, 3]\n/// >>> compare(game: [0, 5, 0, 0, 0, 4], guess: [4, 1, 1, 0, 0, -2])\n\
  /// [4, 4, 1, 0, 0, 6]\nfunc compare(game: [Int], guess: [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(compare(game: [1, 2, 3, 4, 5, 1], guess:\
  \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3])\nassert(compare(game: [0, 0, 0, 0,\
  \ 0, 0], guess: [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0])\nassert(compare(game:\
  \ [1, 2, 3], guess: [-1, -2, -3]) == [2, 4, 6])\nassert(compare(game: [1, 2, 3,\
  \ 5], guess: [-1, 2, 3, 4]) == [2, 0, 0, 1])"
completions: ["    var result = [Int]()\n    var scores = [Int]()\n    var guesses\
    \ = [Int]()\n    \n    for i in 0..<game.count {\n        guesses.append(guess[i])\n\
    \        scores.append(game[i])\n    }\n    \n    for i in 0..<game.count {\n\
    \        if guesses[i] == scores[i] {\n            result.append(0)\n        }\
    \ else {\n            result.append(abs(guesses[i] - scores[i]))\n        }\n\
    \    }\n    \n    return result", "    var result = [Int]()\n    var gameIndex\
    \ = 0\n    var guessIndex = 0\n    while gameIndex < game.count && guessIndex\
    \ < guess.count {\n        if game[gameIndex] == guess[guessIndex] {\n       \
    \     result[guessIndex] = 0\n            gameIndex += 1\n            guessIndex\
    \ += 1\n        } else if game[gameIndex] > guess[guessIndex] {\n            result[guessIndex]\
    \ = game[gameIndex] - guess[guessIndex]\n            gameIndex += 1\n        }\
    \ else {\n            result[guessIndex] = guess[guessIndex] - game[gameIndex]\n\
    \            guessIndex += 1\n        }\n    }\n    while gameIndex < game.count\
    \ {\n        result[guessIndex] = game[gameIndex] - guess[guessIndex]\n      \
    \  gameIndex += 1\n        guessIndex += 1\n    }\n    while guessIndex < guess.count\
    \ {\n        result[guessIndex] = guess[guessIndex] - game[gameIndex]\n      \
    \  guessIndex += 1\n    }\n    return result", "    var result = [Int]()\n   \
    \ var gameScore = 0\n    var guessScore = 0\n    var gameIndex = 0\n    var guessIndex\
    \ = 0\n    var gameScoreDiff = 0\n    var guessScoreDiff = 0\n    var gameScoreDiffIndex\
    \ = 0\n    var guessScoreDiffIndex = 0\n    while gameIndex < game.count && guessIndex\
    \ < guess.count {\n        if game[gameIndex] == guess[guessIndex] {\n       \
    \     gameScore += 1\n            guessScore += 1\n            gameIndex += 1\n\
    \            guessIndex += 1\n            result[gameScoreDiffIndex] = gameScore\n\
    \            result[guessScoreDiffIndex] = guessScore\n            gameScoreDiffIndex\
    \ += 1\n            guessScoreDiffIndex += 1\n        } else {\n            gameScore\
    \ -= 1\n            guessScore -= 1\n            gameIndex += 1\n            guessIndex\
    \ += 1\n            gameScoreDiff += abs(gameScore - guess[guessIndex])\n    \
    \        guessScoreDiff += abs(guess[guessIndex] - game[gameIndex])\n        \
    \    gameScoreDiffIndex += 1\n            guessScoreDiffIndex += 1\n        }\n\
    \    }\n    if gameIndex == game.count {\n        result[gameScoreDiffIndex] =\
    \ gameScore\n        result[guessScoreDiffIndex] = guessScore\n    }\n    return\
    \ result", "    var result = [Int]()\n    var gameScore = 0\n    var guessScore\
    \ = 0\n    var gameIndex = 0\n    var guessIndex = 0\n    var gameScoreDiff =\
    \ 0\n    var guessScoreDiff = 0\n    var gameScoreDiffIndex = 0\n    var guessScoreDiffIndex\
    \ = 0\n    while gameIndex < game.count && guessIndex < guess.count {\n      \
    \  if game[gameIndex] == guess[guessIndex] {\n            gameScore += 1\n   \
    \         guessScore += 1\n            gameIndex += 1\n            guessIndex\
    \ += 1\n            result[gameScoreDiffIndex] = gameScore\n            result[guessScoreDiffIndex]\
    \ = guessScore\n            gameScoreDiffIndex += 1\n            guessScoreDiffIndex\
    \ += 1\n        } else {\n            gameScore += abs(game[gameIndex] - guess[guessIndex])\n\
    \            guessScore += abs(game[gameIndex] - guess[guessIndex])\n        \
    \    gameIndex += 1\n            guessIndex += 1\n            gameScoreDiff +=\
    \ gameScore\n            guessScoreDiff += guessScore\n            gameScoreDiffIndex\
    \ += 1\n            guessScoreDiffIndex += 1\n        }\n    }\n    if gameIndex\
    \ == game.count {\n        result[gameScoreDiffIndex] = gameScore\n        result[guessScoreDiffIndex]\
    \ = guessScore\n    }\n    return result", "    var result = [Int]()\n    var\
    \ gameIndex = 0\n    var guessIndex = 0\n    while gameIndex < game.count && guessIndex\
    \ < guess.count {\n        if game[gameIndex] == guess[guessIndex] {\n       \
    \     result.append(0)\n            gameIndex += 1\n            guessIndex +=\
    \ 1\n        } else if game[gameIndex] > guess[guessIndex] {\n            result.append(abs(game[gameIndex]\
    \ - guess[guessIndex]))\n            gameIndex += 1\n        } else {\n      \
    \      result.append(abs(guess[guessIndex] - game[gameIndex]))\n            guessIndex\
    \ += 1\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ i = 0\n    var j = 0\n    var k = 0\n    var gameLen = game.count\n    var guessLen\
    \ = guess.count\n    while i < gameLen && j < guessLen {\n        if game[i] ==\
    \ guess[j] {\n            result[k] = 0\n            i += 1\n            j +=\
    \ 1\n            k += 1\n        } else if game[i] > guess[j] {\n            result[k]\
    \ = game[i] - guess[j]\n            i += 1\n        } else {\n            result[k]\
    \ = guess[j] - game[i]\n            j += 1\n        }\n    }\n    if i == gameLen\
    \ {\n        result[k] = guess[j] - game[i]\n        j += 1\n    }\n    if j ==\
    \ guessLen {\n        result[k] = game[i] - guess[j]\n        i += 1\n    }\n\
    \    return result", "    var result = [Int](repeating: 0, count: game.count)\n\
    \    for i in 0..<game.count {\n        if game[i] == guess[i] {\n           \
    \ result[i] = 0\n        } else {\n            result[i] = abs(game[i] - guess[i])\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var gameScore\
    \ = game.reduce(0){$0 + $1}\n    var guessScore = guess.reduce(0){$0 + $1}\n \
    \   var diffScore = gameScore - guessScore\n    var diffScoreAbs = abs(diffScore)\n\
    \    for index in 0..<guess.count {\n        if game[index] == guess[index] {\n\
    \            result.append(0)\n        } else {\n            result.append(diffScoreAbs)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    \n    for\
    \ i in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    \n    return result", "    var result = [Int]()\n    var i =\
    \ 0\n    var j = 0\n    while i < game.count && j < guess.count {\n        if\
    \ game[i] == guess[j] {\n            result.append(0)\n            i += 1\n  \
    \          j += 1\n        } else if game[i] > guess[j] {\n            result.append(abs(game[i]\
    \ - guess[j]))\n            i += 1\n        } else {\n            result.append(abs(guess[j]\
    \ - game[i]))\n            j += 1\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    var index = 0\n    while index < game.count {\n  \
    \      if game[index] == guess[index] {\n            result.append(0)\n      \
    \  } else {\n            result.append(abs(game[index] - guess[index]))\n    \
    \    }\n        index += 1\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0..<game.count {\n        if game[i] == guess[i] {\n           \
    \ result.append(0)\n        } else {\n            result.append(abs(game[i] -\
    \ guess[i]))\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var scores = [Int]()\n    var guesses = [Int]()\n    var gameScores = [Int]()\n\
    \    var guessesScores = [Int]()\n    var gameScore = 0\n    var guessesScore\
    \ = 0\n    var gameScoreIndex = 0\n    var guessesScoreIndex = 0\n    var gameScoreIndex2\
    \ = 0\n    var guessesScoreIndex2 = 0\n    var gameScoreIndex3 = 0\n    var guessesScoreIndex3\
    \ = 0\n    var gameScoreIndex4 = 0\n    var guessesScoreIndex4 = 0\n    var gameScoreIndex5\
    \ = 0\n    var guessesScoreIndex5 = 0\n    var gameScoreIndex6 = 0\n    var guessesScoreIndex6\
    \ = 0\n    var gameScoreIndex7 = 0\n    var guessesScoreIndex7 = 0\n    var gameScoreIndex8\
    \ = 0\n    var guessesScoreIndex8 = 0\n    var gameScoreIndex9 = 0\n    var guessesScoreIndex9\
    \ = 0\n    var gameScoreIndex10 = 0\n    var guessesScoreIndex10 = 0\n    var\
    \ gameScoreIndex11 = 0\n    var guessesScoreIndex11 = 0\n    var gameScoreIndex12\
    \ = 0\n    var guessesScoreIndex12 = 0\n    var gameScoreIndex13 = 0\n    var\
    \ guessesScoreIndex13 = 0\n    var gameScoreIndex14 = 0\n    var guessesScoreIndex14\
    \ = 0\n    var gameScoreIndex15 = 0\n    var guessesScoreIndex15 = 0\n    var\
    \ gameScoreIndex16 = 0\n    var guessesScoreIndex16 = 0\n    var gameScoreIndex17\
    \ = 0\n    var guessesScoreIndex17 = 0\n    var gameScoreIndex18 = 0\n    var\
    \ guessesScoreIndex18 = 0\n    var gameScoreIndex19 = 0\n    var guessesScoreIndex19\
    \ = 0\n    var gameScoreIndex20 = 0\n    var guessesScoreIndex20 = 0\n    var\
    \ gameScoreIndex21 = 0\n    var guessesScoreIndex21 = 0\n    var gameScoreIndex22\
    \ = 0\n    var guessesScoreIndex22 = 0\n    var gameScoreIndex23 = 0\n    var\
    \ guessesScoreIndex23 = 0\n    var gameScoreIndex24 = 0\n    var guessesScoreIndex24\
    \ = 0\n    var gameScoreIndex25 = 0\n    var guessesScoreIndex25 = 0\n    var\
    \ gameScoreIndex26 = 0\n    var guessesScoreIndex26 = 0\n    var gameScoreIndex27\
    \ = 0\n    var guessesScoreIndex27 = 0\n    var gameScoreIndex28 = 0\n    var\
    \ guessesScoreIndex28 = 0\n    var gameScoreIndex29 = 0\n    var guessesScoreIndex29\
    \ = 0\n    var gameScoreIndex30 = 0\n    var guessesScoreIndex30 = 0\n    var\
    \ gameScoreIndex31 = 0\n    var guessesScoreIndex31 = 0", "    var result = [Int](repeating:\
    \ 0, count: game.count)\n    for i in 0..<game.count {\n        result[i] = abs(game[i]\
    \ - guess[i])\n    }\n    return result", "    var result = [Int]()\n    var i\
    \ = 0\n    var j = 0\n    while i < game.count && j < guess.count {\n        if\
    \ game[i] == guess[j] {\n            result.append(0)\n            i += 1\n  \
    \          j += 1\n        } else if game[i] > guess[j] {\n            result.append(abs(game[i]\
    \ - guess[j]))\n            i += 1\n        } else {\n            result.append(abs(guess[j]\
    \ - game[i]))\n            j += 1\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    var gameScore = 0\n    var guessScore = 0\n    var\
    \ gameIndex = 0\n    var guessIndex = 0\n    var gameScoreDiff = 0\n    var guessScoreDiff\
    \ = 0\n    var gameScoreDiffIndex = 0\n    var guessScoreDiffIndex = 0\n    while\
    \ gameIndex < game.count && guessIndex < guess.count {\n        if game[gameIndex]\
    \ == guess[guessIndex] {\n            gameScore += game[gameIndex]\n         \
    \   guessScore += guess[guessIndex]\n            gameIndex += 1\n            guessIndex\
    \ += 1\n            result[gameScoreDiffIndex] = gameScore\n            gameScoreDiffIndex\
    \ += 1\n        } else {\n            gameScore += abs(game[gameIndex] - guess[guessIndex])\n\
    \            guessScore += abs(game[gameIndex] - guess[guessIndex])\n        \
    \    gameIndex += 1\n            guessIndex += 1\n            gameScoreDiff +=\
    \ game[gameIndex]\n            guessScoreDiff += guess[guessIndex]\n         \
    \   gameScoreDiffIndex += 1\n            guessScoreDiffIndex += 1\n        }\n\
    \    }\n    if gameIndex < game.count {\n        result[gameScoreDiffIndex] =\
    \ gameScore\n        gameScoreDiffIndex += 1\n    }\n    if guessIndex < guess.count\
    \ {\n        result[guessScoreDiffIndex] = guessScore\n        guessScoreDiffIndex\
    \ += 1\n    }\n    return result", "    var result = [Int]()\n    \n    for i\
    \ in 0..<game.count {\n        if game[i] == guess[i] {\n            result.append(0)\n\
    \        } else {\n            result.append(abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    \n    return result", "    var result: [Int] = []\n    var gameIndex\
    \ = 0\n    var guessIndex = 0\n    while gameIndex < game.count && guessIndex\
    \ < guess.count {\n        if game[gameIndex] == guess[guessIndex] {\n       \
    \     result.append(0)\n            gameIndex += 1\n            guessIndex +=\
    \ 1\n        } else if game[gameIndex] > guess[guessIndex] {\n            result.append(abs(game[gameIndex]\
    \ - guess[guessIndex]))\n            gameIndex += 1\n        } else {\n      \
    \      result.append(abs(guess[guessIndex] - game[gameIndex]))\n            guessIndex\
    \ += 1\n        }\n    }\n    while gameIndex < game.count {\n        result.append(0)\n\
    \        gameIndex += 1\n    }\n    while guessIndex < guess.count {\n       \
    \ result.append(0)\n        guessIndex += 1\n    }\n    return result", "    var\
    \ result = [Int](repeating: 0, count: game.count)\n    for i in 0..<game.count\
    \ {\n        if game[i] == guess[i] {\n            result[i] = 0\n        } else\
    \ {\n            result[i] = abs(game[i] - guess[i])\n        }\n    }\n    return\
    \ result", "    var result = [Int](repeating: 0, count: game.count)\n    for i\
    \ in 0..<game.count {\n        if game[i] == guess[i] {\n            result[i]\
    \ = 0\n        } else {\n            result[i] = abs(game[i] - guess[i])\n   \
    \     }\n    }\n    return result"]
stop_tokens:
- "\n}"

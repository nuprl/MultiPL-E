language: swift
name: HumanEval_27_flip_case
results:
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.uppercased().lowercased()\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpudk53p3a/tmpudk53p3a.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b39c4a3ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b39c4735b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b39c4735988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b39c47347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpudk53p3a                        0x000055a5da27f4a5 <unavailable> + 5285

    5    libc.so.6                          0x00002b39c4c2a460 __libc_start_main +
    245

    6    tmpudk53p3a                        0x000055a5da27eff9 <unavailable> + 4089

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercaseString.uppercaseString\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp0hjfutkl.swift:6:19: error: value of type 'String' has no member\
    \ 'lowercaseString'\n    return string.lowercaseString.uppercaseString\n     \
    \      ~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for c in string.unicodeScalars\
    \ {\n        switch c {\n        case .lowercase:\n            result += .uppercase\n\
    \        case .uppercase:\n            result += .lowercase\n        default:\n\
    \            result += c\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp2hi6y9fa.swift:9:15: error: type 'Unicode.Scalar' has no member\
    \ 'lowercase'\n        case .lowercase:\n             ~^~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:11:15:\
    \ error: type 'Unicode.Scalar' has no member 'uppercase'\n        case .uppercase:\n\
    \             ~^~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:10:20: error: binary operator\
    \ '+=' cannot be applied to operands of type 'String' and '_'\n            result\
    \ += .uppercase\n            ~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:12:20:\
    \ error: binary operator '+=' cannot be applied to operands of type 'String' and\
    \ '_'\n            result += .lowercase\n            ~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:14:20:\
    \ error: operator function '+=' requires that 'Unicode.Scalar' conform to 'Sequence'\n\
    \            result += c\n                   ^\nSwift.RangeReplaceableCollection:4:35:\
    \ note: where 'Other' = 'Unicode.Scalar'\n    @inlinable public static func +=\
    \ <Other>(lhs: inout Self, rhs: Other) where Other : Sequence, Self.Element ==\
    \ Other.Element\n                                  ^\n"
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string.unicodeScalars\
    \ {\n        switch char {\n        case .lowercase:\n            result += .uppercase\n\
    \        case .uppercase:\n            result += .lowercase\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpeourhrxk.swift:9:15: error: type 'Unicode.Scalar' has no member\
    \ 'lowercase'\n        case .lowercase:\n             ~^~~~~~~~~\n/tmp/tmpeourhrxk.swift:11:15:\
    \ error: type 'Unicode.Scalar' has no member 'uppercase'\n        case .uppercase:\n\
    \             ~^~~~~~~~~\n/tmp/tmpeourhrxk.swift:10:20: error: binary operator\
    \ '+=' cannot be applied to operands of type 'String' and '_'\n            result\
    \ += .uppercase\n            ~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmpeourhrxk.swift:12:20:\
    \ error: binary operator '+=' cannot be applied to operands of type 'String' and\
    \ '_'\n            result += .lowercase\n            ~~~~~~ ^  ~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { $0.isUppercase ? $0.lowercased()\
    \ : $0.uppercased() }\n        .joined()\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpbb5rp0ux.swift:6:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    return string.characters.map { $0.isUppercase ? $0.lowercased()\
    \ : $0.uppercased() }\n                  ^~~~~~~~~~\nSwift.String:5:16: note:\
    \ 'characters' was obsoleted in Swift 5.0\n    public var characters: String {\
    \ get set }\n               ^\n"
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for c in string.unicodeScalars\
    \ {\n        switch c {\n        case .lowercase:\n            result += .uppercase\n\
    \        case .uppercase:\n            result += .lowercase\n        default:\n\
    \            result += c\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp2hi6y9fa.swift:9:15: error: type 'Unicode.Scalar' has no member\
    \ 'lowercase'\n        case .lowercase:\n             ~^~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:11:15:\
    \ error: type 'Unicode.Scalar' has no member 'uppercase'\n        case .uppercase:\n\
    \             ~^~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:10:20: error: binary operator\
    \ '+=' cannot be applied to operands of type 'String' and '_'\n            result\
    \ += .uppercase\n            ~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:12:20:\
    \ error: binary operator '+=' cannot be applied to operands of type 'String' and\
    \ '_'\n            result += .lowercase\n            ~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmp2hi6y9fa.swift:14:20:\
    \ error: operator function '+=' requires that 'Unicode.Scalar' conform to 'Sequence'\n\
    \            result += c\n                   ^\nSwift.RangeReplaceableCollection:4:35:\
    \ note: where 'Other' = 'Unicode.Scalar'\n    @inlinable public static func +=\
    \ <Other>(lhs: inout Self, rhs: Other) where Other : Sequence, Self.Element ==\
    \ Other.Element\n                                  ^\n"
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.lowercased() + string.uppercased()\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmpo3gutv1r/tmpo3gutv1r.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4613a23c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b461371ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b461371a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46137197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo3gutv1r                        0x0000564136e4f4f5 <unavailable> + 5365

    5    libc.so.6                          0x00002b4613c0f460 __libc_start_main +
    245

    6    tmpo3gutv1r                        0x0000564136e4f049 <unavailable> + 4169

    '
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for c in string.unicodeScalars\
    \ {\n        switch c {\n        case .lowercase:\n            result += .uppercase\n\
    \        case .uppercase:\n            result += .lowercase\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpb7a5c0z0.swift:9:15: error: type 'Unicode.Scalar' has no member\
    \ 'lowercase'\n        case .lowercase:\n             ~^~~~~~~~~\n/tmp/tmpb7a5c0z0.swift:11:15:\
    \ error: type 'Unicode.Scalar' has no member 'uppercase'\n        case .uppercase:\n\
    \             ~^~~~~~~~~\n/tmp/tmpb7a5c0z0.swift:10:20: error: binary operator\
    \ '+=' cannot be applied to operands of type 'String' and '_'\n            result\
    \ += .uppercase\n            ~~~~~~ ^  ~~~~~~~~~~\n/tmp/tmpb7a5c0z0.swift:12:20:\
    \ error: binary operator '+=' cannot be applied to operands of type 'String' and\
    \ '_'\n            result += .lowercase\n            ~~~~~~ ^  ~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824507
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { $0.isUppercase ? $0.lowercased()\
    \ : $0.uppercased() }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpg13b2usw.swift:6:30: error: cannot convert return expression of\
    \ type '[String]' to return type 'String'\n    return string.characters.map {\
    \ $0.isUppercase ? $0.lowercased() : $0.uppercased() }\n           ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824573
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case(string: \"Hello\")\n/// \"hELLO\"\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for c in string.unicodeScalars\
    \ {\n        if c.isUppercase {\n            result += c.value\n        } else\
    \ {\n            result += c.value.lowercase()\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpovxrzch_.swift:8:14: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n        if c.isUppercase {\n           ~ ^~~~~~~~~~~\n\
    /tmp/tmpovxrzch_.swift:9:25: error: cannot convert value of type 'UInt32' to expected\
    \ argument type 'String'\n            result += c.value\n                    \
    \    ^\n/tmp/tmpovxrzch_.swift:11:31: error: value of type 'UInt32' has no member\
    \ 'lowercase'\n            result += c.value.lowercase()\n                   \
    \   ~~~~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824573

name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\n/// >>> get_closest_vowel(word:\
  \ \"yogurt\")\n/// \"u\"\n/// >>> get_closest_vowel(word: \"FULL\")\n/// \"U\"\n\
  /// >>> get_closest_vowel(word: \"quick\")\n/// \"\"\n/// >>> get_closest_vowel(word:\
  \ \"ab\")\n/// \"\"\nfunc get_closest_vowel(word: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    if word == \"\" {\n        return \"\"\n    }\n    \n    let vowels\
    \ = \"aeiouAEIOU\"\n    \n    var index = word.startIndex\n    \n    while index\
    \ < word.endIndex {\n        if vowels.contains(word.substringToIndex(index))\
    \ {\n            return word.substringFromIndex(index)\n        }\n        index\
    \ = index + 1\n    }\n    \n    return \"\"", '    return ""', "    var vowels:\
    \ [String] = []\n    for letter in word {\n        if letter.isUpper() {\n   \
    \         vowels.append(letter)\n        }\n    }\n    vowels.reverse()\n    for\
    \ vowel in vowels {\n        if vowel.hasPrefix(\"A\") {\n            return vowel\n\
    \        }\n    }\n    return \"\"", "    var vowels = \"aeiouAEIOU\"\n    var\
    \ vowelsCount = vowels.count\n    var vowelIndex = 0\n    var vowelIndexEnd =\
    \ vowels.count - 1\n    var vowelIndexStart = vowels.count - 1\n    var vowelIndexEnd2\
    \ = vowels.count - 1\n    var vowelIndexStart2 = vowels.count - 1\n    var vowelIndexEnd3\
    \ = vowels.count - 1\n    var vowelIndexStart3 = vowels.count - 1\n    var vowelIndexEnd4\
    \ = vowels.count - 1\n    var vowelIndexStart4 = vowels.count - 1\n    var vowelIndexEnd5\
    \ = vowels.count - 1\n    var vowelIndexStart5 = vowels.count - 1\n    var vowelIndexEnd6\
    \ = vowels.count - 1\n    var vowelIndexStart6 = vowels.count - 1\n    var vowelIndexEnd7\
    \ = vowels.count - 1\n    var vowelIndexStart7 = vowels.count - 1\n    var vowelIndexEnd8\
    \ = vowels.count - 1\n    var vowelIndexStart8 = vowels.count - 1\n    var vowelIndexEnd9\
    \ = vowels.count - 1\n    var vowelIndexStart9 = vowels.count - 1\n    var vowelIndexEnd10\
    \ = vowels.count - 1\n    var vowelIndexStart10 = vowels.count - 1\n    var vowelIndexEnd11\
    \ = vowels.count - 1\n    var vowelIndexStart11 = vowels.count - 1\n    var vowelIndexEnd12\
    \ = vowels.count - 1\n    var vowelIndexStart12 = vowels.count - 1\n    var vowelIndexEnd13\
    \ = vowels.count - 1\n    var vowelIndexStart13 = vowels.count - 1\n    var vowelIndexEnd14\
    \ = vowels.count - 1\n    var vowelIndexStart14 = vowels.count - 1\n    var vowelIndexEnd15\
    \ = vowels.count - 1\n    var vowelIndexStart15 = vowels.count - 1\n    var vowelIndexEnd16\
    \ = vowels.count - 1\n    var vowelIndexStart16 = vowels.count - 1\n    var vowelIndexEnd17\
    \ = vowels.count - 1\n    var vowelIndexStart17 = vowels.count - 1\n    var vowelIndexEnd18\
    \ = vowels.count - 1\n    var vowelIndexStart18 = vowels.count - 1\n    var vowelIndexEnd19\
    \ = vowels.count - 1\n    var vowelIndexStart19 = vowels.count - 1\n    var vowelIndexEnd20\
    \ = vowels.count - 1\n    var vowelIndexStart20 = vowels.count - 1\n    var vowelIndexEnd21\
    \ = vowels.count - 1\n    var vowelIndexStart21 = vowels.count - 1\n    var vowelIndexEnd22\
    \ = vowels.count - 1\n    var vowelIndexStart22 = vowels.count - 1\n    var vowelIndexEnd23\
    \ = vowels.count - 1\n    var vowelIndexStart23 = vowels.count - 1\n    var vowelIndexEnd24\
    \ = vowels.count ", "    var vowels: [String] = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var vowelsCount: [Int] = [0, 1, 2, 3, 4]\n    var vowelsCountIndex:\
    \ Int = 0\n    var vowelsCountMax: Int = vowels.count\n    var vowelsCountMin:\
    \ Int = vowels.count - 1\n    var vowelsCountSum: Int = 0\n    var vowelsCountSumMax:\
    \ Int = vowelsCountMax\n    var vowelsCountSumMin: Int = vowelsCountMin - 1\n\
    \    var vowelsCountSumSum: Int = 0\n    var vowelsCountSumSumMax: Int = vowelsCountSumMax\n\
    \    var vowelsCountSumSumMin: Int = vowelsCountSumMin - 1\n    var vowelsCountSumSumSum:\
    \ Int = 0\n    var vowelsCountSumSumSumMax: Int = vowelsCountSumSumMax\n    var\
    \ vowelsCountSumSumSumMin: Int = vowelsCountSumSumMin - 1\n    var vowelsCountSumSumSumSum:\
    \ Int = 0\n    var vowelsCountSumSumSumSumMax: Int = vowelsCountSumSumSumMax\n\
    \    var vowelsCountSumSumSumSumMin: Int = vowelsCountSumSumSumMin - 1\n    var\
    \ vowelsCountSumSumSumSumSum: Int = 0\n    var vowelsCountSumSumSumSumSumMax:\
    \ Int = vowelsCountSumSumSumSumMax\n    var vowelsCountSumSumSumSumSumMin: Int\
    \ = vowelsCountSumSumSumSumMin - 1\n    var vowelsCountSumSumSumSumSumSum: Int\
    \ = 0\n    var vowelsCountSumSumSumSumSumSumMax: Int = vowelsCountSumSumSumSumSumMax\n\
    \    var vowelsCountSumSumSumSumSumSumMin: Int = vowelsCountSumSumSumSumSumSumMin\
    \ - 1\n    var vowelsCountSumSumSumSumSumSumSum: Int = 0\n    var vowelsCountSumSumSumSumSumSumSumMax:\
    \ Int = vowelsCountSumSumSumSumSumSumSumMax\n    var vowelsCountSumSumSumSumSumSumSumMin:\
    \ Int = vowelsCountSumSumSumSumSumSumSumMin - 1\n    var vowelsCountSumSumSumSumSumSumSumSum:\
    \ Int = 0\n    var vowelsCountSumSumSumSumSumSumSumSumMax: Int = vowelsCountSumSumSumSumSumSumSumSumMax\n\
    \    var vowelsCountSumSumSumSumSumSumSumMin: Int = vowelsCountSumSumSumSumSumSumSumSumMin\
    \ - 1\n    var vowels", "    var vowels: [String] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var vowelsCount: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndex: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount: [Int] = [0, 1, 2, 3, 4]\n    var\
    \ vowelsIndexCount2: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount3: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount4: [Int] = [0, 1, 2, 3, 4]\n    var\
    \ vowelsIndexCount5: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount6: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount7: [Int] = [0, 1, 2, 3, 4]\n    var\
    \ vowelsIndexCount8: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount9: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount10: [Int] = [0, 1, 2, 3, 4]\n   \
    \ var vowelsIndexCount11: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount12:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount13: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount14: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount15:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount16: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount17: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount18:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount19: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount20: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount21:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount22: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount23: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount24:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount25: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount26: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount27:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount28: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount29: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount30:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount31: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount32: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount33:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount34: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount35: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount36:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount37: [", "    var vowels: [String]\
    \ = []\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased() !=\
    \ \"a\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"e\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"i\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"o\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"u\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"y\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"a\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"e\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"i\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"o\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"u\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"y\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"a\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"e\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"i\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"o\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"u\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"y\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"a\"\n    }\n    vowels = vowels.filter {\n        !$0.isEmpty && $0.lowercased()\
    \ != \"e", "    \n    let vowels = \"aeiouAEIOU\"\n    \n    var vowelIndex =\
    \ 0\n    \n    var vowelIndex2 = word.count\n    \n    var vowelIndex3 = word.count\n\
    \    \n    var vowelIndex4 = word.count\n    \n    var vowelIndex5 = word.count\n\
    \    \n    var vowelIndex6 = word.count\n    \n    var vowelIndex7 = word.count\n\
    \    \n    var vowelIndex8 = word.count\n    \n    var vowelIndex9 = word.count\n\
    \    \n    var vowelIndex10 = word.count\n    \n    var vowelIndex11 = word.count\n\
    \    \n    var vowelIndex12 = word.count\n    \n    var vowelIndex13 = word.count\n\
    \    \n    var vowelIndex14 = word.count\n    \n    var vowelIndex15 = word.count\n\
    \    \n    var vowelIndex16 = word.count\n    \n    var vowelIndex17 = word.count\n\
    \    \n    var vowelIndex18 = word.count\n    \n    var vowelIndex19 = word.count\n\
    \    \n    var vowelIndex20 = word.count\n    \n    var vowelIndex21 = word.count\n\
    \    \n    var vowelIndex22 = word.count\n    \n    var vowelIndex23 = word.count\n\
    \    \n    var vowelIndex24 = word.count\n    \n    var vowelIndex25 = word.count\n\
    \    \n    var vowelIndex26 = word.count\n    \n    var vowelIndex27 = word.count\n\
    \    \n    var vowelIndex28 = word.count\n    \n    var vowelIndex29 = word.count\n\
    \    \n    var vowelIndex30 = word.count\n    \n    var vowelIndex31 = word.count\n\
    \    \n    var vowelIndex32 = word.count\n    \n    var vowelIndex33 = word.count\n\
    \    \n    var vowelIndex34 = word.count\n    \n    var vowelIndex35 = word.count\n\
    \    \n    var vowelIndex36 = word.count\n    \n    var vowelIndex37 = word.count\n\
    \    \n    var vowelIndex38 = word.count\n    \n    var vowelIndex39 = word.count\n\
    \    \n    var vowelIndex40 = word.count\n    \n    var vowelIndex41 = word.count\n\
    \    \n    var vowelIndex42 = word.count\n    \n    var vowelIndex43 = word.count\n\
    \    \n    var vowelIndex44 = word.count\n    \n    var vowelIndex45 = word.count\n\
    \    \n    var vowelIndex46 = word.count\n    \n    var vowelIndex47 = word.count\n\
    \    \n    var vowelIndex48 = word.count\n    \n    var vowelIndex49 = word.count\n\
    \    \n    var vowelIndex50 = word.count\n    \n    var vowelIndex51 = word.count\n\
    \    \n    var vowel", "    \n    // Your code here\n    \n    return \"\"", " \
    \   guard let vowels = vowels.characters.map({ $0.lowercased() }),\n        let\
    \ vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n     \
    \   let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,\n\
    \        let vowelsCount = vowels.count,\n        let vowelsCount = vowels.count,",
  "    \n    let vowels = \"aeiouAEIOU\"\n    \n    if word.characters.count < 2 {\n\
    \        return \"\"\n    }\n    \n    var index = 0\n    var currentIndex = 0\n\
    \    \n    while index < word.characters.count {\n        if vowels.contains(word.characters[index])\
    \ {\n            currentIndex = index\n        }\n        \n        index += 1\n\
    \    }\n    \n    if currentIndex == 0 {\n        return \"\"\n    }\n    \n \
    \   if currentIndex == word.characters.count - 1 {\n        return word.characters[currentIndex\
    \ - 1]\n    }\n    \n    if word.characters[currentIndex - 1] == word.characters[currentIndex\
    \ + 1] {\n        return word.characters[currentIndex - 1]\n    }\n    \n    if\
    \ word.characters[currentIndex - 1] == word.characters[currentIndex - 2] {\n \
    \       return word.characters[currentIndex - 1]\n    }\n    \n    if word.characters[currentIndex\
    \ + 1] == word.characters[currentIndex + 2] {\n        return word.characters[currentIndex\
    \ + 1]\n    }\n    \n    return \"\"", "    var vowels = Set<Character>()\n  \
    \  vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.insert(\"o\")\n    vowels.insert(\"u\")\n    vowels.insert(\"y\")\n\
    \    vowels.insert(\"a\")\n    vowels.insert(\"e\")\n    vowels.insert(\"i\")\n\
    \    vowels.", "    guard let vowels = vowels.characters.map({ String($0) }),\n\
    \        let vowelsCount = vowels.count,\n        let word = word.lowercased(),\n\
    \        let wordCount = word.characters.count else {\n        return \"\"\n \
    \   }\n    \n    let vowelsCount = vowels.count\n    let wordCount = word.characters.count\n\
    \    \n    let vowelsIndex = word.characters.reversed().index(of: vowels.first!)\n\
    \    let vowelsIndex2 = vowelsIndex + vowelsCount - 1\n    \n    if vowelsIndex2\
    \ < wordCount {\n        return vowels[vowelsIndex2]\n    }\n    \n    return\
    \ \"\"", "    guard let vowels = vowels.characters.map(String.init) else {\n \
    \       return \"\"\n    }\n    let vowelsCount = vowels.count\n    let vowelsIndex\
    \ = word.characters.reversed().enumerate().map { (index, char) in\n        if\
    \ let index = vowels.firstIndex(of: char) {\n            return index\n      \
    \  }\n        return -1\n    }.min()\n    if vowelsIndex == -1 {\n        return\
    \ \"\"\n    }\n    let vowelsRange = vowelsIndex..<vowelsIndex + vowelsCount\n\
    \    let vowelsRangeCount = vowelsRange.count\n    let vowelsRangeIndex = word.characters.reversed().enumerate().map\
    \ { (index, char) in\n        if let index = vowelsRange.firstIndex(of: char)\
    \ {\n            return index\n        }\n        return -1\n    }.min()\n   \
    \ if vowelsRangeIndex == -1 {\n        return \"\"\n    }\n    let vowelsRangeCount\
    \ = vowelsRangeIndex - vowelsIndex\n    let vowelsRangeCount2 = vowelsRangeCount\
    \ * vowelsCount\n    let vowelsRangeIndex2 = vowelsIndex + vowelsRangeCount\n\
    \    let vowelsRangeIndex3 = vowelsIndex + vowelsRangeCount2\n    let vowelsRangeIndex4\
    \ = vowelsIndex + vowelsRangeCount3\n    let vowelsRangeIndex5 = vowelsIndex +\
    \ vowelsRangeCount4\n    let vowelsRangeIndex6 = vowelsIndex + vowelsRangeCount5\n\
    \    let vowelsRangeIndex7 = vowelsIndex + vowelsRangeCount6\n    let vowelsRangeIndex8\
    \ = vowelsIndex + vowelsRangeCount7\n    let vowelsRangeIndex9 = vowelsIndex +\
    \ vowelsRangeCount8\n    let vowelsRangeIndex10 = vowelsIndex + vowelsRangeCount9\n\
    \    let vowelsRangeIndex11 = vowelsIndex + vowelsRangeCount10\n    let vowelsRangeIndex12\
    \ = vowelsIndex + vowelsRangeCount11\n    let vowelsRangeIndex13 = vowelsIndex\
    \ + vowelsRangeCount12\n    let vowelsRangeIndex14 = vowelsIndex + vowelsRangeCount13\n\
    \    let vowelsRangeIndex15 = vowelsIndex + vowelsRangeCount14\n    let vowelsRangeIndex16\
    \ = vowelsIndex + vowelsRangeCount15\n    let vowelsRangeIndex17 = vowelsIndex\
    \ + vowelsRangeCount16\n    let vowelsRangeIndex18 = vowelsIndex + vowelsRangeCount17\n\
    \    let vowelsRangeIndex19 = vowelsIndex + vowelsRangeCount18\n    let vowelsRangeIndex20\
    \ = vowelsIndex + vowelsRangeCount19\n    let ", "    var vowels: [String] = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowelsCount: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndex: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount2: [Int] = [0, 1, 2, 3, 4]\n    var\
    \ vowelsIndexCount3: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount4: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount5: [Int] = [0, 1, 2, 3, 4]\n    var\
    \ vowelsIndexCount6: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount7: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount8: [Int] = [0, 1, 2, 3, 4]\n    var\
    \ vowelsIndexCount9: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount10: [Int]\
    \ = [0, 1, 2, 3, 4]\n    var vowelsIndexCount11: [Int] = [0, 1, 2, 3, 4]\n   \
    \ var vowelsIndexCount12: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount13:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount14: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount15: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount16:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount17: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount18: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount19:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount20: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount21: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount22:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount23: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount24: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount25:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount26: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount27: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount28:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount29: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount30: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount31:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount32: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount33: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount34:\
    \ [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount35: [Int] = [0, 1, 2, 3, 4]\n\
    \    var vowelsIndexCount36: [Int] = [0, 1, 2, 3, 4]\n    var vowelsIndexCount37:\
    \ [", "    if word == \"\" {\n        return \"\"\n    }\n    var vowelIndex =\
    \ 0\n    var vowelCount = 0\n    var consonantIndex = 0\n    var consonantCount\
    \ = 0\n    for index in 0..<word.count {\n        let char = word[index]\n   \
    \     if char.isUppercase {\n            vowelCount += 1\n        }\n        if\
    \ char.isLowercase {\n            consonantCount += 1\n        }\n        if char.isVowel\
    \ {\n            vowelIndex += 1\n        }\n        if char.isConsonant {\n \
    \           consonantIndex += 1\n        }\n    }\n    if vowelIndex == 0 {\n\
    \        return \"\"\n    }\n    if consonantIndex == 0 {\n        return \"\"\
    \n    }\n    if vowelIndex > consonantIndex {\n        return \"\"\n    }\n  \
    \  if vowelIndex == consonantIndex {\n        return word[vowelIndex - 1]\n  \
    \  }\n    if vowelIndex < consonantIndex {\n        return word[consonantIndex\
    \ - 1]\n    }\n    return \"\"", "    guard let vowels = vowels.characters.map(String.init)\
    \ else {\n        return \"\"\n    }\n    \n    let vowelsCount = vowels.count\n\
    \    \n    let vowelIndex = word.characters.reversed().firstIndex(of: vowels.last!)\n\
    \    \n    let vowelRange = vowelIndex..<vowelIndex + vowelsCount\n    \n    let\
    \ vowelRangeCount = vowelRange.count\n    \n    if vowelRangeCount == 0 {\n  \
    \      return \"\"\n    }\n    \n    let vowelRangeStart = vowelRange.first!\n\
    \    \n    let vowelRangeEnd = vowelRange.last!\n    \n    let vowelRangeLength\
    \ = vowelRangeEnd - vowelRangeStart + 1\n    \n    let vowelRangeRange = vowelRangeStart\
    \ ..< vowelRangeEnd\n    \n    let vowelRangeRangeCount = vowelRangeRange.count\n\
    \    \n    if vowelRangeRangeCount == 0 {\n        return \"\"\n    }\n    \n\
    \    let vowelRangeRangeStart = vowelRangeRange.first!\n    \n    let vowelRangeRangeEnd\
    \ = vowelRangeRange.last!\n    \n    let vowelRangeRangeLength = vowelRangeRangeEnd\
    \ - vowelRangeRangeStart + 1\n    \n    let vowelRangeRangeRange = vowelRangeRangeStart\
    \ ..< vowelRangeRangeEnd\n    \n    let vowelRangeRangeRangeCount = vowelRangeRangeRange.count\n\
    \    \n    if vowelRangeRangeRangeCount == 0 {\n        return \"\"\n    }\n \
    \   \n    let vowelRangeRangeRangeStart = vowelRangeRangeRange.first!\n    \n\
    \    let vowelRangeRangeRangeEnd = vowelRangeRangeRange.last!\n    \n    let vowelRangeRangeRangeLength\
    \ = vowelRangeRangeRangeEnd - vowelRangeRangeRangeStart + 1\n    \n    let vowelRangeRangeRangeRange\
    \ = vowelRangeRangeRangeStart ..< vowelRangeRangeRangeEnd\n    \n    let vowelRangeRangeRangeRangeCount\
    \ = vowelRangeRangeRangeRange.count\n    \n    if vowelRangeRangeRangeRangeCount\
    \ == 0 {\n        return \"\"\n    }\n    \n    let vowelRangeRangeRangeRangeStart\
    \ = vowelRangeRangeRangeRange.first!\n    \n    let vowelRangeRangeRangeRangeEnd\
    \ = vowelRangeRangeRangeRange.last!\n    \n    let vowelRangeRangeRangeRangeLength\
    \ = vowelRangeRangeRangeRangeEnd - vowelRangeRangeRangeRangeStart + 1\n    \n\
    \    let vowelRangeRangeRangeRangeRange = vowelRangeRangeRangeRangeStart ..< vowelRangeRangeRangeRangeEnd\n\
    \    \n    let vowelRangeRangeRangeRangeRangeCount = vowelRangeRangeRangeRangeRange.count\n\
    \    \n    if vowelRangeRangeRangeRangeRangeCount == 0 {\n        return \"\"\n\
    \    }\n    \n    let vowelRangeRangeRangeRangeRangeStart = ", '    return getClosestVowel(word,
    isVowel: isVowel)', "    var vowels: [Character] = []\n    for letter in word\
    \ {\n        if letter.isUppercase {\n            vowels.append(letter)\n    \
    \    }\n    }\n    vowels.reverse()\n    \n    var vowelIndex: Int = 0\n    var\
    \ vowelCount: Int = 0\n    var vowelEndIndex: Int = 0\n    var vowelStartIndex:\
    \ Int = 0\n    \n    for letter in vowels {\n        if letter == vowels[vowelIndex]\
    \ {\n            vowelIndex += 1\n            vowelCount += 1\n            if\
    \ vowelIndex == vowels.count {\n                vowelIndex = 0\n            }\n\
    \        } else {\n            if vowelIndex == 0 {\n                vowelStartIndex\
    \ = vowelEndIndex\n            }\n            vowelEndIndex = vowelIndex\n   \
    \         vowelIndex = 0\n        }\n    }\n    \n    if vowelIndex == 0 {\n \
    \       return \"\"\n    }\n    \n    if vowelIndex == vowels.count {\n      \
    \  return \"\"\n    }\n    \n    if vowelCount > 1 {\n        return \"\"\n  \
    \  }\n    \n    if vowelStartIndex == vowelEndIndex {\n        return \"\"\n \
    \   }\n    \n    return vowels[vowelStartIndex]", "    var vowels: [Character]\
    \ = []\n    for char in word.unicodeScalars {\n        if let _ = char.value >\
    \ 64 && char.value < 91 {\n            vowels.append(char)\n        }\n    }\n\
    \    if vowels.isEmpty {\n        return \"\"\n    }\n    let vowelIndex = vowels.firstIndex(of:\
    \ Character(\"a\"))\n    if vowelIndex == -1 {\n        return \"\"\n    }\n \
    \   let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n\
    \    let vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let\
    \ vowelsCount = vowels.count\n    let vowelsCount = vowels.count\n    let vowelsCount\
    \ = vowels.count\n    let vowelsCount = vowels.count"]
stop_tokens:
- "\n}"

name: HumanEval_55_fib
language: swift
prompt: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
  \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\n\
  assert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
completions: ["    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n\
    \    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", '    return fibHelper(n, 0)', " \
    \   if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  \
    \  if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var\
    \ fib1 = 1\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2,\
    \ fib1 + fib2\n    }\n    return fib2", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n   \
    \ }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n\
    \    return fib(n-1) + fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in 0..<n\
    \ {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n  return b", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a\
    \ = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = tmp + b\n    }\n    return b", "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return\
    \ fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var\
    \ a = 0, b = 1, next: Int\n    for _ in 0..<n {\n        next = a + b\n      \
    \  a = b\n        b = next\n    }\n    return next", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n   \
    \ }\n    return fib(n-1) + fib(n-2)", "  var a = 0\n  var b = 1\n  for _ in 0..<n\
    \ {\n    let tmp = a\n    a = b\n    b = tmp + b\n  }\n  return b", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a\
    \ = 0, b = 1, next\n    for _ in 0..<n {\n        next = a + b\n        a = b\n\
    \        b = next\n    }\n    return next", "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n   \
    \ }\n    return fib(n-1) + fib(n-2)", "    var a, b = 0, c: Int\n    for _ in\
    \ 0..<n {\n        c = a + b\n        a = b\n        b = c\n    }\n    return\
    \ b", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ var a, b = 1, c = 1\n    for _ in 0..<n {\n        a, b, c = b, a + b, c\n \
    \   }\n    return c", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", '    return
    fibHelper(n, 0)', "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  '    return fib(n: n, memo: nil)', "    if n < 2 {\n        return n\n    }\n  \
    \  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n   \
    \ return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var a\
    \ = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp\
    \ + b\n  }\n  return b", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    var fib1 = 1\n\
    \    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2, fib1 + fib2\n\
    \    }\n    return fib2", "  if n < 2 {\n    return n\n  }\n  return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var\
    \ a = 0, b = 1, tmp Int\n    for _ in 0..<n {\n        tmp = a + b\n        a\
    \ = b\n        b = tmp\n    }\n    return b", "    if n < 2 {\n        return\
    \ n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n\
    \  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n   \
    \ return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", '    return fibHelper(n,
    0)', "    var a = 0, b = 1, next: Int\n    for _ in 0..<n {\n        next = a\
    \ + b\n        a = b\n        b = next\n    }\n    return next", "    if n < 2\
    \ {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n  \
    \      return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n   \
    \     return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n    \
    \    return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a = 0\n    var\
    \ b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b =\
    \ tmp + b\n    }\n    return b", "    if n < 2 {\n        return n\n    }\n  \
    \  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    var fib: Int = 0\n    var fib1: Int = 0\n    var fib2: Int =\
    \ 0\n    var fib3: Int = 0\n    var fib4: Int = 0\n    var fib5: Int = 0\n   \
    \ var fib6: Int = 0\n    var fib7: Int = 0\n    var fib8: Int = 0\n    var fib9:\
    \ Int = 0\n    var fib10: Int = 0\n    var fib11: Int = 0\n    var fib12: Int\
    \ = 0\n    var fib13: Int = 0\n    var fib14: Int = 0\n    var fib15: Int = 0\n\
    \    var fib16: Int = 0\n    var fib17: Int = 0\n    var fib18: Int = 0\n    var\
    \ fib19: Int = 0\n    var fib20: Int = 0\n    var fib21: Int = 0\n    var fib22:\
    \ Int = 0\n    var fib23: Int = 0\n    var fib24: Int = 0\n    var fib25: Int\
    \ = 0\n    var fib26: Int = 0\n    var fib27: Int = 0\n    var fib28: Int = 0\n\
    \    var fib29: Int = 0\n    var fib30: Int = 0\n    var fib31: Int = 0\n    var\
    \ fib32: Int = 0\n    var fib33: Int = 0\n    var fib34: Int = 0\n    var fib35:\
    \ Int = 0\n    var fib36: Int = 0\n    var fib37: Int = 0\n    var fib38: Int\
    \ = 0\n    var fib39: Int = 0\n    var fib40: Int = 0\n    var fib41: Int = 0\n\
    \    var fib42: Int = 0\n    var fib43: Int = 0\n    var fib44: Int = 0\n    var\
    \ fib45: Int = 0\n    var fib46: Int = 0\n    var fib47: Int = 0\n    var fib48:\
    \ Int = 0\n    var fib49: Int = 0\n    var fib50: Int = 0\n    var fib51: Int\
    \ = 0\n    var fib52: Int = 0\n    var fib53: Int = 0\n    var fib54: Int = 0\n\
    \    var fib55: Int = 0\n    var fib56: Int = 0\n    var fib57: Int = 0\n    var\
    \ fib58: Int = 0\n    var fib59: Int = 0\n    var fib60: Int = 0\n    var fib61:\
    \ Int = 0\n    var fib62: Int = 0\n    var fib63: Int = 0\n    var fib64: Int\
    \ = 0\n    var fib65: Int = 0\n    var fib66: Int = 0\n    var fib67: Int = 0\n\
    \    var fib68: Int = 0\n    var fib69: Int = 0\n    var fib70: Int = 0\n    var\
    \ fib71: Int = 0\n    var fib72: Int = 0\n    var fib73: Int = 0\n", "  if n <\
    \ 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n   \
    \     return n\n    }\n    return fib(n-1) + fib(n-2)", '    return fibHelper(n,
    n)', "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a =\
    \ 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n\
    \        b = tmp + b\n    }\n    return b", "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    var a = 0\n    var b = 1\n    for\
    \ _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n    }\n\
    \    return b", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let\
    \ tmp = a\n        a = b\n        b = tmp + b\n    }\n    return a", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var a =\
    \ 1 // first term\n  var b = 1 // second term\n  for _ in 0..<n {\n    let tmp\
    \ = a\n    a = b\n    b = tmp + b\n  }\n  return b", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n <= 1 {\n        return 1\n    }\n    return fib(n - 1)\
    \ + fib(n - 2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", '    return
    fib(n - 1) + fib(n - 2)', "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) +\
    \ fib(n-2)", '    return fibHelper(n, n)', "    if n < 2 {\n        return n\n\
    \    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n   \
    \ }\n    return fib(n-1) + fib(n-2)", "  var a = 0\n  var b = 1\n  var c = 0\n\
    \  for _ in 0..<n {\n    c = a + b\n    a = b\n    b = c\n  }\n  return b", " \
    \   var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n    \
    \    a = b\n        b = tmp + b\n    }\n    return b", "    if n < 2 {\n     \
    \   return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n      \
    \  return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n       \
    \ return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return\
    \ fib(n-1) + fib(n-2)", "    var a, b Int\n    if n == 0 || n == 1 {\n       \
    \ return n\n    }\n    a, b = 0, 1\n    for _ in 0..<n {\n        a, b = b, a+b\n\
    \    }\n    return a", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  '    return fib(n - 1) + fib(n - 2)', "    if n < 2 {\n        return n\n    }\n\
    \    return fib(n-1) + fib(n-2)", "    var a = 0\n    var b = 1\n    for _ in\
    \ 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n    }\n  \
    \  return b", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) +\
    \ fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if\
    \ n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2\
    \ {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n  \
    \      return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n   \
    \     return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n    \
    \    return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n     \
    \   return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n      \
    \  return n\n    }\n    return fib(n-1) + fib(n-2)", "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    var a = 0, b = 1, c: Int\n    for\
    \ _ in 0..<n {\n        c = a + b\n        a = b\n        b = c\n    }\n    return\
    \ b", "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var\
    \ a, b Int\n    if n == 0 || n == 1 {\n        return n\n    }\n    a = b = 1\n\
    \    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n\
    \    }\n    return a", '    return fibHelper(n, 0)', "  if n < 2 {\n    return\
    \ n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n  \
    \  }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n   \
    \ }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n\
    \    return fib(n-1) + fib(n-2)", "    var fib1 = 1\n    var fib2 = 1\n    for\
    \ _ in 0..<n {\n        fib1, fib2 = fib2, fib1 + fib2\n    }\n    return fib2",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n\
    \        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n \
    \       return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2 {\n  \
    \      return n\n    }\n    return fib(n-1) + fib(n-2)", '    return fibHelper(n,
    n)', "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  var\
    \ a = 1, b = 0, tmp: Int\n  for _ in 0..<n {\n    tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return b", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "    var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let\
    \ tmp = a\n        a = b\n        b = tmp + b\n    }\n    return b", "    if n\
    \ < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    if n < 2\
    \ {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", '    return fibHelper(n,
    n)', "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "   \
    \ var a = 1, b = 1, c = 1\n    for _ in 0..<n {\n        let tmp = a\n       \
    \ a = b\n        b = c\n        c = tmp + b\n    }\n    return c", "    if n <\
    \ 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "    var fibs:\
    \ [(Int, Int)] = [(1, 1)]\n    for _ in 0..<n {\n        fibs.append((fibs.last!.1,\
    \ fibs.last!.1 + fibs.last!.2))\n    }\n    return fibs.last!.1", "  if n < 2\
    \ {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    if n < 2 {\n     \
    \   return n\n    }\n    return fib(n-1) + fib(n-2)", "    var a = 0\n    var\
    \ b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n        b =\
    \ tmp + a\n    }\n    return b", "    if n < 2 {\n        return n\n    }\n  \
    \  return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n   \
    \ return fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return\
    \ fib(n-1) + fib(n-2)", "    if n < 2 {\n        return n\n    }\n    return fib(n-1)\
    \ + fib(n-2)", "  if n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)",
  "    if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)", "  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)", "    var a = 0\n\
    \    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n        a = b\n   \
    \     b = tmp + b\n    }\n    return b", "    if n < 2 {\n        return n\n \
    \   }\n    return fib(n-1) + fib(n-2)"]
stop_tokens:
- "\n}"

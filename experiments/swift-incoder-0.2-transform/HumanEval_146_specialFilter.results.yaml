language: swift
name: HumanEval_146_specialFilter
results:
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                count += 1\n            }\n            if\
    \ num % 2 == 0 {\n                if num > 10 && num < 100 {\n               \
    \     count += 1\n                }\n                if num > 100 && num < 1000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 1000 && num < 10000 {\n                    count += 1\n                }\n\
    \                if num > 10000 && num < 100000 {\n                    count +=\
    \ 1\n                }\n                if num > 100000 && num < 1000000 {\n \
    \                   count += 1\n                }\n                if num > 1000000\
    \ && num < 10000000 {\n                    count += 1\n                }\n   \
    \             if num > 10000000 && num < 100000000 {\n                    count\
    \ += 1\n                }\n                if num > 100000000 && num < 1000000000\
    \ {\n                    count += 1\n                }\n            }\n      \
    \  }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr4uab07p/tmpr4uab07p.swift:62: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eefa91c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eef788b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eef788988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eef7877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr4uab07p                        0x000056534bc765d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b3eefc7d460 __libc_start_main +
    245

    6    tmpr4uab07p                        0x000056534bc76169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821114
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num / 2 % 2 == 1 {\n                 \
    \   count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpezpr40gg/tmpezpr40gg.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad32e509c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad32e200b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad32e200988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad32e1ff7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpezpr40gg                        0x0000564dee1fa6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad32e6f5460 __libc_start_main +
    245

    6    tmpezpr40gg                        0x0000564dee1fa169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                count += 1\n            }\n            if\
    \ num % 2 == 0 {\n                if num < 0 {\n                    count += 1\n\
    \                }\n                if num > 0 {\n                    if num %\
    \ 2 == 1 {\n                        count += 1\n                    }\n      \
    \          }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp_eyi8ya_/tmp_eyi8ya_.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90500ecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b904fde3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b904fde3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b904fde27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_eyi8ya_                        0x000055f08d1066b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b90502d8460 __libc_start_main +
    245

    6    tmp_eyi8ya_                        0x000055f08d106169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpooyre84l/tmpooyre84l.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e72360c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e72057b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e72057988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e720567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooyre84l                        0x0000562ba97bc5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b5e7254c460 __libc_start_main +
    245

    6    tmpooyre84l                        0x0000562ba97bc169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpj1_uvkig/tmpj1_uvkig.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3e1849c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3e1540b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3e1540988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3e153f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj1_uvkig                        0x0000557710a5b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba3e1a35460 __libc_start_main +
    245

    6    tmpj1_uvkig                        0x0000557710a5b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpj1_uvkig/tmpj1_uvkig.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3e1849c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3e1540b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3e1540988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3e153f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj1_uvkig                        0x0000557710a5b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba3e1a35460 __libc_start_main +
    245

    6    tmpj1_uvkig                        0x0000557710a5b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpj1_uvkig/tmpj1_uvkig.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3e1849c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3e1540b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3e1540988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3e153f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj1_uvkig                        0x0000557710a5b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba3e1a35460 __libc_start_main +
    245

    6    tmpj1_uvkig                        0x0000557710a5b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 100 == 0 {\n                   \
    \ if num % 10 == 0 {\n                        count += 1\n                   \
    \ }\n                }\n            }\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp7zv5efzb/tmp7zv5efzb.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab89f4aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab89f1a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab89f1a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab89f1a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7zv5efzb                        0x000055bf5c5b65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ab89f696460 __libc_start_main +
    245

    6    tmp7zv5efzb                        0x000055bf5c5b6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n            if num % 2 == 1 {\n                if num % 100 == 0\
    \ {\n                    count += 1\n                }\n                if num\
    \ % 10 == 0 {\n                    count += 1\n                }\n           \
    \ }\n            if num % 2 == 0 {\n                if num % 10 == 0 {\n     \
    \               count += 1\n                }\n                if num % 100 ==\
    \ 0 {\n                    count += 1\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpovgkjo90/tmpovgkjo90.swift:50: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab59c85fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab59c556b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab59c556988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab59c5557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpovgkjo90                        0x000055e05facb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ab59ca4b460 __libc_start_main +
    245

    6    tmpovgkjo90                        0x000055e05facb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && num < 100 {\n            \
    \        if num % 2 == 1 {\n                        count += 1\n             \
    \       }\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkv06kv1d/tmpkv06kv1d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b837170ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8371405b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8371405988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83714047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkv06kv1d                        0x000056111577a6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b83718fa460 __libc_start_main +
    245

    6    tmpkv06kv1d                        0x000056111577a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpeae8r3r5/tmpeae8r3r5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191b24cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b191af43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b191af43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b191af427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeae8r3r5                        0x000056536364f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b191b438460 __libc_start_main +
    245

    6    tmpeae8r3r5                        0x000056536364f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpsxfslkmi/tmpsxfslkmi.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af338f6fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af338c66b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af338c66988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af338c657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsxfslkmi                        0x00005558dc8675d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af33915b460 __libc_start_main +
    245

    6    tmpsxfslkmi                        0x00005558dc867169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpj1_uvkig/tmpj1_uvkig.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3e1849c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3e1540b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3e1540988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3e153f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj1_uvkig                        0x0000557710a5b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba3e1a35460 __libc_start_main +
    245

    6    tmpj1_uvkig                        0x0000557710a5b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpeae8r3r5/tmpeae8r3r5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191b24cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b191af43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b191af43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b191af427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeae8r3r5                        0x000056536364f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b191b438460 __libc_start_main +
    245

    6    tmpeae8r3r5                        0x000056536364f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    if\
    \ num % 100 == 1 {\n                        count += 1\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpu7e1ohw5/tmpu7e1ohw5.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1742b35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b174282cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b174282c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b174282b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu7e1ohw5                        0x000055959d3a55d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b1742d21460 __libc_start_main +
    245

    6    tmpu7e1ohw5                        0x000055959d3a5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n            if num % 2 == 1 {\n                if num / 2 % 2 ==\
    \ 1 {\n                    count += 1\n                }\n            }\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp7sa9xl8j/tmp7sa9xl8j.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adb2b8c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adb2b5b9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adb2b5b9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adb2b5b87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7sa9xl8j                        0x000055e3cf9ec5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002adb2baae460 __libc_start_main +
    245

    6    tmp7sa9xl8j                        0x000055e3cf9ec169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpeae8r3r5/tmpeae8r3r5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191b24cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b191af43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b191af43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b191af427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeae8r3r5                        0x000056536364f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b191b438460 __libc_start_main +
    245

    6    tmpeae8r3r5                        0x000056536364f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    if\
    \ num % 100 == 1 {\n                        if num % 1000 == 1 {\n           \
    \                 count += 1\n                        }\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmphtqvnvfp/tmphtqvnvfp.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b42f9d70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b42f9a67b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b42f9a67988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b42f9a667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphtqvnvfp                        0x000055a326b3b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b42f9f5c460 __libc_start_main +
    245

    6    tmphtqvnvfp                        0x000055a326b3b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpeae8r3r5/tmpeae8r3r5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191b24cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b191af43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b191af43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b191af427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeae8r3r5                        0x000056536364f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b191b438460 __libc_start_main +
    245

    6    tmpeae8r3r5                        0x000056536364f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && num % 2 == 1 {\n         \
    \           count += 1\n                }\n            }\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpdddoazsl/tmpdddoazsl.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b22320e0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2231dd7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2231dd7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2231dd67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdddoazsl                        0x0000563d6be4f6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b22322cc460 __libc_start_main +
    245

    6    tmpdddoazsl                        0x0000563d6be4f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpooyre84l/tmpooyre84l.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e72360c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e72057b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e72057988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e720567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooyre84l                        0x0000562ba97bc5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b5e7254c460 __libc_start_main +
    245

    6    tmpooyre84l                        0x0000562ba97bc169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    if\
    \ num % 100 == 1 {\n                        if num % 1000 == 1 {\n           \
    \                 count += 1\n                        }\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmphtqvnvfp/tmphtqvnvfp.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b42f9d70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b42f9a67b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b42f9a67988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b42f9a667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphtqvnvfp                        0x000055a326b3b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b42f9f5c460 __libc_start_main +
    245

    6    tmphtqvnvfp                        0x000055a326b3b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpeae8r3r5/tmpeae8r3r5.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191b24cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b191af43b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b191af43988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b191af427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeae8r3r5                        0x000056536364f5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b191b438460 __libc_start_main +
    245

    6    tmpeae8r3r5                        0x000056536364f169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 && n % 5 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmprub2x1s8/tmprub2x1s8.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b630c0e6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b630bdddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b630bddd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b630bddc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub2x1s8                        0x000055aa1dd385d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b630c2d2460 __libc_start_main +
    245

    6    tmprub2x1s8                        0x000055aa1dd38169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpooyre84l/tmpooyre84l.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e72360c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e72057b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e72057988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e720567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooyre84l                        0x0000562ba97bc5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b5e7254c460 __libc_start_main +
    245

    6    tmpooyre84l                        0x0000562ba97bc169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpj1_uvkig/tmpj1_uvkig.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3e1849c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3e1540b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3e1540988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3e153f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj1_uvkig                        0x0000557710a5b5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ba3e1a35460 __libc_start_main +
    245

    6    tmpj1_uvkig                        0x0000557710a5b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpjtk1gky4/tmpjtk1gky4.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0cc2d43c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0cc2a3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0cc2a3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0cc2a397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjtk1gky4                        0x000055c18bb655d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b0cc2f2f460 __libc_start_main +
    245

    6    tmpjtk1gky4                        0x000055c18bb65169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpooyre84l/tmpooyre84l.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e72360c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e72057b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e72057988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e720567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpooyre84l                        0x0000562ba97bc5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b5e7254c460 __libc_start_main +
    245

    6    tmpooyre84l                        0x0000562ba97bc169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 && n % 5 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmprub2x1s8/tmprub2x1s8.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b630c0e6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b630bdddb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b630bddd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b630bddc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprub2x1s8                        0x000055aa1dd385d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b630c2d2460 __libc_start_main +
    245

    6    tmprub2x1s8                        0x000055aa1dd38169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 100 == 0 {\n                   \
    \ if num % 10 == 1 {\n                        count += 1\n                   \
    \ }\n                }\n            }\n        }\n    }\n    return count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp4exk_jdp/tmp4exk_jdp.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b71e43cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b71e40c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b71e40c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71e40c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4exk_jdp                        0x000055674adeb5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b71e45ba460 __libc_start_main +
    245

    6    tmp4exk_jdp                        0x000055674adeb169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660009813
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034

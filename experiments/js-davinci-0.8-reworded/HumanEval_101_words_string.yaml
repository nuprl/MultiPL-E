name: HumanEval_101_words_string
language: js
prompt: "//You will be given a string of words separated by commas or spaces. Your\
  \ task is\n// to split the string into words and return an array of the words.\n\
  // For example:\n// >>> words_string(\"Hi, my name is John\")\n// [\"Hi\", \"my\"\
  , \"name\", \"is\", \"John\"]\n// >>> words_string(\"One, two, three, four, five,\
  \ six\")\n// [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
  \ words_string(s){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
  , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
  \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"\
  six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"name\"\
  ]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"),[\"One\"\
  , \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
  \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
  ]);\n}\n\ntest();"
completions: ["    var cleanArray = [];\n    var dirtyArray = s.split(\",\");\n  \
    \  for(var i = 0; i < dirtyArray.length; i++){\n        cleanArray.push(dirtyArray[i].trim());\n\
    \    }\n    return cleanArray;\n}\n", "    var arr = s.split(/[ ,]+/);\n    return\
    \ arr;\n}", "    return s.split(/[\\s,]+/);\n}\n", "    return s.split(/[ ,]+/);\n\
    }\n", "    return s.split(/[\\s,]+/);\n}", "  return s.split(\",\");\n}\n", " \
    \   return s.split(\" \")\n}\nwords_string(\"One, two, three, four, five, six\"\
    )\n", "  var arr = s.split(\",\");\n  return arr;\n}", "    var splitStr = s.split(\"\
    \ \");\n    var splitStr = s.split(\",\");\n    return splitStr;\n}", "    var\
    \ word_array = [];\n    var word = \"\";\n    for(var i = 0; i < s.length; i++){\n\
    \        if(s[i] === \" \" || s[i] === \",\"){\n            word_array.push(word);\n\
    \            word = \"\";\n        }\n        else{\n            word += s[i];\n\
    \        }\n    }\n    word_array.push(word);\n    return word_array;\n}", " \
    \   var word = s.split(\" \");\n    return word;\n}\n", "    // ...\n}", "  //\
    \ Your code here!\n  var a = s.split(\",\");\n  for(var i = 0; i < a.length; i++){\n\
    \  \ta[i] = a[i].trim();\n  }\n  return a;\n}\n", "\treturn s.split(\" \")\n}",
  "    let arr = [];\n    arr = s.split(\" \");\n    return arr;\n}\n", "    return\
    \ s.split(/[ ,]+/);\n}", "    var result = s.split(\" \");\n    for(var i = 0;\
    \ i < result.length; i++){\n        result[i] = result[i].split(\",\")[0];\n \
    \   }\n    return result;\n}", "  let a = s.split(\" \");\n  return a;\n}", " \
    \   return s.split(/[ ,]+/);\n}\n", "  var a = [];\n  var b = \"\";\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s[i] == \" \" || s[i] == \",\"){\n      a.push(b);\n\
    \      b = \"\";\n    }\n    else{\n      b += s[i];\n    }\n  }\n  a.push(b);\n\
    \  return a;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

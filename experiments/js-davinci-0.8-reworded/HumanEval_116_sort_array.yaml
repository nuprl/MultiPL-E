name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(el\
    \ => el === '1').length;\n        let bBinary = b.toString(2).split('').filter(el\
    \ => el === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        } else {\n            return aBinary - bBinary;\n        }\n\
    \    });\n}", "    var counts = [];\n    for (var i = 0; i < arr.length; i++)\
    \ {\n        counts[i] = countOnes(arr[i]);\n    }\n    function countOnes(n)\
    \ {\n        var binary = n.toString(2);\n        var count = 0;\n        for\
    \ (var i = 0; i < binary.length; i++) {\n            if (binary[i] === '1') {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    return arr.sort(function(a, b) {\n        if (counts[arr.indexOf(a)]\
    \ === counts[arr.indexOf(b)]) {\n            return a - b;\n        } else {\n\
    \            return counts[arr.indexOf(a)] - counts[arr.indexOf(b)];\n       \
    \ }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let arr1 = a.toString(2).split(\"\
    \");\n        let arr2 = b.toString(2).split(\"\");\n        let sum1 = 0;\n \
    \       let sum2 = 0;\n        arr1.forEach(element => {\n            if (element\
    \ === \"1\") {\n                sum1++;\n            }\n        });\n        arr2.forEach(element\
    \ => {\n            if (element === \"1\") {\n                sum2++;\n      \
    \      }\n        });\n        if (sum1 === sum2) {\n            return a - b;\n\
    \        } else {\n            return sum1 - sum2;\n        }\n    });\n}", "let\
    \ holder = arr.map( function(el){ return el.toString(2) })\nlet container = []\n\
    holder.map(function(el){\n  let string = el.split('')\n  let counter = 0\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === '1'){\n      counter ++\n\
    \    }\n  }\n  container.push([counter, parseInt(el,2)])\n})\nreturn container.sort(function(a,b){\n\
    \  if(a[0] === b[0]){\n    return a[1] - b[1]\n  }\n  return a[0] - b[0]\n}).map(function(el){\
    \ return el[1] })\n}", "    let ones = {}\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let binary = arr[i].toString(2)\n        ones[arr[i]] = binary.split('').filter(el\
    \ => el === '1').length\n    }\n    let sort = arr.sort((a, b) => ones[a] - ones[b])\n\
    \    return sort\n}\n", "  arr.sort( (a,b) => {\n    if ( countOnes(a) < countOnes(b)\
    \ ) { return -1; }\n    if ( countOnes(a) > countOnes(b) ) { return 1; }\n   \
    \ if ( countOnes(a) === countOnes(b) ) {\n      if ( a < b ) { return -1; }\n\
    \      if ( a > b ) { return 1; }\n    }\n    return 0;\n  });\n  return arr;\n\
    }", "  return arr.sort((a, b) => binary(a).localeCompare(binary(b)));\n}", " \
    \   return arr.sort((a, b) => {\n        let binaryOneA = a.toString(2).split('').filter(val\
    \ => val === '1').length\n        let binaryOneB = b.toString(2).split('').filter(val\
    \ => val === '1').length\n        if (binaryOneA === binaryOneB) {\n         \
    \   return a - b\n        } else {\n            return binaryOneA - binaryOneB\n\
    \        }\n    })\n}\n", "    var result = [];\n    var temp = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        var binary = arr[i].toString(2);\n   \
    \     var count = binary.match(/1/g).length;\n        temp.push({\n          \
    \  decimal: arr[i],\n            binary: binary,\n            count: count\n \
    \       });\n    }\n    temp.sort(function(a, b){\n        if(a.count === b.count){\n\
    \            return a.decimal - b.decimal;\n        }\n        return a.count\
    \ - b.count;\n    });\n    for(var j = 0; j < temp.length; j++){\n        result.push(temp[j].decimal);\n\
    \    }\n    return result;\n}\n", "    const sorted = arr.sort((a, b) => {\n \
    \       const binaryA = a.toString(2);\n        const binaryB = b.toString(2);\n\
    \        const numOf1A = binaryA.split('1').length - 1;\n        const numOf1B\
    \ = binaryB.split('1').length - 1;\n        return numOf1A === numOf1B ? a - b\
    \ : numOf1A - numOf1B;\n    });\n    return sorted;\n}\n", "  return arr.sort((a,\
    \ b) =>{\n    let binA = a.toString(2).split('').filter(e => e === '1').length;\n\
    \    let binB = b.toString(2).split('').filter(e => e === '1').length;\n    if(binA\
    \ !== binB){\n      return binA - binB;\n    }\n    return a - b;\n  });\n}\n",
  "    let temp = []\n    arr.map(v => {\n        temp.push(v.toString(2).split('1').length\
    \ - 1)\n    })\n    let temp2 = [];\n    for(let i = 0; i < temp.length; i++){\n\
    \        if(temp[i] == temp[i + 1]){\n            temp2.push(arr[i])\n       \
    \     arr.splice(i, 1)\n            temp.splice(i, 1)\n            i--\n     \
    \   }\n    }\n    temp2.sort((a, b) => a - b)\n    let count = 0;\n    for(let\
    \ i = 0; i < temp.length; i++){\n        if(temp[i] == temp[i + 1]){\n       \
    \     arr.splice(i + 1, 0, temp2[count])\n            count++\n        }\n   \
    \ }\n    temp = temp.sort((a, b) => a - b)\n    let ans = []\n    temp.map(v =>\
    \ {\n        ans.push(arr[v])\n    })\n    return ans\n}", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(v => v === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(v => v === '1').length;\n   \
    \     return a1 - b1 || a - b;\n    });\n}", "    return arr.sort((a, b) => {\n\
    \        const onesInBinaryA = (a).toString(2).split('').filter(c => c === '1').length;\n\
    \        const onesInBinaryB = (b).toString(2).split('').filter(c => c === '1').length;\n\
    \        if (onesInBinaryA !== onesInBinaryB) return onesInBinaryA - onesInBinaryB;\n\
    \        else return a - b;\n    });\n}\n", "    var newArr = arr.sort(function(a,\
    \ b){\n        if (getOnes(a) === getOnes(b)){\n            return a - b;\n  \
    \      }\n        return getOnes(a) - getOnes(b);\n    });\n    return newArr;\n\
    }\n", "    arr.sort(function(a, b){\n        if(a === b){\n            return\
    \ a - b;\n        }\n        var aOnes = countOnes(a);\n        var bOnes = countOnes(b);\n\
    \        if(aOnes === bOnes){\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n    return arr;\n}\n", "    let arr2 = arr.map(function(item)\
    \ {\n        return item.toString(2).split(\"\").filter(function(item) {\n   \
    \         return (item == \"1\");\n        }).length;\n    });\n    let len =\
    \ arr2.length;\n    let count = 1;\n    let value = 0;\n    while (count < len)\
    \ {\n        let i = 0;\n        while (i < len - count) {\n            if (arr2[i]\
    \ > arr2[i + 1]) {\n                let j = arr2[i];\n                arr2[i]\
    \ = arr2[i + 1];\n                arr2[i + 1] = j;\n                let k = arr[i];\n\
    \                arr[i] = arr[i + 1];\n                arr[i + 1] = k;\n     \
    \       }\n            i++;\n        }\n        count++;\n    }\n    return arr;\n\
    }\nsort_array([1, 0, 2, 3, 4]);", "  let sort = [...arr].sort((a, b) => a - b);\n\
    \  let res = arr.map(x => {\n    let countA = count(x);\n    let index = sort.findIndex(y\
    \ => count(y) === countA);\n    let value = sort[index];\n    sort.splice(index,\
    \ 1);\n    return value;\n  });\n  return res;\n}", "\treturn arr.map(function(e,\
    \ i){\n\t\treturn {\n\t\t\tvalue: e,\n\t\t\tones: e.toString(2).split('').filter(function(x){return\
    \ x == '1'}).length,\n\t\t\tindex: i\n\t\t}\n\t}).sort(function(a, b){\n\t\tif(a.ones\
    \ > b.ones) return 1;\n\t\tif(a.ones < b.ones) return -1;\n\t\tif(a.ones == b.ones){\n\
    \t\t\tif(a.value > b.value) return 1;\n\t\t\tif(a.value < b.value) return -1;\n\
    \t\t}\n\t\treturn 0;\n\t}).map(function(x){\n\t\treturn x.value;\n\t});\n}\n",
  "    var obj = {};\n    var first = [];\n    var second = [];\n    for(var i = 0;\
    \ i < arr.length; i++){\n        var a = arr[i].toString(2);\n        var zeros\
    \ = a.replace(/1/g, \"\");\n        obj[arr[i]] = a.length - zeros.length;\n \
    \   }\n    for(var key in obj){\n        if(obj[key] === 0){\n            first.push(parseInt(key));\n\
    \        }else{\n            second.push(parseInt(key));\n        }\n    }\n \
    \   var second = second.sort(function(a, b){\n        return obj[a] - obj[b];\n\
    \    });\n    return first.concat(second);\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

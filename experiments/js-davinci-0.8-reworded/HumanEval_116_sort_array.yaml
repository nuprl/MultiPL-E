name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(el\
    \ => el === '1').length;\n        let bBinary = b.toString(2).split('').filter(el\
    \ => el === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        } else {\n            return aBinary - bBinary;\n        }\n\
    \    });\n}", "    var counts = [];\n    for (var i = 0; i < arr.length; i++)\
    \ {\n        counts[i] = countOnes(arr[i]);\n    }\n    function countOnes(n)\
    \ {\n        var binary = n.toString(2);\n        var count = 0;\n        for\
    \ (var i = 0; i < binary.length; i++) {\n            if (binary[i] === '1') {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    return arr.sort(function(a, b) {\n        if (counts[arr.indexOf(a)]\
    \ === counts[arr.indexOf(b)]) {\n            return a - b;\n        } else {\n\
    \            return counts[arr.indexOf(a)] - counts[arr.indexOf(b)];\n       \
    \ }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let arr1 = a.toString(2).split(\"\
    \");\n        let arr2 = b.toString(2).split(\"\");\n        let sum1 = 0;\n \
    \       let sum2 = 0;\n        arr1.forEach(element => {\n            if (element\
    \ === \"1\") {\n                sum1++;\n            }\n        });\n        arr2.forEach(element\
    \ => {\n            if (element === \"1\") {\n                sum2++;\n      \
    \      }\n        });\n        if (sum1 === sum2) {\n            return a - b;\n\
    \        } else {\n            return sum1 - sum2;\n        }\n    });\n}", "let\
    \ holder = arr.map( function(el){ return el.toString(2) })\nlet container = []\n\
    holder.map(function(el){\n  let string = el.split('')\n  let counter = 0\n  for(var\
    \ i = 0; i < string.length; i++){\n    if(string[i] === '1'){\n      counter ++\n\
    \    }\n  }\n  container.push([counter, parseInt(el,2)])\n})\nreturn container.sort(function(a,b){\n\
    \  if(a[0] === b[0]){\n    return a[1] - b[1]\n  }\n  return a[0] - b[0]\n}).map(function(el){\
    \ return el[1] })\n}", "    let ones = {}\n    for(let i = 0; i < arr.length;\
    \ i++){\n        let binary = arr[i].toString(2)\n        ones[arr[i]] = binary.split('').filter(el\
    \ => el === '1').length\n    }\n    let sort = arr.sort((a, b) => ones[a] - ones[b])\n\
    \    return sort\n}\n", "  arr.sort( (a,b) => {\n    if ( countOnes(a) < countOnes(b)\
    \ ) { return -1; }\n    if ( countOnes(a) > countOnes(b) ) { return 1; }\n   \
    \ if ( countOnes(a) === countOnes(b) ) {\n      if ( a < b ) { return -1; }\n\
    \      if ( a > b ) { return 1; }\n    }\n    return 0;\n  });\n  return arr;\n\
    }", "  return arr.sort((a, b) => binary(a).localeCompare(binary(b)));\n}", " \
    \   return arr.sort((a, b) => {\n        let binaryOneA = a.toString(2).split('').filter(val\
    \ => val === '1').length\n        let binaryOneB = b.toString(2).split('').filter(val\
    \ => val === '1').length\n        if (binaryOneA === binaryOneB) {\n         \
    \   return a - b\n        } else {\n            return binaryOneA - binaryOneB\n\
    \        }\n    })\n}\n", "    var result = [];\n    var temp = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        var binary = arr[i].toString(2);\n   \
    \     var count = binary.match(/1/g).length;\n        temp.push({\n          \
    \  decimal: arr[i],\n            binary: binary,\n            count: count\n \
    \       });\n    }\n    temp.sort(function(a, b){\n        if(a.count === b.count){\n\
    \            return a.decimal - b.decimal;\n        }\n        return a.count\
    \ - b.count;\n    });\n    for(var j = 0; j < temp.length; j++){\n        result.push(temp[j].decimal);\n\
    \    }\n    return result;\n}\n", "    const sorted = arr.sort((a, b) => {\n \
    \       const binaryA = a.toString(2);\n        const binaryB = b.toString(2);\n\
    \        const numOf1A = binaryA.split('1').length - 1;\n        const numOf1B\
    \ = binaryB.split('1').length - 1;\n        return numOf1A === numOf1B ? a - b\
    \ : numOf1A - numOf1B;\n    });\n    return sorted;\n}\n", "  return arr.sort((a,\
    \ b) =>{\n    let binA = a.toString(2).split('').filter(e => e === '1').length;\n\
    \    let binB = b.toString(2).split('').filter(e => e === '1').length;\n    if(binA\
    \ !== binB){\n      return binA - binB;\n    }\n    return a - b;\n  });\n}\n",
  "    let temp = []\n    arr.map(v => {\n        temp.push(v.toString(2).split('1').length\
    \ - 1)\n    })\n    let temp2 = [];\n    for(let i = 0; i < temp.length; i++){\n\
    \        if(temp[i] == temp[i + 1]){\n            temp2.push(arr[i])\n       \
    \     arr.splice(i, 1)\n            temp.splice(i, 1)\n            i--\n     \
    \   }\n    }\n    temp2.sort((a, b) => a - b)\n    let count = 0;\n    for(let\
    \ i = 0; i < temp.length; i++){\n        if(temp[i] == temp[i + 1]){\n       \
    \     arr.splice(i + 1, 0, temp2[count])\n            count++\n        }\n   \
    \ }\n    temp = temp.sort((a, b) => a - b)\n    let ans = []\n    temp.map(v =>\
    \ {\n        ans.push(arr[v])\n    })\n    return ans\n}", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(v => v === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(v => v === '1').length;\n   \
    \     return a1 - b1 || a - b;\n    });\n}", "    return arr.sort((a, b) => {\n\
    \        const onesInBinaryA = (a).toString(2).split('').filter(c => c === '1').length;\n\
    \        const onesInBinaryB = (b).toString(2).split('').filter(c => c === '1').length;\n\
    \        if (onesInBinaryA !== onesInBinaryB) return onesInBinaryA - onesInBinaryB;\n\
    \        else return a - b;\n    });\n}\n", "    var newArr = arr.sort(function(a,\
    \ b){\n        if (getOnes(a) === getOnes(b)){\n            return a - b;\n  \
    \      }\n        return getOnes(a) - getOnes(b);\n    });\n    return newArr;\n\
    }\n", "    arr.sort(function(a, b){\n        if(a === b){\n            return\
    \ a - b;\n        }\n        var aOnes = countOnes(a);\n        var bOnes = countOnes(b);\n\
    \        if(aOnes === bOnes){\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n    return arr;\n}\n", "    let arr2 = arr.map(function(item)\
    \ {\n        return item.toString(2).split(\"\").filter(function(item) {\n   \
    \         return (item == \"1\");\n        }).length;\n    });\n    let len =\
    \ arr2.length;\n    let count = 1;\n    let value = 0;\n    while (count < len)\
    \ {\n        let i = 0;\n        while (i < len - count) {\n            if (arr2[i]\
    \ > arr2[i + 1]) {\n                let j = arr2[i];\n                arr2[i]\
    \ = arr2[i + 1];\n                arr2[i + 1] = j;\n                let k = arr[i];\n\
    \                arr[i] = arr[i + 1];\n                arr[i + 1] = k;\n     \
    \       }\n            i++;\n        }\n        count++;\n    }\n    return arr;\n\
    }\nsort_array([1, 0, 2, 3, 4]);", "  let sort = [...arr].sort((a, b) => a - b);\n\
    \  let res = arr.map(x => {\n    let countA = count(x);\n    let index = sort.findIndex(y\
    \ => count(y) === countA);\n    let value = sort[index];\n    sort.splice(index,\
    \ 1);\n    return value;\n  });\n  return res;\n}", "\treturn arr.map(function(e,\
    \ i){\n\t\treturn {\n\t\t\tvalue: e,\n\t\t\tones: e.toString(2).split('').filter(function(x){return\
    \ x == '1'}).length,\n\t\t\tindex: i\n\t\t}\n\t}).sort(function(a, b){\n\t\tif(a.ones\
    \ > b.ones) return 1;\n\t\tif(a.ones < b.ones) return -1;\n\t\tif(a.ones == b.ones){\n\
    \t\t\tif(a.value > b.value) return 1;\n\t\t\tif(a.value < b.value) return -1;\n\
    \t\t}\n\t\treturn 0;\n\t}).map(function(x){\n\t\treturn x.value;\n\t});\n}\n",
  "    var obj = {};\n    var first = [];\n    var second = [];\n    for(var i = 0;\
    \ i < arr.length; i++){\n        var a = arr[i].toString(2);\n        var zeros\
    \ = a.replace(/1/g, \"\");\n        obj[arr[i]] = a.length - zeros.length;\n \
    \   }\n    for(var key in obj){\n        if(obj[key] === 0){\n            first.push(parseInt(key));\n\
    \        }else{\n            second.push(parseInt(key));\n        }\n    }\n \
    \   var second = second.sort(function(a, b){\n        return obj[a] - obj[b];\n\
    \    });\n    return first.concat(second);\n}", "  const ones = [];\n  for (const\
    \ i of arr) {\n    ones.push(i.toString(2).match(/1/g).length);\n  }\n  const\
    \ arr1 = [...arr];\n  arr1.sort((a, b) => {\n    if (ones[arr.indexOf(a)] ===\
    \ ones[arr.indexOf(b)]) {\n      return a - b;\n    }\n    return ones[arr.indexOf(a)]\
    \ - ones[arr.indexOf(b)];\n  });\n  return arr1;\n}\n", "    if(arr.length ===\
    \ 0) return [];\n    var ones = [];\n    for(var i = 0; i < arr.length; i++){\n\
    \        var num = arr[i];\n        var count = 0;\n        var numStr = num.toString(2);\n\
    \        for(var j = 0; j < numStr.length; j++){\n            if(numStr[j] ===\
    \ '1') count++;\n        }\n        ones.push(count);\n    }\n    ones.sort(function(a,\
    \ b){return a - b});\n    var max = ones[ones.length - 1];\n    var counter =\
    \ 0;\n    var result = [];\n    for(var x = 0; x <= max; x++){\n        for(var\
    \ y = 0; y < ones.length; y++){\n            if(ones[y] === x){\n            \
    \    result.push(arr[y]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let onesArr = [];\n    let zerosArr = [];\n    let negArr = [];\n \
    \   let result = [];\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ < 0){\n            negArr.push(arr[i]);\n        }\n        if(countOnes(arr[i])\
    \ === 0 && arr[i] >= 0){\n            zerosArr.push(arr[i]);\n        }\n    \
    \    if(countOnes(arr[i]) > 0){\n            onesArr.push(arr[i]);\n        }\n\
    \    }\n    onesArr.sort(function(a, b){\n        return a - b;\n    });\n   \
    \ for(let i = 0; i < onesArr.length; i++){\n        for(let j = i + 1; j < onesArr.length;\
    \ j++){\n            if(countOnes(onesArr[i]) === countOnes(onesArr[j])){\n  \
    \              if(onesArr[i] > onesArr[j]){\n                    let temp = onesArr[i];\n\
    \                    onesArr[i] = onesArr[j];\n                    onesArr[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    zerosArr.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    negArr.sort(function(a, b){\n     \
    \   return a - b;\n    });\n    negArr.reverse();\n    result = result.concat(negArr,\
    \ onesArr, zerosArr);\n    return result;\n}\n", "  return arr.sort((a, b) =>\
    \ {\n    let a_bin = convert_decimal_to_binary(a);\n    let b_bin = convert_decimal_to_binary(b);\n\
    \    let a_ones = count_ones(a_bin);\n    let b_ones = count_ones(b_bin);\n  \
    \  if (a_ones === b_ones) {\n      return a - b;\n    } else {\n      return a_ones\
    \ - b_ones;\n    }\n  });\n}\n", "    var result = [];\n    var binaryArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        result.push(getOne(arr[i]));\n\
    \        binaryArr.push(arr[i].toString(2));\n    }\n    // console.log(result);\n\
    \    // console.log(binaryArr);\n    var sorted = bubbleSort(result);\n    //\
    \ console.log(sorted);\n    var final = [];\n    for(var j = 0; j < sorted.length;\
    \ j++){\n        final.push(getNumber(sorted[j], binaryArr));\n    }\n    // console.log(final);\n\
    \    return final;\n}\n", "    return arr.sort((a, b) => {\n        if(countOnes(a)\
    \ == countOnes(b)) {\n            return a - b;\n        }\n        return countOnes(a)\
    \ - countOnes(b);\n    });\n}\n", "  //sort the array based on binary representation\n\
    \  let res = [];\n  for(let i = 0; i < arr.length; i++){\n    res.push(arr[i].toString(2));\n\
    \  }\n  //sort arr\n  res.sort(function(a, b){\n    return a.split('').filter(function(val){\n\
    \      return val == '1';\n    }).length - b.split('').filter(function(val){\n\
    \      return val == '1';\n    }).length;\n  });\n  //narrow down\n  let store\
    \ = res.map(function(val){\n    return parseInt(val, 2);\n  });\n  console.log(store);\n\
    \  return store;\n}\nsort_array([4, 15, 7, 8, 6, 11, 9, 10, 5, 14, 13, 3, 12,\
    \ 2, 1]);\nsort_array([-2, -3, -4, -5, -6]);\nsort_array([1, 0, 2, 3, 4]);", " \
    \ let sorted = arr.sort((a, b) => {\n    let a_binary = a.toString(2).split('').filter(value\
    \ => value === '1').length;\n    let b_binary = b.toString(2).split('').filter(value\
    \ => value === '1').length;\n    return a_binary - b_binary;\n  });\n  return\
    \ sorted;\n}\n", "    return arr.sort((a, b) => getNumberOfOnes(a) - getNumberOfOnes(b)\
    \ || a - b);\n}\n", "  arr.sort(function(a, b){\n    if ( (a.toString(2).match(/1/g)\
    \ || []).length > (b.toString(2).match(/1/g) || []).length ) {\n      return 1;\n\
    \    } else if ( (a.toString(2).match(/1/g) || []).length < (b.toString(2).match(/1/g)\
    \ || []).length ) {\n      return -1;\n    } else {\n      return a - b;\n   \
    \ }\n  });\n  return arr;\n}\n", "    return arr.sort((a, b) => {\n        const\
    \ binA = a.toString(2);\n        const binB = b.toString(2);\n        if (binA.length\
    \ > binB.length) {\n            return 1;\n        } else if (binA.length < binB.length)\
    \ {\n            return -1;\n        } else {\n            if (binA.match(/1/g)\
    \ === null && binB.match(/1/g) === null) {\n                return a - b;\n  \
    \          } else if (binA.match(/1/g) === null) {\n                return -1;\n\
    \            } else if (binB.match(/1/g) === null) {\n                return 1;\n\
    \            } else {\n                const cmp = binA.match(/1/g).length - binB.match(/1/g).length;\n\
    \                if (cmp === 0) {\n                    return a - b;\n       \
    \         } else {\n                    return cmp;\n                }\n     \
    \       }\n        }\n    });\n}\n", "  return arr.sort((a, b) => {\n    let a_binary\
    \ = a.toString(2);\n    let b_binary = b.toString(2);\n    let a_count = 0;\n\
    \    let b_count = 0;\n    for (let i = 0; i < a_binary.length; i++) {\n     \
    \ if (a_binary[i] === '1') {\n        a_count++;\n      }\n    }\n    for (let\
    \ i = 0; i < b_binary.length; i++) {\n      if (b_binary[i] === '1') {\n     \
    \   b_count++;\n      }\n    }\n    if (a_count !== b_count) {\n      return a_count\
    \ - b_count;\n    } else {\n      return a - b;\n    }\n  });\n}\n", "  return\
    \ arr.map(\n    (num) => {\n      let bin = num.toString(2);\n      return parseInt(`${bin.match(/1/g).length}${num}`);\n\
    \    }\n  ).sort((a, b) => a - b).map((num) => num % 10);\n}\n", "  arr.sort(function(a,\
    \ b){\n    let onesInA = a.toString(2).split('').filter(char => char == 1).length;\n\
    \    let onesInB = b.toString(2).split('').filter(char => char == 1).length;\n\
    \    if(onesInA > onesInB){\n      return 1;\n    } else if(onesInA < onesInB){\n\
    \      return -1;\n    } else {\n      return a-b;\n    }\n  });\n  return arr;\n\
    }", "    let sortedArr = arr.sort((a, b) => {\n        let numA = a.toString(2).split('1').length\
    \ - 1\n        let numB = b.toString(2).split('1').length - 1\n        if (numA\
    \ === numB) {\n            return a - b\n        } else {\n            return\
    \ numA - numB\n        }\n    })\n    return sortedArr\n}", "  var arr1 = arr.map(function(el){\n\
    \    var count = 0;\n    var arr2 = el.toString(2).split('');\n    for(var i =\
    \ 0; i < arr2.length; i++){\n      if(arr2[i] === '1'){\n        count += 1;\n\
    \      }\n    }\n    return count;\n  });\n  var arr3 = [];\n  var arr4 = [];\n\
    \  var arr5 = [];\n  var arr6 = [];\n  var arr7 = [];\n  var arr8 = [];\n  var\
    \ arr9 = [];\n  var arr10 = [];\n  var arr11 = [];\n  var arr12 = [];\n  var arr13\
    \ = [];\n  var arr14 = [];\n  var arr15 = [];\n  var arr16 = [];\n  var arr17\
    \ = [];\n  var arr18 = [];\n  var arr19 = [];\n  var arr20 = [];\n  var arr21\
    \ = [];\n  var arr22 = [];\n  var arr23 = [];\n  var arr24 = [];\n  var arr25\
    \ = [];\n  var arr26 = [];\n  var arr27 = [];\n  var arr28 = [];\n  var arr29\
    \ = [];\n  var arr30 = [];\n  var arr31 = [];\n  var arr32 = [];\n  var arr33\
    \ = [];\n  var arr34 = [];\n  var arr35 = [];\n  var arr36 = [];\n  var arr37\
    \ = [];\n  var arr38 = [];\n  var arr39 = [];\n  var arr40 = [];\n  var arr41\
    \ = [];\n  var arr42 = [];\n  var arr43 = [];\n  var arr44 = [];\n  var arr45\
    \ = [];\n  var arr46 = [];\n  var arr47 = [];\n  var arr48 = [];\n  var arr49\
    \ = [];\n  var arr50 = [];\n  var arr51 = [];\n  var arr52 = [];\n  var arr53\
    \ = [];\n  var arr54 = [];\n  var arr55 = [];\n  var arr56 = [];\n  var arr57\
    \ = [];\n  var arr58 = [];\n  var arr59 = [];\n  var arr60 = [];\n  var arr61\
    \ = [];\n  var arr62 = [];\n", "    var counter =[];\n    var sorted_arr=[];\n\
    \    var val=0;\n    var max=0;\n    var secmax=0;\n    var newarr=[];\n    for(var\
    \ i=0;i<arr.length;i++){\n        counter[i]=0;\n        if(arr[i]>0){\n     \
    \       var num =arr[i];\n            while(num>0){\n                if(num%2==1){\n\
    \                    counter[i]++;\n                }\n                num=Math.floor(num/2);\n\
    \            }\n        }\n    }\n    for(var j=0;j<counter.length;j++){\n   \
    \     for(var k=0;k<counter.length;k++){\n            if(counter[j]>counter[k]){\n\
    \                val=counter[j];\n                counter[j]=counter[k];\n   \
    \             counter[k]=val;\n                val=arr[j];\n                arr[j]=arr[k];\n\
    \                arr[k]=val;\n            }\n            else if(counter[j]==counter[k]){\n\
    \                if(arr[j]>arr[k]){\n                    val=counter[j];\n   \
    \                 counter[j]=counter[k];\n                    counter[k]=val;\n\
    \                    val=arr[j];\n                    arr[j]=arr[k];\n       \
    \             arr[k]=val;\n                }\n            }\n        }\n    }\n\
    \    return arr;\n}\n", "  // your code here\n  let newArr = [];\n  for(let i\
    \ = 0; i < arr.length; i++){\n    newArr.push(arr[i].toString(2).match(/1/g).length);\n\
    \  }\n  for(let i = 0; i < newArr.length; i++){\n    let minIndex = i;\n    for(let\
    \ j = i + 1; j < newArr.length; j++){\n      if(newArr[j] < newArr[minIndex]){\n\
    \        minIndex = j;\n      }\n    }\n    if(minIndex !== i){\n      [newArr[i],\
    \ newArr[minIndex]] = [newArr[minIndex], newArr[i]];\n      [arr[i], arr[minIndex]]\
    \ = [arr[minIndex], arr[i]];\n    }\n  }\n  return arr;\n}", "    if (arr.length\
    \ === 0) return [];\n    let arr_result = arr.sort((a, b) => {\n        let a_bin\
    \ = a.toString(2);\n        let b_bin = b.toString(2);\n        if (a_bin.match(/1/g)\
    \ === null && b_bin.match(/1/g) === null) {\n            return a - b;\n     \
    \   } else if (a_bin.match(/1/g) === null) {\n            return 1;\n        }\
    \ else if (b_bin.match(/1/g) === null) {\n            return -1;\n        } else\
    \ {\n            if (a_bin.match(/1/g).length === b_bin.match(/1/g).length) {\n\
    \                return a - b;\n            } else {\n                return a_bin.match(/1/g).length\
    \ - b_bin.match(/1/g).length;\n            }\n        }\n    });\n    return arr_result;\n\
    }", "    let arr2 = arr.sort((a,b)=>{\n      let a1 = a.toString(2).match(/1/g).length;\n\
    \      let b1 = b.toString(2).match(/1/g).length;\n      if(a1>b1){\n        return\
    \ 1;\n      }else if(a1<b1){\n        return -1;\n      }else{\n        return\
    \ a-b;\n      }\n    });\n    return arr2;\n}", "    var result = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] < 0){\n            result.push(arr[i]);\n\
    \        }\n    }\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ > 0){\n            result.push(arr[i]);\n        }\n    }\n    return result;\n\
    }", "    let arrBin = [], arrDec = [];\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        if (arr[i] >= 0) {\n            let binary = arr[i].toString(2);\n\
    \            arrBin.push(binary);\n            arrDec.push(arr[i]);\n        }\n\
    \    }\n    let arrSort = [], arrBinSort = [];\n    for (let j = 0; j < arrBin.length;\
    \ j++) {\n        let count = 0;\n        for (let i = 0; i < arrBin[j].length;\
    \ i++) {\n            if (arrBin[j][i] === '1') {\n                count++;\n\
    \            }\n        }\n        arrSort.push(count);\n        arrBinSort.push(arrBin[j]);\n\
    \    }\n    arrSort.sort(function (a, b) {\n        return a - b;\n    });\n \
    \   arrBinSort.sort(function (a, b) {\n        return a - b;\n    });\n    let\
    \ result = [];\n    for (let i = 0; i < arrSort.length; i++) {\n        let count\
    \ = 0;\n        let arrBinCopy = arrBinSort.slice();\n        for (let j = 0;\
    \ j < arrBinCopy.length; j++) {\n            let numBin = parseInt(arrBinCopy[j],\
    \ 2);\n            if (numBin === arrDec[i]) {\n                result.push(arrDec[i]);\n\
    \                arrBinCopy.splice(j, 1);\n                arrBinSort.splice(j,\
    \ 1);\n                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2).match(/1/g)\
    \ || [];\n        let bBinary = b.toString(2).match(/1/g) || [];\n        return\
    \ aBinary.length === bBinary.length ? a - b : aBinary.length - bBinary.length;\n\
    \    });\n}", "    let arr1 = [], arr2 = [];\n    arr.forEach(elem => {\n    \
    \    let bin = (+elem).toString(2);\n        let ones = bin.split('1').length\
    \ - 1;\n        if (arr1[ones]) arr1[ones].push(elem);\n        else arr1[ones]\
    \ = [elem];\n    });\n    for (let i = 0; i < arr1.length; i++) {\n        if\
    \ (arr1[i]) {\n            arr1[i].sort((a, b) => {\n                if (a < b)\
    \ return -1;\n                if (a > b) return 1;\n                return 0;\n\
    \            });\n            arr2 = arr2.concat(arr1[i]);\n        }\n    }\n\
    \    return arr2;\n}\n", "  let bitArray = []\n  let sorted = []\n  for(let i\
    \ = 0; i < arr.length; i++){\n    bitArray.push([i, arr[i], (arr[i].toString(2).match(/1/g)\
    \ || []).length])\n  }\n  bitArray.sort((a, b) => {\n    if(a[2] < b[2]){\n  \
    \    return -1\n    } else if(a[2] > b[2]){\n      return 1\n    } else {\n  \
    \    if(a[1] < b[1]){\n        return -1\n      } else if(a[1] > b[1]){\n    \
    \    return 1\n      } else {\n        return 0\n      }\n    }\n  })\n  for(let\
    \ j = 0; j < bitArray.length; j++){\n    sorted.push(bitArray[j][1])\n  }\n  return\
    \ sorted\n}", "    var newArr = [];\n    var sArr = [];\n    var sArrNums = [];\n\
    \    var sortedArr = [];\n    for(var i = 0; i < arr.length; i++){\n        newArr.push(arr[i].toString(2));\n\
    \    }\n    for(var j = 0; j < newArr.length; j++){\n        sArrNums.push(newArr[j].match(/1/g).length);\n\
    \    }\n    var uniqArr = sArrNums.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    uniqArr.sort(function(a, b){return a-b});\n    for(var k = 0;\
    \ k < uniqArr.length; k++){\n        for(var l = 0; l < sArrNums.length; l++){\n\
    \            if(uniqArr[k] === sArrNums[l]){\n                sArr.push(arr[l]);\n\
    \            }\n        }\n    }\n    var sArrUniq = sArr.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return sArrUniq;\n}", "  let\
    \ sorted = arr.sort((a, b) => {\n    return a - b;\n  });\n  let ones = [], zeros\
    \ = [];\n  sorted.forEach(num => {\n    num.toString(2).split('').reduce((a, b)\
    \ => {\n      if (b === '1') {\n        a += 1;\n      }\n      return a;\n  \
    \  }, 0) ? ones.push(num) : zeros.push(num);\n  });\n  let filtered = ones.filter(num\
    \ => {\n    num.toString(2).split('').reduce((a, b) => {\n      if (b === '1')\
    \ {\n        a += 1;\n      }\n      return a;\n    }, 0) > 1;\n  });\n  let sortedFiltered\
    \ = filtered.sort((a, b) => {\n    return a - b;\n  });\n  console.log(sortedFiltered);\n\
    \  let onesIndex = 0;\n  let zerosIndex = 0;\n  let sortedArray = [];\n  for (let\
    \ i = 0; i < sorted.length; i++) {\n    sorted[i].toString(2).split('').reduce((a,\
    \ b) => {\n      if (b === '1') {\n        a += 1;\n      }\n      return a;\n\
    \    }, 0) > 1 ? sortedArray.push(sortedFiltered[onesIndex++]) : sortedArray.push(zeros[zerosIndex++]);\n\
    \  }\n  return sortedArray;\n}\nsort_array([1, 1, 2, 3, 4]);", "  return arr.sort((a,\
    \ b) => {\n    let aOnes = a.toString(2).match(/1/g).length;\n    let bOnes =\
    \ b.toString(2).match(/1/g).length;\n    if (aOnes === bOnes) {\n      return\
    \ a - b;\n    } else {\n      return aOnes - bOnes;\n    }\n  });\n}", "    return\
    \ arr.sort((a, b) => countOnes(a) == countOnes(b) ? a - b : countOnes(a) - countOnes(b));\n\
    }\n", "  return arr.sort((a, b) => {\n    let bA = a.toString(2).split('').filter(x\
    \ => x == '1').length;\n    let bB = b.toString(2).split('').filter(x => x ==\
    \ '1').length;\n    if (bA === bB) {\n      return a - b;\n    }\n    return bA\
    \ - bB;\n  });\n}\n", "    return arr.sort((a, b) => {\n        let first = a.toString(2).split('').filter(char\
    \ => char === '1').length;\n        let second = b.toString(2).split('').filter(char\
    \ => char === '1').length;\n        if (first !== second) {\n            return\
    \ first - second;\n        } else {\n            return a - b;\n        }\n  \
    \  });\n}\n", "  return arr.sort((a, b) => {\n    a = a.toString(2);\n    b =\
    \ b.toString(2);\n    if (a.split('1').length < b.split('1').length) {\n     \
    \ return -1;\n    } else if (a.split('1').length > b.split('1').length) {\n  \
    \    return 1;\n    } else {\n      return a - b;\n    }\n  });\n}\n", "    //\
    \ do something\n    //  let arr = [1, 5, 2, 3, 4]\n    let sorted = arr.sort((a,\
    \ b) => {\n        let bs = b.toString(2).split('').filter(x => x == '1').length\n\
    \        let as = a.toString(2).split('').filter(x => x == '1').length\n     \
    \   if (bs == as) return a - b\n        return bs - as\n    })\n    return sorted\n\
    }", "    // Place your code here!\n    let binaryArr = [];\n    let numOfOnes\
    \ = []\n    let temp = [];\n    arr.forEach(element => {\n        temp = element.toString(2);\n\
    \        numOfOnes.push(temp.match(/1/g).length);\n        binaryArr.push(temp);\n\
    \    });\n    // I'm assuming that if a tie-breaker is needed (i.e. two numbers\
    \ have the same binary 1 count)\n    // then we should use the number's decimal\
    \ value.\n    return arr.sort((a, b) => {\n        if (numOfOnes[a] === numOfOnes[b])\
    \ {\n            return a - b;\n        } else {\n            return numOfOnes[a]\
    \ - numOfOnes[b];\n        }\n    });\n}\n", "  return arr.sort((a, b) => {\n\
    \    let aOnes = a.toString(2).split('').filter(n => n === '1').length;\n    let\
    \ bOnes = b.toString(2).split('').filter(n => n === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n\
    \    }\n  });\n}", "    return arr.sort((a, b) => {\n        return a.toString(2).split('1').length\
    \ - b.toString(2).split('1').length || a - b;\n    });\n}", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).match(/1/g).length;\n        let b1\
    \ = b.toString(2).match(/1/g).length;\n        return a1 - b1 != 0 ? a1 - b1 :\
    \ a - b;\n    });\n}", "    //binary representation of array elements\n    var\
    \ binArr = arr.map(dec2bin);\n    //sorting array of binary numbers by number\
    \ of \"1\"s\n    binArr.sort(function(a, b){\n        var compare = b.match(/1/g).length\
    \ - a.match(/1/g).length;\n        if(compare == 0){\n            return parseInt(b,\
    \ 2) - parseInt(a, 2);\n        }\n        return compare;\n    });\n    //converting\
    \ back to decimal\n    var res = binArr.map(bin2dec);\n    return res;\n}\n",
  "    var arrClone = arr.slice(0);\n    arrClone.sort(function(a, b){\n        if(countOnes(a)\
    \ === countOnes(b)) return a - b;\n        return countOnes(a) - countOnes(b);\n\
    \    });\n    return arrClone;\n}\n", "let binarr = [];\nlet posarr = [];\nlet\
    \ resarr = [];\nfor (let i=0; i<arr.length; i++){\n  binarr.push(arr[i].toString(2));\n\
    \  posarr.push(binarr[i].match(/1/g).length);\n}\nfor (let i=0; i<posarr.length;\
    \ i++){\nresarr[i] = 0;\n}\nfor (let i=0; i<posarr.length; i++){\nfor (let j=0;\
    \ j<posarr.length; j++){\nif (posarr[i]<posarr[j]){\nresarr[i]++;\n}\nif (posarr[i]\
    \ == posarr[j]){\n  if (arr[i] < arr[j]){\n  resarr[i]++;\n  }\n}\n}\n}\nfor (let\
    \ i=0; i<resarr.length; i++){\n  let ind = resarr[i];\n  resarr[i] = arr[ind];\n\
    }\nreturn resarr;\n}", "    let sortObj={};\n    for(let i=0;i<arr.length;i++){\n\
    \        let oneInBinary = arr[i].toString(2).split(\"1\").length-1;\n       \
    \ sortObj[arr[i]]=oneInBinary;\n    }\n    let final=Object.keys(sortObj).sort((a,b)=>{\n\
    \        return sortObj[a]-sortObj[b]\n    });\n    return final.map(num=>Number(num));\n\
    }", "    return arr.sort((a, b) => {\n        a = a.toString(2);\n        b =\
    \ b.toString(2);\n        return a.replace(/0/g, '').length == b.replace(/0/g,\
    \ '').length ? a - b : a.replace(/0/g, '').length - b.replace(/0/g, '').length;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let bitA = (a).toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bitB = (b).toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (bitA > bitB) return 1;\n        if (bitA\
    \ < bitB) return -1;\n        if (bitA === bitB) {\n            if (a > b) return\
    \ 1;\n            if (a < b) return -1;\n        }\n        return 0;\n    });\n\
    }\n\nmodule.exports = sort_array;", "    var as = arr.sort(function(a, b){\n \
    \       var a1 = a.toString(2).match(/1/g) || [];\n        var b1 = b.toString(2).match(/1/g)\
    \ || [];\n        return a1.length - b1.length || a - b;\n    });\n    return\
    \ as;\n}\n", "    return arr.sort((a, b) => {\n        if(calculateOnes(a) < calculateOnes(b))\
    \ {\n            return -1;\n        } else if(calculateOnes(a) > calculateOnes(b))\
    \ {\n            return 1;\n        } else {\n            return a - b;\n    \
    \    }\n    });\n}\n", "  let res = arr.sort((a, b) => {\n    if (countOnes(a)\
    \ > countOnes(b)) return 1;\n    if (countOnes(a) < countOnes(b)) return -1;\n\
    \    if (countOnes(a) === countOnes(b)) {\n      if (a > b) return 1;\n      if\
    \ (a < b) return -1;\n    }\n  });\n  return res;\n}\n", "    let b=arr.sort((a,b)=>{\n\
    \        return (parseInt(a,10).toString(2).split(\"1\").length-1)-(parseInt(b,10).toString(2).split(\"\
    1\").length-1)\n    })\n    console.log(b)\n}\nsort_array([1, 0, 2, 3, 4])\n",
  "    let res = arr.sort((a, b) => Integer.bitCount(a) - Integer.bitCount(b));\n\
    \    return res;\n}\n", "    return arr.sort((a, b) => (Integer.bitCount(a) -\
    \ Integer.bitCount(b)) || (a - b));\n}", "    // 1. \u0412\u0435\u0440\u043D\u0443\
    \u0442\u044C arr \u0435\u0441\u043B\u0438 \u0434\u043B\u0438\u043D\u0430 \u043C\
    \u0430\u0441\u0441\u0438\u0432\u0430 == 0\n    if (arr.length == 0) {\n      \
    \  return arr;\n    }\n    // 2. \u041F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\
    \u043E\u0432\u0430\u0442\u044C \u0447\u0438\u0441\u043B\u0430 \u043C\u0430\u0441\
    \u0441\u0438\u0432\u0430 \u0432 \u0431\u0438\u043D\u0430\u0440\u043D\u044B\u0439\
    \ \u0432\u0438\u0434 \u0438 \u043F\u043E\u0434\u0441\u0447\u0438\u0442\u0430\u0442\
    \u044C \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0435\u0434\
    \u0438\u043D\u0438\u0446\n    // \u0432 \u043A\u0430\u0436\u0434\u043E\u043C \u0447\
    \u0438\u0441\u043B\u0435. \u0421\u043E\u0437\u0434\u0430\u0442\u044C \u043D\u043E\
    \u0432\u044B\u0439 \u043C\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 \u043E\u0431\
    \u044A\u0435\u043A\u0442\u043E\u0432 \u0432\u0438\u0434\u0430:\n    // { number:\
    \ \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0438\u0437 arr, count: \u043A\
    \u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0435\u0434\u0438\u043D\
    \u0438\u0446 \u0432 \u0434\u0432\u043E\u0438\u0447\u043D\u043E\u043C \u043F\u0440\
    \u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u0438\u0438 }\n    let\
    \ arrWithCountOfOnes = arr.map(number => {\n        let binaryNumber = number.toString(2);\n\
    \        let countOfOnes = binaryNumber.split('').filter(el => el == '1').length;\n\
    \        return {\n            number: number,\n            count: countOfOnes\n\
    \        }\n    });\n    // 3. \u041E\u0442\u0441\u043E\u0440\u0442\u0438\u0440\
    \u043E\u0432\u0430\u0442\u044C \u043C\u0430\u0441\u0441\u0438\u0432 \u043F\u043E\
    \ \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0435\u0434\u0438\
    \u043D\u0438\u0446 \u0432 \u0434\u0432\u043E\u0438\u0447\u043D\u043E\u043C \u043F\
    \u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u0438\u0438 \u043F\
    \u043E \u0432\u043E\u0437\u0440\u0430\u0441\u0442\u0430\u043D\u0438\u044E,\n \
    \   // \u0430 \u0434\u043B\u044F \u043E\u0434\u0438\u043D\u0430\u043A\u043E\u0432\
    \u043E\u0433\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0430\
    \ \u0435\u0434\u0438\u043D\u0438\u0446 \u043F\u043E \u0437\u043D\u0430\u0447\u0435\
    \u043D\u0438\u044E \u0447\u0438\u0441\u043B\u0430 \u043F\u043E", "  if(arr.length\
    \ == 0) return [];\n  let res = arr.slice();\n  let len = arr.length;\n  for(let\
    \ i = 0; i < len; i++){\n    for(let j = i + 1; j < len; j++){\n      let digitSum1\
    \ = 0;\n      let digitSum2 = 0;\n      for(let n = arr[i]; n > 0; n >>= 1){\n\
    \        digitSum1 += n & 1;\n      }\n      for(let n = arr[j]; n > 0; n >>=\
    \ 1){\n        digitSum2 += n & 1;\n      }\n      if(digitSum1 > digitSum2){\n\
    \        res[i] = arr[j];\n        res[j] = arr[i];\n      }\n      else if(digitSum1\
    \ == digitSum2){\n        if(arr[i] > arr[j]){\n          res[i] = arr[j];\n \
    \         res[j] = arr[i];\n        }\n      }\n    }\n  }\n  return res;\n}\n",
  "    if(!arr.length){\n        return arr;\n    }\n    var output = [];\n    var\
    \ storage = [];\n    for(var i = 0; i < arr.length; i++){\n        var string\
    \ = arr[i].toString(2);\n        var count = 0;\n        for(var j = 0; j < string.length;\
    \ j++){\n            if(string[j] === '1'){\n                count++;\n      \
    \      }\n        }\n        storage.push({ones: count, value: arr[i]});\n   \
    \ }\n    storage.sort(function(a, b){\n        if(a.ones === b.ones){\n      \
    \      return a.value - b.value;\n        }\n        return a.ones - b.ones;\n\
    \    });\n    for(var k = 0; k < storage.length; k++){\n        output.push(storage[k].value);\n\
    \    }\n    return output;\n}\n", "    let sorted = arr.sort((a, b) => a - b);\n\
    \    return sorted.sort((a, b) => a.toString(2).match(/1/g).length - b.toString(2).match(/1/g).length)\n\
    }\n", "  let arrString= arr.map(function(e){\n    return e.toString(2)});\n  let\
    \ arrBin= arrString.map(function(e){\n    return e.replace(/0/g, \"\").length;});\n\
    \  let arrSorted= arrBin.slice().sort(function(a, b){\n    return a-b;});\n  let\
    \ result= [];\n  for(let i= 0; i< arrSorted.length; i++){\n    let current= arrSorted[i];\n\
    \    let index= arrBin.indexOf(current);\n    let y= arr.splice(index, 1);\n \
    \   result.push(y[0]);\n    arrBin.splice(index, 1);\n  }\n  return result;\n\
    }\n", "    // if(arr.length === 0){\n    //     return arr;\n    // }\n    //\
    \ let min = arr[0];\n    // let minIndex = 0;\n    // for(let i = 0; i < arr.length;\
    \ i++){\n    //     if(arr[i] < min){\n    //         min = arr[i];\n    //  \
    \       minIndex = i;\n    //     }\n    // }\n    // let numOfOnes = 0;\n   \
    \ // for(let i = 0; i < min.toString(2).length; i++){\n    //     if(min.toString(2)[i]\
    \ === '1'){\n    //         numOfOnes++;\n    //     }\n    // }\n    // let number\
    \ = min;\n    // let ones = numOfOnes;\n    // for(let i = 0; i < arr.length;\
    \ i++){\n    //     let onesCount = 0;\n    //     for(let j = 0; j < arr[i].toString(2).length;\
    \ j++){\n    //         if(arr[i].toString(2)[j] === '1'){\n    //           \
    \  onesCount++;\n    //         }\n    //     }\n    //     if(onesCount < ones){\n\
    \    //         ones = onesCount;\n    //         number = arr[i];\n    //   \
    \  }\n    //     if(onesCount === ones){\n    //         if(arr[i] < number){\n\
    \    //             number = arr[i];\n    //         }\n    //     }\n    // }\n\
    \    // let newArr = [];\n    // for(let i = 0; i < arr.length; i++){\n    //\
    \     newArr.push(arr[i]);\n    // }\n    // newArr.splice(minIndex, 1);\n   \
    \ // newArr.push(number);\n    // return newArr;\n    return arr.sort((a, b) =>\
    \ {\n        let oneCountA = 0;\n        let oneCountB = 0;\n        for(let i\
    \ = 0; i < a.toString(2).length; i++){\n            if(a.to", "  return arr.sort((a,\
    \ b) => {\n    const aBin = a.toString(2).split('').filter(c => c === '1').length;\n\
    \    const bBin = b.toString(2).split('').filter(c => c === '1').length;\n   \
    \ if (aBin === bBin) {\n      return a - b;\n    }\n    return aBin - bBin;\n\
    \  });\n}\n", "    return arr.sort((a, b) => {\n        return a.toString(2).split('1').length\
    \ - b.toString(2).split('1').length || a - b;\n    });\n}", "  return arr.sort((a,\
    \ b) => countOnes(a) - countOnes(b) || a - b);\n}\n", "  let count = function(num){\n\
    \    return num.toString(2).split('').filter(item => item === '1').length;\n \
    \ }\n  return arr.sort((a, b) => count(a) - count(b) || a - b);\n}", "    let\
    \ arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n    let arr4 = [];\n   \
    \ let arr5 = [];\n    let arr6 = [];\n    let arr7 = [];\n    let arr8 = [];\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n     \
    \       arr1.push(arr[i]);\n        } else if (arr[i] < 2) {\n            arr2.push(arr[i]);\n\
    \        } else if (arr[i] < 4) {\n            arr3.push(arr[i]);\n        } else\
    \ if (arr[i] < 8) {\n            arr4.push(arr[i]);\n        } else if (arr[i]\
    \ < 16) {\n            arr5.push(arr[i]);\n        } else if (arr[i] < 32) {\n\
    \            arr6.push(arr[i]);\n        } else if (arr[i] < 64) {\n         \
    \   arr7.push(arr[i]);\n        } else {\n            arr8.push(arr[i]);\n   \
    \     }\n    }\n    arr1.sort(function(a, b){return a-b});\n    arr2.sort(function(a,\
    \ b){return a-b});\n    arr3.sort(function(a, b){return a-b});\n    arr4.sort(function(a,\
    \ b){return a-b});\n    arr5.sort(function(a, b){return a-b});\n    arr6.sort(function(a,\
    \ b){return a-b});\n    arr7.sort(function(a, b){return a-b});\n    arr8.sort(function(a,\
    \ b){return a-b});\n    arr = arr1.concat(arr2, arr3, arr4, arr5, arr6, arr7,\
    \ arr8);\n    return arr;\n}\nsort_array([1, 5, 2, 3, 4]);\n", "    let result\
    \ = [];\n    for (let i = 0; i < arr.length; i++) {\n        result.push({\n \
    \           number: arr[i],\n            binary: Number(arr[i]).toString(2),\n\
    \            count: Number(arr[i]).toString(2).split('').filter(x => x === '1').length\n\
    \        });\n    }\n    result.sort((a, b) => {\n        if (a.count === b.count)\
    \ {\n            return a.number - b.number;\n        }\n        return a.count\
    \ - b.count;\n    });\n    return result.map(x => x.number);\n}", "  return arr.sort((a,\
    \ b) => {\n    if (countOnes(a) === countOnes(b)) return a - b;\n    return countOnes(a)\
    \ - countOnes(b);\n  });\n}\n", "    var arr2 = arr.map(function(val) {\n    \
    \    var decimal = val;\n        var binary = val.toString(2);\n        var ones\
    \ = binary.split('').filter(function(char) {\n            return char === '1';\n\
    \        }).length;\n        return {decimal: decimal, binary: binary, ones: ones};\n\
    \    });\n    arr2.sort(function(a, b) {\n        return a.ones - b.ones || a.decimal\
    \ - b.decimal;\n    });\n    var result = arr2.map(function(val) {\n        return\
    \ val.decimal;\n    });\n    return result;\n}\n", "    if (arr.length < 2) {\n\
    \        return arr;\n    }\n    var pivot = arr[0];\n    var left = [];\n   \
    \ var right = [];\n    for (var i = 1; i < arr.length; i++) {\n        if(digitCount(arr[i])\
    \ < digitCount(pivot)){\n            left.push(arr[i]);\n        } else if (digitCount(arr[i])\
    \ > digitCount(pivot)){\n            right.push(arr[i]);\n        } else {\n \
    \           if (arr[i] < pivot) {\n                left.push(arr[i]);\n      \
    \      } else {\n                right.push(arr[i]);\n            }\n        }\n\
    \    }\n    return sort_array(left).concat(pivot, sort_array(right));\n}\n", " \
    \   return arr.sort((a, b) => countOnes(a) === countOnes(b) ? a - b : countOnes(a)\
    \ - countOnes(b));\n}\n", "    let sorted = [];\n    let sortedOnes = [];\n  \
    \  let ones = {};\n    let zeros = {};\n    for(let i = 0; i < arr.length; i++){\n\
    \        let binaryStr = arr[i].toString(2);\n        let count = binaryStr.split('').filter(val\
    \ => val === '1').length;\n        if(ones[count]){\n            ones[count].push(arr[i]);\n\
    \        }else{\n            ones[count] = [arr[i]];\n        }\n    }\n    for(let\
    \ key in ones){\n        if(key != 0){\n            sortedOnes.push(ones[key]);\n\
    \        }else{\n            zeros = ones[key];\n        }\n    }\n    sortedOnes.sort((a,\
    \ b) => a[0] - b[0]);\n    sortedOnes.forEach(array => {\n        array.forEach(num\
    \ => {\n            sorted.push(num);\n        })\n    })\n    if(zeros.length\
    \ > 0){\n        sorted.push(...zeros);\n    }\n    return sorted;\n}\n", "  \
    \ let sortedArr = arr.sort((a, b) => {\n    return a - b;\n   })\n   let zeros\
    \ = [];\n   let moreThanZeros = [];\n   sortedArr.forEach(number => {\n    if\
    \ (number === 0) {\n      zeros.push(number);\n    } else {\n      moreThanZeros.push(number);\n\
    \    }\n   })\n   let answer = [];\n   moreThanZeros.forEach(number => {\n   \
    \ if (number.toString(2).includes('1')) {\n      answer.push(number);\n    }\n\
    \   })\n   return zeros.concat(answer);\n}\n", "    const newArray = arr.sort((a,\
    \ b) => {\n        if (a.toString(2).match(/1/g) == null && b.toString(2).match(/1/g)\
    \ == null) {\n            return a - b;\n        } else if (a.toString(2).match(/1/g)\
    \ == null) {\n            return 1;\n        } else if (b.toString(2).match(/1/g)\
    \ == null) {\n            return -1;\n        } else if (a.toString(2).match(/1/g).length\
    \ > b.toString(2).match(/1/g).length) {\n            return 1;\n        } else\
    \ if (a.toString(2).match(/1/g).length < b.toString(2).match(/1/g).length) {\n\
    \            return -1;\n        } else {\n            return a - b;\n       \
    \ }\n    });\n    return newArray;\n}\n", "    return arr.sort((a, b) => {\n \
    \       const num1 = a.toString(2).split('1').length - 1\n        const num2 =\
    \ b.toString(2).split('1').length - 1\n        if (num1 > num2) {\n          \
    \  return 1\n        } else if (num1 < num2) {\n            return -1\n      \
    \  } else {\n            return a - b\n        }\n    })\n}\n", "    return arr.sort((a,\
    \ b) => {\n        if(ones(a) == ones(b)){\n            return a - b;\n      \
    \  }\n        return ones(a) - ones(b);\n    });\n}", "    return arr.sort((a,\
    \ b) => onesCount(a) === onesCount(b) ? a - b : onesCount(a) - onesCount(b));\n\
    }\n", "    return arr.sort((a, b) => {\n        if (countOnes(a) === countOnes(b))\
    \ {\n            return a - b;\n        } else {\n            return countOnes(a)\
    \ - countOnes(b);\n        }\n    });\n}\n", "    let compare = (a, b) => {\n\
    \        let c1 = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let c2 = b.toString(2).split('').filter(x => x === '1').length;\n      \
    \  if (c1 !== c2) {\n            return c1 - c2;\n        } else {\n         \
    \   return a - b;\n        }\n    };\n    return arr.sort(compare);\n}", "  return\
    \ arr.sort((a, b) => {\n    const binA = a.toString(2);\n    const binB = b.toString(2);\n\
    \    const aOnes = binA.match(/1/g) || [];\n    const bOnes = binB.match(/1/g)\
    \ || [];\n    return aOnes.length !== bOnes.length ?\n      aOnes.length - bOnes.length\
    \ :\n      a - b;\n  });\n}", "  let result = [];\n  let zeros = [];\n  let ones\
    \ = [];\n  let tempArr = [];\n  arr.forEach(item => {\n    let binary = item.toString(2);\n\
    \    if (item < 0) {\n      tempArr.push([item, binary]);\n    } else {\n    \
    \  let onesCount = 0;\n      binary.split('').forEach(bit => {\n        if (bit\
    \ === '1') {\n          onesCount += 1;\n        }\n      });\n      if (onesCount\
    \ === 0) {\n        zeros.push([item, binary]);\n      } else {\n        ones.push([item,\
    \ binary, onesCount]);\n      }\n    }\n  });\n  ones.sort((a, b) => {\n    if\
    \ (a[2] === b[2]) {\n      return a[0] - b[0];\n    } else {\n      return a[2]\
    \ - b[2];\n    }\n  });\n  ones.forEach(item => {\n    result.push(item[0]);\n\
    \  });\n  zeros.forEach(item => {\n    result.push(item[0]);\n  });\n  tempArr.forEach(item\
    \ => {\n    result.push(item[0]);\n  });\n  return result;\n}\n", "    let z =\
    \ [];\n    let o = [];\n    let t = [];\n    let ans = [];\n    arr.map(function(b){\n\
    \        z.push(b);\n        o.push(b);\n        t.push(b);\n    });\n    z.sort(function(a,\
    \ b){\n        let on = a.toString(2).split('').filter(function(e){return e ==\
    \ '1'}).length;\n        let bn = b.toString(2).split('').filter(function(e){return\
    \ e == '1'}).length;\n        if(on < bn){\n            return -1;\n        }\n\
    \        if(on > bn){\n            return 1;\n        }\n        if(on == bn){\n\
    \            if(a < b){\n                return -1;\n            }\n         \
    \   if(a > b){\n                return 1;\n            }\n        }\n        return\
    \ 0;\n    });\n    z.map(function(a){\n        let i = o.indexOf(a);\n       \
    \ o.splice(i, 1);\n        o.unshift(a);\n    });\n    o.map(function(a){\n  \
    \      ans.push(t[a]);\n    });\n    return ans;\n}\n", "    var base = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        var num = Math.abs(arr[i]);\n\
    \        var bin = num.toString(2);\n        base.push([arr[i], bin, bin.split('').filter(function(item){\n\
    \            return item === '1';\n        }).length, num]);\n    }\n    var sorted\
    \ = base.sort(function(a, b){\n        if(a[2] === b[2]){\n            return\
    \ a[3] - b[3];\n        }\n        return a[2] - b[2];\n    });\n    return sorted.map(function(num){\n\
    \        return num[0];\n    });\n}", "    let n = arr.length;\n    for (let i\
    \ = 0; i < n-1; i++) {\n        for (let j = 0; j < n-i-1; j++) {\n          \
    \  if (CountOnes(arr[j]) === CountOnes(arr[j+1])) {\n                if (arr[j]\
    \ > arr[j+1]) {\n                    let temp = arr[j];\n                    arr[j]\
    \ = arr[j+1];\n                    arr[j+1] = temp;\n                }\n     \
    \       } else if (CountOnes(arr[j]) > CountOnes(arr[j+1])) {\n              \
    \  let temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1]\
    \ = temp;\n            }\n        }\n    }\n    return arr;\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const aBinary = a.toString(2);\n    const bBinary = b.toString(2);\n\
    \    const aOnes = aBinary.split('').filter(num => num === '1').length;\n    const\
    \ bOnes = bBinary.split('').filter(num => num === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n\
    }\n", "    //Create object for counting number of ones\n    var numberOfOnes =\
    \ {};\n    //Return empty array if array is empty\n    if(arr.length === 0){\n\
    \        return arr;\n    }\n    //Loop through array and get all the numbers\
    \ of ones\n    for(var i = 0; i < arr.length; i++){\n        //Use Number.toString(2)\
    \ to convert integer to binary\n        var binaryNum = Number(arr[i]).toString(2);\n\
    \        //Use match to get all the number of ones\n        var numOfOnes = binaryNum.match(/1/g);\n\
    \        //Set property of number of ones as key, and value as array of numbers\
    \ of ones\n        numberOfOnes[numOfOnes.length] = numberOfOnes[numOfOnes.length]\
    \ || [];\n        //Push number to array of numbers of ones\n        numberOfOnes[numOfOnes.length].push(arr[i]);\n\
    \    }\n    //Use for...in to iterate through each property in object\n    for(var\
    \ prop in numberOfOnes){\n        //Sort each array of numbers of ones from lowest\
    \ to highest\n        numberOfOnes[prop].sort(function(a, b){\n            return\
    \ a - b;\n        });\n    }\n    //Create an array to hold all the integers sorted\
    \ by number of ones\n    var sorted = [];\n    //Iterate through the object and\
    \ push all numbers of ones to array\n    for(var key in numberOfOnes){\n     \
    \   numberOfOnes[key].forEach(function(val){\n            sorted.push(val);\n\
    \        });\n    }\n    //Return the array of integers sorted by number of ones\n\
    \    return sorted;\n}", "    return arr.sort((x, y) => {\n        x = x.toString(2).split('').filter(e\
    \ => e === '1').length;\n        y = y.toString(2).split('').filter(e => e ===\
    \ '1').length;\n        return x - y;\n    });\n}", "    return arr.sort((a, b)\
    \ => {\n        let sa = a.toString(2).split('').filter(x => x === '1').length\n\
    \        let sb = b.toString(2).split('').filter(x => x === '1').length\n    \
    \    return sa - sb || a - b\n    })\n}", "    let arr1 = [], arr2 = [], arr3\
    \ = [];\n    let sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ a = arr[i];\n        let b = a.toString(2);\n        for(let j = 0; j < b.length;\
    \ j++){\n            if(b[j] == 1){\n                sum++;\n            }\n \
    \       }\n        arr1.push(sum);\n        arr2.push(arr[i]);\n        sum =\
    \ 0;\n    }\n    for(let i = 0; i < arr1.length; i++){\n        for(let j = 0;\
    \ j < arr1.length - 1; j++){\n            if(arr1[j] > arr1[j + 1]){\n       \
    \         let temp = arr1[j];\n                arr1[j] = arr1[j + 1];\n      \
    \          arr1[j + 1] = temp;\n                let temp2 = arr2[j];\n       \
    \         arr2[j] = arr2[j + 1];\n                arr2[j + 1] = temp2;\n     \
    \       }\n        }\n    }\n    let arr4 = [];\n    let min = arr1[0];\n    for(let\
    \ i = 0; i < arr1.length; i++){\n        if(arr1[i] != min){\n            arr4.push(arr1[i]);\n\
    \        }\n    }\n    arr4.unshift(min);\n    let arr5 = [], arr6 = [];\n   \
    \ for(let i = 0; i < arr4.length; i++){\n        for(let j = 0; j < arr2.length;\
    \ j++){\n            if(arr4[i] == arr1[j]){\n                arr5.push(arr2[j]);\n\
    \            }\n        }\n        arr6.push(arr5);\n        arr5 = [];\n    }\n\
    \    for(let i = 0; i < arr6.length; i++){\n        for(let j = 0; j < arr6[i].length\
    \ - 1; j++){\n            if(arr6[i][j] > arr6[i][", "  \n  return arr.map(x =>\
    \ x.toString(2).match(/1/g).length === undefined ? 0 : x.toString(2).match(/1/g).length).sort().map(x\
    \ => x === 0 ? arr.find(y => y.toString(2).match(/1/g) === undefined) : x);\n\
    \  // return arr.map(x => x.toString(2).match(/1/g).length).sort().map(x => x\
    \ === 0 ? arr.find(y => y.toString(2).match(/1/g) === undefined) : x);\n  // return\
    \ arr.map(x => x.toString(2).match(/1/g).length).sort().map(x => x === 0 ? arr.filter(y\
    \ => y.toString(2).match(/1/g) === undefined) : x);\n}\n", "  const map = arr.map(x\
    \ => x.toString(2));\n  return arr.sort((a, b) => {\n    return map[a].match(/1/g).length\
    \ === map[b].match(/1/g).length ? a - b : map[a].match(/1/g).length - map[b].match(/1/g).length;\n\
    \  });\n}\n", "    let array = arr.sort(function(a, b){\n      let binaryA = a.toString(2);\n\
    \      let binaryB = b.toString(2);\n      let countOnesA = binaryA.match(/1/g).length;\n\
    \      let countOnesB = binaryB.match(/1/g).length;\n  \n      if(countOnesA <\
    \ countOnesB){\n        return -1;\n      }\n      if(countOnesA > countOnesB){\n\
    \        return 1;\n      }\n      if(countOnesA === countOnesB){\n        return\
    \ a - b;\n      }\n    });\n    return array;\n  }", "  return arr.sort((a, b)\
    \ => {\n    if (a === b) return 0;\n    const onesA = a.toString(2).split('1').length\
    \ - 1;\n    const onesB = b.toString(2).split('1').length - 1;\n    if (onesA\
    \ === onesB) return a - b;\n    return onesA - onesB;\n  });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        const onesA = (a >>> 0).toString(2).match(/1/g).length\n\
    \        const onesB = (b >>> 0).toString(2).match(/1/g).length\n        return\
    \ onesA === onesB ? a - b : onesA - onesB\n    })\n}\n", "    arr.sort(function(a,\
    \ b){\n        if(a.toString(2).split('').filter(a => a == 1).length > b.toString(2).split('').filter(a\
    \ => a == 1).length){\n            return 1;\n        }\n        else if(a.toString(2).split('').filter(a\
    \ => a == 1).length < b.toString(2).split('').filter(a => a == 1).length){\n \
    \           return -1;\n        }\n        else{\n            return a - b;\n\
    \        }\n    });\n    return arr;\n}", "  if (arr.length == 0) {\n    return\
    \ [];\n  }\n  var answer = [];\n  var previous = 0;\n  var current = 0;\n  for\
    \ (var i = 0; i < arr.length; i++) {\n    var count = 0;\n    var numString =\
    \ arr[i].toString(2);\n    for (var j = 0; j < numString.length; j++) {\n    \
    \  if (numString[j] == \"1\") {\n        count++;\n      }\n    }\n    if (count\
    \ > previous) {\n      previous = count;\n      answer.push(arr[i]);\n    } else\
    \ if (count == previous) {\n      answer.push(arr[i]);\n    } else {\n      answer.unshift(arr[i]);\n\
    \    }\n  }\n  return answer;\n}", "    arr.sort(function(a, b){\n        var\
    \ a1 = Number(a).toString(2).split('').filter(function(x){return x==='1'}).length,\n\
    \            b1 = Number(b).toString(2).split('').filter(function(x){return x==='1'}).length;\n\
    \        if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n\
    \    });\n    return arr;\n}", "    function toBinary(n){\n        return Number(n).toString(2);\n\
    \    }\n    return arr.sort((a,b)=>{\n        var aOnes = toBinary(a).split('1').length-1;\n\
    \        var bOnes = toBinary(b).split('1').length-1;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}",
  "    const sortBinary = (a, b) => {\n        let aBin = a.toString(2).split('').filter(digit\
    \ => digit === '1').length;\n        let bBin = b.toString(2).split('').filter(digit\
    \ => digit === '1').length;\n        if (aBin === bBin) {\n            return\
    \ a - b;\n        }\n        return aBin - bBin;\n    }\n    return arr.sort(sortBinary);\n\
    }", "  return arr.sort((a, b) => (a.toString(2).match(/1/g) || []).length > (b.toString(2).match(/1/g)\
    \ || []).length ? 1 : -1);\n}", "  if(!arr || arr.length == 0){\n    return [];\n\
    \  }\n  return arr.sort(function(a, b){\n    var s1 = toBinary(a);\n    var s2\
    \ = toBinary(b);\n    if(s1.length == s2.length){\n      return a - b;\n    }\n\
    \    return s1.length - s2.length;\n  });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        const aa = a.toString(2).split('').filter(e => e === '1').length;\n\
    \        const bb = b.toString(2).split('').filter(e => e === '1').length;\n \
    \       return aa === bb ? a - b : aa - bb;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const binaryA = Number(a).toString(2).split('').filter(a =>\
    \ a === '1').length;\n        const binaryB = Number(b).toString(2).split('').filter(a\
    \ => a === '1').length;\n        if (binaryA === binaryB) {\n            return\
    \ a - b;\n        }\n        return binaryA - binaryB;\n    });\n}\n", "    function\
    \ decimalToBinary(decimal){\n        let reminder = decimal % 2;\n        let\
    \ quotient = Math.floor(decimal / 2);\n        return quotient === 0 ? reminder\
    \ : decimalToBinary(quotient) + reminder;\n    }\n    return arr.sort((a, b) =>\
    \ {\n        let aBinary = decimalToBinary(a);\n        let bBinary = decimalToBinary(b);\n\
    \        let aOnes = 0;\n        let bOnes = 0;\n        for(let i = 0; i < aBinary.length;\
    \ i++){\n            if(aBinary[i] === '1'){\n                aOnes++\n      \
    \      }\n        }\n        for(let i = 0; i < bBinary.length; i++){\n      \
    \      if(bBinary[i] === '1'){\n                bOnes++\n            }\n     \
    \   }\n        if(aOnes > bOnes){\n            return 1;\n        } else if(aOnes\
    \ < bOnes){\n            return -1;\n        } else {\n            return a -\
    \ b;\n        }\n    })\n}\n", "    const oneCount = x => [...x.toString(2)].filter(y\
    \ => y === '1').length;\n    return arr.sort((a, b) => {\n        const c = oneCount(a)\
    \ - oneCount(b);\n        return c === 0 ? a - b : c;\n    });\n}", "    let numArr\
    \ = arr.map(num => {\n        return {\n            num,\n            binary :\
    \ num.toString(2).split('').filter(num => num === '1').length\n        }\n   \
    \ });\n    numArr.sort((a, b) => {\n        if(a.binary < b.binary) {\n      \
    \      return -1;\n        } else if(a.binary > b.binary) {\n            return\
    \ 1;\n        } else {\n            return a.num - b.num;\n        }\n    });\n\
    \    return numArr.map(num => num.num);\n}", "    var ret = [];\n    var counter\
    \ = {};\n    var count = 0;\n    var nums = arr.slice();\n    nums.sort(function(a,\
    \ b){return a - b});\n    for(var i = 0; i < nums.length; i++){\n        var num\
    \ = nums[i];\n        for(var j = 0; j < 32; j++){\n            if(num & (1 <<\
    \ j)){\n                count++;\n            }\n        }\n        if(counter[count]\
    \ === undefined){\n            counter[count] = [num];\n        }else{\n     \
    \       counter[count].push(num);\n        }\n        count = 0;\n    }\n    for(var\
    \ k in counter){\n        for(var n = 0; n < counter[k].length; n++){\n      \
    \      ret.push(counter[k][n]);\n        }\n    }\n    return ret;\n}\n", "  \
    \  let a = arr.sort((a,b)=>{\n        let binA = a.toString(2).match(/1/g),\n\
    \            binB = b.toString(2).match(/1/g);\n        return binA ? (binB ?\
    \ binA.length - binB.length : -1) : 1;\n    });\n    return a;\n}\n", "  return\
    \ arr.sort((a, b) => {\n    if (a.toString(2).match(/1/g) === null && b.toString(2).match(/1/g)\
    \ === null) {\n      return a - b;\n    } else if (a.toString(2).match(/1/g) ===\
    \ null) {\n      return -1;\n    } else if (b.toString(2).match(/1/g) === null)\
    \ {\n      return 1;\n    } else if (a.toString(2).match(/1/g).length === b.toString(2).match(/1/g).length)\
    \ {\n      return a - b;\n    } else {\n      return a.toString(2).match(/1/g).length\
    \ - b.toString(2).match(/1/g).length;\n    }\n  });\n}\n", "    var array = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(arr[i] < 0){\n         \
    \   array.push(arr[i]);\n        }\n    }\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] >= 0){\n            array.push(arr[i]);\n        }\n\
    \    }\n    return array;\n}\nvar sorted = sort_array([-2, -3, -4, -5, -6]);",
  "    let onesCount = [];\n    for(let i = 0; i < arr.length; i++){\n        let\
    \ n = arr[i];\n        let binary = n.toString(2);\n        let ones = 0;\n  \
    \      for(let j = 0; j < binary.length; j++){\n            if(binary[j] === '1')\
    \ ones++;\n        }\n        onesCount.push(ones);\n    }\n    let tempArr =\
    \ [];\n    for(let i = 0; i < arr.length; i++){\n        if(tempArr[onesCount[i]]\
    \ === undefined) tempArr[onesCount[i]] = [];\n        tempArr[onesCount[i]].push(arr[i]);\n\
    \    }\n    let sorted = [];\n    for(let i = 0; i < tempArr.length; i++){\n \
    \       if(tempArr[i] !== undefined){\n            tempArr[i].sort((a, b) => a\
    \ - b);\n            sorted = sorted.concat(tempArr[i]);\n        }\n    }\n \
    \   return sorted;\n}", "  arr.sort(function(a, b){\n    var aOnes = (a >>> 0).toString(2).split('1').length\
    \ - 1;\n    var bOnes = (b >>> 0).toString(2).split('1').length - 1;\n    if(aOnes\
    \ == bOnes){\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n \
    \ return arr;\n}\n", "    let counter = arr.map(x => x.toString(2).match(/1/g).length);\n\
    \    return arr.sort((a, b) => counter[arr.indexOf(a)] > counter[arr.indexOf(b)]\
    \ ? 1 : -1);\n}", "    var numberOfOnes = function(num){\n        var binary =\
    \ num.toString(2);\n        var numOfOnes = 0;\n        for(var i = 0; i < binary.length;\
    \ i++){\n            if(binary[i] === '1'){\n                numOfOnes++;\n  \
    \          }\n        }\n        return numOfOnes;\n    };\n    arr.sort(function(a,\
    \ b){\n        var aOnes = numberOfOnes(a);\n        var bOnes = numberOfOnes(b);\n\
    \        if(aOnes < bOnes){\n            return -1;\n        }\n        if(aOnes\
    \ > bOnes){\n            return 1;\n        }\n        if(aOnes === bOnes){\n\
    \            if(a < b){\n                return -1;\n            }\n         \
    \   if(a > b){\n                return 1;\n            }\n        }\n        return\
    \ 0;\n    });\n    return arr;\n}\n", "  let obj = {};\n  let result = [];\n \
    \ arr.forEach(el => {\n    let binary = el.toString(2);\n    let ones = binary.split('1').length\
    \ - 1;\n    if (obj[ones]) {\n      obj[ones].push(el);\n    } else {\n      obj[ones]\
    \ = [el];\n    }\n  });\n  for (let i = 0; i < arr.length; i++) {\n    if (obj[i])\
    \ {\n      result = result.concat(obj[i].sort((a, b) => a - b));\n    }\n  }\n\
    \  return result;\n}\n", "  let len = arr.length;\n  let binary_arr = [];\n  let\
    \ result = [];\n  for(let i = 0; i < len; i++){\n    binary_arr.push(arr[i].toString(2));\n\
    \  }\n  for(let i = 0; i < len; i++){\n    let temp = binary_arr[i].match(/1/g);\n\
    \    result.push(temp ? temp.length : 0);\n  }\n  for(let i = 0; i < len; i++){\n\
    \    for(let j = i + 1; j < len; j++){\n      if(result[i] > result[j]){\n   \
    \     [result[i], result[j]] = [result[j], result[i]];\n        [arr[i], arr[j]]\
    \ = [arr[j], arr[i]];\n      }\n      else if(result[i] === result[j]){\n    \
    \    if(arr[i] > arr[j]){\n          [arr[i], arr[j]] = [arr[j], arr[i]];\n  \
    \      }\n      }\n    }\n  }\n  return arr;\n}\n", "  var result = [];\n  var\
    \ temp = [];\n  for(var i = 0; i < arr.length; i++){\n    var binary = arr[i].toString(2);\n\
    \    var count = 0;\n    for(var j = 0; j < binary.length; j++){\n      if(binary[j]\
    \ === '1'){\n        count++;\n      }\n    }\n    temp.push(count);\n  }\n  var\
    \ temp2 = arr.slice(0);\n  while(temp.length > 0){\n    var largest = temp[0];\n\
    \    var index = 0;\n    for(var k = 0; k < temp.length; k++){\n      if(temp[k]\
    \ > largest){\n        largest = temp[k];\n        index = k;\n      }\n    }\n\
    \    result.push(temp2[index]);\n    temp.splice(index, 1);\n    temp2.splice(index,\
    \ 1);\n  }\n  return result;\n}", "    arr.sort(function(a, b){\n        var getOnes\
    \ = function(val){\n            var ones = 0;\n            while(val > 0){\n \
    \               ones += val & 1;\n                val >>= 1;\n            }\n\
    \            return ones;\n        };\n        var aOnes = getOnes(a);\n     \
    \   var bOnes = getOnes(b);\n        if(aOnes !== bOnes){\n            return\
    \ aOnes - bOnes;\n        }\n        return a - b;\n    });\n    return arr;\n\
    }", "    var counter = 0;\n    var arr2 = arr.map(function(num){\n        var\
    \ str = num.toString(2);\n        for(var i = 0; i < str.length; i++){\n     \
    \       if(str[i] == 1){\n                counter++\n            }\n        }\n\
    \        return counter;\n    });\n    var arr3 = [];\n    var length = Math.max.apply(null,\
    \ arr2);\n    for(var i = 0; i <= length; i++){\n        arr3.push([]);\n    }\n\
    \    for(var i = 0; i < arr2.length; i++){\n        arr3[arr2[i]].push(arr[i]);\n\
    \    }\n    var result = [];\n    for(var i = 0; i < arr3.length; i++){\n    \
    \    result = result.concat(arr3[i].sort(function(a, b){\n            return a\
    \ - b;\n        }));\n    }\n    return result;\n}\n", "  return arr.sort((a,\
    \ b) => {\n    const a1s = a.toString(2).split('').filter(i => i === '1').length\n\
    \    const b1s = b.toString(2).split('').filter(i => i === '1').length\n    if\
    \ (a1s === b1s) {\n      return a - b\n    }\n    return a1s - b1s\n  })\n}\n",
  "    return arr.map(function(n){\n        return {\n            'key': n.toString(2).split('').filter(function(n){return\
    \ n == 1;}).length,\n            'value': n\n        };\n    }).sort(function(a,\
    \ b){\n        if(a.key > b.key) return 1;\n        if(a.key < b.key) return -1;\n\
    \        if(a.value > b.value) return 1;\n        if(a.value < b.value) return\
    \ -1;\n        return 0;\n    }).map(function(n){return n.value;});\n}\n", " \
    \   let binaryArray = [];\n    let result = [];\n    arr.forEach(element => {\n\
    \        const binary = parseInt(element, 10).toString(2);\n        const ones\
    \ = (binary.match(/1/g) || []).length;\n        binaryArray.push({\n         \
    \   original: element,\n            binary: binary,\n            ones: ones\n\
    \        });\n    });\n    binaryArray.sort((a, b) => {\n        if (a.ones ===\
    \ b.ones) {\n            return a.original - b.original;\n        }\n        return\
    \ a.ones - b.ones;\n    });\n    binaryArray.forEach(obj => {\n        result.push(obj.original);\n\
    \    });\n    return result;\n}\n", "    var one =[];\n    var two =[];\n    var\
    \ result = [];\n    for(var i = 0; i < arr.length; i++){\n      var binary = arr[i].toString(2);\n\
    \      var count = binary.split('1').length-1;\n      var temp = [];\n      temp.push(arr[i]);\n\
    \      temp.push(count);\n      if(arr[i] < 0){\n        two.push(temp);\n   \
    \   }\n      else{\n        one.push(temp);\n      }\n    }\n    one.sort(function(a,b){\n\
    \      if(a[1] < b[1]){\n        return -1;\n      }\n      else if(a[1] > b[1]){\n\
    \        return 1;\n      }\n      else{\n        if(a[0] < b[0]){\n         \
    \ return -1;\n        }\n        else if(a[0] > b[0]){\n          return 1;\n\
    \        }\n        else{\n          return 0;\n        }\n      }\n    });\n\
    \    two.sort(function(a,b){\n      if(a[1] < b[1]){\n        return -1;\n   \
    \   }\n      else if(a[1] > b[1]){\n        return 1;\n      }\n      else{\n\
    \        if(a[0] < b[0]){\n          return 1;\n        }\n        else if(a[0]\
    \ > b[0]){\n          return -1;\n        }\n        else{\n          return 0;\n\
    \        }\n      }\n    });\n    for(var i = 0; i < one.length; i++){\n     \
    \ result.push(one[i][0]);\n    }\n    for(var i = 0; i < two.length; i++){\n \
    \     result.push(two[i][0]);\n    }\n    return result;\n}", "    let result\
    \ = arr.map(x => {\n        return {\n            val: x,\n            bin: x.toString(2),\n\
    \            one: x.toString(2).split('').filter(x => x === '1').length\n    \
    \    }\n    })\n    result.sort((a, b) => {\n        if (a.one === b.one) {\n\
    \            return a.val - b.val\n        } else {\n            return a.one\
    \ - b.one\n        }\n    })\n    return result.map(x => x.val)\n}\n", "  return\
    \ arr.sort((a, b) => {\n    if (a === b) return 0;\n    a = a.toString(2);\n \
    \   b = b.toString(2);\n    if (a.split('1').length === b.split('1').length) {\n\
    \      return a - b;\n    }\n    return a.split('1').length - b.split('1').length;\n\
    \  });\n}", "    let ones = arr.map(function(num){\n        return (num).toString(2).match(/1/g).length;\n\
    \    });\n    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(ones[i] === 0){\n            arr1.push(arr[i]);\n\
    \        }\n        else if(ones[i] === 1){\n            arr2.push(arr[i]);\n\
    \        }\n        else{\n            arr3.push(arr[i]);\n        }\n    }\n\
    \    arr1.sort(function(a, b){\n        return a - b;\n    });\n    arr2.sort(function(a,\
    \ b){\n        return a - b;\n    });\n    arr3.sort(function(a, b){\n       \
    \ return a - b;\n    });\n    return arr1.concat(arr2).concat(arr3);\n}", "  \
    \  return arr.sort((a, b) => {\n        let countA = parseInt(a).toString(2).split('1').length\
    \ - 1;\n        let countB = parseInt(b).toString(2).split('1').length - 1;\n\
    \        if (countA > countB) return 1;\n        if (countA < countB) return -1;\n\
    \        if (countA === countB) {\n            if (a > b) return 1;\n        \
    \    if (a < b) return -1;\n        }\n        return 0;\n    });\n}\n", "   \
    \ let result = [];\n    let zeroArr = [];\n    let oneArr = [];\n    let twoArr\
    \ = [];\n    let binArray = [];\n    for(let i = 0; i < arr.length; i++){\n  \
    \      if(arr[i] === 0){\n            zeroArr.push(arr[i]);\n        }\n     \
    \   else{\n            binArray.push(arr[i].toString(2));\n        }\n    }\n\
    \    for(let i = 0; i < binArray.length; i++){\n        if(binArray[i].match(/1/g).length\
    \ === 1){\n            oneArr.push(binArray[i]);\n        }\n        else{\n \
    \           twoArr.push(binArray[i]);\n        }\n    }\n    oneArr.sort(function(a,\
    \ b){return a - b});\n    twoArr.sort(function(a, b){return a - b});\n    binArray\
    \ = oneArr.concat(twoArr);\n    for(let i = 0; i < binArray.length; i++){\n  \
    \      result.push(parseInt(binArray[i], 2));\n    }\n    return zeroArr.concat(result);\n\
    }\n", "    return arr.sort((a, b) => a.toString(2).split('').filter(x => x ===\
    \ '1').length - b.toString(2).split('').filter(x => x === '1').length || a - b);\n\
    }", "  if(arr.length < 2) return arr;\n  var ones = [];\n  var zeros = [];\n \
    \ var temp = [];\n  for(var i = 0; i < arr.length; i++){\n    var b = arr[i].toString(2);\n\
    \    var count = b.split('').filter(function(a){\n      return parseInt(a) ===\
    \ 1;\n    }).length;\n    if(count){\n      if(!ones[count]) ones[count] = [];\n\
    \      ones[count].push(arr[i]);\n    } else {\n      zeros.push(arr[i]);\n  \
    \  }\n  }\n  for(var i = 0; i < ones.length; i++){\n    if(ones[i]) temp = temp.concat(ones[i].sort(function(a,\
    \ b){\n      return a - b;\n    }));\n  }\n  return temp.concat(zeros.sort(function(a,\
    \ b){\n    return a - b;\n  }));\n}\n", "    let arr1 = arr.slice();\n    arr1.sort((a,\
    \ b) => {\n        let aBin = convertToBinary(a);\n        let bBin = convertToBinary(b);\n\
    \        if (countOnes(aBin) < countOnes(bBin)) {\n            return -1;\n  \
    \      } else if (countOnes(aBin) > countOnes(bBin)) {\n            return 1;\n\
    \        } else {\n            return a-b;\n        }\n    });\n    return arr1;\n\
    }\n", "    return arr.sort((a, b) => {\n        let c = a.toString(2).split('').filter(d\
    \ => d == 1).length;\n        let d = b.toString(2).split('').filter(d => d ==\
    \ 1).length;\n        if (c > d) return 1;\n        if (c < d) return -1;\n  \
    \      if (c == d) {\n            if (a > b) return 1;\n            if (a < b)\
    \ return -1;\n        }\n    });\n}", "  return arr.sort((a, b) => {\n    const\
    \ aOneCount = a.toString(2).match(/1/g).length;\n    const bOneCount = b.toString(2).match(/1/g).length;\n\
    \    if (aOneCount === bOneCount) {\n      return a - b;\n    }\n    return aOneCount\
    \ - bOneCount;\n  });\n}\n", "    return arr.sort((a, b) => {\n        if (a ==\
    \ b) return 0;\n        let binaA = (a >>> 0).toString(2);\n        let binaB\
    \ = (b >>> 0).toString(2);\n        let countA = binaA.split('1').length - 1;\n\
    \        let countB = binaB.split('1').length - 1;\n        if (countA == countB)\
    \ {\n            return a - b;\n        }\n        return countA - countB;\n \
    \   });\n}\n", "    let oneArr = [];\n    let zeroArr = [];\n    let result =\
    \ [];\n    arr.forEach(function(item){\n        if(item === 0)\n            zeroArr.push(item);\n\
    \        else if(item < 0)\n            result.push(item);\n        else\n   \
    \         oneArr.push(item);\n    });\n    oneArr.sort(function(a, b){\n     \
    \   return getCountOne(a) - getCountOne(b);\n    });\n    result = result.concat(zeroArr,\
    \ oneArr);\n    return result;\n}\n", "    return arr.sort((a, b) =>  (a.toString(2).split('1').length\
    \ - b.toString(2).split('1').length) || (a - b));\n}", "  return arr.sort((a,\
    \ b) => {\n    let ones_a = a.toString(2).match(/1/g).length;\n    let ones_b\
    \ = b.toString(2).match(/1/g).length;\n    if (ones_a === ones_b) {\n      return\
    \ a - b;\n    } else {\n      return ones_a - ones_b;\n    }\n  });\n}", "   \
    \ var tempArr = arr.slice();\n    tempArr.sort(function(a, b){\n        var aStr\
    \ = String(a).split('');\n        var bStr = String(b).split('');\n        if(aStr.length\
    \ === bStr.length){\n            return a-b;\n        }\n        if(aStr.length\
    \ > bStr.length){\n            for(var i = 0; i < aStr.length - bStr.length; i++){\n\
    \                bStr.unshift('0');\n            }\n        }\n        if(aStr.length\
    \ < bStr.length){\n            for(var i = 0; i < bStr.length - aStr.length; i++){\n\
    \                aStr.unshift('0');\n            }\n        }\n        var aOnes\
    \ = 0;\n        var bOnes = 0;\n        for(var i = 0; i < aStr.length; i++){\n\
    \            if(aStr[i] === '1'){\n                aOnes++;\n            }\n \
    \           if(bStr[i] === '1'){\n                bOnes++;\n            }\n  \
    \      }\n        if(aOnes === bOnes){\n            return a-b;\n        } else\
    \ {\n            return aOnes - bOnes;\n        }\n    });\n    return tempArr;\n\
    }\n", "    let result = [];\n    for (let i = 0; i < arr.length; i++) {\n    \
    \    result.push(arr[i]);\n    }\n    function sortByOne(a, b) {\n        return\
    \ onesInBinary(a) - onesInBinary(b);\n    }\n    function onesInBinary(a) {\n\
    \        let binary = (a >>> 0).toString(2);\n        let ones = 0;\n        for\
    \ (let i = 0; i < binary.length; i++) {\n            if (binary[i] === '1') ones++;\n\
    \        }\n        return ones;\n    }\n    result.sort(sortByOne);\n    return\
    \ result;\n}\n", "    let length = arr.length;\n    for(let i = 0; i < length;\
    \ i++){\n        for(let j = 0; j < length; j++){\n            if(decimalToBinary(arr[i]).toString().split(\"\
    \").filter(num => num === \"1\").length < decimalToBinary(arr[j]).toString().split(\"\
    \").filter(num => num === \"1\").length){\n                let tmp = arr[i];\n\
    \                arr[i] = arr[j];\n                arr[j] = tmp;\n           \
    \ }\n        }\n    }\n    return arr;\n}", "  let numbers = arr.map(x => countOnes(x));\n\
    \  let numbersWithIndex = numbers.map((x, i) => [x, i]);\n  numbersWithIndex.sort((a,\
    \ b) => a[0] - b[0]);\n  let indexs = numbersWithIndex.map(x => x[1]);\n  let\
    \ newArr = [];\n  for (let i = 0; i < indexs.length; i++) {\n    newArr.push(arr[indexs[i]]);\n\
    \  }\n  return newArr;\n}\n", "    // generates number with same amount of 1's\
    \ as the number\n    const generateOnes = (num) => {\n        let result = 0;\n\
    \        for (let i = 0; i < num; i++) {\n            result = (result << 1) +\
    \ 1;\n        }\n        return result;\n    }\n    // generates binary representation\
    \ of number\n    const generateBinary = (num) => {\n        let binary = \"\"\
    ;\n        while (num > 0) {\n            binary = num % 2 + binary;\n       \
    \     num = Math.floor(num / 2);\n        }\n        return binary;\n    }\n \
    \   // generates object for each number with it's binary representation, number\
    \ of 1's and decimal value\n    const generateObj = (num) => {\n        return\
    \ {\n            binary: generateBinary(num),\n            ones: generateOnes(num),\n\
    \            value: num\n        }\n    }\n    // generate objects\n    const\
    \ objArr = arr.map(num => generateObj(num));\n    // sort objects\n    const sortedArr\
    \ = objArr.sort((a, b) => {\n        if (a.ones > b.ones) {\n            return\
    \ 1;\n        } else if (a.ones < b.ones) {\n            return -1;\n        }\
    \ else {\n            if (a.value > b.value) {\n                return 1;\n  \
    \          } else if (a.value < b.value) {\n                return -1;\n     \
    \       } else {\n                return 0;\n            }\n        }\n    });\n\
    \    // return array of decimal values\n    return sortedArr.map(obj => obj.value);\n\
    }", "  const map = new Map();\n  arr.forEach(num => {\n    const ones = (num >>>\
    \ 0).toString(2).split('').filter(n => n === '1').length;\n    if (map.has(ones))\
    \ {\n      map.get(ones).push(num);\n    } else {\n      map.set(ones, [num]);\n\
    \    }\n  });\n  map.forEach(nums => nums.sort((a, b) => a - b));\n  const result\
    \ = [];\n  for (let key of map.keys()) {\n    map.get(key).forEach(num => result.push(num));\n\
    \  }\n  return result;\n}", "    arr.sort(function(a, b){\n        var n = Number(b).toString(2).split(\"\
    \").filter(function(x){return x==\"1\"}).length - Number(a).toString(2).split(\"\
    \").filter(function(x){return x==\"1\"}).length;\n        if(n == 0){\n      \
    \      return b - a;\n        }else{\n            return n;\n        }\n    });\n\
    \    return arr;\n}", "    arr.sort(function(a, b){\n        if (a === b) {\n\
    \            return a - b;\n        }\n        return (toOne(a) - toOne(b));\n\
    \    });\n    return arr;\n}\n", "  var counter = []\n  for(var i = 0; i < arr.length;\
    \ i++){\n    var countOne = 0;\n    for(var j = 0; j < arr[i].toString(2).length;\
    \ j++){\n      if(arr[i].toString(2)[j] == 1){\n        countOne++;\n      }\n\
    \    }\n    counter.push(countOne)\n  }\n  counter.sort(function(a, b){return\
    \ a-b})\n  return counter\n}\n", "\treturn arr.sort(function(a, b){\n\t\tlet a1\
    \ = convertToBinary(a);\n\t\tlet b1 = convertToBinary(b);\n\t\tlet a1Ones = countOnes(a1);\n\
    \t\tlet b1Ones = countOnes(b1);\n\t\treturn a1Ones > b1Ones ? 1 : a1Ones < b1Ones\
    \ ? -1 : a - b;\n\t});\n}\n", "    const arr2 = arr.map(num => {\n        if (num\
    \ < 0) {\n            return [num.toString(2).length, num];\n        } else {\n\
    \            return [num.toString(2).split('').filter(x => x === '1').length,\
    \ num];\n        }\n    });\n    arr2.sort((a, b) => a[0] > b[0] ? 1 : a[0] <\
    \ b[0] ? -1 : a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0);\n    return arr2.map(x\
    \ => x[1]);\n}\n", "    let srtarr = arr.sort((a,b)=>{\n        var ba = a.toString(2);\n\
    \        var bb = b.toString(2);\n        return (bb.split(\"1\").length - ba.split(\"\
    1\").length) || (a - b);\n    });\n    return srtarr;\n}\n", "    let sorted =\
    \ arr.sort((a, b) => {\n        if(countOfOne(a) === countOfOne(b)) return a -\
    \ b;\n        return countOfOne(a) - countOfOne(b);\n    });\n    return sorted;\n\
    }\n", "    return arr.sort((a, b) => {\n        let binaryA = a.toString(2).match(/1/g)\
    \ ? a.toString(2).match(/1/g).length : 0;\n        let binaryB = b.toString(2).match(/1/g)\
    \ ? b.toString(2).match(/1/g).length : 0;\n        return binaryA === binaryB\
    \ ? a - b : binaryA - binaryB;\n    });\n}", "  return arr.sort((a, b) => {\n\
    \    let aOnes = a.toString(2).split('').filter(i => i === '1').length;\n    let\
    \ bOnes = b.toString(2).split('').filter(i => i === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n\
    \    }\n  });\n}", "    const binaryArr = arr.map(num => num.toString(2));\n \
    \   const binaryToSort = binaryArr.map(num => {\n        const numberOfOnes =\
    \ num.split('').filter(value => value === '1').length;\n        return {numberOfOnes,\
    \ num}\n    });\n    const sortedBinary = binaryToSort.sort((a, b) => {\n    \
    \    if (a.numberOfOnes < b.numberOfOnes) {\n            return -1;\n        }\n\
    \        if (a.numberOfOnes > b.numberOfOnes) {\n            return 1;\n     \
    \   }\n        if (a.numberOfOnes === b.numberOfOnes) {\n            if (a.num\
    \ < b.num) {\n                return -1;\n            }\n            if (a.num\
    \ > b.num) {\n                return 1;\n            }\n        }\n        return\
    \ 0;\n    });\n    return sortedBinary.map(num => parseInt(num.num, 2));\n}",
  "    var binary = arr.map(function(e){\n        return {\n            \"value\"\
    : e,\n            \"bin\": e.toString(2).split(\"\").reduce(function(a, b){return\
    \ parseInt(a) + parseInt(b)})\n        }\n    });\n    binary.sort(function(a,\
    \ b){\n        if(a.bin == b.bin){\n            return a.value - b.value;\n  \
    \      }else{\n            return a.bin - b.bin;\n        }\n    });\n    return\
    \ binary.map(function(e){return e.value});\n}\n", "  arr.sort(function(a, b){\n\
    \    var num1 = a.toString(2).split('1').length-1;\n    var num2 = b.toString(2).split('1').length-1;\n\
    \    if(num1 != num2){\n      return num1 - num2;\n    }\n    return a - b;\n\
    \  });\n  return arr;\n}\n", "  var x;\n  for(var i = 0; i < arr.length - 1; i++){\n\
    \    for(var j = i+1; j < arr.length; j++){\n      if(ones(arr[i]) > ones(arr[j])){\n\
    \        x = arr[i];\n        arr[i] = arr[j];\n        arr[j] = x;\n      }else\
    \ if(ones(arr[i]) === ones(arr[j])){\n        if(arr[i] > arr[j]){\n         \
    \ x = arr[i];\n          arr[i] = arr[j];\n          arr[j] = x;\n        }\n\
    \      }\n    }\n  }\n  return arr;\n}\n", "  return arr.sort((a, b) => (countOnes(a)\
    \ > countOnes(b)) ? 1 : ((countOnes(b) > countOnes(a)) ? -1 : ((a > b) ? 1 : -1)));\n\
    }", "  return arr.sort((a, b) => ((a >>> 0).toString(2).split('1').length - (b\
    \ >>> 0).toString(2).split('1').length) || (a - b));\n}\n", "    var num = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        var bin = arr[i].toString(2);\n\
    \        var c = (bin.match(/1/g) || []).length;\n        num.push([arr[i], c]);\n\
    \    }\n    num.sort(function(a, b){\n        if(a[1] > b[1]){\n            return\
    \ 1;\n        }\n        if(a[1] < b[1]){\n            return -1;\n        }\n\
    \        if(a[1] == b[1]){\n            if(a[0] > b[0]){\n                return\
    \ 1;\n            }\n            if(a[0] < b[0]){\n                return -1;\n\
    \            }\n        }\n    });\n    var res = [];\n    for(var j = 0; j <\
    \ num.length; j++){\n        res.push(num[j][0]);\n    }\n    return res;\n}\n",
  "    arr.sort(function(a, b){\n        return (a - b);\n    });\n    return arr;\n\
    }\n", "    let result = arr.sort((a, b) => {\n        let countOnesA = countOnes(a);\n\
    \        let countOnesB = countOnes(b);\n        if (countOnesA === countOnesB)\
    \ {\n            return a - b;\n        }\n        return countOnesA - countOnesB;\n\
    \    });\n    return result;\n}\n", "  arr.sort(function(a, b){\n  if (a === b)\
    \ {\n    return a - b;\n  }\n  if (a % 2 === 0 && b % 2 === 0) {\n    return a\
    \ - b;\n  }\n  if (a % 2 === 0 && b % 2 === 1) {\n    return 1;\n  }\n  if (a\
    \ % 2 === 1 && b % 2 === 0) {\n    return -1;\n  }\n  if (a % 2 === 1 && b % 2\
    \ === 1) {\n    return a - b;\n  }\n});\nreturn arr;\n}\n", "  // sort the array\
    \ with the count of 1's in their binary representation\n  arr.sort(function(a,\
    \ b){\n    let aBinaryStr = a.toString(2);\n    let bBinaryStr = b.toString(2);\n\
    \    let aOnes = 0;\n    let bOnes = 0;\n    for(let i = 0; i < aBinaryStr.length;\
    \ i++){\n      if(aBinaryStr[i] === '1'){\n        aOnes++;\n      }\n    }\n\
    \    for(let i = 0; i < bBinaryStr.length; i++){\n      if(bBinaryStr[i] === '1'){\n\
    \        bOnes++;\n      }\n    }\n    // if the number of 1's are equal, sort\
    \ by the decimal value\n    if(aOnes === bOnes){\n      return a - b;\n    }\n\
    \    return aOnes - bOnes;\n  });\n  return arr;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}", "  if(!arr.length) return arr;\n  arr.sort((a, b) => {\n\
    \    let binaryA = a.toString(2).split('').filter(item => item == '1').length;\n\
    \    let binaryB = b.toString(2).split('').filter(item => item == '1').length;\n\
    \    if(binaryA !== binaryB) return binaryA - binaryB;\n    return a - b;\n  });\n\
    \  return arr;\n}\n", "    let ans = []\n    for(let i = 0; i < arr.length; i++){\n\
    \        let binary = arr[i].toString(2)\n        let temp = 0\n        for(let\
    \ j = 0; j < binary.length; j++){\n            if(binary[j] === '1'){\n      \
    \          temp += 1\n            }\n        }\n        ans.push([temp, arr[i]])\n\
    \    }\n    let final = []\n    ans.sort((a, b) => {\n        if(a[0] === b[0]){\n\
    \            return a[1] - b[1]\n        }\n        return a[0] - b[0]\n    })\n\
    \    for(let i = 0; i < ans.length; i++){\n        final.push(ans[i][1])\n   \
    \ }\n    return final\n}", "    return arr.map(item => {\n        item = item.toString(2).split('');\n\
    \        let sum = 0;\n        item.forEach(item => {\n            sum += parseInt(item);\n\
    \        });\n        return {\n            \"key\": sum,\n            \"val\"\
    : item.join('')\n        }\n    }).sort((a, b) => {\n        if (a.key > b.key)\
    \ {\n            return 1;\n        } else if (a.key < b.key) {\n            return\
    \ -1;\n        } else {\n            if (parseInt(a.val, 2) > parseInt(b.val,\
    \ 2)) {\n                return 1;\n            } else if (parseInt(a.val, 2)\
    \ < parseInt(b.val, 2)) {\n                return -1;\n            } else {\n\
    \                return 0;\n            }\n        }\n    }).map(item => {\n \
    \       return parseInt(item.val, 2);\n    });\n}\n", "  var dict = {};\n  var\
    \ sorted = [];\n  var tmp = [];\n  for(var i = 0; i < arr.length; i++){\n    var\
    \ oneCount = 0;\n    var b = arr[i].toString(2);\n    for(var j = 0; j < b.length;\
    \ j++){\n      if(b[j] === '1'){\n        oneCount += 1;\n      }\n    }\n   \
    \ if(!dict[oneCount]){\n      dict[oneCount] = [arr[i]];\n    } else {\n     \
    \ dict[oneCount].push(arr[i]);\n    }\n  }\n  for(var j = 0; j < Object.keys(dict).length;\
    \ j++){\n    tmp = dict[Object.keys(dict)[j]];\n    tmp.sort(function(a, b){\n\
    \      return a - b;\n    });\n    sorted = sorted.concat(tmp);\n  }\n  return\
    \ sorted;\n}\n", "  var binArray = arr.map(function(elem){\n    var count = 0;\n\
    \    elem.toString(2).split('').forEach(function(num){\n      if(num === '1'){\n\
    \        count++;\n      }\n    });\n    return count;\n  });\n  // console.log(binArray);\n\
    \  var sortedBin = binArray.slice().sort(function(a,b){\n    return a - b;\n \
    \ });\n  // console.log(sortedBin);\n  var result = [];\n  sortedBin.forEach(function(number){\n\
    \    var index = binArray.indexOf(number);\n    // console.log(index);\n    result.push(arr[index]);\n\
    \    binArray[index] = NaN;\n  });\n  return result;\n}", "  return arr.sort((a,\
    \ b) => {\n    a = a.toString(2);\n    b = b.toString(2);\n    if (a.match(/1/g)\
    \ === null) a = 0;\n    else a = a.match(/1/g).length;\n    if (b.match(/1/g)\
    \ === null) b = 0;\n    else b = b.match(/1/g).length;\n    if (a === b) return\
    \ a - b;\n    return a - b;\n  });\n}", "    return arr.map(function(item){\n\
    \        var binary = item.toString(2);\n        var decimal = item;\n       \
    \ var count = 0;\n        for(var i = 0; i < binary.length; i++){\n          \
    \  if(binary[i] === '1'){\n                count++;\n            }\n        }\n\
    \        return {binary:binary, decimal:decimal, count:count};\n    }).sort(function(a,\
    \ b){\n        if(a.count < b.count){\n            return -1;\n        }\n   \
    \     if(a.count > b.count){\n            return 1;\n        }\n        if(a.decimal\
    \ < b.decimal){\n            return -1;\n        }\n        if(a.decimal > b.decimal){\n\
    \            return 1;\n        }\n        return 0;\n    }).map(function(item){\n\
    \        return item.decimal;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        if (count_ones(a) !== count_ones(b)) {\n            return count_ones(a)\
    \ - count_ones(b);\n        } else {\n            return a - b;\n        }\n \
    \   });\n}\n", "    let array = arr.slice();\n    return array.sort((a, b) =>\
    \ {\n        let binA = a.toString(2).replace(/0/g, '').length;\n        let binB\
    \ = b.toString(2).replace(/0/g, '').length;\n        if (binA === binB) {\n  \
    \          return a - b;\n        }\n        return binA - binB;\n    });\n}\n",
  "  var arrMap = arr.map(val => {\n    return {\n      val: val,\n      bitStr: (val\
    \ >>> 0).toString(2)\n    }\n  });\n  return arrMap.sort((a, b) => {\n    var\
    \ aOnes = countOnes(a.bitStr);\n    var bOnes = countOnes(b.bitStr);\n    if (aOnes\
    \ > bOnes) {\n      return 1;\n    } else if (aOnes < bOnes) {\n      return -1;\n\
    \    } else {\n      return a.val - b.val;\n    }\n  }).map(val => val.val);\n\
    }\n", "    return arr.sort((a, b) => bitCount(a) - bitCount(b) || a - b);\n}\n",
  "    let bit = [];\n    let nonBit = [];\n    let result = [];\n    arr.map(item\
    \ => {\n        let temp = item.toString(2);\n        temp.split('').filter(el\
    \ => el === '1').length > 0 ? bit.push(item) : nonBit.push(item);\n    });\n \
    \   bit.sort((a, b) => {\n        let onesInBitA = a.toString(2).split('').filter(el\
    \ => el === '1').length;\n        let onesInBitB = b.toString(2).split('').filter(el\
    \ => el === '1').length;\n        if (onesInBitA === onesInBitB) {\n         \
    \   return a - b;\n        } else {\n            return onesInBitA - onesInBitB;\n\
    \        }\n    });\n    nonBit.sort((a, b) => a - b);\n    nonBit.concat(bit).map(el\
    \ => result.push(el));\n    return result;\n}", "    let result = [];\n    let\
    \ tempArr = [];\n    let mapper = arr.map(binNumber);\n    mapper.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    mapper.forEach(function(n){\n\
    \        tempArr.push(n[1]);\n    });\n    tempArr.forEach(function(n){\n    \
    \    result.push(parseInt(n, 2));\n    });\n    return result;\n}\n", "  let binaryArr\
    \ = arr.map(n=>n.toString(2))\n  binaryArr.sort((a,b)=>onesCount(a)-onesCount(b))\n\
    \  let decimalArr = binaryArr.map(x=>parseInt(x,2))\n  return decimalArr\n}\n",
  "    // First, we need to find how many 1s are in a number\n    function numOfOnes(n){\n\
    \        // We can do this by converting the number to a binary string and counting\
    \ the '1's\n        const binary = n.toString(2);\n        let count = 0;\n  \
    \      for(let i = 0; i < binary.length; i++){\n            if(binary[i] === '1'){\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    // Now that we have this function, we can sort based on the number\
    \ of ones\n    // First we will sort the numbers in pairs (count, number)\n  \
    \  let numPairs = [];\n    for(let i = 0; i < arr.length; i++){\n        let num\
    \ = arr[i];\n        numPairs.push([numOfOnes(num), num]);\n    }\n    // Then\
    \ we will sort these pairs using the sort function with a callback\n    numPairs.sort((a,\
    \ b) => {\n        // If the number of ones are the same, we will sort in increasing\
    \ order\n        if(a[0] === b[0]){\n            return a[1] - b[1];\n       \
    \ }\n        // Otherwise, sort based on number of ones\n        return a[0] -\
    \ b[0];\n    });\n    // Then we will remove the binary number of ones and return\
    \ the numbers in an array\n    let result = [];\n    for(let i = 0; i < numPairs.length;\
    \ i++){\n        result.push(numPairs[i][1]);\n    }\n    return result;\n}",
  "    let bin = arr.map(val => val.toString(2));\n    let sorted = arr.sort((a, b)\
    \ => {\n        let onesA = countOnes(a);\n        let onesB = countOnes(b);\n\
    \        if (onesA > onesB) return 1;\n        if (onesA < onesB) return -1;\n\
    \        return a - b;\n    });\n    return sorted;\n}\n", "    return arr.sort((a,\
    \ b) => (a.toString(2).match(/1/g) || []).length - (b.toString(2).match(/1/g)\
    \ || []).length)\n}", "    var dec = arr.slice().sort((a,b) => a - b);\n    var\
    \ bin = dec.slice().map(i => i.toString(2));\n    var ones = bin.slice().map(i\
    \ => i.split(\"1\").length - 1);\n    return dec.slice().sort((a,b) => ones[dec.indexOf(a)]\
    \ - ones[dec.indexOf(b)]);\n}", "    return arr.sort((a, b) => {\n        let\
    \ binA = a.toString(2).match(/1/g);\n        let binB = b.toString(2).match(/1/g);\n\
    \        if (!binA) {\n            binA = [];\n        }\n        if (!binB) {\n\
    \            binB = [];\n        }\n        if (binA.length === binB.length) {\n\
    \            return a - b;\n        }\n        return binA.length - binB.length;\n\
    \    });\n}", "  return arr.sort((a, b) => {\n    let onesA = a.toString(2).split('').filter(num\
    \ => num === '1').length\n    let onesB = b.toString(2).split('').filter(num =>\
    \ num === '1').length\n    if (onesA < onesB) {\n      return -1\n    } else if\
    \ (onesA > onesB) {\n      return 1\n    } else {\n      return a - b\n    }\n\
    \  })\n}\n", "  return arr.sort((a, b) => {\n    const bitA = a.toString(2).match(/1/g).length;\n\
    \    const bitB = b.toString(2).match(/1/g).length;\n    return bitA - bitB ||\
    \ a - b;\n  });\n}", "  return arr.sort((a, b) => getBinary(a).length - getBinary(b).length\
    \ || a - b);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

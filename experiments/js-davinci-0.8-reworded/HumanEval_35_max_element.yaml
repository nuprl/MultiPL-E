name: HumanEval_35_max_element
language: js
prompt: "//Return maximum element in the array.\n// >>> max_element([1, 2, 3])\n//\
  \ 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n// 123\nfunction\
  \ max_element(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = max_element;\n  assert.deepEqual(candidate([1, 2, 3]),3);\n  assert.deepEqual(candidate([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]),124);\n}\n\ntest();"
completions: ["    return Math.max.apply(null, l);\n}\n", "\treturn Math.max.apply(Math,\
    \ l);\n}\n", "  return l.sort(function(a,b){return b-a})[0];\n}\n", "    var max\
    \ = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n \
    \           max = l[i];\n        }\n    }\n    return max;\n}\n", "  var max =\
    \ l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] > max){\n      max\
    \ = l[i];\n    }\n  }\n  return max;\n}\n", "    // YOUR CODE HERE\n    return\
    \ max(l);\n}\n", "    // YOUR CODE HERE\n}\n", "\treturn Math.max.apply(Math,\
    \ l);\n}\n", "\tlet max = 0;\n\tlet n = l.length;\n\tfor(let i = 0; i < n; i++){\n\
    \t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\t}\n\t}\n\treturn max;\n}\n", "   \
    \ var max = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i] > max){\n\
    \            max = l[i];\n        }\n    }\n    return max;\n}\n", "    return\
    \ Math.max.apply(Math, l);\n}\n", "    var max = l[0];\n    for(var i = 1; i <\
    \ l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n        }\n\
    \    }\n    return max;\n}\n", "    var max=0;\n    for(var i=0;i<l.length;i++){\n\
    \        if(l[i]>max){\n            max=l[i];\n        }\n    }\n    return max;\n\
    }\n", "    // placeholder\n}\n", "    var max = l[0];\n    for(var i = 1; i <\
    \ l.length; i++){\n        if(l[i] > max){\n            max = l[i];\n        }\n\
    \    }\n    return max;\n}", "  var max = l[0];\n  for(i=0; i<l.length; i++){\n\
    \    if(l[i] > max){\n      max = l[i];\n    }\n  }\n  return max;\n}\n", "  \
    \  return Math.max.apply(null, l);\n}\n", "  return Math.max.apply(null, l);\n\
    }\n", "  var max = l[0];\n  for(var i = 1; i < l.length; i++){\n    if(l[i] >\
    \ max){\n      max = l[i];\n    }\n  }\n  return max;\n}", "\tvar max = 0;\n\t\
    for(var i = 0; i < l.length; i++){\n\t\tif(l[i] > max){\n\t\t\tmax = l[i];\n\t\
    \t}\n\t}\n\treturn max;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

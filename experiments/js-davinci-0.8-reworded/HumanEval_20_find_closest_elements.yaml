name: HumanEval_20_find_closest_elements
language: js
prompt: "//From a supplied array of numbers (of length at least two) select and return\
  \ two that are the closest to each\n// other and return them in order (smaller number,\
  \ larger number).\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n\
  // [2.0, 2.2]\n// >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n//\
  \ [2.0, 2.0]\nfunction find_closest_elements(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0,\
  \ 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
  \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
  \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1,\
  \ 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
completions: ["    var closestElements = [];\n    var minDistance = Number.MAX_VALUE;\n\
    \    var distance = 0;\n    for(var i = 0; i < numbers.length; i++){\n       \
    \ for(var j = i + 1; j < numbers.length; j++){\n            distance = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if(distance < minDistance){\n                minDistance\
    \ = distance;\n                closestElements = [numbers[i], numbers[j]];\n \
    \           }\n        }\n    }\n    return closestElements;\n}\n", "    var closest\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        for(var j = i+1;\
    \ j < numbers.length; j++){\n            var x = numbers[i];\n            var\
    \ y = numbers[j];\n            var distance = Math.abs(x-y);\n            if(closest.length\
    \ < 2 || distance < closest[0]){\n                closest = [distance, x, y];\n\
    \            }\n        }\n    }\n    return closest.slice(1);\n}", "    let min\
    \ = Math.abs(numbers[0] - numbers[1]);\n    let closestNumbers = [numbers[0],\
    \ numbers[1]];\n    for (let i = 0; i < numbers.length; i++){\n        for (let\
    \ j = i + 1; j < numbers.length; j++){\n            let diff = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < min){\n                min = diff;\n\
    \                closestNumbers = [numbers[i], numbers[j]];\n            }\n \
    \       }\n    }\n    return closestNumbers;\n}\n", "    var min = Math.abs(numbers[0]\
    \ - numbers[1]);\n    var x = numbers[0];\n    var y = numbers[1];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        for(var j = i + 1; j < numbers.length;\
    \ j++){\n            if(Math.abs(numbers[i] - numbers[j]) < min){\n          \
    \      min = Math.abs(numbers[i] - numbers[j]);\n                x = numbers[i];\n\
    \                y = numbers[j];\n            }\n        }\n    }\n    return\
    \ [x, y];\n}", "    let diff = Math.abs(numbers[0] - numbers[1]);\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        for (let j = i\
    \ + 1; j < numbers.length; j++){\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < diff){\n                diff = Math.abs(numbers[i] - numbers[j]);\n      \
    \          result = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    var index = numbers.length-1;\n    var smallest\
    \ = numbers[index];\n    var second = numbers[index];\n    for(var i = 0; i <\
    \ numbers.length; i++){\n        if(numbers[i] < smallest){\n            smallest\
    \ = numbers[i];\n        }else if(numbers[i] < second){\n            second =\
    \ numbers[i];\n        }\n    }\n    return [smallest, second];\n}\n", "    var\
    \ pos1 = 0;\n    var pos2 = 0;\n    var diff = 0;\n    var small_diff = numbers[1]\
    \ - numbers[0];\n    for (var i = 0; i < numbers.length; i++){\n        for (var\
    \ j = i+1; j < numbers.length; j++){\n            diff = numbers[j] - numbers[i];\n\
    \            if (diff < small_diff){\n                small_diff = diff;\n   \
    \             pos1 = i;\n                pos2 = j;\n            }\n        }\n\
    \    }\n    return [numbers[pos1], numbers[pos2]];\n}\n", "    let result = [];\n\
    \    let flag = false;\n    let closest;\n    let closestsub;\n    let second;\n\
    \    let secondsub;\n    for(let i = 0; i < numbers.length; i++){\n        closest\
    \ = 0;\n        for(let j = 0; j < numbers.length; j++){\n            if(i !=\
    \ j){\n                if(flag == false){\n                    closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                    closestsub = numbers[j];\n             \
    \       flag = true;\n                }\n                else if(Math.abs(numbers[i]\
    \ - numbers[j]) < closest){\n                    closest = Math.abs(numbers[i]\
    \ - numbers[j]);\n                    closestsub = numbers[j];\n             \
    \   }\n            }\n        }\n        flag = false;\n        if(i == 0){\n\
    \            second = closest;\n            secondsub = closestsub;\n        }\n\
    \        else if(closest < second){\n            second = closest;\n         \
    \   secondsub = closestsub;\n        }\n    }\n    result.push(secondsub);\n \
    \   result.push(numbers[numbers.indexOf(secondsub)]);\n    return result;\n}\n",
  "    // Your solution goes here\n    var numbers = [1.0, 2.0, 3.0, 4.0, 5.0, 2.2];\n\
    \    var num1 = Math.min(...numbers);\n    var num2 = num1;\n    for (var i =\
    \ 0; i < numbers.length; i++) {\n        if (numbers[i] - num1 > 0 && numbers[i]\
    \ - num1 < (num2 - num1)) {\n            num2 = numbers[i];\n        }\n    }\n\
    \    var num3 = num1;\n    var num4 = num2;\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers[i] - num3 > 0 && numbers[i] - num3 < (num4 - num3))\
    \ {\n            num4 = numbers[i];\n        }\n    }\n    return [num3, num4];\n\
    }\n", "    let closestDistance = null;\n    let closestNumbers = [];\n    numbers.forEach(function(x,i){\n\
    \        numbers.forEach(function(y,j){\n            let distance = Math.abs(x-y);\n\
    \            if(closestDistance==null || distance<closestDistance){\n        \
    \        closestDistance = distance;\n                closestNumbers = [x,y];\n\
    \            }\n        });\n    });\n    return closestNumbers;\n}\n", "    closest\
    \ = 0;\n    var result = [];\n    for(i = 0; i < numbers.length; i++){\n     \
    \   if (numbers[i+1] != undefined){\n            if(Math.abs(numbers[i] - numbers[i+1])\
    \ < closest || closest == 0){\n                closest = Math.abs(numbers[i] -\
    \ numbers[i+1]);\n                result = [numbers[i], numbers[i+1]];\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "  let closest = Math.abs(numbers[0]\
    \ - numbers[1]);\n  let a = numbers[0];\n  let b = numbers[1];\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    for (let j = i + 1; j < numbers.length; j++)\
    \ {\n      if (Math.abs(numbers[i] - numbers[j]) < closest) {\n        closest\
    \ = Math.abs(numbers[i] - numbers[j]);\n        a = numbers[i];\n        b = numbers[j];\n\
    \      }\n    }\n  }\n  return a > b ? [b, a] : [a, b];\n}\n", "    var result\
    \ = [];\n    var min = Math.abs(numbers[0] - numbers[1]);\n    for (var i = 0;\
    \ i < numbers.length - 1; i++) {\n        var firstNumber = numbers[i];\n    \
    \    var secondNumber = numbers[i + 1];\n        var difference = Math.abs(firstNumber\
    \ - secondNumber);\n        if (difference < min) {\n            min = difference;\n\
    \            result[0] = firstNumber;\n            result[1] = secondNumber;\n\
    \        }\n    }\n    return result;\n}\n\n", "    var closest = (numbers[1]\
    \ - numbers[0]) < 0 ? (numbers[1] - numbers[0]) * -1 : (numbers[1] - numbers[0]);\n\
    \    var array = [];\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = i + 1; j < numbers.length; j++){\n            if( (numbers[j] - numbers[i])\
    \ < 0 ? (numbers[j] - numbers[i]) * -1 : (numbers[j] - numbers[i]) < closest){\n\
    \                closest = (numbers[j] - numbers[i]) < 0 ? (numbers[j] - numbers[i])\
    \ * -1 : (numbers[j] - numbers[i]);\n                array = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return array;\n}", "    var diffs = [];\n\
    \    numbers.sort(function(a, b){return a-b});\n    for (var i = 0; i < numbers.length\
    \ - 1; i++){\n        diffs.push(numbers[i+1] - numbers[i]);\n    }\n    var indexOfSmallest\
    \ = 0;\n    for (var j = 0; j < diffs.length; j++){\n        if (diffs[j] < diffs[indexOfSmallest]){\n\
    \            indexOfSmallest = j;\n        }\n    }\n    var answer = [];\n  \
    \  answer.push(numbers[indexOfSmallest]);\n    answer.push(numbers[indexOfSmallest\
    \ + 1]);\n    return answer;\n}\n", "    if (numbers.length == 2){\n        return\
    \ numbers;\n    }\n    var ret = numbers[0];\n    var closest = numbers[1] - numbers[0];\n\
    \    for (var i = 0; i < numbers.length; i++){\n        for (var j = i + 1; j\
    \ < numbers.length; j++){\n            if (numbers[j] - numbers[i] < closest){\n\
    \                closest = numbers[j] - numbers[i];\n                ret = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return ret;\n}\n", "    var\
    \ closest = 0;\n    var closestNum = 0;\n    var secondNum = 0;\n    var distance\
    \ = numbers[1] - numbers[0];\n    if(numbers.length < 2){\n        return numbers;\n\
    \    }\n\n    for(var i = 1; i < numbers.length; i++){\n        closest = numbers[i]\
    \ - numbers[i-1];\n        if(closest < distance){\n            distance = closest;\n\
    \            closestNum = numbers[i-1];\n            secondNum = numbers[i];\n\
    \        }\n    }\n    return [closestNum, secondNum];\n}\n\n", "  var closest\
    \ = []\n  var difference = numbers[1] - numbers[0]\n  var result = [numbers[0],\
    \ numbers[1]]\n  for (var i = 0; i < numbers.length; i++) {\n    for (var j =\
    \ i + 1; j < numbers.length; j++) {\n      if (numbers[j] - numbers[i] < difference){\n\
    \        difference = numbers[j] - numbers[i]\n        result = [numbers[i], numbers[j]]\n\
    \      }\n    }\n  }\n  return result\n}", "    var min_diff = numbers[0];\n \
    \   var closest_elements = [];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        for(var j = 0; j < numbers.length; j++){\n            if(numbers[i] ===\
    \ numbers[j]){\n                continue;\n            }else if(Math.abs(numbers[i]\
    \ - numbers[j]) < min_diff){\n                min_diff = Math.abs(numbers[i] -\
    \ numbers[j]);\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    if(closest_elements[0] > closest_elements[1]){\n\
    \        closest_elements = [closest_elements[1], closest_elements[0]];\n    }\n\
    \    return closest_elements;\n}\n", "    if (numbers.length<2){\n        return\
    \ null;\n    }\n    else {\n        let diffArr=[];\n        for (let i=0; i<numbers.length-1;\
    \ i++){\n            diffArr.push(Math.abs(numbers[i]-numbers[i+1]));\n      \
    \  }\n        let min=Math.min(...diffArr);\n        let minIndex=diffArr.indexOf(min);\n\
    \        return [numbers[minIndex], numbers[minIndex+1]];\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_43_pairs_sum_to_zero
language: js
prompt: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
  \ true if there are two distinct elements in the array that\n// sum to zero, and\
  \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
  \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
  \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
  // false\nfunction pairs_sum_to_zero(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
  \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
  \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
  \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
  \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
completions: ["    var i = 0\n    while (i < l.length){\n        var j = i+1\n   \
    \     while (j < l.length){\n            if ((l[i] + l[j]) === 0){\n         \
    \       return true\n            }\n            j = j + 1\n        }\n       \
    \ i = i + 1\n    }\n    return false\n}\n", "  for (var i = 0; i < l.length; i++){\n\
    \    for (var j = i+1; j < l.length; j++){\n      if (l[i] + l[j] == 0){\n   \
    \     return true;\n      }\n    }\n  }\n  return false;\n}\n", "    return search_list(l,\
    \ l.length-1);\n}", "\tfor(var i = 0; i < l.length; i++){\n\t\tfor(var j = i+1;\
    \ j < l.length; j++){\n\t\t\tif (l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn false;\n}\n", "\tvar arr = [];\n\tfor(var i = 0; i <\
    \ l.length; i++){\n\t\tfor(var j = 0; j < l.length; j++){\n\t\t\tif(i !== j){\n\
    \t\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\t\tarr.push(l[i], l[j]);\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn arr.length > 0 ? true : false;\n}\n", "    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length; j++){\n\
    \            if(l[i] + l[j] == 0){\n                return true;\n           \
    \ }\n        }\n    }\n    return false;\n}\n", "    function is_zero(x){\n  \
    \      return x === 0;\n    }\n    function is_in_list(x, lst){\n        return\
    \ !is_null(list_ref(lst, x));\n    }\n    function has_both_neg_and_pos(x, lst){\n\
    \        function is_neg(y){\n            return y < 0;\n        }\n        function\
    \ is_pos(y){\n            return y > 0;\n        }\n        return (is_pos(x)\
    \ && is_in_list(x - x, filter(is_neg, lst))) ||\n               (is_neg(x) &&\
    \ is_in_list(x - x, filter(is_pos, lst)));\n    }\n    return accumulate(function(x,\
    \ y){return x || y;}, false, map(has_both_neg_and_pos, l));\n}\n", "    var dict\
    \ = new Object();\n    for(var i=0; i<l.length; i++){\n        var val = l[i];\n\
    \        var comp = -val;\n        if(dict[comp]==true){\n            return true;\n\
    \        }\n        else{\n            dict[val] = true;\n        }\n    }\n \
    \   return false;\n}", "  for (var i = 0; i < l.length - 1; i++){\n    for (var\
    \ j = i + 1; j < l.length; j++){\n      if (l[i] + l[j] === 0){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}", "\tvar accumulator = 0;\n\t\
    var count = 0;\n\twhile (count < l.length){\n\t\tfor (var i = 0; i < l.length;\
    \ i++){\n\t\t\tif (count == i){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse{\n\t\t\
    \t\taccumulator = l[count] + l[i];\n\t\t\t\tif (accumulator == 0){\n\t\t\t\t\t\
    return true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcount += 1;\n\t}\n\treturn false;\n\
    }\n", "    if (l.length < 2) {\n        return false;\n    }\n    // iterate through\
    \ the array at each element\n    // add that element to every other element\n\
    \    // if sum is 0, return true\n    for (let i = 0; i < l.length; i++) {\n \
    \       for (let j = 0; j < l.length; j++) {\n            if (i !== j && l[i]\
    \ + l[j] === 0) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n", "    // make a copy of the list\n    var copy =\
    \ l.slice();\n    // iterate through the list\n    for (var i = 0; i < l.length;\
    \ i++){\n        // for each element in the list, find the opposite\n        var\
    \ target = l[i] * -1;\n        // remove the element from the list\n        var\
    \ index = copy.indexOf(target);\n        if (index > -1){\n            copy.splice(index,\
    \ 1);\n        }\n        // use indexOf to see if the opposite exists in the\
    \ list\n        if (copy.indexOf(target) > -1){\n            return true;\n  \
    \      }\n    }\n    return false;\n}\n", "    // first iterate through the array\n\
    \    for (var i = 0; i < l.length; i++){\n        // if i is 0, start loop at\
    \ i+1, else i + 2 to avoid duplicates\n        if (i === 0){\n            for\
    \ (var j = i + 1; j < l.length; j++){\n                if (l[i] + l[j] === 0){\n\
    \                    return true;\n                }\n            }\n        }\n\
    \        else {\n            for (var j = i + 2; j < l.length; j++){\n       \
    \         if (l[i] + l[j] === 0){\n                    return true;\n        \
    \        }\n            }\n        }\n    }\n    return false;\n}\n", "\tfor(var\
    \ i = 0; i < l.length; i++){\n\t\tfor(var j = 0; j < l.length; j++){\n\t\t\tif(l[i]\
    \ == -l[j] && i != j){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "\tvar i, j;\n\tfor (i = 0; i < l.length; i++){\n\t\tfor (j = i + 1; j <\
    \ l.length; j++){\n\t\t\tif (l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn false;\n}\n", "    // return false if the length of the\
    \ list is less than 2\n    if (l.length < 2) {\n        return false;\n    }\n\
    \n    // create a variable that keeps track of whether or not a pair has been\
    \ found\n    var found_pair = false;\n\n    // sort the list\n    l.sort();\n\n\
    \    // loop through the list\n    for (var i = 0; i < l.length; i++) {\n    \
    \    // set a variable to the value of the current index\n        var current_element\
    \ = l[i];\n\n        // set a variable to the difference between 0 and the value\
    \ at the current index\n        var remaining_value = 0 - current_element;\n\n\
    \        // binary search through the rest of the list to see if the current index\
    \ plus a number add up to 0\n        if (binary_search(l, remaining_value, i))\
    \ {\n            found_pair = true;\n        }\n    }\n\n    return found_pair;\n\
    }\n", "  // YOUR CODE HERE\n}\n", "    for(var i = 0; i < l.length; i++){\n  \
    \      for(var j = 0; j < l.length; j++){\n            if(i != j && l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "    var i;\n    var zerolist = [];\n    for (i = 0; i < l.length;\
    \ i++){\n        if (l[i] === 0){\n            zerolist.push(0);\n        }\n\
    \    }\n    if (zerolist.length >= 2){\n        return true;\n    }\n    else\
    \ {\n        var j;\n        var k;\n        for (j = 0; j < l.length; j++){\n\
    \            for (k = j + 1; k < l.length; k++){\n                if ((l[j] +\
    \ l[k]) === 0){\n                    return true;\n                }\n       \
    \     }\n        }\n        return false;\n    }\n}\n", "\t\n}", "    // your\
    \ code here\n}", "\tfor(var i = 0; i < l.length; i++){\n\t\tfor(var j = i + 1;\
    \ j < l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    // l.sort()\n    // for (let i =\
    \ 0; i < l.length - 1; i++){\n    //     if (l[i] + l[i+1] == 0){\n    //    \
    \     return true\n    //     }\n    // }\n    // return false\n    const els\
    \ = {}\n    for (let i = 0; i < l.length; i++){\n        const el = l[i]\n   \
    \     if (els[el] == null){\n            els[el] = 1\n        }\n        else\
    \ {\n            els[el]++\n        }\n    }\n    for (let i = 0; i < l.length;\
    \ i++){\n        const el = l[i]\n        if (els[-el] >= 1){\n            return\
    \ true\n        }\n    }\n    return false\n}\n", "    //your code here\n    for\
    \ (var i = 0; i < l.length; i++) {\n        for (var j = i + 1; j < l.length;\
    \ j++) {\n            if (l[i] + l[j] === 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n", "    var i = 0;\n \
    \   var j = 1;\n    var found = false;\n    for (i = 0; i < l.length; i++) {\n\
    \        for (j = 1; j < l.length; j++) {\n            if (l[i] + l[j] == 0) {\n\
    \                found = true;\n            }\n        }\n    }\n    return found;\n\
    }\n", "    var arr = [];\n    for(var x=0; x<l.length; x++){\n        for(var\
    \ y=x+1; y<l.length; y++){\n            if(l[x]+l[y] == 0){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}", "\ts = new Set();\n\
    \tfor (i = 0; i < l.length; i++){\n\t\tif (s.has(l[i])){\n\t\t\treturn true;\n\
    \t\t}\n\t\ts.add(-l[i]);\n\t}\n\treturn false;\n}\n", "    // Your code here!\n\
    \    len = l.length;\n    //output = false;\n    for (i = 0; i < len; i++) {\n\
    \        for (j = i + 1; j < len; j++) {\n            if (l[i] + l[j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\n", "  var a = []\n  var b = []\n  for (var i = 0; i < l.length; i++) {\n\
    \    if (l[i] < 0) {\n      a.push(l[i])\n    } else {\n      b.push(l[i])\n \
    \   }\n  }\n  for (var i = 0; i < a.length; i++) {\n    for (var j = 0; j < b.length;\
    \ j++) {\n      if (a[i] + b[j] == 0) {\n        return true\n      }\n    }\n\
    \  }\n  return false\n}\n", "    // your code here\n    /* START SOLUTION */\n\
    \    var new_list = [];\n    for (var i = 0; i < l.length; i++) {\n      for (var\
    \ j = 0; j < l.length; j++) {\n        if (i != j && l[i] + l[j] == 0) {\n   \
    \       return true;\n        }\n      }\n    }\n    return false;\n    /* END\
    \ SOLUTION */\n}\n", "  var i = 0;\n  var count = 0;\n  while (i < l.length){\n\
    \    var j = 0;\n    while (j < l.length){\n      if (i != j && l[i] + l[j] ==\
    \ 0){\n        count += 1;\n      }\n      j++;\n    }\n    i++;\n  }\n  if (count\
    \ > 0){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n", "  l.sort(function(a,\
    \ b){return a-b});\n  var min = 0;\n  var max = l.length - 1;\n  while (min <\
    \ max){\n    if(l[min] + l[max] === 0){\n      return true;\n    } else if (l[min]\
    \ + l[max] < 0){\n      min++;\n    } else {\n      max--;\n    }\n  }\n  return\
    \ false;\n}", "    if (l.length === 1){\n        return false;\n    }\n    for\
    \ (var j = 0; j < l.length; j++) {\n        for (var i = 0; i < l.length; i++)\
    \ {\n            if (l[i] + l[j] === 0 && i !== j) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n", "    for(var i = 0;\
    \ i < l.length; i++){\n        for(var j = i + 1; j < l.length; j++){\n      \
    \      if(l[i] + l[j] == 0){\n                return true;\n            }\n  \
    \      }\n    }\n    return false;\n}\n", "    for(var i = 0; i < l.length - 1;\
    \ i++){\n        for(var j = i + 1; j < l.length; j++){\n            if(l[i] +\
    \ l[j] == 0){\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n", "  // This is the list we'll return.\n  var a = new\
    \ Array();\n  // This is the list of all possible pairs of numbers.\n  var b =\
    \ new Array();\n  for (var i = 0; i < l.length; i++) {\n    for (var j = 0; j\
    \ < l.length; j++) {\n      if (i != j) {\n        b.push([l[i], l[j]]);\n   \
    \   }\n    }\n  }\n  // Now, we just need to see if any of the pairs in b sum\
    \ to zero.\n  for (var i = 0; i < b.length; i++) {\n    if (b[i][0] + b[i][1]\
    \ == 0) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  if (l.length\
    \ < 2) { return false; }\n  var sumDict = {};\n  var subDict = {};\n  var neg;\n\
    \  var pos;\n  for (var i = 0; i < l.length; i++) {\n    neg = 0 - l[i];\n   \
    \ if (sumDict[neg]) { return true; }\n    else {\n      sumDict[l[i]] = true;\n\
    \    }\n  }\n  return false;\n}\n\n", "    for(var i = 0; i < l.length - 1; i++){\n\
    \        for(var j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] ==\
    \ 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "\t//function recieves a list of numbers as input\n\t//returns\
    \ true if there is at least 2 distinct numbers that sum to 0\n\t//else returns\
    \ false\n\t//base case:\n\tif (l.length <= 1){\n\t\treturn false;\n\t}\n\t//method\
    \ 1: iterate through the list\n\t\t//for each number, sum it to the rest of the\
    \ numbers in the list\n\t\t//if that sum is 0, return true\n\t\t//if it gets to\
    \ the end and nothing sums to 0, return false\n\tfor (var i = 0; i < l.length\
    \ - 1; i++){\n\t\tfor (var j = i + 1; j < l.length; j++){\n\t\t\tif (l[i] + l[j]\
    \ === 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}", " \
    \ // if there are not at least two elements in the list, return false\n  if (l.length\
    \ < 2) return false;\n  else {\n    let i = 0;\n    while (i < l.length){\n  \
    \    let j = i + 1;\n      while (j < l.length){\n        if ((l[i] + l[j]) ===\
    \ 0) return true;\n        j = j + 1;\n      }\n      i = i + 1;\n    }\n    return\
    \ false;\n  }\n}\n", "    for(var i = 0; i < l.length; i++) {\n        for(var\
    \ j = 0; j < l.length; j++) {\n            if (i != j && l[i] + l[j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n", "\tfor(var i = 0; i < l.length; i++){\n\t\tfor(var j = i + 1; j < l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn false;\n}\n", "    var dict = {};\n    for (var i = 0; i < l.length;\
    \ i++){\n        var num = l[i];\n        if (dict[num]){\n            return\
    \ true;\n        } else {\n            dict[-num] = num;\n        }\n    }\n \
    \   return false;\n}\n", "    var temp=0;\n    var rtn=false;\n    var i=0;\n\
    \    var j=0;\n    for(i=0;i<l.length;i++){\n        for(j=i+1;j<l.length;j++){\n\
    \            temp=l[i]+l[j];\n            if(temp==0){\n                rtn=true;\n\
    \                break;\n            }\n        }\n    }\n    return rtn;\n}",
  "    const element = l.length;\n    let sum = 0;\n    let found = false;\n    if\
    \ (element > 1){\n        for (let i = 0; i < element; i++) {\n            if\
    \ (l[i] === 0) {\n                return false;\n            }\n            else\
    \ {\n                sum = l[i];\n                for (let j = i+1; j < element;\
    \ j++) {\n                    sum += l[j];\n                    if (sum === 0)\
    \ {\n                        found = true;\n                        break;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return found;\n}\n", "    var hashTable = {};\n    var result = false;\n  \
    \  for(var i = 0; i < l.length; i++){\n        var currentNumber = l[i];\n   \
    \     if(hashTable[currentNumber] == -currentNumber){\n            result = true;\n\
    \            break;\n        }\n        else{\n            hashTable[currentNumber]\
    \ = -currentNumber;\n        }\n    }\n    return result;\n}\n", "    var ht =\
    \ {};\n    for(var i=0; i<l.length; i++){\n        var key = l[i];\n        if(ht[key]\
    \ === undefined){\n            ht[key] = 1;\n        }else{\n            ht[key]\
    \ += 1;\n        }\n    }\n    for(var k in ht){\n        if(ht[k] > 1){\n   \
    \         return true;\n        }\n    }\n    return false;\n}\n", "    if (l.length\
    \ <= 1) {\n        return false;\n    }\n    var res = false;\n    var first =\
    \ l[0];\n    for (var i = 1; i < l.length; i++) {\n        if (first + l[i] ===\
    \ 0) {\n            res = true;\n        }\n    }\n    return res || pairs_sum_to_zero(l.slice(1));\n\
    }\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = 0; j < l.length;\
    \ j++){\n            if(l[i] + l[j] == 0 && i !== j){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n", "    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = 0; j < l.length; j++){\n   \
    \         if(l[i] + l[j] == 0 && i != j){\n                return true;\n    \
    \        }\n        }\n    }\n    return false;\n}\n", "    for(var i = 0; i <\
    \ l.length; i++){\n        for(var j = i+1; j < l.length; j++){\n            if(l[i]\
    \ + l[j] == 0){\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}\n", "  var new_arr = [];\n  for(var i = 0; i < l.length;\
    \ i++){\n    for(var j = i + 1; j < l.length; j++){\n      if(l[i] + l[j] ===\
    \ 0){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  //\
    \ your code here\n}\n", "  var half = {}\n  for (var i = 0; i < l.length; i++){\n\
    \    if (half[l[i]]) {\n      return true\n    }\n    half[-l[i]] = true\n  }\n\
    \  return false\n}\n", "    //initialize an empty object\n    var o = {};\n  \
    \  //convert the input array to a set\n    //then, loop through the set.\n   \
    \ //if the number is not in the object, add it\n    //if the number is in the\
    \ object, return true,\n    //because the number is the opposite of a number in\
    \ the object.\n    var s = new Set(l);\n    for (let num of s){\n        if (num\
    \ == 0 && o[0] >= 2){\n            return true;\n        } else if (num == 0 &&\
    \ o[0] < 2){\n            o[0] = o[0] + 1 || 1;\n        } else if (o[-num]){\n\
    \            return true;\n        } else {\n            o[num] = o[num] + 1 ||\
    \ 1;\n        }\n    }\n    return false;\n}\n", "    return false;\n}", "   \
    \ var count = 0;\n    for(var i = 0; i < l.length; i++){\n        for(var j =\
    \ i+1; j < l.length; j++){\n            if(l[i] + l[j] == 0){\n              \
    \  count++;\n            }\n        }\n    }\n    if(count > 0){\n        return\
    \ true;\n    }\n    else{\n        return false;\n    }\n}\n", "\n}\n\n", "  \
    \  var seen = {};\n    for (var i = 0; i < l.length; i++){\n        seen[l[i]]\
    \ = true;\n    }\n    for (var i = 0; i < l.length; i++){\n        if (seen[l[i]\
    \ * -1]){\n            return true;\n        }\n    }\n    return false;\n}",
  "    for(let i = 0; i < l.length; i++){\n        for(let j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return true;\n  \
    \          }\n        }\n    }\n    return false;\n}", "  let found = false;\n\
    \  let hash = {};\n  for (let i = 0; i < l.length; i++){\n    let cur = l[i];\n\
    \    if (hash[-cur]){\n      found = true;\n    } else {\n      hash[cur] = true;\n\
    \    }\n  }\n  return found;\n}\n", "    //--> Call the pairs_sum_to_n function\
    \ with the following arguments\n    //--> l, the list that contains all the elements\
    \ in the array\n    //--> 0, the number, in this case 0\n    //--> return the\
    \ result of the function call\n    return pairs_sum_to_n(l, 0);\n}\n", "    let\
    \ hashTable = new Array(100)\n    for(let i = 0; i < l.length; i++){\n       \
    \ if(hashTable[Math.abs(l[i])] == undefined){\n            hashTable[Math.abs(l[i])]\
    \ = l[i]\n        }\n        else{\n            return true\n        }\n    }\n\
    \    return false\n}", "    sorted = l.sort();\n    pair = false;\n    for (i\
    \ = 0; i < sorted.length; i++){\n        if (sorted[i] < 0){\n            if (sorted.indexOf(-sorted[i])\
    \ != -1){\n                pair = true;\n            }\n        }\n    }\n   \
    \ return pair;\n}\n", "    l.sort(function(a, b){return a-b});\n    if (l.length\
    \ == 1){\n        return false;\n    }\n    var first = 0;\n    var last = l.length\
    \ - 1;\n    while (first < last){\n        var sum = l[first] + l[last];\n   \
    \     if (sum == 0){\n            return true;\n        }\n        else if (sum\
    \ < 0){\n            first++;\n        }\n        else {\n            last--;\n\
    \        }\n    }\n    return false;\n}\n", "  var result = false;\n  for (var\
    \ i = 0; i < l.length; i++) {\n    for (var j = i+1; j < l.length; j++) {\n  \
    \    if (l[i] + l[j] === 0) {\n        result = true;\n      }\n    }\n  }\n \
    \ return result;\n}\n", "    // YOUR CODE HERE\n    for (var i = 0; i < l.length;\
    \ i++) {\n        for (var j = i + 1; j < l.length; j++) {\n            if (l[i]\
    \ + l[j] === 0) {\n                return true;\n            }\n        }\n  \
    \  }\n    return false;\n}\n", "\t// YOUR CODE HERE\n}\n", "    // check if the\
    \ array is empty or has just one element\n    if (l.length <= 1)\n        return\
    \ false;\n    var n = l.length;\n    // sort the array\n    l.sort();\n    var\
    \ i = 0;\n    var j = n - 1;\n    while (i < j) {\n        var sum = l[i] + l[j];\n\
    \        if (sum == 0)\n            return true;\n        if (sum < 0)\n     \
    \       i++;\n        else\n            j--;\n    }\n    return false;\n}\n",
  "    if (l.length == 1) {\n        return false;\n    }\n    else {\n        for\
    \ (var i = 0; i < l.length; i++) {\n            for (var j = i + 1; j < l.length;\
    \ j++) {\n                if (l[i] + l[j] == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\
    \    }\n}\n", "\tvar testArray = [];\n\tfor (var i = 0; i < l.length; i++) {\n\
    \t\tfor (var j = i+1; j < l.length; j++) {\n\t\t\tif (l[i] + l[j] === 0){\n\t\t\
    \t\ttestArray.push(l[i], l[j]);\n\t\t\t}\n\t\t}\n\t}\n\tif (testArray.length >=\
    \ 2){\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n", "    var\
    \ length = l.length;\n    for(var i = 0; i < length; i++){\n        for(var j\
    \ = i+1; j < length; j++){\n            if(l[i] + l[j] == 0){\n              \
    \  return true;\n            }\n        }\n    }\n    return false;\n}\n", " \
    \   function is_pair(l,x){\n        var result = false;\n        for(var i = 0;\
    \ i < l.length; i++){\n            if (l[i] == -x){\n                result =\
    \ true;\n            }\n        }\n        return result;\n    }\n    var result\
    \ = false;\n    for(var i = 0; i < l.length; i++){\n        if (is_pair(l,l[i])){\n\
    \            result = true;\n        }\n    }\n    return result;\n}\n", "   \
    \ var x=0;\n    var y=0;\n    for(x=0;x<l.length;x++){\n        for(y=x+1;y<l.length;y++){\n\
    \            if(l[x]+l[y]==0){\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n", "    //this is the code for the first\
    \ question//\n    for(var i=0;i<l.length;i++){\n        for(var j=0;j<l.length;j++){\n\
    \            if(l[i]+l[j]==0){\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}", "    var hasZero = false;\n    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = i+1; j < l.length; j++){\n \
    \           if (l[i] + l[j] == 0){\n                hasZero = true;\n        \
    \    }\n        }\n    }\n    return hasZero;\n}\n", "    var result = false;\n\
    \    for(var i = 0; i < l.length; i++){\n        var num = l[i];\n        var\
    \ nums = l.slice(i + 1);\n        if(nums.indexOf(-num) > -1){\n            result\
    \ = true;\n            break;\n        }\n    }\n    return result;\n}\n", " \
    \   for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] == 0){\n                return true;\n   \
    \         }\n        }\n    }\n    return false;\n}\n", "    var myNewSet = new\
    \ Set(l);\n    var len = myNewSet.size;\n    var count = 0;\n    myNewSet.forEach(function(n){\n\
    \        if (myNewSet.has(0-n)){\n            count++;\n        }\n    });\n \
    \   if (count != 0){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }\n}\n", "\tvar length = l.length;\n\tvar result = false;\n\tfor(var i =\
    \ 0; i < length; i++){\n\t\tfor(var j = 0; j < length; j++){\n\t\t\tif(l[i] +\
    \ l[j] == 0 && l[i] !== l[j]){\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return result;\n}\n", "\tvar res = false;\n\tfor(var i = 0; i < l.length - 1;\
    \ i++){\n\t\tfor(var j = i + 1; j < l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\
    \t\t\t\tres = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}", "  var sum = 0;\n\
    \  for(i = 0; i < l.length; i++){\n    for(j = i+1; j < l.length; j++){\n    \
    \  sum = l[i] + l[j];\n      if(sum == 0){\n        return true;\n      }\n  \
    \  }\n  }\n  return false;\n}\n", "  let s = new Set(l);\n  for (let i = 0; i\
    \ < l.length; i++) {\n    if (s.has(-l[i])) {\n      return true;\n    }\n  }\n\
    \  return false;\n}", "  var found = false;\n  var element = 0;\n  for(var i =\
    \ 0; i < l.length; i++){\n    element = l[i];\n    for(var j = i + 1; j < l.length;\
    \ j++){\n      if(element + l[j] === 0){\n        found = true;\n      }\n   \
    \ }\n  }\n  return found;\n}", "    if (l.length == 1){\n        return false;\n\
    \    }\n    for (var i = 0; i < l.length; i++){\n        for (var j = 0; j < l.length;\
    \ j++){\n            if (l[i] + l[j] == 0 && i != j){\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n\n", "  for (var\
    \ i = 0; i < l.length; i++) {\n    for (var j = i + 1; j < l.length; j++) {\n\
    \      if (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n \
    \ return false;\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var\
    \ j = 0; j < l.length; j++){\n            if(l[i] + l[j] == 0){\n            \
    \    return true;\n            }\n        }\n    }\n    return false;\n}\n", " \
    \ // add code here\n  for (var i = 0; i < l.length; i++) {\n    for (var j = i\
    \ + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\n", "    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = 0; j < l.length; j++){\n            if(l[i] + l[j]\
    \ == 0 && i != j){\n                return true;\n            }\n        }\n \
    \   }\n    return false;\n}", "\n}\n\n", "\tvar n = l.length;\n\tfor(var i = 0;\
    \ i < n; i++){\n\t\tfor(var j = i + 1; j < n; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    if (l.length\
    \ < 2) {\n        return false;\n    }\n    for (var i = 0; i < l.length; i++)\
    \ {\n        for (var j = i + 1; j < l.length; j++) {\n            if (l[i] +\
    \ l[j] === 0) {\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}", "    // your code here\n    if (l.length <= 1) {\n   \
    \     return false;\n    } else {\n        let flag = false;\n        for (let\
    \ i = 0; i < l.length; i++) {\n            for (let j = i + 1; j < l.length; j++)\
    \ {\n                if (l[i] + l[j] === 0) {\n                    flag = true;\n\
    \                }\n            }\n        }\n        return flag;\n    }\n}\n",
  "    if (l.length == 1){\n        return false;\n    }\n    else{\n        for (var\
    \ i = 0; i < l.length - 1; i++){\n            for (var j = i + 1; j < l.length;\
    \ j++){\n                if (l[i] + l[j] == 0){\n                    return true;\n\
    \                }\n            }\n        }\n        return false;\n    }\n}\n",
  "    for(var i = 0; i < l.length; i++){\n        for(var j = i+1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] == 0){\n                return true;\n   \
    \         }\n        }\n    }\n    return false;\n}\n", "    // your code here\n\
    \    let new_l = l.sort(function(a, b){return a-b});\n    if (new_l.length <=\
    \ 1){\n        return false;\n    }\n    let length = new_l.length;\n    for (let\
    \ i = 0; i < length; i++){\n        if (binary_search(new_l, -new_l[i]) != -1){\n\
    \            return true;\n        }\n    }\n    return false;\n}\n", "    //\
    \ your code here\n}\n", "    let len = l.length\n    for(let i = 0; i < len; i++)\
    \ {\n        for(let j = i+1; j < len; j++) {\n            if(l[i] + l[j] ===\
    \ 0) {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n", "\tvar i;\n\tfor(i=0;i<l.length;i++){\n\t\tvar j;\n\t\tfor(j=i+1;j<l.length;j++){\n\
    \t\t\tif(l[i]+l[j]==0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = 0; j < l.length;\
    \ j++){\n            if(l[i] + l[j] == 0){\n                return true;\n   \
    \         }\n        }\n    }\n    return false;\n}\n", "    if (l.length < 2)\
    \ {\n        return false;\n    }\n    var m = l.slice(0,l.length-1);\n    var\
    \ x = l.slice(l.length-1);\n    return x.some(function(value){\n        return\
    \ m.some(function(value2){\n            return value+value2 === 0;\n        });\n\
    \    });\n}\n", "    for(var i = 0; i < l.length; i++){\n        var num = l[i];\n\
    \        for(var j = 0; j < l.length; j++){\n            if(l[j] + num === 0 &&\
    \ i !== j){\n                return true;\n            }\n        }\n    }\n \
    \   return false;\n}", "    var flag = 0;\n    for(var i = 0; i < l.length; i++){\n\
    \        for(var j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] ==\
    \ 0){\n                flag = 1;\n                break;\n            }\n    \
    \    }\n    }\n    if(flag == 1){\n        return true;\n    }else{\n        return\
    \ false;\n    }\n}", "    let my_map = new Map();\n    for(let i = 0; i < l.length;\
    \ i++){\n        if(my_map.has(l[i])){\n            my_map.set(l[i], my_map.get(l[i])\
    \ + 1);\n        }\n        else{\n            my_map.set(l[i], 1);\n        }\n\
    \    }\n    for(let elem of my_map.keys()){\n        if(my_map.has(-elem)){\n\
    \            if(elem != 0){\n                return true;\n            }\n   \
    \         else{\n                if(my_map.get(elem) > 1){\n                 \
    \   return true;\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "  for (var i = 0; i < l.length; i++){\n    for (var k = i + 1;\
    \ k < l.length; k++){\n      if ((l[i] + l[k]) === 0){\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}", "    // if (l.length == 1) {\n    //\
    \   return false;\n    // }\n    // // test if the first two elements sum to zero\n\
    \    // if (l[0] + l[1] == 0) {\n    //   return true;\n    // }\n    // // if\
    \ not, recursively call the function with the array sliced to\n    // // discard\
    \ the first element\n    // else {\n    //   return pairs_sum_to_zero(l.slice(1));\n\
    \    // }\n    var sorted = l.sort(function(a, b){return a-b});\n    var i = 0;\n\
    \    var j = l.length - 1;\n    while (i < j) {\n      if (sorted[i] + sorted[j]\
    \ == 0) {\n        return true;\n      }\n      else if (sorted[i] + sorted[j]\
    \ < 0) {\n        i += 1;\n      }\n      else {\n        j -= 1;\n      }\n \
    \   }\n    return false;\n}\n\n", "    if (l.length == 1) {\n        return false;\n\
    \    }\n    for (var i = 0; i < l.length; i++) {\n        for (var j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] == 0) {\n                return\
    \ true;\n            }\n        }\n    }\n    return false;\n}\n", "    if (l.length\
    \ < 2) {\n        return false;\n    }\n    let p = [];\n    for (let i = 0; i\
    \ < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n     \
    \       if (l[i] + l[j] === 0) {\n                p.push(l[i], l[j]);\n      \
    \      }\n        }\n    }\n    if (p.length === 0) {\n        return false;\n\
    \    }\n    return true;\n}\n", "  for (var i = 0; i < l.length; i++){\n    for\
    \ (var j = 0; j < l.length; j++){\n      if (l[i] + l[j] === 0 && i !== j){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n", "    for(var\
    \ i = 0; i < l.length; i++){\n        for(var j = 0; j < l.length; j++){\n   \
    \         if(l[i] + l[j] == 0 && i != j){\n                return true;\n    \
    \        }\n        }\n    }\n    return false;\n}\n", "\tvar zero_pairs = false;\n\
    \tvar i = 0;\n\tvar j = 0;\n\tfor (i = 0; i < l.length; i++){\n\t\tfor (j = i\
    \ + 1; j < l.length; j++){\n\t\t\tif (l[i] + l[j] == 0){\n\t\t\t\tzero_pairs =\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn zero_pairs;\n}\n", "    // insert your\
    \ code here\n    // return true or false\n    let flag = false;\n    let i = 0;\n\
    \    let len = l.length;\n    for(; i < len; i++){\n        let j = i + 1;\n \
    \       for(; j < len; j++){\n            if(l[i] + l[j] === 0){\n           \
    \     flag = true;\n                break;\n            }\n        }\n    }\n\
    \    return flag;\n}\n", "    if (l.length === 0) {\n        return false;\n \
    \   }\n    var m = {};\n    for (var i=0; i<l.length; i++) {\n        var value\
    \ = l[i];\n        if (m[value] === true) {\n            return true;\n      \
    \  }\n        m[-value] = true;\n    }\n    return false;\n}\n", "    var len\
    \ = l.length;\n    for(var i = 0; i < len; i++){\n        for(var j = i + 1; j\
    \ < len; j++){\n            if(l[i] + l[j] == 0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\n", "  var pairs = []\n\
    \  for (var i = 0; i < l.length; i++){\n    for (var k = 0; k < l.length; k++){\n\
    \      if (l[i] + l[k] === 0 && i !== k){\n        var pair = [l[i], l[k]]\n \
    \       pairs.push(pair)\n      }\n    }\n  }\n  if (pairs.length === 0){\n  \
    \  return false\n  } else {\n    return true\n  }\n}", "    for(var i = 0; i <\
    \ l.length; i++) {\n        for(var j = i + 1; j < l.length; j++) {\n        \
    \    if (l[i] + l[j] === 0) {\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\n", "\n}\n", "    l.sort(function(a, b){return\
    \ a-b});\n    var result = false;\n    for(var i = 0; i < l.length; i++){\n  \
    \      for(var j = 0; j < l.length; j++){\n            if(i != j && l[i] + l[j]\
    \ == 0){\n                result = true;\n            }\n        }\n    }\n  \
    \  return result;\n}\n", "    var i = 0;\n    while (i < l.length){\n        var\
    \ j = i + 1;\n        while (j < l.length){\n            if (l[i] + l[j] == 0){\n\
    \                return true;\n            }\n            j++;\n        }\n  \
    \      i++;\n    }\n    return false;\n}\n", "    let i = 0;\n    let j = l.length\
    \ - 1;\n    let zero = 0;\n    let head = l[i];\n    let tail = l[j];\n    while\
    \ (i < j){\n        if (head + tail === zero){\n            return true;\n   \
    \     }\n        else if (head + tail > zero){\n            j -= 1;\n        \
    \    tail = l[j];\n        }\n        else{\n            i += 1;\n           \
    \ head = l[i];\n        }\n    }\n    return false;\n}\n", "    // Your Code Here\n\
    \    // let my_dict = {};\n    let my_dict = new Map();\n    // if(l.length <\
    \ 2){\n    //     return false;\n    // }\n    // return l;\n    //return l.map(x\
    \ => x+1)\n\n    for(let i = 0; i < l.length; i++){\n        let my_num = l[i];\n\
    \        let my_key = -my_num;\n        if(my_dict.has(my_key)){\n           \
    \ return true;\n        }\n        my_dict.set(my_num, 1);\n    }\n    return\
    \ false;\n    // return my_dict;\n}\n", "    if (l.length < 2) {\n        return\
    \ false;\n    }\n    for (var i = 0; i < l.length; i++) {\n        for (var j\
    \ = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n      \
    \          return true;\n            }\n        }\n    }\n    return false;\n}",
  "   // create a set for seen values\n   var seen = new Set();\n   // loop through\
    \ array\n   for (var i = 0; i < l.length; i++){\n   \t\t// for each element in\
    \ array, look for its complement\n   \t\t// if set has element's complement, return\
    \ true\n   \t\t// else add the element to the set\n   \t\tif (seen.has(-l[i])){\n\
    \   \t\t\treturn true;\n   \t\t} else {\n   \t\t\tseen.add(l[i]);\n   \t\t}\n\
    \   }\n   // return false if no complement has been found\n   return false;\n\
    }\n", "    if (l.length <= 1) {\n        return false;\n    }\n    else {\n  \
    \      var result = false;\n        for (var i = 0; i < l.length; i++) {\n   \
    \         for (var j = i + 1; j < l.length; j++) {\n                if (l[i] +\
    \ l[j] === 0) {\n                    result = true;\n                }\n     \
    \       }\n        }\n        return result;\n    }\n}\n", "    // TODO: fill\
    \ in the function body\n    for (var i = 0; i < l.length; i++) {\n      for (var\
    \ j = 0; j < l.length; j++) {\n        if (i !== j && l[i] + l[j] === 0) {\n \
    \         return true;\n        }\n      }\n    }\n    return false;\n}\n", " \
    \   for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j < l.length;\
    \ j++){\n            if(l[i] + l[j] == 0){\n                return true;\n   \
    \         }\n        }\n    }\n    return false;\n}\n", "    let len = l.length\n\
    \    for(let i = 0; i < len; i++){\n        for(let j = i+1; j < len; j++){\n\
    \            if(l[i] + l[j] == 0){\n                return true\n            }\n\
    \        }\n    }\n    return false\n}\n", "    var ret = false;\n    if(l.length\
    \ <= 1){\n        return ret;\n    }\n    for(var i = 0; i < l.length - 1; i++){\n\
    \        for(var j = i + 1; j < l.length; j++){\n            if(l[i] + l[j] ==\
    \ 0){\n                ret = true;\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "  for (var i = 0; i < l.length; i++){\n    for (var j = i+1; j\
    \ < l.length; j++){\n      if (l[i] + l[j] == 0){\n        return true;\n    \
    \  }\n    }\n  }\n  return false;\n}", "  // sort the array first\n  var sortArray\
    \ = l.sort(function(a, b){return a-b});\n  // console.log(sortArray);\n  for (var\
    \ i = 0; i < sortArray.length; i++) {\n    // console.log(sortArray[i]);\n   \
    \ for (var j = i + 1; j < sortArray.length; j++) {\n      if (sortArray[i] + sortArray[j]\
    \ === 0) {\n        // console.log(sortArray[i], sortArray[j]);\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "    // your code here\n\
    \    for (var i = 0; i < l.length; i++) {\n        for (var j = i+1; j < l.length;\
    \ j++) {\n            if(l[i] + l[j] == 0){\n                return true;\n  \
    \          }\n        }\n    }\n    return false;\n}\n", "    var p = {};\n  \
    \  for (var i=0; i<l.length; i++){\n        if (p[l[i]]){\n            return\
    \ true;\n        }\n        p[-l[i]] = true;\n    }\n    return false;\n}", "\t\
    for(var i = 0; i < l.length; i++){\n\t\tfor(var j = i + 1; j < l.length; j++){\n\
    \t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\n", "    var r = false;\n    for(var i = 0; i < l.length; i++){\n\
    \        for(var j = 0; j < l.length; j++){\n            if(i != j && l[i] + l[j]\
    \ == 0){\n                r = true;\n            }\n        }\n    }\n    return\
    \ r;\n}\n", "    return true;\n}\n", "    var set = new Set();\n    for(var i\
    \ = 0; i < l.length; i++){\n        var n = l[i];\n        if(set.has(n)) return\
    \ true;\n        set.add(-n);\n    }\n    return false;\n}", "    if (l.length\
    \ <= 1) {\n        return false;\n    } else {\n        let newList = l.map(x\
    \ => x * -1);\n        console.log(newList);\n        for (let i = 0; i < l.length;\
    \ i++) {\n            for (let j = 0; j < newList.length; j++) {\n           \
    \     if (l[i] === newList[j]) {\n                    return true;\n         \
    \       }\n            }\n        }\n        return false;\n    }\n}\n", "   \
    \ // Your code here\n    return\n}\n", "    var i,j;\n    var ret = false;\n \
    \   for(i=0;i<l.length;i++){\n        for(j=i+1;j<l.length;j++){\n           \
    \ if(l[i]+l[j]==0){\n                ret = true;\n                break;\n   \
    \         }\n        }\n    }\n    return ret;\n}", "    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = i + 1; j < l.length; j++){\n            if(l[i] +\
    \ l[j] == 0){\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}", "    // YOUR CODE HERE\n    // debugger;\n    var k =\
    \ 0;\n    var left = 0;\n    var right = l.length - 1;\n    while (left < right)\
    \ {\n        var total = l[left] + l[right];\n        if (total === 0) {\n   \
    \         k = 1;\n            break;\n        }\n        else if (total > 0) {\n\
    \            right -= 1;\n        }\n        else {\n            left += 1;\n\
    \        }\n    }\n    if (k === 1) {\n        return true;\n    }\n    else {\n\
    \        return false;\n    }\n}\n", "    for(var i = 0; i < l.length; i++){\n\
    \        for(var k = 0; k < l.length; k++){\n            if(i != k && l[i] + l[k]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = i\
    \ + 1; j < l.length; j++){\n            if(l[i] + l[j] == 0){\n              \
    \  return true;\n            }\n        }\n    }\n    return false;\n}\n", " \
    \   for(var i = 0; i < l.length; i++){\n        for(var j = 0; j < l.length; j++){\n\
    \            if(l[i] + l[j] == 0 && i != j){\n                return true;\n \
    \           }\n        }\n    }\n    return false;\n}\n", "\tvar pairs = [];\n\
    \tvar k;\n\tfor(var i = 0; i < l.length; i++){\n\t\tfor(var j = 0; j < l.length;\
    \ j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\tpairs.push(l[i], l[j]);\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn pairs;\n}\n", "    let pair = 0;\n    for(let i = 0; i\
    \ < l.length; i++){\n        for(let j = i + 1; j < l.length; j++){\n        \
    \    if(l[i] + l[j] === 0){\n                pair += 1;\n            }\n     \
    \   }\n    }\n    if(pair > 0){\n        return true;\n    }\n    else{\n    \
    \    return false;\n    }\n}\n", "    // YOUR CODE HERE\n    // l is an array\n\
    \    // uses l.length to get length of array\n    // uses l[i] to access elements\
    \ of array\n    var dict = {};\n    for (var i = 0; i < l.length; i++) {\n   \
    \     dict[l[i]] = 0;\n    }\n    for (var i = 0; i < l.length; i++) {\n     \
    \   if (dict[-l[i]] === 0) {\n            return true;\n        }\n    }\n   \
    \ return false;\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var\
    \ j = 0; j < l.length; j++){\n            if(i != j && l[i] + l[j] == 0){\n  \
    \              return true;\n            }\n        }\n    }\n    return false;\n\
    }\n", "    if (l.length == 1){\n        return false;\n    }\n    var neg_l =\
    \ [];\n    var pos_l = [];\n    for (var i = 0; i < l.length; i++){\n        if\
    \ (l[i] < 0){\n            neg_l.push(l[i]);\n        } else if (l[i] > 0){\n\
    \            pos_l.push(l[i]);\n        }\n    }\n    var neg_hash = {};\n   \
    \ for (var i = 0; i < neg_l.length; i++){\n        neg_hash[neg_l[i]] = true;\n\
    \    }\n    for (var i = 0; i < pos_l.length; i++){\n        if (neg_hash[0 -\
    \ pos_l[i]]){\n            return true;\n        }\n    }\n    return false;\n\
    }", "  // TODO: replace with your implementation\n  return false;\n}\n", "   \
    \ function helper(l, accum, i){\n        if (i == l.length){\n            return\
    \ false;\n        }\n        var accum = accum.filter(x => x == 0 || x + l[i]\
    \ != 0);\n        accum.push(l[i]);\n        return helper(l, accum, i + 1);\n\
    \    }\n    return helper(l, [], 0);\n}\n\n\n", "  for (let i = 0; i < l.length;\
    \ i++) {\n    for (let j = 0; j < l.length; j++) {\n      if (i !== j && l[i]\
    \ + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }", "\tvar flag = false;\n\tfor(var i = 0; i < l.length; i++){\n\t\tfor(var j\
    \ = i + 1; j < l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\tflag = true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn flag;\n}\n", "    var n = l.length;\n    var count\
    \ = 0;\n    var j = 0;\n    var k = 0;\n    for(var i = 0; i < n; i++){\n    \
    \    j = i + 1;\n        while(j < n){\n            if(l[i] + l[j] == 0){\n  \
    \              count++;\n            }\n            j++;\n        }\n    }\n \
    \   if(count > 0){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }\n}\n", "    if (l.length < 2) {\n        return false;\n    }\n    for\
    \ (var i = 0; i < l.length - 1; i++) {\n        for (var j = i + 1; j < l.length;\
    \ j++) {\n            if (l[i] + l[j] === 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}", "\tvar i, j;\n\tfor (i\
    \ = 0; i < l.length; i++){\n\t\tfor (j = i + 1; j < l.length; j++){\n\t\t\tif\
    \ (l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "    if (l.length == 1){\n        return false;\n    }\n    for (var i =\
    \ 0; i < l.length - 1; i++){\n        for (var j = i + 1; j < l.length; j++){\n\
    \            if (l[i] + l[j] == 0){\n                return true;\n          \
    \  }\n        }\n    }\n    return false;\n}\n", "\tfor(var i = 0; i < l.length;\
    \ i++){\n\t\tfor(var j = i + 1; j < l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    if (l.length\
    \ <= 1) return false;\n    var mySet = new Set();\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (mySet.has(l[i])) return true;\n        mySet.add(-l[i]);\n\
    \    }\n    return false;\n}\n", "  //enter your code here\n  for (var i = 0;\
    \ i < l.length; i++) {\n    for (var j = i + 1; j < l.length; j++) {\n      if\
    \ (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n", "    if (l.length < 2) {\n        return false;\n    }\n    for (var i =\
    \ 0; i < l.length; i++) {\n        for (var j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n", "    // your code here\n}\n",
  "    for(var x in l){\n        for(var y in l){\n            if(l[x] + l[y] == 0\
    \ && l[x] != l[y]){\n                return true;\n            }\n        }\n\
    \    }\n    return false;\n}", "    var nums = [];\n    for(var i = 0; i < l.length;\
    \ i++){\n        for(var j = 0; j < l.length; j++){\n            if(i != j){\n\
    \                if(l[i] + l[j] == 0){\n                    nums.push(l[i]);\n\
    \                    nums.push(l[j]);\n                }\n            }\n    \
    \    }\n    }\n    if(nums.length == 0){\n        return false;\n    }else{\n\
    \        return true;\n    }\n}\n", "  var used = [];\n  for (var i = 0; i < l.length;\
    \ i++){\n    var first = l[i];\n    if (used.indexOf(first) === -1){\n      used.push(first);\n\
    \      var second = -l[i];\n      if (l.indexOf(second) !== -1){\n        return\
    \ true;\n      }\n    }\n  }\n  return false;\n}\n", "  return (l.includes(0)\
    \ && l.length > 1) || (l.includes(0) && l.length == 1) ? true : l.some( v => l.includes(-v)\
    \ && l.indexOf(v) != l.indexOf(-v))\n}\n", "    var ans=false;\n    for(var i=0;i<l.length;i++){\n\
    \        for(var j=i+1;j<l.length;j++){\n            if(l[i]+l[j]==0){\n     \
    \           ans=true;\n            }\n        }\n    }\n    return ans;\n}", "\t\
    if (l.length < 2) return false;\n\tfor (var i = 0; i < l.length; i++){\n\t\tfor\
    \ (var j = i + 1; j < l.length; j++){\n\t\t\tif (l[i] + l[j] == 0) return true;\n\
    \t\t}\n\t}\n\treturn false;\n}\n", "    // YOUR CODE HERE\n    let array = [];\n\
    \    if (l.length <= 1) {\n        return false;\n    }\n    for (let i = 0; i\
    \ < l.length; i++) {\n        for (let j = 0; j < l.length; j++) {\n         \
    \   if (l[i] + l[j] === 0 && j != i) {\n                array.push(l[i]);\n  \
    \              array.push(l[j]);\n            }\n        }\n    }\n    if (array.length\
    \ === 0) {\n        return false;\n    }\n    return true;\n}", "    if (l.length\
    \ == 1) {\n        return false;\n    }\n    for (var i = 0; i < l.length; i++){\n\
    \        for (var j = i + 1; j < l.length; j++){\n            if (l[i] + l[j]\
    \ == 0){\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "    var m = l.length;\n    var i = 0;\n    while (i < m) {\n\
    \      var j = 0;\n      while (j < m) {\n        if (i != j) {\n          if\
    \ (l[i] + l[j] == 0) {\n            return true;\n          }\n        }\n   \
    \     j = j + 1;\n      }\n      i = i + 1;\n    }\n    return false;\n}", "\t\
    // Write your code here\n  l.sort(function(a, b){return a-b});\n  //console.log(l);\n\
    \  var r = l.length-1;\n  //console.log(r);\n  var i = 0;\n  while(i<r){\n   \
    \ if(l[i]+l[r] == 0){\n      return true;\n    }\n    else if(l[i]+l[r]<0){\n\
    \      i++;\n    }\n    else{\n      r--;\n    }\n  }\n  return false;\n}\n",
  "    var hash = {};\n    for (var i = 0; i < l.length; i++){\n        var val =\
    \ l[i];\n        if (val in hash)\n            return true;\n        else\n  \
    \          hash[-val] = val;\n    }\n    return false;\n}\n", "  var negatives\
    \ = []\n  var positives = []\n  var found = false\n  if (l.length > 0){\n    for\
    \ (var i = 0; i < l.length; i++){\n      if (l[i] > 0){\n        positives.push(l[i])\n\
    \      } else {\n        negatives.push(l[i])\n      }\n    }\n    for (var i\
    \ = 0; i < negatives.length; i++){\n      for (var j = 0; j < positives.length;\
    \ j++){\n        if (negatives[i] + positives[j] == 0){\n          found = true\n\
    \        }\n      }\n    }\n  }\n  return found\n}\n", "    // your code here\n\
    }\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = i + 1; j <\
    \ l.length; j++){\n            if(l[i] + l[j] == 0){\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}", "\ts = new Set();\n\t\
    for (var i = 0; i < l.length; i++) {\n\t\tif (s.has(l[i])) {\n\t\t\treturn true;\n\
    \t\t}\n\t\ts.add(-l[i]);\n\t}\n\treturn false;\n}", "  var counter = 0;\n  for(var\
    \ i = 0; i < l.length; i++){\n    var num = l[i];\n    for(var j = 0; j < l.length;\
    \ j++){\n      if(num + l[j] === 0 && i !== j){\n        counter += 1;\n     \
    \ }\n    }\n  }\n  if(counter > 0){\n    return true;\n  }\n  else{\n    return\
    \ false;\n  }\n}", "    let array = []\n    for(let i=0; i<l.length; i++){\n \
    \       for(let j=i+1; j<l.length; j++){\n            if(l[i]+l[j]===0){\n   \
    \             array.push(l[i], l[j])\n            }\n        }\n    }\n    if(array.length===2){\n\
    \        return true\n    }else{\n        return false\n    }\n}", "    // Your\
    \ code here\n}\n", "    //WRITE ME!\n    let d = []\n    for (i in l){\n     \
    \   for (j in l){\n            if (l[i] + l[j] == 0){\n                d.push(l[i],\
    \ l[j])\n            }\n        }\n    }\n    if (d.length > 0){\n        return\
    \ true\n    }\n    else{\n        return false\n    }\n}", "    var s = new Set();\n\
    \    for (var i = 0; i < l.length; i++){\n        var diff = 0 - l[i];\n     \
    \   if (s.has(diff)){\n            return true;\n        } else {\n          \
    \  s.add(l[i]);\n        }\n    }\n    return false;\n}\n\n", "    for(let i =\
    \ 0; i < l.length; i++){\n        for(let j = i + 1; j < l.length; j++){\n   \
    \         if(l[i] + l[j] === 0){\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n", "  // put your code here\n}\n", " \
    \ for (var i = 0; i < l.length; i++){\n    for (var j = 0; j < l.length; j++){\n\
    \      if (l[i] + l[j] === 0 && i !== j){\n        return true;\n      }\n   \
    \ }\n  }\n  return false;\n}\n", "    var one = 0;\n    var two = 1;\n    while\
    \ (two <= l.length - 1){\n        var sum = l[one] + l[two];\n        if (sum\
    \ === 0){\n            return true;\n        }\n        else{\n            if\
    \ (two === l.length - 1){\n                one++;\n                two = one +\
    \ 1;\n            }\n            else{\n                two++;\n            }\n\
    \        }\n    }\n    return false;\n}\n", "    //Iterate over each element in\
    \ the list\n    //Check to see if that element is also in the list\n    //If it\
    \ is, then check to see if their difference = 0\n    //If any of those are true\
    \ then the array sums to zero\n    //If all of them are false then return false\n\
    \    for(let i = 0; i < l.length; i++){\n        for(let j = 0; j < l.length;\
    \ j++){\n            if(l[i] + l[j] === 0){\n                return true;\n  \
    \          }\n        }\n    }\n    return false;\n}\n", "   // return true if\
    \ there are two distinct elements in the array that\n   // sum to zero, and false\
    \ otherwise.\n   for (var i = 0; i < l.length; i++) {\n      for (var j = i +\
    \ 1; j < l.length; j++) {\n         if (l[i] + l[j] === 0) {\n            return\
    \ true;\n         }\n      }\n   }\n   return false;\n}\n", "    n = l.length\n\
    \    if (n < 2){\n        return false\n    }\n    for (var i = 0; i < n; i++)\
    \ {\n        for (var j = 0; j < n; j++) {\n            if (i != j){\n       \
    \         if (l[i] + l[j] == 0){\n                    return true\n          \
    \      }\n            }\n        }\n    }\n    return false\n}", "    var len\
    \ = l.length;\n    var index = 0;\n    var bool = false;\n    for(var i = 0; i\
    \ < len; i++){\n        for(var k = 0; k < len; k++){\n            if(l[i] + l[k]\
    \ == 0 && i != k){\n                bool = true;\n            }\n        }\n \
    \   }\n    return bool;\n}\n", "    var i,k;\n    var len = l.length;\n    var\
    \ sum = 0;\n    for(i=0;i<len;i++){\n        for(k=0;k<len;k++){\n           \
    \ if(i!=k && l[i]+l[k]==0){\n                return true;\n            }\n   \
    \     }\n    }\n    return false;\n}\n", "\t// Use a double loop to find all possible\
    \ pairs.\n\tfor (var i = 0; i < l.length; i++) {\n\t\tfor (var j = i+1; j < l.length;\
    \ j++) {\n\t\t\tif (l[i] + l[j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn false;\n}\n", "\t//loop through the list\n\tfor(var i = 0; i < l.length;\
    \ i++){\n\t\t//create a second loop that is 1 greater than the first loop\n\t\t\
    for(var j = i + 1; j < l.length; j++){\n\t\t\t//if the first loop value + the\
    \ second loop value is 0 return true\n\t\t\tif(l[i] + l[j] === 0){\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\t//otherwise return false\n\treturn false;\n}\n",
  "\tfor(var i = 0; i < l.length; i++){\n\t\tfor(var j = i+1; j < l.length; j++){\n\
    \t\t\tif(l[i] + l[j] == 0){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n", "    for(var i = 0; i < l.length; i++){\n        for(var j = 0;\
    \ j < l.length; j++){\n            if(i != j && l[i] + l[j] == 0){\n         \
    \       return true;\n            }\n        }\n    }\n    return false;\n}\n",
  "    // YOUR CODE HERE\n    var res = false;\n    for (var i = 0; i < l.length;\
    \ i++){\n        for (var j = i + 1; j < l.length; j++){\n            if (l[i]\
    \ + l[j] == 0){\n                res = true;\n            }\n        }\n    }\n\
    \    return res;\n}\n", "    if (l.length == 1){\n        return false;\n    }\n\
    \    for (i=0; i<l.length; i++){\n        for (j=0; j<l.length; j++){\n      \
    \      if (l[i] + l[j] == 0){\n                return true;\n            }\n \
    \       }\n    }\n    return false;\n}\n", "\t// Your code here\n\tvar result\
    \ = []\n\tvar flag = false\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tfor(var\
    \ j = i + 1; j < l.length; j++){\n\t\t\tif(l[i] + l[j] == 0){\n\t\t\t\tif(!result.includes(l[i])\
    \ && !result.includes(l[j])){\n\t\t\t\t\tresult.push(l[i])\n\t\t\t\t\tresult.push(l[j])\n\
    \t\t\t\t\tflag = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn flag\n}\n\n",
  "    l.sort(function(a, b){return a-b});\n    var i = 0;\n    var j = l.length -\
    \ 1;\n    while (i != j){\n        if (l[i] + l[j] == 0){\n            return\
    \ true;\n        }\n        else if (l[i] + l[j] > 0){\n            j--;\n   \
    \     }\n        else {\n            i++;\n        }\n    }\n    return false;\n\
    }\n", "    let dictionary = {}\n    for (let i=0; i<l.length; i++){\n        dictionary[l[i]]\
    \ = dictionary[l[i]] + 1 || 1\n    }\n    for (let i=0; i<l.length; i++){\n  \
    \      if (dictionary[-l[i]]) {\n            return true\n        }\n    }\n \
    \   return false\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

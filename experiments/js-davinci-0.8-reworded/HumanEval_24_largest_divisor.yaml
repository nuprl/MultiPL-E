name: HumanEval_24_largest_divisor
language: js
prompt: "//For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
  \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
  \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
completions: ["    //declare var to hold current largest divisor\n    let ld = 0;\n\
    \    //loop through all numbers 1 to n-1\n    for(i=1; i<n; i++){\n        //if\
    \ the number is divisible by n evenly, check to see if it is larger than ld\n\
    \        if(n%i===0){\n            //if it is larger, set ld to that value\n \
    \           if(i>ld){\n                ld = i;\n            }\n        }\n   \
    \ }\n    //return the largest divisor \n    return ld;\n}", "    var num=1;\n\
    \    while(num<n){\n        if(n%num==0){\n            var div=num;\n        }\n\
    \        num++;\n    }\n    return div;\n}", "  if (n%2==0){\n    return n/2;\n\
    \  }\n  else{\n    return (n-1)/2;\n  }\n}\n", "\tvar divisor = n - 1;\n\twhile\
    \ (n % divisor !== 0) {\n\t\tdivisor = divisor - 1;\n\t}\n\treturn divisor;\n\
    }\n", "\tlargest_num = 0;\n\tfor (i = 0; i < n; i++) {\n\t\tif (n % i == 0) {\n\
    \t\t\tlargest_num = i;\n\t\t}\n\t}\n\treturn largest_num;\n}", "    for(var i\
    \ = n-1; i > 0; i--){\n        if(n % i === 0){\n            return i;\n     \
    \   }\n    }\n}\n", "  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n \
    \     return i;\n    }\n  }\n}", "    if(n%2==0){\n        var result = n/2;\n\
    \        return result;\n    }\n    else{\n        for(var i=n-1;i>1;i--){\n \
    \           if(n%i==0){\n                var result = i;\n                return\
    \ result;\n            }\n        }\n    }\n    if(n==1){\n        return n;\n\
    \    }\n}", "\tfor(var i = n-1; i >= 0; i--){\n\t\tif(n % i === 0){\n\t\t\treturn\
    \ i;\n\t\t}\n\t}\n}\n", "  // >>>\n  // ...\n  // <<<\n}\n", "    for(var i =\
    \ n - 1; i > 0; i--){\n        if(n % i === 0){\n            return i;\n     \
    \   }\n    }\n}\n", "    var largest = 1;\n    for(var i = 2; i < n; i++){\n \
    \       if(n % i == 0){\n            largest = i;\n        }\n    }\n    return\
    \ largest;\n}\n", "\tfor(let i = n - 1; i > 0; i--){\n\t\tif(n % i === 0){\n\t\
    \t\treturn i;\n\t\t}\n\t}\n}\n", "  var i = n-1;\n  while(n%i != 0){\n    i--;\n\
    \  }\n  return i;\n}\n", "\treturn 0;\n}\n", "  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n", "    // >>> largest_divisor(15)\n\
    \    // 5\n    let divisor = 0;\n    for (let i = n-1; i >= 1; i--) {\n      \
    \  if (n % i === 0) {\n            divisor = i;\n            break;\n        }\n\
    \    }\n    return divisor;\n\n}", "  var maxDivisor = 1;\n  for(var i = 2; i\
    \ < n; i++){\n    if(n % i === 0){\n      maxDivisor = i;\n    }\n  }\n  return\
    \ maxDivisor;\n}\n", "  var i = 0;\n  while (i < n){\n    if (n % i === 0){\n\
    \      return i;\n    }\n    i++;\n  }\n}\n", "\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

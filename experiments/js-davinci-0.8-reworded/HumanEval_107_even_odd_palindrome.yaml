name: HumanEval_107_even_odd_palindrome
language: js
prompt: "//Given a positive integer n, return an array that has the number of even\
  \ and odd\n// integer palindromes that fall within the range(1, n), inclusive.\n\
  // Example 1:\n// >>> even_odd_palindrome(3)\n// [1, 2]\n// Explanation:\n// Integer\
  \ palindrome are 1, 2, 3. one of them is even, and two of them are odd.\n// Example\
  \ 2:\n// >>> even_odd_palindrome(12)\n// [4, 6]\n// Explanation:\n// Integer palindrome\
  \ are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.\n\
  // Note:\n// 1. 1 <= n <= 10^3\n// 2. returned array has the number of even and\
  \ odd integer palindromes respectively.\nfunction even_odd_palindrome(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_palindrome;\n  assert.deepEqual(candidate(123),[8, 13]);\n  assert.deepEqual(candidate(12),[4,\
  \ 6]);\n  assert.deepEqual(candidate(3),[1, 2]);\n  assert.deepEqual(candidate(63),[6,\
  \ 8]);\n  assert.deepEqual(candidate(25),[5, 6]);\n  assert.deepEqual(candidate(19),[4,\
  \ 6]);\n  assert.deepEqual(candidate(9),[4, 5]);\n  assert.deepEqual(candidate(1),[0,\
  \ 1]);\n}\n\ntest();"
completions: ["    var pal = [];\n    var isPalindrome = function(x){\n        var\
    \ y = x.toString().split('').reverse().join('');\n        return y == x;\n   \
    \ }\n    for(var i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n        \
    \    pal.push(i);\n        }\n    }\n    var odd = 0;\n    var even = 0;\n   \
    \ for(var i = 0; i < pal.length; i++){\n        if(pal[i] % 2 == 0){\n       \
    \     even++;\n        }\n        else{\n            odd++;\n        }\n    }\n\
    \    return [even, odd];\n}", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    for(let i = 1; i <= n; i++){\n        if(palindrome(i)){\n            if(i\
    \ % 2 === 0){\n                evenCount += 1;\n            }else{\n         \
    \       oddCount += 1;\n            }\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "    // YOUR CODE HERE\n    var count = 0;\n    if(n%2 ===\
    \ 0){\n      count++;\n    }\n    return [count, n-count];\n}", "    var even\
    \ = 0;\n    var odd = 0;\n    for(var i = 1; i<=n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i%2==0){\n                even++;\n            }\n           \
    \ else{\n                odd++;\n            }\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  if(n >= 1 && n <= Math.pow(10, 3)){\n    var result = [];\n\
    \    var count_odd = 0;\n    var count_even = 0;\n    for(var i = 1; i <= n; i++){\n\
    \      var toString = i.toString();\n      if(toString === toString.split('').reverse().join('')){\n\
    \        if(i % 2 == 0){\n          count_even++;\n        }\n        else{\n\
    \          count_odd++;\n        }\n      }\n    }\n    result.push(count_even);\n\
    \    result.push(count_odd);\n    return result;\n  }\n  else{\n    return \"\
    Oops! The number is out of range. Please try again.\";\n  }\n}", "  // Write your\
    \ code here\n  var evens = 0;\n  var odds = 0;\n  for (var i = 1; i <= n; i++)\
    \ {\n    if (is_palindrome(i)) {\n      if (i % 2 === 0) {\n        evens++;\n\
    \      } else {\n        odds++;\n      }\n    }\n  }\n  return [evens, odds];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    let x = n;\n    let temp = n;\n\
    \    let y = 0;\n    let palindrome = '';\n    while(x > 0){\n        palindrome\
    \ += x % 10;\n        x = Math.floor(x / 10);\n    }\n    if(n < 10){\n      \
    \  odd = n;\n        even = 0;\n    }\n    else if(n >= 10 && n < 100){\n    \
    \    odd = n / 2;\n        even = n / 2;\n    }\n    else if(n >= 100 && n < 1000){\n\
    \        even = Math.floor(n / 11);\n        odd = Math.floor(n / 11);\n     \
    \   while(temp > 0){\n            y = temp % 10;\n            temp = Math.floor(temp\
    \ / 10);\n            if(y % 2 === 0){\n                odd++;\n            }\n\
    \            else if(y % 2 !== 0){\n                even++;\n            }\n \
    \       }\n    }\n    let palindromeArray = [even, odd];\n    return palindromeArray;\n\
    }\n", "    var evens = 0;\n    var odds = 0;\n    for(var i = 1; i <= n; i++){\n\
    \        var str = i.toString();\n        var odd = str.length % 2;\n        if(odd\
    \ == 0){\n            evens += 1;\n        }\n        else{\n            odds\
    \ += 1;\n        }\n    }\n    var arr = [evens, odds];\n    return arr;\n}",
  "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n       \
    \ if(palindrome(i)){\n            if(i % 2 === 0){\n                even++;\n\
    \            } else {\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}\n", "    // your code here\n    var evens = 0;\n \
    \   var odds = 0;\n    var number = '';\n    var string = '';\n    var num = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        number = i.toString();\n        for(var\
    \ j = 0; j < number.length; j++){\n            string += number[j];\n        }\n\
    \        if(number === string){\n            num = parseInt(number);\n       \
    \     if(num % 2 === 0){\n                evens++;\n            }\n          \
    \  else{\n                odds++;\n            }\n        }\n        string =\
    \ '';\n    }\n    return [evens, odds];\n}\n", "    let result = [0, 0];\n   \
    \ for(let i = 1; i <= n; i++){\n        if(i == i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 === 0){\n                result[0]++;\n            }else{\n\
    \                result[1]++;\n            }\n        }\n    }\n    return result;\n\
    }", "  var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(i\
    \ == reverse(i)){\n      if(i%2 == 0){\n        even++;\n      }else{\n      \
    \  odd++;\n      }\n    }\n  }\n  console.log([even, odd]);\n}", "  function checkPalindrome(number){\n\
    \    let str = '' + number;\n    for(let i = 0; i < str.length; i++){\n      if(str[i]\
    \ !== str[str.length - i - 1]){\n        return false;\n      }\n    }\n    return\
    \ true;\n  }\n  let answer = [0, 0];\n  for(let i = 1; i <= n; i++){\n    if(checkPalindrome(i)){\n\
    \      if(i % 2 === 0){\n        answer[0]++;\n      } else {\n        answer[1]++;\n\
    \      }\n    }\n  }\n  return answer;\n}", "  var even = 0;\n  var odd = 0;\n\
    \  if(n == 1) {\n    return [0, 1];\n  }\n  for(var i = 1; i <= n; i++) {\n  \
    \  if(i <= 9) {\n      odd++;\n    }\n    if(i > 9 && i < 100) {\n      if(i %\
    \ 11 == 0) {\n        odd++;\n      }\n      else {\n        even++;\n      }\n\
    \    }\n    if(i > 99 && i < 1000) {\n      if(i % 111 == 0) {\n        odd++;\n\
    \      }\n      else {\n        even++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let count_even = 0;\n  let count_odd = 0;\n  for(let i = 1;\
    \ i <= n; i++){\n    let count = 0;\n    let temp = i;\n    while(temp > 0){\n\
    \      let a = temp % 10;\n      count = count * 10 + a;\n      temp = Math.floor(temp\
    \ / 10);\n    }\n    if(count === i){\n      if(i % 2 === 0){\n        count_even\
    \ += 1;\n      }\n      else{\n        count_odd += 1;\n      }\n    }\n  }\n\
    \  return [count_even, count_odd];\n}\n", "  let count = 0;\n  let even = 0;\n\
    \  let odd = 0;\n  let string = '';\n  let array = [];\n  for(let i = 1; i <=\
    \ n; i++){\n    string = i.toString();\n    for(let j = 0; j < string.length;\
    \ j++){\n      if(string[j] === string[string.length - 1 - j]){\n        count++;\n\
    \      }\n    }\n    if(count === string.length){\n      if(string.length % 2\
    \ === 0){\n        even++;\n      }else{\n        odd++;\n      }\n    }\n   \
    \ count = 0;\n  }\n  array.push(even);\n  array.push(odd);\n  return array;\n}",
  "    var palindromes = [];\n    var evens = 0;\n    var odds = 0;\n    for(var i\
    \ = 1; i <= n; i++){\n        var string = i.toString();\n        if(string ===\
    \ string.split('').reverse().join('')){\n            palindromes.push(i);\n  \
    \      }\n    }\n    for(var i = 0; i < palindromes.length; i++){\n        if(palindromes[i]\
    \ % 2 === 0){\n            evens++;\n        } else {\n            odds++;\n \
    \       }\n    }\n    return [evens, odds];\n}", "    var evens = 0;\n    var\
    \ odds = 0;\n    for(var i = 1; i <= n; i++){\n        var isEven = true;\n  \
    \      var isOdd = true;\n        var currentNum = i;\n        var digits = [];\n\
    \        var reversedDigits = [];\n        var currentDigit = 0;\n        var\
    \ reversedDigit = 0;\n        while(currentNum > 0){\n            currentDigit\
    \ = currentNum % 10;\n            currentNum = Math.floor(currentNum / 10);\n\
    \            digits.push(currentDigit);\n        }\n        reversedDigits = digits.slice();\n\
    \        reversedDigits.reverse();\n        for(var j = 0; j < digits.length;\
    \ j++){\n            if(digits[j] != reversedDigits[j]){\n                isEven\
    \ = false;\n                isOdd = false;\n                break;\n         \
    \   }\n        }\n        if(isEven){\n            evens++;\n        }else if(isOdd){\n\
    \            odds++;\n        }\n    }\n    var result = [evens, odds];\n    return\
    \ result;\n}\n", "  let evens = 0;\n  let odds = 0;\n  for(let i = 1; i <= n;\
    \ i++){\n    if(isPalindrome(i)){\n      if(i % 2 === 0){\n        evens++;\n\
    \      } else {\n        odds++;\n      }\n    }\n  }\n  return [evens, odds];\n\
    }", "    let even_count = 0;\n    let odd_count = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        let is_palindrome = true;\n        let i_str = String(i);\n\
    \        for(let j = 0; j < i_str.length; j++){\n            if(i_str[j] !== i_str[i_str.length\
    \ - 1 - j]){\n                is_palindrome = false;\n                break;\n\
    \            }\n        }\n        if(is_palindrome){\n            if(i % 2 ===\
    \ 0){\n                even_count += 1;\n            }\n            else{\n  \
    \              odd_count += 1;\n            }\n        }\n    }\n    return [even_count,\
    \ odd_count];\n}\nlet n = 12;"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_107_even_odd_palindrome
language: js
prompt: "//Given a positive integer n, return an array that has the number of even\
  \ and odd\n// integer palindromes that fall within the range(1, n), inclusive.\n\
  // Example 1:\n// >>> even_odd_palindrome(3)\n// [1, 2]\n// Explanation:\n// Integer\
  \ palindrome are 1, 2, 3. one of them is even, and two of them are odd.\n// Example\
  \ 2:\n// >>> even_odd_palindrome(12)\n// [4, 6]\n// Explanation:\n// Integer palindrome\
  \ are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.\n\
  // Note:\n// 1. 1 <= n <= 10^3\n// 2. returned array has the number of even and\
  \ odd integer palindromes respectively.\nfunction even_odd_palindrome(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_palindrome;\n  assert.deepEqual(candidate(123),[8, 13]);\n  assert.deepEqual(candidate(12),[4,\
  \ 6]);\n  assert.deepEqual(candidate(3),[1, 2]);\n  assert.deepEqual(candidate(63),[6,\
  \ 8]);\n  assert.deepEqual(candidate(25),[5, 6]);\n  assert.deepEqual(candidate(19),[4,\
  \ 6]);\n  assert.deepEqual(candidate(9),[4, 5]);\n  assert.deepEqual(candidate(1),[0,\
  \ 1]);\n}\n\ntest();"
completions: ["    var pal = [];\n    var isPalindrome = function(x){\n        var\
    \ y = x.toString().split('').reverse().join('');\n        return y == x;\n   \
    \ }\n    for(var i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n        \
    \    pal.push(i);\n        }\n    }\n    var odd = 0;\n    var even = 0;\n   \
    \ for(var i = 0; i < pal.length; i++){\n        if(pal[i] % 2 == 0){\n       \
    \     even++;\n        }\n        else{\n            odd++;\n        }\n    }\n\
    \    return [even, odd];\n}", "    let evenCount = 0;\n    let oddCount = 0;\n\
    \    for(let i = 1; i <= n; i++){\n        if(palindrome(i)){\n            if(i\
    \ % 2 === 0){\n                evenCount += 1;\n            }else{\n         \
    \       oddCount += 1;\n            }\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "    // YOUR CODE HERE\n    var count = 0;\n    if(n%2 ===\
    \ 0){\n      count++;\n    }\n    return [count, n-count];\n}", "    var even\
    \ = 0;\n    var odd = 0;\n    for(var i = 1; i<=n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i%2==0){\n                even++;\n            }\n           \
    \ else{\n                odd++;\n            }\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  if(n >= 1 && n <= Math.pow(10, 3)){\n    var result = [];\n\
    \    var count_odd = 0;\n    var count_even = 0;\n    for(var i = 1; i <= n; i++){\n\
    \      var toString = i.toString();\n      if(toString === toString.split('').reverse().join('')){\n\
    \        if(i % 2 == 0){\n          count_even++;\n        }\n        else{\n\
    \          count_odd++;\n        }\n      }\n    }\n    result.push(count_even);\n\
    \    result.push(count_odd);\n    return result;\n  }\n  else{\n    return \"\
    Oops! The number is out of range. Please try again.\";\n  }\n}", "  // Write your\
    \ code here\n  var evens = 0;\n  var odds = 0;\n  for (var i = 1; i <= n; i++)\
    \ {\n    if (is_palindrome(i)) {\n      if (i % 2 === 0) {\n        evens++;\n\
    \      } else {\n        odds++;\n      }\n    }\n  }\n  return [evens, odds];\n\
    }\n", "    let even = 0;\n    let odd = 0;\n    let x = n;\n    let temp = n;\n\
    \    let y = 0;\n    let palindrome = '';\n    while(x > 0){\n        palindrome\
    \ += x % 10;\n        x = Math.floor(x / 10);\n    }\n    if(n < 10){\n      \
    \  odd = n;\n        even = 0;\n    }\n    else if(n >= 10 && n < 100){\n    \
    \    odd = n / 2;\n        even = n / 2;\n    }\n    else if(n >= 100 && n < 1000){\n\
    \        even = Math.floor(n / 11);\n        odd = Math.floor(n / 11);\n     \
    \   while(temp > 0){\n            y = temp % 10;\n            temp = Math.floor(temp\
    \ / 10);\n            if(y % 2 === 0){\n                odd++;\n            }\n\
    \            else if(y % 2 !== 0){\n                even++;\n            }\n \
    \       }\n    }\n    let palindromeArray = [even, odd];\n    return palindromeArray;\n\
    }\n", "    var evens = 0;\n    var odds = 0;\n    for(var i = 1; i <= n; i++){\n\
    \        var str = i.toString();\n        var odd = str.length % 2;\n        if(odd\
    \ == 0){\n            evens += 1;\n        }\n        else{\n            odds\
    \ += 1;\n        }\n    }\n    var arr = [evens, odds];\n    return arr;\n}",
  "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n       \
    \ if(palindrome(i)){\n            if(i % 2 === 0){\n                even++;\n\
    \            } else {\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}\n", "    // your code here\n    var evens = 0;\n \
    \   var odds = 0;\n    var number = '';\n    var string = '';\n    var num = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        number = i.toString();\n        for(var\
    \ j = 0; j < number.length; j++){\n            string += number[j];\n        }\n\
    \        if(number === string){\n            num = parseInt(number);\n       \
    \     if(num % 2 === 0){\n                evens++;\n            }\n          \
    \  else{\n                odds++;\n            }\n        }\n        string =\
    \ '';\n    }\n    return [evens, odds];\n}\n", "    let result = [0, 0];\n   \
    \ for(let i = 1; i <= n; i++){\n        if(i == i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 === 0){\n                result[0]++;\n            }else{\n\
    \                result[1]++;\n            }\n        }\n    }\n    return result;\n\
    }", "  var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(i\
    \ == reverse(i)){\n      if(i%2 == 0){\n        even++;\n      }else{\n      \
    \  odd++;\n      }\n    }\n  }\n  console.log([even, odd]);\n}", "  function checkPalindrome(number){\n\
    \    let str = '' + number;\n    for(let i = 0; i < str.length; i++){\n      if(str[i]\
    \ !== str[str.length - i - 1]){\n        return false;\n      }\n    }\n    return\
    \ true;\n  }\n  let answer = [0, 0];\n  for(let i = 1; i <= n; i++){\n    if(checkPalindrome(i)){\n\
    \      if(i % 2 === 0){\n        answer[0]++;\n      } else {\n        answer[1]++;\n\
    \      }\n    }\n  }\n  return answer;\n}", "  var even = 0;\n  var odd = 0;\n\
    \  if(n == 1) {\n    return [0, 1];\n  }\n  for(var i = 1; i <= n; i++) {\n  \
    \  if(i <= 9) {\n      odd++;\n    }\n    if(i > 9 && i < 100) {\n      if(i %\
    \ 11 == 0) {\n        odd++;\n      }\n      else {\n        even++;\n      }\n\
    \    }\n    if(i > 99 && i < 1000) {\n      if(i % 111 == 0) {\n        odd++;\n\
    \      }\n      else {\n        even++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let count_even = 0;\n  let count_odd = 0;\n  for(let i = 1;\
    \ i <= n; i++){\n    let count = 0;\n    let temp = i;\n    while(temp > 0){\n\
    \      let a = temp % 10;\n      count = count * 10 + a;\n      temp = Math.floor(temp\
    \ / 10);\n    }\n    if(count === i){\n      if(i % 2 === 0){\n        count_even\
    \ += 1;\n      }\n      else{\n        count_odd += 1;\n      }\n    }\n  }\n\
    \  return [count_even, count_odd];\n}\n", "  let count = 0;\n  let even = 0;\n\
    \  let odd = 0;\n  let string = '';\n  let array = [];\n  for(let i = 1; i <=\
    \ n; i++){\n    string = i.toString();\n    for(let j = 0; j < string.length;\
    \ j++){\n      if(string[j] === string[string.length - 1 - j]){\n        count++;\n\
    \      }\n    }\n    if(count === string.length){\n      if(string.length % 2\
    \ === 0){\n        even++;\n      }else{\n        odd++;\n      }\n    }\n   \
    \ count = 0;\n  }\n  array.push(even);\n  array.push(odd);\n  return array;\n}",
  "    var palindromes = [];\n    var evens = 0;\n    var odds = 0;\n    for(var i\
    \ = 1; i <= n; i++){\n        var string = i.toString();\n        if(string ===\
    \ string.split('').reverse().join('')){\n            palindromes.push(i);\n  \
    \      }\n    }\n    for(var i = 0; i < palindromes.length; i++){\n        if(palindromes[i]\
    \ % 2 === 0){\n            evens++;\n        } else {\n            odds++;\n \
    \       }\n    }\n    return [evens, odds];\n}", "    var evens = 0;\n    var\
    \ odds = 0;\n    for(var i = 1; i <= n; i++){\n        var isEven = true;\n  \
    \      var isOdd = true;\n        var currentNum = i;\n        var digits = [];\n\
    \        var reversedDigits = [];\n        var currentDigit = 0;\n        var\
    \ reversedDigit = 0;\n        while(currentNum > 0){\n            currentDigit\
    \ = currentNum % 10;\n            currentNum = Math.floor(currentNum / 10);\n\
    \            digits.push(currentDigit);\n        }\n        reversedDigits = digits.slice();\n\
    \        reversedDigits.reverse();\n        for(var j = 0; j < digits.length;\
    \ j++){\n            if(digits[j] != reversedDigits[j]){\n                isEven\
    \ = false;\n                isOdd = false;\n                break;\n         \
    \   }\n        }\n        if(isEven){\n            evens++;\n        }else if(isOdd){\n\
    \            odds++;\n        }\n    }\n    var result = [evens, odds];\n    return\
    \ result;\n}\n", "  let evens = 0;\n  let odds = 0;\n  for(let i = 1; i <= n;\
    \ i++){\n    if(isPalindrome(i)){\n      if(i % 2 === 0){\n        evens++;\n\
    \      } else {\n        odds++;\n      }\n    }\n  }\n  return [evens, odds];\n\
    }", "    let even_count = 0;\n    let odd_count = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        let is_palindrome = true;\n        let i_str = String(i);\n\
    \        for(let j = 0; j < i_str.length; j++){\n            if(i_str[j] !== i_str[i_str.length\
    \ - 1 - j]){\n                is_palindrome = false;\n                break;\n\
    \            }\n        }\n        if(is_palindrome){\n            if(i % 2 ===\
    \ 0){\n                even_count += 1;\n            }\n            else{\n  \
    \              odd_count += 1;\n            }\n        }\n    }\n    return [even_count,\
    \ odd_count];\n}\nlet n = 12;", "    function isPalindrome(int){\n        var\
    \ intToString = int.toString();\n        var reverseInt = intToString.split(\"\
    \").reverse().join(\"\");\n        return intToString === reverseInt;\n    }\n\
    \    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n     \
    \   if(isPalindrome(i)){\n            if(i % 2 === 0){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}\n", "\tvar result = [0, 0];\n\tfor(var i = 1; i <=\
    \ n; i++){\n\t\tif(i > 9){\n\t\t\tvar str = String(i);\n\t\t\tvar is_palindrome\
    \ = true;\n\t\t\tfor(var j = 0; j < str.length; j++){\n\t\t\t\tif(str[j] !== str[str.length\
    \ - 1 - j]){\n\t\t\t\t\tis_palindrome = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t\tif(is_palindrome){\n\t\t\t\tif(i % 2 === 0){\n\t\t\t\t\tresult[0]++;\n\
    \t\t\t\t}else{\n\t\t\t\t\tresult[1]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\t\
    result[0]++;\n\t\t}\n\t}\n\treturn result;\n}\n", "    // your code goes here\n\
    \    let odd = 0;\n    let even = 0;\n    for(let i = 1; i <= n; i++){\n     \
    \   let str = String(i);\n        let revStr = str.split('').reverse().join('');\n\
    \        if(str === revStr){\n            if(str.length % 2 !== 0){\n        \
    \        odd++;\n            }else{\n                even++;\n            }\n\
    \        }\n    }\n    return [even, odd];\n}", "    let even = 0;\n    let odd\
    \ = 0;\n    for(i = 1; i <= n; i++){\n        if(palindrome(i)){\n           \
    \ if(i % 2 === 0){\n                even++;\n            }\n            else{\n\
    \                odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "\tvar count_even = 0;\n\tvar count_odd = 0;\n\tfor(var i = 1; i <= n; i++){\n\
    \t\tif(i.toString() == i.toString().split('').reverse().join('')){\n\t\t\tif(i.toString().length\
    \ % 2 == 0){\n\t\t\t\tcount_even ++;\n\t\t\t}else{\n\t\t\t\tcount_odd ++;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn [count_even, count_odd];\n}", "    var even = 0;\n \
    \   var odd = 0;\n    for(var i = 1; i <= n; i++){\n        if(i.toString() ===\
    \ i.toString().split('').reverse().join('')){\n            if(i.toString().length\
    \ % 2 === 0){\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n        }\n    }\n    return [even, odd];\n}", "    //\
    \ Write your code here.\n    let isPalindrome = (num) => {\n        let str =\
    \ num.toString();\n        let left = 0;\n        let right = str.length - 1;\n\
    \        while (left < right) {\n            if (str[left] !== str[right]) {\n\
    \                return false;\n            }\n            left += 1;\n      \
    \      right -= 1;\n        }\n        return true;\n    }\n    let even = 0;\n\
    \    let odd = 0;\n    for (let i = 1; i <= n; i++) {\n        if (isPalindrome(i))\
    \ {\n            if (i % 2 === 0) {\n                even += 1;\n            }\
    \ else {\n                odd += 1;\n            }\n        }\n    }\n    return\
    \ [even, odd];\n}\n", "    let res = [0, 0];\n    for(let i = 1; i <= n; i++){\n\
    \        if(helper(i)){\n            if(i % 2 == 0){\n                res[0]++;\n\
    \            }else{\n                res[1]++;\n            }\n        }\n   \
    \ }\n    return res;\n}", "\tvar count=0;\n\tvar arr=[];\n\tfor(var i=1;i<=n;i++){\n\
    \t\tif(palindrome(i)){\n\t\t\tcount++;\n\t\t\tif(i%2===0){\n\t\t\t\tarr.push(i);\n\
    \t\t\t}\n\t\t}\n\t}\n\tconsole.log(count)\n\tconsole.log(arr.length)\n}", "  var\
    \ arr = [];\n  arr[0] = 0;\n  arr[1] = 0;\n  for(var i = 1; i <= n; i++){\n  \
    \  if(isPalindrome(i)){\n      if(i % 2 === 0){\n        arr[0]++;\n      }\n\
    \      else{\n        arr[1]++;\n      }\n    }\n  }\n  return arr;\n}", "   \
    \ var countEven = 0, countOdd = 0;\n    for(var i = 1; i <= n; i++){\n       \
    \ if(isPalindrome(i)){\n            if(i%2 === 0){\n                countEven++;\n\
    \            } else {\n                countOdd++;\n            }\n        }\n\
    \    }\n    return [countEven, countOdd];\n}\n", "  let evens = 0;\n  let odds\
    \ = 0;\n  for(let i = 1; i <= n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        evens++;\n      } else {\n        odds++;\n \
    \     }\n    }\n  }\n  return [evens, odds];\n}", "  let total = 0;\n  let even\
    \ = 0;\n  let odd = 0;\n  if(n === 1) return [0, 1];\n  for(let i = 0; i <= n;\
    \ i++){\n    let palindrome = i.toString().split('').reverse().join('');\n   \
    \ if(palindrome === i.toString()){\n      total++;\n      if(i % 2 === 0){\n \
    \       even++;\n      }else{\n        odd++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}", "  let even = 0;\n  let odd = 0;\n  for(let i = 1; i <= n; i++){\n\
    \    let number = i.toString();\n    let reversed = number.split('').reverse().join('');\n\
    \    if(reversed === number){\n      if(i % 2 === 0){\n        even++;\n     \
    \ }else{\n        odd++;\n      }\n    }\n  }\n  return [even, odd];\n}\n", " \
    \   var odds = Math.floor(n/2);\n    if(n % 2 === 0){\n        var evens = odds;\n\
    \    }else{\n        var evens = odds + 1;\n    }\n    return [evens, odds];\n\
    }", "    let even = 0, odd = 0\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 === 0){\n                even++\n            }else{\n  \
    \              odd++\n            }\n        }\n    }\n    return [even, odd]\n\
    }\n", "    let evens = 0;\n    let odds = 0;\n    for(let i = 1; i <= n; i++){\n\
    \        if(i.toString() === i.toString().split('').reverse().join('')){\n   \
    \         if(i % 2 === 0){\n                evens++;\n            } else {\n \
    \               odds++;\n            }\n        }\n    }\n    return [evens, odds];\n\
    }\neven_odd_palindrome(3);\neven_odd_palindrome(12);", "    let even = 0;\n  \
    \  let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 === 0){\n                even++;\n            }else{\n \
    \               odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "    // YOUR CODE HERE\n    if(!n || typeof n !== 'number') {\n        return\
    \ null;\n    }\n    if(n < 1 || n > Math.pow(10, 3)) {\n        return null;\n\
    \    }\n    let evenCount = 0;\n    let oddCount = 0;\n    for(let i = 1; i <=\
    \ n; i++) {\n        if(String(i) === String(i).split('').reverse().join(''))\
    \ {\n            if(i % 2 === 0) {\n                evenCount += 1;\n        \
    \    } else {\n                oddCount += 1;\n            }\n        }\n    }\n\
    \    return [evenCount, oddCount];\n}", "  const result = [0, 0];\n  let i = 1;\n\
    \  while(i <= n){\n    result[isPalindrome(i.toString()) && isEven(i) ? 0 : 1]++;\n\
    \    i++;\n  }\n  return result;\n}", "  let even = 0;\n  let odd = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(is_palindrome(i) && i % 2 === 0){\n      even++;\n\
    \    }\n    if(is_palindrome(i) && i % 2 !== 0){\n      odd++;\n    }\n  }\n \
    \ return [even, odd];\n}\n", "  let count = 0;\n  let even = 0;\n  let odd = 0;\n\
    \  let len = n.toString().length;\n  let palindromeArray = [];\n  for(let i =\
    \ 1; i <= n; i++){\n    palindromeArray.push(i.toString().split('').reverse().join(''));\n\
    \  }\n  for(let j = 0; j < palindromeArray.length; j++){\n    if(palindromeArray[j]\
    \ === palindromeArray[j].split('').reverse().join('')){\n      count++;\n    \
    \  if(palindromeArray[j].length % 2 === 0){\n        even++;\n      }else{\n \
    \       odd++;\n      }\n    }\n  }\n  return [even, odd];\n}\n", "    var even_counter\
    \ = 0;\n    var odd_counter = 0;\n    for(var i = 1; i <= n; i++){\n        if(i\
    \ == 1 || i == 2 || i == 3){\n            odd_counter++;\n        }else if(i %\
    \ 2 == 0){\n            even_counter++;\n        }else{\n            odd_counter++;\n\
    \        }\n    }\n    return [even_counter, odd_counter];\n}\n", "\tvar palindromes\
    \ = []\n\tfor(var i = 1; i <= n; i++){\n\t\tif(isPalindrome(i)){\n\t\t\tpalindromes.push(i)\n\
    \t\t}\n\t}\n\tvar odd = palindromes.filter(function(palindrome){\n\t\treturn palindrome\
    \ % 2 != 0\n\t})\n\tvar even = palindromes.filter(function(palindrome){\n\t\t\
    return palindrome % 2 == 0\n\t})\n\treturn [even.length, odd.length]\n}\n", " \
    \   let res = [];\n    for(let i = 1; i <= n; i++){\n        let i_string = i.toString();\n\
    \        if(i_string === i_string.split('').reverse().join('')){\n           \
    \ if(i % 2 === 0){\n                res[0] = res[0] ? res[0] + 1 : 1;\n      \
    \      } else {\n                res[1] = res[1] ? res[1] + 1 : 1;\n         \
    \   }\n        }\n    }\n    return res;\n}\n", "    var even = 0;\n    var odd\
    \ = 0;\n    for(var i = 1; i<=n; i++){\n        if(is_palindrome(i) && is_even(i)){\n\
    \            even+=1;\n        }\n        else if(is_palindrome(i) && !is_even(i)){\n\
    \            odd+=1;\n        }\n    }\n    return [even, odd];\n}", "    let\
    \ evenCount = 0;\n    let oddCount = 0;\n    // TODO: Implement function\n   \
    \ // O(n^2)\n    for (let i = 1; i <= n; i++) {\n        if (isPalindrome(i))\
    \ {\n            if (i % 2 === 0) {\n                evenCount++;\n          \
    \  } else {\n                oddCount++;\n            }\n        }\n    }\n  \
    \  return [evenCount, oddCount];\n}", "    //your code here\n  }\n  \n  \n  \n\
    \  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\
    \  //----------------------------------------\n  //--------------TEST----------------------\n\
    \  //----------------------------------------\n  var assert = require('assert');\n\
    \  describe('even_odd_palindrome', function(){\n      it('should return an array\
    \ of length 2', function(){\n          var expectedResult = [1, 2];\n        \
    \  var actualResult = even_odd_palindrome(3);\n          assert.equal(actualResult.length,\
    \ expectedResult.length);\n      });\n      it('should return an array with the\
    \ number of even and odd palindromes respectively', function(){\n          var\
    \ expectedResult = [4, 6];\n          var actualResult = even_odd_palindrome(12);\n\
    \          assert.equal(actualResult[0], expectedResult[0]);\n          assert.equal(actualResult[1],\
    \ expectedResult[1]);\n      });\n  });", "    let evenCounter = 0;\n    let oddCounter\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i.toString())){\n\
    \            if(i % 2 === 0){\n                evenCounter++;\n            } else\
    \ {\n                oddCounter++;\n            }\n        }\n    }\n    return\
    \ [evenCounter, oddCounter];\n}\n", "    let even = 0;\n    let odd = 0;\n   \
    \ for(let i = 1; i <= n; i++){\n        let temp = i.toString();\n        if(temp.length\
    \ === 1){\n            even++;\n        }\n        if(temp.length % 2 !== 0){\n\
    \            let half = Math.floor(temp.length / 2);\n            let first =\
    \ temp.slice(0, half);\n            let second = temp.slice(half, temp.length).split('').reverse().join('');\n\
    \            if(first === second){\n                odd++;\n            }\n  \
    \      }\n        if(temp.length % 2 === 0){\n            let half = temp.length\
    \ / 2;\n            let first = temp.slice(0, half);\n            let second =\
    \ temp.slice(half, temp.length).split('').reverse().join('');\n            if(first\
    \ === second){\n                even++;\n            }\n        }\n    }\n   \
    \ return [even, odd];\n}\neven_odd_palindrome(3);", "  var count = [0, 0];\n \
    \ for(var i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n      if(i % 2 == 0){\n\
    \        count[0] += 1;\n      } else {\n        count[1] += 1;\n      }\n   \
    \ }\n  }\n  return count;\n}\n", "  let even = 0;\n  let odd = 0;\n  for(let i\
    \ = 1; i <= n; i++){\n    if(is_palindrome(i)){\n      if(i % 2 === 0){\n    \
    \    even++;\n      }else{\n        odd++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let even = 0;\n  let odd = 0;\n  for(let i = 1; i <= n; i++){\n\
    \    if(isPalindrome(i)){\n      if(i % 2 === 0){\n        even += 1;\n      }else{\n\
    \        odd += 1;\n      }\n    }\n  }\n  return [even, odd];\n}", "    var odd_count\
    \ = 0;\n    var even_count = 0;\n    for(var i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n\
    \            if(i.toString().length % 2 === 0){\n                even_count ++;\n\
    \            } else {\n                odd_count ++;\n            }\n        }\n\
    \    }\n    return [even_count, odd_count];\n}\n", "    let count = 0;\n    let\
    \ odd = 0;\n    let even = 0;\n    let arr = [];\n    for(let i = 1; i <= n; i++){\n\
    \        if(i < 10){\n            count++;\n            continue;\n        }\n\
    \        else if(i < 100){\n            if(i.toString()[0] == i.toString()[1]){\n\
    \                count++;\n                continue;\n            }\n        }\n\
    \        else if(i < 1000){\n            if(i.toString()[0] == i.toString()[2]){\n\
    \                count++;\n                continue;\n            }\n        }\n\
    \    }\n    for(let i = 1; i <= n; i++){\n        if(i < 10){\n            odd++;\n\
    \            continue;\n        }\n        else if(i < 100){\n            if(i.toString()[0]\
    \ == i.toString()[1]){\n                even++;\n                continue;\n \
    \           }\n            else odd++;\n        }\n        else if(i < 1000){\n\
    \            if(i.toString()[0] == i.toString()[2]){\n                odd++;\n\
    \                continue;\n            }\n            else even++;\n        }\n\
    \    }\n    arr.push(even);\n    arr.push(odd);\n    return arr;\n}\n", "  let\
    \ even_count = 0;\n  let odd_count = 0;\n  for(let i = 1; i <= n; i++){\n    let\
    \ num_string = i.toString();\n    let palindrome = true;\n    for(let j = 0; j\
    \ < num_string.length / 2; j++){\n      if(num_string[j] !== num_string[num_string.length\
    \ - j - 1]){\n        palindrome = false;\n        break;\n      }\n    }\n  \
    \  if(palindrome){\n      if(i % 2 === 0){\n        even_count++;\n      } else\
    \ {\n        odd_count++;\n      }\n    }\n  }\n  return [even_count, odd_count];\n\
    }\n", "  let totalEven = 0;\n  let totalOdd = 0;\n  if(n <= 0) return []\n  for(let\
    \ i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i%2 === 0){\n     \
    \   totalEven++\n      } else {\n        totalOdd++\n      }\n    }\n  }\n  return\
    \ [totalEven, totalOdd]\n}", "  let count = [0, 0];\n  for(let i = 1; i <= n;\
    \ i++){\n    if(palindrome(i)){\n      if(i % 2 === 0){\n        count[0] += 1;\n\
    \      } else {\n        count[1] += 1;\n      }\n    }\n  }\n  return count;\n\
    }\n", "    var even = 0;\n    var odd = 0;\n    var arr = [];\n    for(var i =\
    \ 1; i <= n; i++){\n        var int = i.toString();\n        if(int.length ==\
    \ 1 || int.length == 2){\n            even++;\n        }\n        else if(int.length\
    \ % 2 == 0){\n            if(int[0] == int[int.length - 1]){\n               \
    \ even++;\n            }\n        }\n        else if(int.length % 2 != 0){\n \
    \           if(int[0] == int[int.length - 1]){\n                odd++;\n     \
    \       }\n        }\n    }\n    arr.push(even);\n    arr.push(odd);\n    return\
    \ arr;\n}", "  var even = 0;\n  var odd = 0;\n  var arr = []\n  for(var i = 0;\
    \ i <= n; i++){\n    if(isPalindrome(i)){\n      if(i % 2 === 0){\n        even++\n\
    \      }else{\n        odd++\n      }\n    }\n  }\n  arr.push(even)\n  arr.push(odd)\n\
    \  return arr\n}", "    let res = [];\n    //returns arr of ints and how many\
    \ even and odd palindromes within that range\n}\n", "    var pal = [];\n    var\
    \ pair = [];\n    for(var i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            pal.push(i);\n        }\n    }\n    for(var i = 0; i < pal.length;\
    \ i++){\n        if(pal[i] % 2 === 0){\n            pair.push(pal[i]);\n     \
    \   }\n    }\n    return [pair.length, pal.length - pair.length];\n}", "    let\
    \ result = [0, 0];\n    for(let i = 1; i <= n; i++){\n        if(i == i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 === 0){\n                result[0] += 1;\n            }\
    \ else {\n                result[1] += 1;\n            }\n        }\n    }\n \
    \   return result;\n}", "    let even = 0;\n    let odd = 0;\n    for(i = 1; i\
    \ <= n; i++){\n        if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 === 0){\n                even++;\n            } else {\n\
    \                odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "  var even_count = 0;\n  var odd_count = 0;\n  // solution 1:\n  for(var\
    \ i = 1; i <= n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i.toString().length % 2 === 0){\n        even_count++;\n      } else\
    \ {\n        odd_count++;\n      }\n    }\n  }\n  return [even_count, odd_count];\n\
    }", "    var even = 0;\n    var odd = 0;\n    if(n >= 1 && n <= 1000){\n     \
    \   for(var i = 1; i <= n; i++){\n            if(palindrome(i)){\n           \
    \     if(i % 2 == 0){\n                    even++;\n                }else{\n \
    \                   odd++;\n                }\n            }\n        }\n    }\n\
    \    console.log([even, odd]);\n}\neven_odd_palindrome(3);\neven_odd_palindrome(12);\n\
    even_odd_palindrome(100);\neven_odd_palindrome(1000);\n", "    if(n < 1 || n >\
    \ Math.pow(10, 3)) return;\n    let evens = 0;\n    let odds = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        let palindrome = i.toString().split('').reverse().join('');\n\
    \        if(palindrome === i.toString()){\n            if(i % 2 === 0){\n    \
    \            evens += 1;\n            } else {\n                odds += 1;\n \
    \           }\n        }\n    }\n    return [evens, odds];\n}", "    // Solution\
    \ code here...\n}\n", "    let even = 0;\n    let odd = 0;\n    for(let i = 1;\
    \ i <= n; i++){\n        if(i === reverse_num(i)){\n            if(i % 2 === 0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return [even, odd];\n}\n", "    //YOUR CODE HERE\n\
    }", "\tvar even = 0;\n\tvar odd = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tif(n.toString()\
    \ == n.toString().split('').reverse().join('')){\n\t\t\tif(i % 2 == 0){\n\t\t\t\
    \teven++\n\t\t\t}else{\n\t\t\t\todd++\n\t\t\t}\n\t\t}\n\t}\n\treturn [even, odd]\n\
    }", "  var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    var\
    \ palindrome = i.toString().split('').reverse().join('');\n    if(palindrome ==\
    \ i && i % 2 == 0){\n      even++;\n    }\n    else if(palindrome == i && i %\
    \ 2 != 0){\n      odd++;\n    }\n  }\n  return [even, odd];\n}", "  let palindromes\
    \ = []\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      palindromes.push(i)\n\
    \    }\n  }\n  let odds = palindromes.filter(num => num % 2 === 1)\n  let evens\
    \ = palindromes.filter(num => num % 2 === 0)\n  return [evens.length, odds.length]\n\
    }\n", "  // create a list of palindromes\n  let list = [];\n  // iterate from\
    \ 1 to n, then check if its a palindrome\n  for(let i = 1; i <= n; i++){\n   \
    \ if(isPalindrome(i)){\n      list.push(i);\n    }\n  }\n  // create a counter\
    \ for even and odd palindromes\n  let counter = [0, 0];\n  // iterate the list\
    \ of palindromes\n  for(let i = 0; i < list.length; i++){\n    // if the palindrome\
    \ is even then increment the even counter\n    if(list[i] % 2 === 0){\n      counter[0]++;\n\
    \    } else {\n      // otherwise increment the odd counter\n      counter[1]++;\n\
    \    }\n  }\n  // return the even and odd counters\n  return counter;\n}", " \
    \   if(n < 1 || n > 1000) return;\n    let even = 0;\n    let odd = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        let digits = count_digits(i);\n        if(digits\
    \ % 2 === 0){\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return [even, odd];\n}\n", "    let result = [0, 0];\n   \
    \ for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            result[i\
    \ % 2]++;\n        }\n    }\n    return result;\n}", "    let even = 0;\n    let\
    \ odd = 0;\n    for(let i = 1; i <= n; i++){\n        let pal = i.toString().split('').reverse().join('');\n\
    \        if(pal == i){\n            if(i % 2 == 0){\n                even++;\n\
    \            }\n            else{\n                odd++;\n            }\n   \
    \     }\n    }\n    return [even, odd];\n}\n", "  let evens = 0;\n  let odds =\
    \ 0;\n  let str = '';\n  let temp = '';\n  let reverse = '';\n  for(let i = 1;\
    \ i < n; i++){\n    temp = i.toString();\n    reverse = temp.split('').reverse().join('');\n\
    \    if(temp === reverse){\n      if(i % 2 === 0){\n        evens += 1;\n    \
    \  }else{\n        odds += 1;\n      }\n    }\n  }\n  return [evens, odds];\n\
    }\n", "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n\
    \        if(isPalindrome(i)){\n            if(i % 2 === 0){\n                even++;\n\
    \            } else {\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}", "    let evenCount = 0\n    let oddCount = 0\n \
    \   for(let i = 1; i <= n; i++){\n        let digits = (i + '').split('')\n  \
    \      let revDigits = digits.slice().reverse()\n        if(digits.join('') ===\
    \ revDigits.join('')){\n            if(digits.length % 2 === 0){\n           \
    \     evenCount += 1\n            } else {\n                oddCount += 1\n  \
    \          }\n        }\n    }\n    return [evenCount, oddCount]\n}", "  // create\
    \ array to hold the even and odd numbers\n  let evenArray = [];\n  let oddArray\
    \ = [];\n  // loop through the numbers\n  for(var i = 1; i <= n; i++){\n    //\
    \ variable to store the string\n    let str = \"\";\n    // loop through the number\n\
    \    for(var j = i; j > 0; j--){\n      // add to the string variable\n      str\
    \ += j;\n    }\n    // if even string.length\n    if(str.length % 2 === 0){\n\
    \      // push to evenArray\n      evenArray.push(str);\n    }\n    // if odd\
    \ string.length\n    else if(str.length % 2 !== 0){\n      // push to oddArray\n\
    \      oddArray.push(str);\n    }\n  }\n  // return the length of the evenArray\
    \ and oddArray\n  return [evenArray.length, oddArray.length];\n}\n", "  var count\
    \ = 0;\n  var evencount = 0;\n  var oddcount = 0;\n  for(var i = 0; i <= n; i++){\n\
    \    for(var j = 0; j <= n; j++){\n      if( i == j){\n        count += 1;\n \
    \     }\n    }\n  }\n  evencount = count;\n  oddcount = (n*n) - count;\n  return\
    \ [evencount, oddcount];\n}\n", "    var even = 0;\n    var odd = 0;\n    for(var\
    \ i = 1; i <= n; i++){\n        if(palindrome(i)){\n            if(i % 2 === 0){\n\
    \                even++;\n            }\n            else{\n                odd++;\n\
    \            }\n        }\n    }\n    return [even, odd];\n}\n", "    let even\
    \ = 1;\n    let odd = 0;\n    for(let i = 2; i <= n; i++){\n        if(i % 10\
    \ === 0){\n            continue;\n        }\n        let str = i.toString();\n\
    \        let reversed = '';\n        for(let j = str.length - 1; j >= 0; j--){\n\
    \            reversed += str[j];\n        }\n        if(str === reversed){\n \
    \           if(str.length % 2 === 0){\n                even += 1;\n          \
    \  } else {\n                odd += 1;\n            }\n        }\n    }\n    return\
    \ [even, odd];\n}\n", "    var even = 0;\n    var odd = 0;\n    for(var i = 1;\
    \ i <= n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 === 0){\n\
    \                even++;\n            } else {\n                odd++;\n     \
    \       }\n        }\n    }\n    return [even, odd];\n}", "    let even = 0;\n\
    \    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        let j = i.toString();\n\
    \        if(j === j.split('').reverse().join('')){\n            if(j.length %\
    \ 2 === 0){\n                even += 1;\n            } else {\n              \
    \  odd += 1;\n            }\n        }\n    }\n    return [even, odd];\n}\n",
  "    let nn = n + 1;\n    let even = 0;\n    let odd = 0;\n    for(let i = 1; i\
    \ < nn; i++){\n        let s = i.toString();\n        if(s.split('').reverse().join('')\
    \ === s){\n            if(i % 2 === 0){\n                even++;\n           \
    \ } else {\n                odd++;\n            }\n        }\n    }\n    return\
    \ [even, odd];\n}", "    let arr = [];\n    for(let i = 1; i <= n; i++){\n   \
    \     let palindrome = '';\n        let str = i.toString();\n        for(let j\
    \ = str.length - 1; j >= 0; j--){\n            palindrome += str[j];\n       \
    \ }\n        if(palindrome == i && i % 2 == 0){\n            arr.push(i);\n  \
    \      }\n    }\n    return [arr.length, n - arr.length];\n}\n", "    function\
    \ isPalindrome(num){\n        let numToStr = num.toString();\n        let length\
    \ = numToStr.length;\n        let middle = Math.floor(length/2);\n        for(let\
    \ i = 0; i < middle; i++){\n            if(numToStr[i] !== numToStr[length - 1\
    \ - i]){\n                return false;\n            }\n        }\n        return\
    \ true;\n    }\n    let result = [0, 0];\n    for(let i = 1; i <= n; i++){\n \
    \       if(isPalindrome(i)){\n            if(i % 2 === 0){\n                result[0]++;\n\
    \            }else{\n                result[1]++;\n            }\n        }\n\
    \    }\n    return result;\n}\n", "  let result = [0, 0];\n  for(let i = 1; i\
    \ <= n; i++){\n    let digits = i.toString().split('');\n    let is_palindrome\
    \ = true;\n    for(let j = 0; j < digits.length / 2; j++){\n      if(digits[j]\
    \ !== digits[digits.length - 1 - j]){\n        is_palindrome = false;\n      \
    \  break;\n      }\n    }\n    if(is_palindrome){\n      if(i % 2 === 0){\n  \
    \      result[0]++;\n      } else {\n        result[1]++;\n      }\n    }\n  }\n\
    \  return result;\n}", "  const arr = [];\n  for(let i = 1; i <= n; i++){\n  \
    \  if(palindrome_finder(i) % 2 === 0){\n      arr.push(i);\n    }\n  }\n  return\
    \ [arr.length, n - arr.length];\n}", "    let num=0;\n    let arr=[];\n    for(let\
    \ i=1;i<=n;i++){\n        if(i<10){\n            num++;\n        }\n        else\
    \ if(i>=10&&i<100){\n            if(i%11==0){\n                num++;\n      \
    \      }\n        }\n        else if(i>=100&&i<1000){\n            if(Math.floor(i/100)==i%10){\n\
    \                num++;\n            }\n        }\n    }\n    if(num%2==0){\n\
    \        arr[0]=num/2;\n        arr[1]=num/2;\n    }\n    else{\n        arr[0]=Math.floor(num/2);\n\
    \        arr[1]=Math.floor(num/2)+1;\n    }\n    return arr;\n}", "    var odd\
    \ = 0;\n    var even = 0;\n    for(var i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 === 0){\n                even++;\n            }else{\n \
    \               odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "  let even = 0;\n  let odd = 0;\n  let num = 1;\n  while(num <= n){\n   \
    \ let reversedNum = parseInt(num.toString().split('').reverse().join(''));\n \
    \   if(num === reversedNum){\n      if(num%2 === 0){\n        even++;\n      }\
    \ else {\n        odd++;\n      }\n    }\n    num++;\n  }\n  return [even, odd];\n\
    }", "  let count = 0;\n  for(let i = 1; i < n + 1; i++){\n    if(isPalindrome(i)){\n\
    \      if(i % 2 == 0){\n        count++;\n      }\n    }\n  }\n  return [count,\
    \ n - count]\n}\n", "    // Write your code here\n    var even =0, odd =0;\n \
    \   for(var i=1; i<=n; i++){\n        var str = i.toString()\n        if(str.length\
    \ == 1){\n            even++;\n        }\n        else if(str.length == 2){\n\
    \            var a = str.substring(0,1);\n            var b = str.substring(1,2);\n\
    \            if(a == b){\n                even++;\n            }\n           \
    \ else{\n                odd++;\n            }\n        }\n        else{\n   \
    \         var a = str.substring(0,1);\n            var b = str.substring(1,2);\n\
    \            var c = str.substring(2,3);\n            if(a == c){\n          \
    \      even++;\n            }\n            else{\n                odd++;\n   \
    \         }\n        }\n    }\n    return [even, odd];\n\n}", "    var even =\
    \ 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n        var num = i;\n\
    \        var rev = 0;\n        while(num > 0){\n            var dig = num % 10;\n\
    \            rev = rev * 10 + dig;\n            num = Math.floor(num / 10);\n\
    \        }\n        if(rev == i){\n            if(i % 2 == 0){\n             \
    \   even++;\n            }\n            else{\n                odd++;\n      \
    \      }\n        }\n    }\n    return [even, odd];\n}", "    let evenCounter\
    \ = 0;\n    let oddCounter = 0;\n    for(let i = 1; i <= n; i++){\n        let\
    \ num = i;\n        let reverse = 0;\n        while(num){\n            reverse\
    \ = reverse * 10 + num % 10;\n            num = Math.floor(num / 10);\n      \
    \  }\n        if(reverse === i){\n            if(i % 2 === 0){\n             \
    \   evenCounter++;\n            }else{\n                oddCounter++;\n      \
    \      }\n        }\n    }\n    return [evenCounter, oddCounter];\n}", "    let\
    \ odd = 0;\n    let even = 0;\n    for(let i = 1; i <= n; i++){\n        let string\
    \ = i.toString()\n        if(string === string.split('').reverse().join('')){\n\
    \            if(string.length % 2 === 0){\n                even++;\n         \
    \   }else{\n                odd++;\n            }\n        }\n    }\n    return\
    \ [even, odd];\n}", "\tvar array = [];\n\tvar answer = [];\n\tvar num = 0;\n\t\
    for(var i = 1; i <= n; i++){\n\t\tarray.push(i);\n\t}\n\tfor(var j = 0; j < array.length;\
    \ j++){\n\t\tvar num = array[j];\n\t\tvar temp = num;\n\t\tvar reverse = 0;\n\t\
    \twhile(temp > 0){\n\t\t\tvar rem = temp % 10;\n\t\t\treverse = reverse * 10 +\
    \ rem;\n\t\t\ttemp = Math.floor(temp / 10);\n\t\t}\n\t\tif(num == reverse){\n\t\
    \t\tif(num % 2 == 0){\n\t\t\t\tanswer.push(num);\n\t\t\t}\n\t\t}\n\t}\n\tvar even_palindrome\
    \ = answer.length;\n\tvar odd_palindrome = n - even_palindrome;\n\treturn [even_palindrome,\
    \ odd_palindrome];\n}\n", "    var even = 0;\n    var odd = 0;\n    for(var i\
    \ = 1; i <= n; i++){\n        var j = i.toString();\n        var pal = \"\";\n\
    \        for(var k = j.length - 1; k >= 0; k--){\n            pal += j[k];\n \
    \       }\n        if(j == pal){\n            if(j.length % 2 == 0){\n       \
    \         even += 1;\n            }\n            else{\n                odd +=\
    \ 1;\n            }\n        }\n    }\n    return [even, odd];\n}", "    let even\
    \ = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(check_palindrome(i)){\n\
    \            if(i % 2 === 0){\n                even++;\n            }else{\n \
    \               odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "  let odd = 0;\n  let even = 0;\n  for(let i = 1; i<=n; i++){\n    let\
    \ palindrome = i.toString().split('').reverse().join('');\n    if(palindrome ===\
    \ i.toString()){\n      i % 2 === 0 ? even++ : odd++;\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n;\
    \ i++){\n        if(isPalindrome(i)){\n            if(i % 2 === 0){\n        \
    \        even++;\n            } else {\n                odd++;\n            }\n\
    \        }\n    }\n    return [even, odd];\n}\n", "    //YOUR CODE GOES HERE\n\
    \    let evenPalindrome = 0;\n    let oddPalindrome = 0;\n    for (let i = 1;\
    \ i <= n; i++) {\n        if (isPalindrome(i) && i % 2 === 0) {\n            evenPalindrome++;\n\
    \        } else if (isPalindrome(i) && i % 2 !== 0) {\n            oddPalindrome++;\n\
    \        }\n    }\n    return [evenPalindrome, oddPalindrome];\n}\n", "  let even\
    \ = 0;\n  let odd = 0;\n  for(let i = 1; i<=n; i++){\n    let number = i.toString();\n\
    \    let str = '';\n    for(let j = number.length-1; j>=0; j--){\n      str +=\
    \ number[j];\n    }\n    if(number === str){\n      if(number.length % 2 === 0){\n\
    \        even++;\n      }else{\n        odd++;\n      }\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    var arr = []\n    var even = 0\n    var odd = 0\n \
    \   for(var i = 1; i <= n; i++){\n        if(i < 10){\n            if(i % 2 ===\
    \ 0){\n                even += 1\n            }else{\n                odd += 1\n\
    \            }\n        }else{\n            if(i < 100){\n                if(i\
    \ % 10 === i / 10){\n                    if(i % 2 === 0){\n                  \
    \      even += 1\n                    }else{\n                        odd += 1\n\
    \                    }\n                }\n            }else{\n              \
    \  if(i < 1000){\n                    if(i % 10 === Math.floor(i / 100)){\n  \
    \                      if(i % 2 === 0){\n                            even += 1\n\
    \                        }else{\n                            odd += 1\n      \
    \                  }\n                    }\n                }\n            }\n\
    \        }\n    }\n    arr.push(even)\n    arr.push(odd)\n    return arr\n}\n",
  "    // ENTER CODE HERE\n}", "    let is_palindrome = (num) => {\n        let str\
    \ = num.toString();\n        let first_half = str.slice(0, Math.floor(str.length\
    \ / 2));\n        let last_half = str.slice(Math.ceil(str.length / 2)).split('').reverse().join('');\n\
    \        return first_half === last_half;\n    }\n    let odd_count = 0;\n   \
    \ let even_count = 0;\n    for(let i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n\
    \            if(i % 2 == 0){\n                even_count += 1;\n            }\n\
    \            else{\n                odd_count += 1;\n            }\n        }\n\
    \    }\n    return [even_count, odd_count];\n}\n", "\n}", "    if(n <= 0){\n \
    \       return;\n    }\n    let evenCount = 0;\n    let oddCount = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(isPalindrome(i) && i % 2 === 0){\n        \
    \    evenCount++;\n        } else if(isPalindrome(i) && i % 2 !== 0){\n      \
    \      oddCount++;\n        }\n    }\n    return [evenCount, oddCount];\n}", " \
    \ // your code here\n}", "  let even = 0;\n  let odd = 0;\n  let array = []\n\
    \  for(let i = 1; i <= n; i++){\n    let num = i.toString();\n    if(num.length\
    \ % 2 === 0){\n      if(num[0] === num[num.length - 1]){\n        even += 1;\n\
    \      }\n    }\n    else if(num.length % 2 !== 0){\n      if(num[0] === num[num.length\
    \ - 1]){\n        odd += 1;\n      }\n    }\n  }\n  array.push(even);\n  array.push(odd);\n\
    \  return array;\n}\n", "    const odd_count = Math.floor(n/2);\n    let even_count\
    \ = 0;\n    if(n % 2 === 0){\n        even_count = odd_count;\n    } else {\n\
    \        even_count = odd_count - 1;\n    }\n    return [even_count, odd_count];\n\
    }", "  //YOUR CODE HERE\n  // var num = n.toString().split('').reverse().join('');\n\
    \  // var arr = [];\n  // var even = 0;\n  // var odd = 0;\n  // for(var i = 1;\
    \ i <= n; i++){\n  //   if(i === i.toString().split('').reverse().join('')){\n\
    \  //     arr.push(i);\n  //   }\n  // }\n  // for(var j = 0; j < arr.length;\
    \ j++){\n  //   if(arr[j] % 2 === 0){\n  //     even++;\n  //   } else {\n  //\
    \     odd++;\n  //   }\n  // }\n  // return [even, odd];\n  // var num = n.toString().split('').reverse().join('');\n\
    \  // var arr = [];\n  // var even = 0;\n  // var odd = 0;\n  // for(var i = 1;\
    \ i <= n; i++){\n  //   if(i === parseInt(num)){\n  //     arr.push(i);\n  //\
    \   }\n  // }\n  // for(var j = 0; j < arr.length; j++){\n  //   if(arr[j] % 2\
    \ === 0){\n  //     even++;\n  //   } else {\n  //     odd++;\n  //   }\n  //\
    \ }\n  // return [even, odd];\n  var result = [0, 0];\n  for(var i = 1; i <= n;\
    \ i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        result[0]++;\n      } else {\n        result[1]++;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  let result=[0,0];\n  for(let\
    \ i=1;i<=n;i++){\n    if(palindrome(i)){\n      if(even(i)){\n        result[0]++;\n\
    \      }else{\n        result[1]++;\n      }\n    }\n  }\n  return result;\n}",
  "  let even = [];\n  let odd = [];\n  for(let i = 1; i <= n; i++){\n    let strI\
    \ = i.toString();\n    let half = strI.length/2;\n    let leftHalf = strI.slice(0,half);\n\
    \    let rightHalf = strI.slice(half).split('').reverse().join('');\n    if(leftHalf\
    \ == rightHalf){\n      if(i%2 == 0){\n        even.push(i);\n      }else{\n \
    \       odd.push(i);\n      }\n    }\n  }\n  return [even.length, odd.length];\n\
    }\n", "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n\
    \        if(i.toString() === i.toString().split('').reverse().join('')){\n   \
    \         if(i.toString().length % 2 === 0){\n                even++;\n      \
    \      } else {\n                odd++;\n            }\n        }\n    }\n   \
    \ return [even, odd];\n}", "    let count_even = 0;\n    let count_odd = 0;\n\
    \    let palindrome;\n    let temp = n;\n    let length;\n    let mid;\n    let\
    \ right;\n    let left;\n    while(temp > 0){\n        palindrome = temp;\n  \
    \      length = palindrome.toString().length;\n        if(length % 2 == 0){\n\
    \            mid = length / 2;\n            right = Math.floor(mid) - 1;\n   \
    \         left = Math.ceil(mid);\n            while(right >= 0 && left < length){\n\
    \                if(palindrome.toString()[right] == palindrome.toString()[left]){\n\
    \                    right--;\n                    left++;\n                }else{\n\
    \                    break;\n                }\n            }\n            if(right\
    \ < 0 && left >= length){\n                if(palindrome % 2 == 0){\n        \
    \            count_even++;\n                }else{\n                    count_odd++;\n\
    \                }\n            }\n        }else{\n            mid = Math.floor(length\
    \ / 2);\n            right = mid - 1;\n            left = mid + 1;\n         \
    \   while(right >= 0 && left < length){\n                if(palindrome.toString()[right]\
    \ == palindrome.toString()[left]){\n                    right--;\n           \
    \         left++;\n                }else{\n                    break;\n      \
    \          }\n            }\n            if(right < 0 && left >= length){\n  \
    \              if(palindrome % 2 == 0){\n                    count_even++;\n \
    \               }else{\n                    count_odd++;\n                }\n\
    \            }\n        }\n        temp--;\n    }\n    console.log(count_even,\
    \ count_odd);\n}\n\neven_odd_palindrome(3);\neven_odd_palindrome(12);", "    var\
    \ count = [0, 0];\n    for(var i = 1; i <= n; i++){\n        var palindrome =\
    \ isPalindrome(i);\n        if(palindrome === true){\n            if(i % 2 ===\
    \ 0){\n                count[0] += 1;\n            }\n            else{\n    \
    \            count[1] += 1;\n            }\n        }\n    }\n    return count;\n\
    }", "  var evenCount = 0;\n  var oddCount = 0;\n  for(i=1; i<=n; i++){\n    if(isPalindrome(i)){\n\
    \      if(i%2 === 0){\n        evenCount++;\n      } else {\n        oddCount++;\n\
    \      }\n    }\n  }\n  return [evenCount, oddCount];\n}\n", "    let evens =\
    \ 0;\n    let odds = 0;\n    for(let i = 1; i <= n; i++){\n        let palindrome\
    \ = String(i).split('').reverse().join('');\n        if(palindrome == i){\n  \
    \          if(palindrome % 2 == 0){\n                evens += 1;\n           \
    \ }else{\n                odds += 1;\n            }\n        }\n    }\n    return\
    \ [evens, odds];\n}\n", "    const res = [0, 0];\n    for(let i = 1; i <= n; i++){\n\
    \        if(isPalindrome(i)){\n            if(i % 2 == 0){\n                res[0]++;\n\
    \            } else {\n                res[1]++;\n            }\n        }\n \
    \   }\n    return res;\n}", "  if(n < 1 || n > 1000) return 'Invalid Input';\n\
    \  let even_count = 0;\n  let odd_count = 0;\n  for(let i = 1; i <= n; i++){\n\
    \    let index = 0;\n    let j = i;\n    while(j > 0){\n      index = (index *\
    \ 10) + (j % 10);\n      j = Math.floor(j / 10);\n    }\n    if(index === i) {\n\
    \      if(i % 2 === 0) even_count++;\n      else odd_count++;\n    }\n  }\n  return\
    \ [even_count, odd_count];\n}", "    if(n <= 0) return null;\n    let even = 0;\n\
    \    let odd = 0;\n    let output = [];\n    for(let i = 1; i <= n; i++){\n  \
    \      if(isPalindrome(i) && i % 2 === 0){\n            even++;\n        }\n \
    \       if(isPalindrome(i) && i % 2 !== 0){\n            odd++;\n        }\n \
    \   }\n    output.push(even);\n    output.push(odd);\n    return output;\n}\n",
  "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n       \
    \ let str = i.toString();\n        let len = str.length;\n        let isPalindrome\
    \ = true;\n        for(let j = 0; j < len/2; j++){\n            if(str[j] !==\
    \ str[len-1-j]){\n                isPalindrome = false;\n                break;\n\
    \            }\n        }\n        if(isPalindrome){\n            if(i % 2 ===\
    \ 0){\n                even++;\n            }else{\n                odd++;\n \
    \           }\n        }\n    }\n    return [even, odd];\n}", "    // edge cases\n\
    \    if(n < 1 || n > Math.pow(10, 3)) return null;\n    let even_count = 0;\n\
    \    let odd_count = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 === 0){\n                even_count++;\n            } else\
    \ {\n                odd_count++;\n            }\n        }\n    }\n    return\
    \ [even_count, odd_count];\n}\n", "    let count = [0, 0];\n    for(let i = 1;\
    \ i <= n; i++){\n        if(isPalindrome(i)){\n            i % 2 == 0 ? count[0]++\
    \ : count[1]++;\n        }\n    }\n    return count;\n}", "    if(n < 1 || n >\
    \ 1000) return \"please enter number between 1 to 1000\";\n    let even = 0;\n\
    \    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n\
    \    return [even, odd];\n}", "  let result = [0, 0];\n  for(let i = 1; i <= n;\
    \ i++){\n    if(is_palindrome(i)){\n      if(i % 2 === 0){\n        result[0]++;\n\
    \      }else{\n        result[1]++;\n      }\n    }\n  }\n  return result;\n}",
  "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n       \
    \ let str = i.toString();\n        if(str == str.split('').reverse().join('')){\n\
    \            if(i % 2 == 0){\n                even++;\n            }else{\n  \
    \              odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n \
    \       if(i % 2 == 0){\n            even++;\n        }\n        else{\n     \
    \       odd++;\n        }\n    }\n    return [even, odd];\n}", "  //your code\
    \ here\n  let evens = 0;\n  let odds = 0;\n  let str = '';\n  let reverse = '';\n\
    \  let num = 0;\n  let lst = [];\n  for(let i = 1; i <= n; i++){\n    str = ''\
    \ + i;\n    reverse = str.split('').reverse().join('');\n    if(str === reverse){\n\
    \      num = parseInt(str);\n      if(num % 2 === 0){\n        evens++;\n    \
    \  }\n      else{\n        odds++;\n      }\n    }\n  }\n  lst.push(evens);\n\
    \  lst.push(odds);\n  return lst;\n}", "    var count = 0;\n    var array1 = [];\n\
    \    var array2 = [];\n    for(var i = 1; i <= n; i++){\n        array1.push(i);\n\
    \    }\n    console.log(array1);\n    for(var j = 0; j < array1.length; j++){\n\
    \        if(array1[j] === array1[j].toString().split(\"\").reverse().join(\"\"\
    )){\n            array2.push(array1[j]);\n        }\n    }\n    console.log(array2);\n\
    \    for(var k = 0; k < array2.length; k++){\n        if(array2[k] % 2 === 0){\n\
    \            count += 1;\n        }\n    }\n    console.log(count);\n    array1.push(count);\n\
    \    return array1;\n}\n", "    function isPalindrome(num){\n        return String(num)\
    \ === String(num).split('').reverse().join('');\n    }\n    let even = 0;\n  \
    \  let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 === 0){\n                even++;\n            } else {\n\
    \                odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "    var odd = 0,\n        even = 0;\n    for(let i = 1; i <= n; i++){\n \
    \       if(isPalindrome(i)){\n            if(i % 2 === 0){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}", "  // Write your code here!\n}\n", "    // Your\
    \ code is here...\n}\n", "  if(n < 1 || n > Math.pow(10, 3)){\n    return \"invalid\
    \ input\";\n  }\n  var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n\
    \    if(isPalindrome(i)){\n      if(i % 2 === 0){\n        even += 1;\n      }\
    \ else {\n        odd += 1;\n      }\n    }\n  }\n  return [even, odd];\n}\n",
  "  let even = 0;\n  let odd = 0;\n  for(let i = 1; i <= n; i++){\n    if(i % 2 ===\
    \ 0) even++;\n    else odd++;\n  }\n  return [even, odd];\n}", "    var even =\
    \ 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n\
    \            if(i % 2 === 0){\n                even += 1;\n            }\n   \
    \         else{\n                odd += 1;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}\n", "    var even = 0;\n    var odd = 0;\n    for(var\
    \ i = 1; i <= n; i++){\n        var reversed = i.toString().split('').reverse().join('');\n\
    \        if(i === parseInt(reversed)){\n            if(i % 2 === 0){\n       \
    \         even += 1;\n            }else{\n                odd += 1;\n        \
    \    }\n        }\n    }\n    return [even, odd];\n}", "    var even = 0;\n  \
    \  var odd = 0;\n    for(var i = 1; i <= n; i++){\n        if(i % 2 == 0){\n \
    \           even++\n        }\n        else{\n            odd++\n        }\n \
    \   }\n    return [even, odd]\n}", "  //your code here\n}", "    let result =\
    \ [0, 0];\n    for(let i = 1; i <= n; i++){\n        let reversed = reverse(i);\n\
    \        if(i === reversed){\n            if(i % 2 == 0){\n                result[0]++;\n\
    \            } else {\n                result[1]++;\n            }\n        }\n\
    \    }\n    return result;\n}\n", "    let arr= [];\n    let even=0;\n    let\
    \ odd=0;\n    for(let i=1; i<=n; i++){\n        if(i === reverse(i)){\n      \
    \      if(i%2 === 0){\n                even++;\n            }\n            else{\n\
    \                odd++;\n            }\n        }\n    }\n    arr.push(even);\n\
    \    arr.push(odd);\n    return arr;\n}", "    let evens = 1;\n    let odds =\
    \ 0;\n    for(let i = 2; i <= n; i++){\n        if(is_palindrome(i)){\n      \
    \      if(i % 2 === 0){\n                evens++;\n            } else {\n    \
    \            odds++;\n            }\n        }\n    }\n    return [evens, odds];\n\
    }\n", "    let even_count = 0;\n    let odd_count = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        if(is_palindrome(i)){\n            if(i % 2 === 0){\n    \
    \            even_count++;\n            }\n            else{\n               \
    \ odd_count++;\n            }\n        }\n    }\n    return [even_count, odd_count];\n\
    }\n", "    var arr = [];\n    for(var i = 1; i <= n; i++){\n        var num =\
    \ i.toString();\n        if(num.split('').reverse().join('') == num){\n      \
    \      if(num.length % 2 == 0){\n                arr.push(num);\n            }\n\
    \        }\n    }\n    return [arr.length, n - arr.length];\n}", "    //YOUR CODE\
    \ GOES HERE\n    let even_count = 0;\n    let odd_count = 0;\n    for (let i =\
    \ 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 ===\
    \ 0) {\n                even_count++\n            } else {\n                odd_count++\n\
    \            }\n        }\n    }\n    return [even_count, odd_count]\n}\n", " \
    \   let countEven = 0;\n    let countOdd = 0;\n    for(let i = 1; i <= n; i++){\n\
    \        let str = i.toString();\n        let reverse = str.split('').reverse().join('');\n\
    \        if(str == reverse){\n            if(str.length % 2 === 0){\n        \
    \        countEven++;\n            }else{\n                countOdd++;\n     \
    \       }\n        }\n    }\n    return [countEven, countOdd];\n}\nlet check =\
    \ even_odd_palindrome(12);", "  let evenCount = 0;\n  let oddCount = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i % 2 === 0){\n   \
    \     evenCount++;\n      } else {\n        oddCount++;\n      }\n    }\n  }\n\
    \  return [evenCount, oddCount];\n}", "  var result = [0, 0];\n  var i;\n  var\
    \ j;\n  var str;\n  var count;\n  var k;\n  for(i = 1; i <= n; i++){\n    count\
    \ = 0;\n    str = i.toString();\n    for(j = 0; j < str.length; j++){\n      for(k\
    \ = j; k < str.length; k++){\n        if(str[j] !== str[k]){\n          break;\n\
    \        }\n        count++;\n      }\n    }\n    if(count === str.length){\n\
    \      if(i % 2 === 0){\n        result[0]++;\n      }else{\n        result[1]++;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    var even = 0;\n    var odd\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(i % 2 == 0){\n          \
    \  even += 1;\n        }else{\n            odd += 1;\n        }\n    }\n    return\
    \ [even, odd];\n}", "    function isPalindrome(num){\n        if(typeof num !==\
    \ 'number') return false;\n        if(num < 0) return false;\n        let newNum\
    \ = num;\n        let reverseNum = 0;\n        while(newNum > 0){\n          \
    \  let remainder = newNum % 10;\n            reverseNum = reverseNum * 10 + remainder;\n\
    \            newNum = Math.floor(newNum / 10);\n        }\n        return reverseNum\
    \ === num;\n    }\n    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 === 0){\n     \
    \           even += 1;\n            } else {\n                odd += 1;\n    \
    \        }\n        }\n    }\n    return [even, odd];\n}", "  // return a list\n\
    \  let palindromes = [];\n  for (let i = 1; i <= n; i++) {\n    let isPalindrome\
    \ = checkPalindrome(i.toString());\n    if (isPalindrome) {\n      palindromes.push(i);\n\
    \    }\n  }\n  let even = 0;\n  let odd = 0;\n  for (let i = 0; i < palindromes.length;\
    \ i++) {\n    if (palindromes[i] % 2 === 0) {\n      even++;\n    } else {\n \
    \     odd++;\n    }\n  }\n  return [even, odd];\n}\n", "  let evens = 0;\n  let\
    \ odds = 0;\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      i\
    \ % 2 === 0 ? evens++ : odds++;\n    }\n  }\n  return [evens, odds];\n}\n", " \
    \ var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(i % 2\
    \ == 0 && isPalindrome(i)){\n      even++;\n    }\n    else if(i % 2 != 0 && isPalindrome(i)){\n\
    \      odd++;\n    }\n  }\n  return [even, odd];\n}", "    // Write your code\
    \ here.\n}\n", "  let arr = [];\n  let countEven = 0;\n  let countOdd = 0;\n \
    \ for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i % 2 === 0){\n\
    \        countEven++;\n      } else {\n        countOdd++;\n      }\n    }\n \
    \ }\n  arr.push(countEven);\n  arr.push(countOdd);\n  return arr;\n}\n", "   \
    \ var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n        if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n            if(i % 2 === 0){\n\
    \                even += 1;\n            }\n            else{\n              \
    \  odd += 1;\n            }\n        }\n    }\n    return [even, odd];\n}", " \
    \   // n = n + 1;\n    let countOdd = 0;\n    let countEven = 0;\n    for(let\
    \ i = 1; i < n + 1; i++){\n        if(is_palindrome(i) && i % 2 === 0){\n    \
    \        countEven += 1;\n        }\n        if(is_palindrome(i) && i % 2 ===\
    \ 1){\n            countOdd += 1;\n        }\n    }\n    return [countEven, countOdd];\n\
    }", "    // Your code here\n    var arr = [];\n    var odd = 0;\n    var even\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(i % 10 === i){\n        \
    \    even++;\n        }\n        if(Math.floor(i/10) == i % 10){\n           \
    \ odd++;\n        }\n    }\n    arr.push(even);\n    arr.push(odd);\n    return\
    \ arr;\n}", "  // keep track of even palindromes and odd palindromes\n  let even\
    \ = 0;\n  let odd = 0;\n  // iterate through the numbers in range (1, n)\n  for\
    \ (let i = 1; i <= n; i++) {\n    // if the current number is a palindrome\n \
    \   if (isPalindrome(i)) {\n      // if the current number is even\n      if (i\
    \ % 2 === 0) {\n        // increment even palindromes\n        even++;\n     \
    \ } else {\n        // otherwise, increment odd palindromes\n        odd++;\n\
    \      }\n    }\n  }\n  // return an array containing even and odd palindromes,\
    \ respectively\n  return [even, odd];\n}\n", "    // Please write your code here.\n\
    \    var even = 0;\n    var odd = 0;\n    for(let i = 1; i <= n; i++){\n     \
    \   if(checkPalindrome(i)){\n            if(i%2 == 0){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    console.log(even, odd);\n    return [even, odd];\n}\n", "  let count = [0,\
    \ 0];\n  for(let i = 1; i <= n; i++){\n    if(checkPalindrome(i)){\n      if(i\
    \ % 2 === 0){\n        count[0]++;\n      } else {\n        count[1]++;\n    \
    \  }\n    }\n  }\n  return count;\n}\n", "    let result = [0, 0];\n    for(let\
    \ i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n            i % 2 == 0\
    \ ? result[0]++ : result[1]++;\n        }\n    }\n    return result;\n}", "  \
    \  var totalPalindromes = 0;\n    var evenPalindromes = 0;\n    var oddPalindromes\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        var stringNum = i.toString();\n\
    \        var stringReverse = i.toString().split(\"\").reverse().join(\"\");\n\
    \        if(stringNum === stringReverse){\n            totalPalindromes++;\n \
    \           if(stringNum.length % 2 === 0){\n                evenPalindromes++;\n\
    \            } else {\n                oddPalindromes++;\n            }\n    \
    \    }\n    }\n    return [evenPalindromes, oddPalindromes];\n}", "    var even\
    \ = 0, odd = 0;\n    if(n < 1 || n > 1000) {\n        return 'No range';\n   \
    \ }\n    for(var i = 1; i <= n; i++) {\n        if(palindrome(i)) {\n        \
    \    if(i % 2 === 0) {\n                even++;\n            } else {\n      \
    \          odd++;\n            }\n        }\n    }\n    return [even, odd];\n}",
  "    let oddPalindrome = 0;\n    let evenPalindrome = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        if(isPalindrome(i)){\n            if(isEven(i)){\n       \
    \         evenPalindrome++\n            } else {\n                oddPalindrome++\n\
    \            }\n        }\n    }\n    return [evenPalindrome, oddPalindrome]\n\
    }\n", "    if(typeof n != 'number'){\n        throw new Error('n is not a number');\n\
    \    }else if(n < 1 || n > 1000){\n        throw new Error('n is out of range');\n\
    \    }\n    const results = [0, 0];\n    for(let i = 1; i <= n; i++){\n      \
    \  let isOdd = true;\n        for(let i = 0; i < Math.floor(i.toString().length\
    \ / 2); i++){\n            if(i.toString()[i] != i.toString()[i.toString().length\
    \ - 1 - i]){\n                isOdd = false;\n                break;\n       \
    \     }\n        }\n        if(isOdd){\n            results[1]++;\n        }else{\n\
    \            results[0]++;\n        }\n    }\n    return results;\n}", "  let\
    \ even_odd = [];\n  let even_count = 0;\n  let odd_count = 0;\n  for(let i = 1;\
    \ i <= n; i++){\n    if(i % 2 === 0){\n      even_count += 1;\n    } else {\n\
    \      odd_count += 1;\n    }\n  }\n  even_odd.push(even_count);\n  even_odd.push(odd_count);\n\
    \  return even_odd;\n}\n", "  let even = 0;\n  let odd = 0;\n  for(let i = 1;\
    \ i <= n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        even += 1;\n      } else {\n        odd += 1;\n\
    \      }\n    }\n  }\n  return [even, odd];\n}", "    let even = 0, odd = 0;\n\
    \    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            i\
    \ % 2 == 0 ? even++ : odd++;\n        }\n    }\n    return [even, odd];\n}", " \
    \ var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n\
    \      if(i % 2 === 0){\n        even++;\n      }else{\n        odd++;\n     \
    \ }\n    }\n  }\n  return [even, odd];\n}\n", "    if(n <= 0){\n        return\
    \ [0, 0];\n    }\n    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 === 0){\n     \
    \           even++;\n            }else{\n                odd++;\n            }\n\
    \        }\n    }\n    return [even, odd];\n}\n", "  let e = 0, o = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(i === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        e += 1;\n      } else {\n        o += 1;\n  \
    \    }\n    }\n  }\n  return [e, o];\n}", "\n}", "    let evenCounter = 0;\n \
    \   let oddCounter = 0;\n    for(i = 1; i <= n; i++){\n        if( i == +i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 == 0){\n                evenCounter++;\n            }else{\n\
    \                oddCounter++;\n            }\n        }\n    }\n    return [evenCounter,\
    \ oddCounter];\n}", "    const res = [0, 0];\n    for(let i = 1; i <= n; i++){\n\
    \        if(isPalindrome(i)){\n            i % 2 ? res[1]++ : res[0]++;\n    \
    \    }\n    }\n    return res;\n}\n", "    //loop through the string, checking\
    \ each value. if it is a palindrome and if it is odd or even\n    let even = 0;\n\
    \    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        let num = i.toString();\n\
    \        if(num === num.split('').reverse().join('')){\n            if(num.length\
    \ % 2 === 0){\n                even ++;\n            }else{\n                odd\
    \ ++;\n            }\n        }\n    }\n    return [even, odd];\n}\n", "    var\
    \ arr=[0,0];\n    for(var i=1;i<=n;i++){\n        var str=i.toString();\n    \
    \    var reverseStr=str.split(\"\").reverse().join(\"\");\n        if(str==reverseStr){\n\
    \            if(i%2==0){\n                arr[0]++;\n            }\n         \
    \   else{\n                arr[1]++;\n            }\n        }\n    }\n    return\
    \ arr;\n}\nvar n=12;", "  let count = 0;\n  for(let i = 1; i < n; i++){\n    if(palindrome(i)\
    \ && i % 2 === 0){\n      count++;\n    }\n  }\n  return [count, n - count];\n\
    }\n", "  if(n < 1 || n > 1000) return null;\n  var even = 0;\n  var odd = 0;\n\
    \  var arr = [];\n  for(var i = 1; i <= n; i++){\n    var reverse = i.toString().split('').reverse().join('');\n\
    \    if(reverse == i){\n      if(i % 2 == 0){\n        even += 1;\n      } else\
    \ {\n        odd += 1;\n      }\n    }\n  }\n  arr.push(even);\n  arr.push(odd);\n\
    \  return arr;\n}\n", "\t// your code here\n}\n", "    var total = 0, odd = 0,\
    \ even = 0;\n    for(var i = 1; i <= n; i++){\n        var str = i.toString();\n\
    \        if(isPalindrome(str)){\n            total++;\n            if(isEven(str)){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return [even, odd];\n}", "  const isPalindrome\
    \ = function(num){\n    return num.toString() === num.toString().split('').reverse().join('');\n\
    \  }\n  let evens = 0;\n  let odds = 0;\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n\
    \      if(i % 2 === 0){\n        evens++;\n      } else {\n        odds++;\n \
    \     }\n    }\n  }\n  return [evens, odds];\n}", "  let even = 0;\n  let odd\
    \ = 0;\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i %\
    \ 2 === 0){\n        even++;\n      } else {\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        let digits = Math.floor(Math.log10(i)) + 1;\n\
    \        if(digits % 2 === 0){\n            even += 1;\n        } else {\n   \
    \         odd += 1;\n        }\n    }\n    return [even, odd];\n}", "    var odds\
    \ = 0;\n    var evens = 0;\n    var str;\n    var pal;\n    for(var i = 1; i <=\
    \ n; i++){\n        str = i.toString();\n        pal = str.split('').reverse().join('');\n\
    \        if(str === pal){\n            if(str.length % 2 === 0){\n           \
    \     evens++;\n            } else {\n                odds++;\n            }\n\
    \        }\n    }\n    return [evens, odds];\n}\nvar result = even_odd_palindrome(12);",
  "    let palindromes = [0, 0];\n\n    for(let i = 1; i <= n; i++){\n        let\
    \ num = i.toString();\n        if(num === num.split('').reverse().join('')){\n\
    \            if(num.length % 2 === 0){\n                palindromes[0]++;\n  \
    \          } else {\n                palindromes[1]++;\n            }\n      \
    \  }\n    }\n\n    return palindromes;\n}\n", "    var evens = 0;\n    var odds\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 === 0){\n                evens++;\n            }\n     \
    \       else{\n                odds++;\n            }\n        }\n    }\n    return\
    \ [evens, odds];\n}", "    var evens = 0;\n    var odds = 0;\n    for(var i =\
    \ 1; i <= n; i++){\n        if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \            if(i % 2 === 0){\n                evens++;\n            }\n     \
    \       else{\n                odds++;\n            }\n        }\n    }\n    return\
    \ [evens, odds];\n}\n", "    var results = [0, 0];\n    for(var i = 1; i <= n;\
    \ i++){\n        var num = i.toString();\n        if(isPalindrome(num)){\n   \
    \         if(isEven(num)){\n                results[0] = results[0] + 1;\n   \
    \         } else {\n                results[1] = results[1] + 1;\n           \
    \ }\n        }\n    }\n    return results;\n}", "    var even = 0;\n    var odd\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        if(palindrome(i) && even_odd(i)){\n\
    \            even += 1;\n        }\n        else if(palindrome(i)){\n        \
    \    odd += 1;\n        }\n    }\n    return [even, odd];\n}\n", "  var even_count\
    \ = 0;\n  var odd_count = 0;\n  var palindrome_array = [];\n  var is_palindrome\
    \ = true;\n  var n_string = n.toString();\n  for(var i = 1; i < n; i++){\n   \
    \ var i_string = i.toString();\n    if(i_string.length % 2 === 0){\n      for(var\
    \ j = 0; j < i_string.length / 2; j++){\n        if(i_string[j] != i_string[i_string.length\
    \ - j - 1]){\n          is_palindrome = false;\n        }\n      }\n      if(is_palindrome){\n\
    \        if(i % 2 === 0){\n          even_count++;\n        }\n        else{\n\
    \          odd_count++;\n        }\n      }\n      is_palindrome = true;\n   \
    \ }\n    else{\n      for(var j = 0; j < (i_string.length - 1) / 2; j++){\n  \
    \      if(i_string[j] != i_string[i_string.length - j - 1]){\n          is_palindrome\
    \ = false;\n        }\n      }\n      if(is_palindrome){\n        if(i % 2 ===\
    \ 0){\n          even_count++;\n        }\n        else{\n          odd_count++;\n\
    \        }\n      }\n      is_palindrome = true;\n    }\n  }\n  if(n_string.length\
    \ % 2 === 0){\n    for(var j = 0; j < n_string.length / 2; j++){\n      if(n_string[j]\
    \ != n_string[n_string.length - j - 1]){\n        is_palindrome = false;\n   \
    \   }\n    }\n    if(is_palindrome){\n      if(n % 2 === 0){\n        even_count++;\n\
    \      }\n      else{\n        odd_count++;\n      }\n    }\n    is_palindrome\
    \ = true;\n  }\n  else{\n    for(var j = 0; j < (n_string.length - 1) / 2; j",
  "\tvar even = 0;\n\tvar odd = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tif(isPalindrome(i)){\n\
    \t\t\tif(i%2==0){\n\t\t\t\teven++;\n\t\t\t}else{\n\t\t\t\todd++;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn [even, odd];\n}", "  var even_array = [];\n  var odd_array =\
    \ [];\n  var array = [];\n  for(var i = 1; i <= n; i++){\n    var s = i.toString().split(\"\
    \").reverse().join(\"\");\n    if(s === i.toString()){\n      if(s.length % 2\
    \ === 0){\n        even_array.push(s);\n      }else{\n        odd_array.push(s);\n\
    \      }\n    }\n  }\n  array.push(even_array.length);\n  array.push(odd_array.length);\n\
    \  return array;\n}", "  var palindromes = [];\n  var even = 0;\n  var odd = 0;\n\
    \  var result = [];\n  for(var i = 1; i <= n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      palindromes.push(i);\n    }\n  }\n  for(var j = 0; j < palindromes.length;\
    \ j++){\n    if(palindromes[j] % 2 === 0){\n      even += 1;\n    } else {\n \
    \     odd += 1;\n    }\n  }\n  result.push(even);\n  result.push(odd);\n  return\
    \ result;\n}", "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n;\
    \ i++){\n        if(palindrome(i)){\n            if(i % 2 === 0){\n          \
    \      even += 1;\n            }\n            else {\n                odd += 1;\n\
    \            }\n        }\n    }\n    return [even, odd];\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

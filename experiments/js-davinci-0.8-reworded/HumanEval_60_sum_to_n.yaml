name: HumanEval_60_sum_to_n
language: js
prompt: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
  // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
  // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
  \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
  \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
completions: ["\tvar sum = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\
    \treturn sum;\n}\n", "    return n * (n + 1) / 2;\n}", "  return n * (n + 1) /\
    \ 2;\n}\n", "  var total = 0;\n  for(var i = 1; i <= n; i++){\n    total += i;\n\
    \  }\n  return total;\n}\n", "  var sum = 0;\n  for(var i = 0; i <= n; i++){\n\
    \    sum += i;\n  }\n  return sum;\n}\n", "\tvar res = 0;\n\tfor(var i = 1; i\
    \ <= n; i++){\n\t\tres += i;\n\t}\n\treturn res;\n}", "  return n * (n + 1) /\
    \ 2;\n}\n", "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum +=\
    \ i;\n    }\n    return sum;\n}", "\tvar result = 0;\n\tfor(var i = 0; i <= n;\
    \ i++){\n\t\tresult += i;\n\t}\n\treturn result;\n}\n", "    var result = 0;\n\
    \    for(var i = 1; i <= n; i++)\n    {\n        result += i;\n    }\n    return\
    \ result;\n}\n", "\treturn n*(n+1)/2;\n}\n", "    var result = 0;\n    for(var\
    \ i = 0; i <= n; i++){\n        result += i;\n    }\n    return result;\n}", " \
    \   var sum = 0;\n    for(var i = 1; i<=n; i++){\n        sum += i;\n    }\n \
    \   return sum;\n}\nvar sum30 = sum_to_n(30);\nvar sum100 = sum_to_n(100);\nvar\
    \ sum5 = sum_to_n(5);\nvar sum10 = sum_to_n(10);\nvar sum1 = sum_to_n(1);", " \
    \   var result = n*(n+1)/2;\n    return result;\n}\n\n", "  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n", "    let result\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        result += i;\n    }\n    return\
    \ result;\n}\n", "    return (n * (n + 1)) / 2;\n}\nsum_to_n(5);\n\n", "    var\
    \ total = 0;\n    for(i=1; i<=n; i++){\n        total += i;\n    }\n    return\
    \ total;\n}\nsum_to_n(5);\n\n", "    return (n*(n+1))/2;\n}\n", "    let sum =\
    \ 0;\n    for(let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_57_monotonic
language: js
prompt: "//Return true is array elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["  var mono = true;\n  for(var i = 1; i < l.length; i++){\n    if(l[i]\
    \ > l[i-1]){\n      for(var j = i+1; j < l.length; j++){\n        if(l[j] <= l[j-1]){\n\
    \          mono = false;\n        }\n      }\n    }\n    else if(l[i] < l[i-1]){\n\
    \      for(var j = i+1; j < l.length; j++){\n        if(l[j] >= l[j-1]){\n   \
    \       mono = false;\n        }\n      }\n    }\n  }\n  return mono;\n}\n", " \
    \ // YOUR CODE HERE\n  for(var i = 1; i < l.length; i++){\n    if(l[i]>=l[i-1]){\n\
    \      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n",
  "    if(l.length <= 1){\n        return true;\n    }\n    if(l[0] < l[1]){\n   \
    \     for(var i = 1; i < l.length - 1; i++){\n            if(l[i] > l[i + 1]){\n\
    \                return false;\n            }\n        }\n    }\n    else{\n \
    \       for(var i = 1; i < l.length - 1; i++){\n            if(l[i] < l[i + 1]){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "\tvar result = true;\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i]\
    \ - l[i-1] < 0){\n\t\t\tif(l[i-1] - l[i-2] > 0){\n\t\t\t\tresult = false;\n\t\t\
    \t}\n\t\t}\n\t\telse if(l[i] - l[i-1] > 0){\n\t\t\tif(l[i-1] - l[i-2] < 0){\n\t\
    \t\t\tresult = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var increasing\
    \ = true;\n    var decreasing = true;\n    for(var i = 0; i < l.length - 1; i++){\n\
    \        if(l[i] < l[i+1]){\n            decreasing = false;\n        }else if(l[i]\
    \ > l[i+1]){\n            increasing = false;\n        }\n    }\n    return increasing\
    \ || decreasing;\n}\n", "  \n  var direction;\n  var ok = true;\n  var a;\n  var\
    \ b;\n  var i;\n  \n  for (i = 0; i < l.length - 1; i++) {\n    a = l[i];\n  \
    \  b = l[i + 1];\n    if (direction === undefined) {\n      if (a < b) {\n   \
    \     direction = 'up';\n      } else if (a > b) {\n        direction = 'down';\n\
    \      }\n    } else {\n      if (direction === 'up' && a > b) {\n        ok =\
    \ false;\n        break;\n      } else if (direction === 'down' && a < b) {\n\
    \        ok = false;\n        break;\n      }\n    }\n  }\n  \n  return ok;\n\
    }\n", "    if(!l){\n        return false;\n    }\n    var i = 0;\n    var inc\
    \ = l[i] < l[i+1];\n    while(l[i] <= l[i+1] === inc){\n        i++;\n    }\n\
    \    return i === l.length-1;\n}\n", "\tvar a = 0;\n\tvar d = 0;\n\tfor(var i\
    \ = 0; i < l.length - 1; i++){\n\t\tif(l[i+1] > l[i])\n\t\t\ta++;\n\t\telse if(l[i+1]\
    \ < l[i])\n\t\t\td++;\n\t}\n\tif(a != 0 && d != 0)\n\t\treturn false;\n\telse\n\
    \t\treturn true;\n}\n", "\tvar x= l[0] < l[1];\n\tfor(var i=1; i<l.length-1; i++){\n\
    \t\tif((l[i]<l[i+1])!=x){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n",
  "\treturn (decreasing(l) || increasing(l));\n}\n", "    var decresing = true;\n\
    \    var increasing = true;\n    for(var i = 1; i < l.length; i++){\n        if(l[i-1]\
    \ < l[i]){\n            decresing = false;\n        }\n        if(l[i-1] > l[i]){\n\
    \            increasing = false;\n        }\n    }\n    return increasing || decresing;\n\
    }\n", "    var result = true;\n    var up = l[0] < l[1];\n    for(var i = 0; i\
    \ < l.length-1; i++){\n        if(up && l[i] > l[i+1]) {\n            result =\
    \ false;\n            break;\n        }\n        if(!up && l[i] < l[i+1]) {\n\
    \            result = false;\n            break;\n        }\n    }\n    return\
    \ result;\n}\n", "    for(var i = 0; i < l.length - 1; i++){\n        if(l[i]\
    \ <= l[i+1]){\n            return true;\n        }\n        else{\n          \
    \  return false;\n        }\n    }\n}\n", "  if(l.length <= 1){\n    return true;\n\
    \  }\n\n  let current = l[0];\n  let isIncreasing = false;\n  let isDecreasing\
    \ = false;\n\n  for(let i = 1; i < l.length; i++){\n    if(l[i] > current){\n\
    \      isIncreasing = true;\n    } else if(l[i] < current){\n      isDecreasing\
    \ = true;\n    }\n    current = l[i];\n  }\n\n  return isIncreasing === false\
    \ || isDecreasing === false;\n}\n", "    var i;\n    var direction = l[0] - l[1];\n\
    \    for(i = 1; i < l.length; i++){\n        if(l[i] - l[i+1] != direction){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n", "\tif(l.length==0\
    \ || l.length==1){\n\t\treturn true;\n\t}\n\tvar flag=0;\n\tfor(var i=0;i<l.length-1;i++){\n\
    \t\tif(l[i]<l[i+1]){\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t\telse if(l[i]>l[i+1]){\n\
    \t\t\tflag=2;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0){\n\t\treturn true;\n\t\
    }\n\telse if(flag==1){\n\t\tfor(var i=0;i<l.length-1;i++){\n\t\t\tif(l[i]>l[i+1]){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\telse if(flag==2){\n\
    \t\tfor(var i=0;i<l.length-1;i++){\n\t\t\tif(l[i]<l[i+1]){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n}", "    // YOUR CODE HERE\n    let\
    \ goingUp = true;\n    let goingDown = true;\n    for (let i = 0; i < l.length\
    \ - 1; i++){\n        if (l[i] > l[i+1]){\n            goingUp = false;\n    \
    \    }\n        if (l[i] < l[i+1]){\n            goingDown = false;\n        }\n\
    \    }\n    return goingUp || goingDown;\n}\n", "    return increasing(l) || decreasing(l);\n\
    }\n", "    // Your code here\n}\n\nmodule.exports = {\n    longest_list,\n   \
    \ min,\n    sum,\n    product,\n    concat,\n    unique,\n    unique_sorted,\n\
    \    sorted,\n    monotonic\n}", "\treturn l.every((x,i) => x >= l[i+1] || x <=\
    \ l[i+1])\n}\n", "\tvar c = 0;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\t\
    if(l[i] < l[i+1]){\n\t\t\tc++;\n\t\t}else if(l[i] > l[i+1]){\n\t\t\tc--;\n\t\t\
    }\n\t}\n\tif(c == l.length - 1 || c == -(l.length - 1)){\n\t\treturn true;\n\t\
    }else{\n\t\treturn false;\n\t}\n}\n", "    let increasing = true;\n    let decreasing\
    \ = true;\n    for(let i = 0; i < l.length - 1; i++){\n        if(l[i] < l[i+1])\
    \ decreasing = false;\n        if(l[i] > l[i+1]) increasing = false;\n    }\n\
    \    return increasing || decreasing;\n}\n", "\tvar first = l[0];\n\tvar isGreater\
    \ = false;\n\tvar isSmaller = false;\n\tfor(var i = 1; i < l.length; i++){\n\t\
    \tif(l[i] > first){\n\t\t\tisGreater = true;\n\t\t}\n\t\tif(l[i] < first){\n\t\
    \t\tisSmaller = true;\n\t\t}\n\t\tif(isGreater && isSmaller){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n", "    if(l.length <= 1){\n        return true;\n\
    \    }\n    var increasing = true;\n    var decreasing = true;\n    for(var i\
    \ = 0; i < l.length - 1; i++){\n        if(l[i] >= l[i+1]){\n            increasing\
    \ = false;\n        }\n        if(l[i] <= l[i+1]){\n            decreasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;\n}\n", "    var last =\
    \ l[0];\n    var last_negative = last < 0;\n    for(var i = 1; i < l.length; i++){\n\
    \        var current = l[i];\n        var current_negative = current < 0;\n  \
    \      if(current_negative != last_negative){\n            return false;\n   \
    \     }\n        if(current < last){\n            if(!current_negative){\n   \
    \             return false;\n            }\n        }else if(current > last){\n\
    \            if(current_negative){\n                return false;\n          \
    \  }\n        }\n        last = current;\n    }\n    return true;\n}\n", "\tvar\
    \ i = 0;\n\tvar monotonic = true;\n\tvar increasing = (l[1] - l[0]) > 0;\n\tfor(i\
    \ = 0; i < l.length - 1; i++){\n\t\tif((l[i+1] - l[i]) > 0 != increasing){\n\t\
    \t\tmonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn monotonic;\n}\n", " \
    \   let d = l[1] - l[0];\n    let isMono = true;\n    for(let i = 1; i < l.length;\
    \ i++){\n        let nd = l[i] - l[i-1];\n        if(nd * d < 0){\n          \
    \  isMono = false;\n            break;\n        }\n    }\n    return isMono;\n\
    }\n", "    var flag = true;\n    var i = 0;\n    if(l.length < 2){\n        return\
    \ true;\n    }\n    while(i < l.length-1){\n        if(l[i] > l[i+1]){\n     \
    \       flag = false;\n            break;\n        }\n        i++;\n    }\n  \
    \  if(flag){\n        return true;\n    }\n    else{\n        flag = true;\n \
    \       var j = 0;\n        while(j < l.length-1){\n            if(l[j] < l[j+1]){\n\
    \                flag = false;\n                break;\n            }\n      \
    \      j++;\n        }\n        if(flag){\n            return true;\n        }\n\
    \        else{\n            return false;\n        }\n    }\n}\n", "  var result\
    \ = true;\n  var operation = '+';\n  var previous = l[0];\n  for(i=1; i<l.length;\
    \ i++){\n    if(operation == '+'){\n      if(l[i] < previous){\n        operation\
    \ = '-';\n      }\n    }else{\n      if(l[i] > previous){\n        result = false;\n\
    \        break;\n      }\n    }\n    previous = l[i];\n  }\n  return result;\n\
    }\n", "    monotonic_bool = true;\n    for (i = 0; i < l.length-1; i++){\n   \
    \     if (l[i] <= l[i+1]){\n            monotonic_bool = true;\n        }\n  \
    \      else {\n            monotonic_bool = false;\n            break;\n     \
    \   }\n    }\n    return monotonic_bool;\n}", "    var s = l[0]\n    var i;\n\
    \    var inc = false;\n    var dec = false;\n    for (i = 1; i < l.length; i++){\n\
    \        if (l[i] > s){\n            inc = true;\n        } else if (l[i] < s){\n\
    \            dec = true;\n        }\n        if (inc && dec){\n            return\
    \ false;\n        }\n        s = l[i];\n    }\n    return true;\n}\n", "\tvar\
    \ bool = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] > l[i+1]){\n\
    \t\t\tbool = true;\n\t\t}\n\t\telse if(l[i] < l[i+1]){\n\t\t\tbool = true;\n\t\
    \t}\n\t\telse{\n\t\t\tbool = false;\n\t\t}\n\t}\n\treturn bool;\n}\n", "\tvar\
    \ order = undefined;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(order ===\
    \ undefined){\n\t\t\tif(l[i] > l[i+1]){\n\t\t\t\torder = \"decreasing\";\n\t\t\
    \t}else if(l[i] < l[i+1]){\n\t\t\t\torder = \"increasing\";\n\t\t\t}\n\t\t}else\
    \ if(order === \"decreasing\" && l[i] < l[i+1]){\n\t\t\treturn false;\n\t\t}else\
    \ if(order === \"increasing\" && l[i] > l[i+1]){\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\treturn true;\n}\n", "    let flag = false;\n    if(l[0]>l[1]){\n      \
    \  for(let i=0;i<l.length-1;i++){\n            if(l[i]>l[i+1]){\n            \
    \    flag = true;\n            }\n            else{\n                flag = false;\n\
    \                break;\n            }\n        }\n    }\n    else{\n        for(let\
    \ i=0;i<l.length-1;i++){\n            if(l[i]<l[i+1]){\n                flag =\
    \ true;\n            }\n            else{\n                flag = false;\n   \
    \             break;\n            }\n        }\n    }\n    return flag;\n}\n",
  "    return l.every((e,i,a)=>a[i]>=a[i-1]||a[i]<=a[i-1])\n}\n", "  if(l.length ===\
    \ 0){\n    return true;\n  }\n  if(l.length === 1){\n    return true;\n  }\n \
    \ var increasing = true;\n  var decreasing = true;\n  for(var i = 0; i < l.length\
    \ - 1; i++){\n    if(l[i] > l[i+1]){\n      increasing = false;\n    }\n    if(l[i]\
    \ < l[i+1]){\n      decreasing = false;\n    }\n  }\n  return increasing || decreasing;\n\
    }", "  var result=true;\n  var pos=0;\n  var neg=0;\n  for(var i=0;i<l.length-1;i++){\n\
    \    if(l[i]<l[i+1]){\n      pos+=1;\n    }\n    else if(l[i]>l[i+1]){\n     \
    \ neg+=1;\n    }\n  }\n  if(pos>0 && neg>0){\n    result=false;\n  }\n  return\
    \ result;\n}\n", "    var check = true;\n    var i = 0;\n    var j = 1;\n    if\
    \ (l.length === 0) {\n        return check;\n    }\n    else {\n        for (i=0;\
    \ i<l.length-1; i++) {\n            if ((l[i] > l[j]) && (l[i] === l[j])) {\n\
    \                j++;\n            }\n            else {\n                check\
    \ = false;\n            }\n        }\n    }\n    return check;\n}\n\n", "\tif(l.length\
    \ < 3){\n\t\treturn true;\n\t}\n\tvar increasing = l[0] < l[1];\n\tvar decreasing\
    \ = l[0] > l[1];\n\tfor(var i = 2; i < l.length; i++){\n\t\tif(increasing && l[i-1]\
    \ > l[i]){\n\t\t\treturn false;\n\t\t}\n\t\tif(decreasing && l[i-1] < l[i]){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "  var ascending = true;\n\
    \  var descending = true;\n  var current = l[0];\n  for(var i = 1; i < l.length;\
    \ i++){\n    var next = l[i];\n    if(ascending){\n      if(next < current){\n\
    \        ascending = false;\n      }\n    }\n    if(descending){\n      if(next\
    \ > current){\n        descending = false;\n      }\n    }\n    current = next;\n\
    \  }\n  return ascending || descending;\n}\n", "    var up = true;\n    var down\
    \ = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] < l[i+1])\n\
    \            down = false;\n        if(l[i] > l[i+1])\n            up = false;\n\
    \    }\n    return up || down;\n}\n", "    var c = 0;\n    if(l.length == 0)\n\
    \        return true;\n    for(var i = 0; i < l.length-1; i++){\n        if(c\
    \ == 0){\n            if(l[i] < l[i+1])\n                c = 1;\n            else\
    \ if(l[i] > l[i+1])\n                c = -1;\n        }\n        else if(c > 0){\n\
    \            if(l[i] > l[i+1])\n                return false;\n        }\n   \
    \     else if(c < 0){\n            if(l[i] < l[i+1])\n                return false;\n\
    \        }\n    }\n    return true;\n}\n", "\tvar m = (l[1] - l[0] > 0) ? true\
    \ : false;\n\tfor(i = 1; i < l.length; i++){\n\t\tif(l[i] - l[i-1] != 0 && m !=\
    \ (l[i] - l[i-1] > 0)){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n",
  "  if(l.length == 1) return true;\n  if(l.length == 2){\n    if(l[0]>l[1]) return\
    \ true;\n    if(l[0]<l[1]) return true;\n    if(l[0]==l[1]) return true;\n  }\n\
    \  var inc = true;\n  var dec = true;\n  for(var i = 0; i < l.length-1; i++){\n\
    \    if(l[i]<l[i+1]) dec = false;\n    if(l[i]>l[i+1]) inc = false;\n  }\n  if(inc\
    \ || dec) return true;\n  return false;\n}\n", "    var trend;\n    trend = l[0]\
    \ - l[1];\n    for (var i = 0; i < l.length - 1; i++){\n        if (trend > 0){\n\
    \            if (l[i] - l[i+1] < 0){\n                return false;\n        \
    \    }\n        } else if (trend < 0){\n            if (l[i] - l[i+1] > 0){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "    if(l.length <= 1){\n        return true;\n    }\n    increasing = null;\n\
    \    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] != l[i+1]){\n   \
    \         increasing = l[i] < l[i+1];\n            break;\n        }\n    }\n\
    \    for(var i = 0; i < l.length - 1; i++){\n        if(increasing){\n       \
    \     if(l[i] > l[i+1]){\n                return false;\n            }\n     \
    \   }else{\n            if(l[i] < l[i+1]){\n                return false;\n  \
    \          }\n        }\n    }\n    return true;\n}\n", "  function monotonic_helper(acc,\
    \ l){\n    if(is_empty_list(l)){\n      return acc;\n    } else {\n      const\
    \ compare = head(l) > head(tail(l));\n      return monotonic_helper(acc === compare,\
    \ tail(l));\n    }\n  }\n  return monotonic_helper(true, l);\n}\n", "  var growing\
    \ = true;\n  var shrining = true;\n  for(var i = 0; i < l.length - 1; i++){\n\
    \    growing = growing && l[i] <= l[i+1];\n    shrining = shrining && l[i] >=\
    \ l[i+1];\n  }\n  return growing || shrining;\n}\n", "  var inc = true;\n  var\
    \ dec = true;\n  for(var i = 0; i < l.length-1; i++){\n    if(l[i] > l[i+1]){\n\
    \      inc = false;\n    }\n    if(l[i] < l[i+1]){\n      dec = false;\n    }\n\
    \  }\n  return inc || dec;\n}\n\n", "    var t = typeof l[0];\n    for(var i =\
    \ 1; i < l.length; i++){\n        if( typeof l[i] != t) return false;\n    }\n\
    \    return true;\n}\n", "    var i;\n    var increasing = true;\n    var decreasing\
    \ = true;\n    for (i = 0; i < l.length - 1; i++){\n        if (l[i] > l[i+1]){\n\
    \            increasing = false;\n        }\n        if (l[i] < l[i+1]){\n   \
    \         decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n\n", "  if(l.length <= 1){\n    return true;\n  }\n  var newList = l.slice();\n\
    \  var isAscending = newList.sort();\n  if(isAscending == l){\n    return true;\n\
    \  }\n  else{\n    var isDescending = newList.reverse();\n    if(isDescending\
    \ == l){\n      return true;\n    }\n    else{\n      return false;\n    }\n \
    \ }\n}\n\n", "    var s=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]<l[i+1]){\n\
    \            s=1;\n        }\n        else if(l[i]>l[i+1]){\n            s=2;\n\
    \        }\n        else{\n            s=0;\n        }\n    }\n    if(s==1||s==2){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}\n", " \
    \   if(l.length < 1){\n        return true;\n    }\n    let dir = 0;\n    for(let\
    \ i = 0; i < l.length - 1; i++){\n        if(dir == 0){\n            if(l[i] <\
    \ l[i+1]){\n                dir = 1;\n            }\n            else if(l[i]\
    \ > l[i+1]){\n                dir = -1;\n            }\n        }\n        else\
    \ if(dir == 1){\n            if(l[i] > l[i+1]){\n                return false;\n\
    \            }\n        }\n        else if(dir == -1){\n            if(l[i] <\
    \ l[i+1]){\n                return false;\n            }\n        }\n    }\n \
    \   return true;\n}\n", "    var d1=0;\n    var d2=0;\n    for(var i=0;i<l.length-1;i++){\n\
    \        if(l[i]>l[i+1])\n            d1++;\n        else if(l[i]<l[i+1])\n  \
    \          d2++;\n    }\n    if(d1!=0 && d2!=0)\n        return false;\n    else\n\
    \        return true;\n}", "\tif(l.length<=1){\n\t\treturn true;\n\t}\n\tvar type\
    \ = \"incr\";\n\tif(l[1]<l[0]){\n\t\ttype = \"decr\";\n\t}\n\tfor(var i=2;i<l.length;i++){\n\
    \t\tif(type == \"incr\" && l[i]<l[i-1]){\n\t\t\treturn false;\n\t\t}\n\t\tif(type\
    \ == \"decr\" && l[i]>l[i-1]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n", "  let direction = 0;\n  for(let i = 0; i < l.length; i++){\n    if(direction\
    \ === 0){\n      if(l[i] < l[i+1]){\n        direction = 1;\n      }\n      else\
    \ if(l[i] > l[i+1]){\n        direction = -1;\n      }\n    }\n    else if(direction\
    \ === 1){\n      if(l[i] > l[i+1]){\n        return false;\n      }\n    }\n \
    \   else if(direction === -1){\n      if(l[i] < l[i+1]){\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "\n}\n", "    let direction = (l[1]\
    \ > l[0]);\n    let result = true;\n    for (let i = 1; i < l.length - 1; i++){\n\
    \        if ((l[i+1] > l[i]) != direction){\n            result = false;\n   \
    \         break;\n        }\n    }\n    return result;\n}\n", "  var str = l.join('');\n\
    \  if(/\\d{1,}-\\d{1,}/g.test(str)){\n    return is_descending(l);\n  }\n  else\
    \ if(/\\d{1,}\\d{1,}/g.test(str)){\n    return is_ascending(l);\n  }\n  else{\n\
    \    return false;\n  }\n}\n", "    var increasing = true;\n    var decreasing\
    \ = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] > l[i+1]){\n\
    \            increasing = false;\n        }\n        if(l[i] < l[i+1]){\n    \
    \        decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n\n", "\tvar monotonic = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\t\
    if(l[i] <= l[i+1]){\n\t\t\tmonotonic = true;\n\t\t}else{\n\t\t\tmonotonic = false;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn monotonic;\n}\n", "\tif(l.length==0)\n\t\t\
    return true;\n\tvar previous=l[0];\n\tvar increasing=null;\n\tfor(var x=1;x<l.length;x++){\n\
    \t\tif(l[x]>previous)\n\t\t\tincreasing=true;\n\t\telse if(l[x]<previous)\n\t\t\
    \tincreasing=false;\n\t\telse\n\t\t\tcontinue;\n\t\tif(x>1 && increasing!=null\
    \ && increasing!=(l[x]>l[x-1]))\n\t\t\treturn false;\n\t\tprevious=l[x];\n\t}\n\
    \treturn true;\n}\n", "  var inc = true;\n  var dec = true;\n  for(var i = 0;\
    \ i < l.length-1; i++){\n    if(l[i] > l[i+1]){\n      inc = false;\n    }\n \
    \   if(l[i] < l[i+1]){\n      dec = false;\n    }\n  }\n  return inc || dec;\n\
    }\n", "    return all_increasing(l) || all_decreasing(l);\n}\n", "    for(let\
    \ i = 1; i < l.length; i++){\n        if(l[i-1] - l[i] != l[0] - l[1]){\n    \
    \        return false;\n        }\n    }\n    return true;\n}", "    var a = l.slice();\n\
    \    a.sort(function(a, b){\n        return a - b;\n    });\n    if(l.every(function(e,\
    \ i){\n        return e == a[i];\n    })){\n        return true;\n    }else{\n\
    \        a.sort(function(a, b){\n            return b - a;\n        });\n    \
    \    if(l.every(function(e, i){\n            return e == a[i];\n        })){\n\
    \            return true;\n        }else{\n            return false;\n       \
    \ }\n    }\n}", "    var prev = l[0];\n    var isUp = null;\n    for(var i = 1;\
    \ i < l.length; i++){\n        if(isUp === null){\n            if(l[i] > prev){\n\
    \                isUp = true;\n            }else if(l[i] < prev){\n          \
    \      isUp = false;\n            }\n        }else{\n            if(isUp){\n \
    \               if(l[i] < prev){\n                    return false;\n        \
    \        }\n            }else{\n                if(l[i] > prev){\n           \
    \         return false;\n                }\n            }\n        }\n       \
    \ prev = l[i];\n    }\n    return true;\n}", "  var increasing = true;\n  var\
    \ decreasing = true;\n  for(var i = 0; i < l.length-1; i++){\n    if(l[i] >= l[i+1]){\n\
    \      increasing = false;\n    }\n    if(l[i] <= l[i+1]){\n      decreasing =\
    \ false;\n    }\n  }\n  return increasing || decreasing;\n}\n", "    var is_mono\
    \ = 0;\n    if (l.length <= 2){\n        is_mono = true;\n    }\n    else{\n \
    \       if(l[0]>l[1]){\n            for(var i=0; i<l.length-1; i++){\n       \
    \         if(l[i] <= l[i+1]){\n                    is_mono = false;\n        \
    \            break;\n                }\n            }\n        }\n        else{\n\
    \            for(var i=0; i<l.length-1; i++){\n                if(l[i] >= l[i+1]){\n\
    \                    is_mono = false;\n                    break;\n          \
    \      }\n            }\n        }\n    }\n    return is_mono;\n}\n", "    var\
    \ i;\n    var prev = l[0];\n    var inc = null;\n    for (i = 1; i < l.length;\
    \ i++) {\n        if (l[i] > prev) {\n            if (inc === null) {\n      \
    \          inc = true;\n            } else if (inc === false) {\n            \
    \    return false;\n            }\n        } else if (l[i] < prev) {\n       \
    \     if (inc === null) {\n                inc = false;\n            } else if\
    \ (inc === true) {\n                return false;\n            }\n        }\n\
    \        prev = l[i];\n    }\n    return true;\n}\n", "  let a = 0;\n  let b =\
    \ 0;\n  for(let i = 0; i < l.length - 1; i++){\n    if(l[i] > l[i+1]){\n     \
    \ a++;\n    }\n    if(l[i] < l[i+1]){\n      b++;\n    }\n  }\n  if(a > 0 && b\
    \ > 0){\n    return false;\n  }\n  return true;\n}\n", "\tvar inc = true;\n\t\
    var dec = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] < l[i+1]){\n\
    \t\t\tdec = false;\n\t\t}\n\t\tif(l[i] > l[i+1]){\n\t\t\tinc = false;\n\t\t}\n\
    \t}\n\treturn inc || dec;\n}\n", "  var k=0;\n  for(var i=0;i<l.length-1;i++){\n\
    \    if(l[i]<l[i+1]){\n      k++;\n    }\n    else if(l[i]>l[i+1]){\n      k--;\n\
    \    }\n  }\n  if(k==l.length-1 || k==-l.length+1){\n    return true;\n  }\n \
    \ else{\n    return false;\n  }\n}\nvar arr1=[1,2,4,20];\nvar arr2=[1,20,4,10];\n\
    var arr3=[4,1,0,-10];", "\tif(l.length < 2){\n\t\treturn true;\n\t}\n\tvar i =\
    \ 0;\n\tvar up = false;\n\tvar down = false;\n\tvar equal = false;\n\tvar previous\
    \ = l[0];\n\tvar current = l[1];\n\twhile(i < l.length){\n\t\tif(current > previous){\n\
    \t\t\tup = true;\n\t\t}\n\t\tif(current < previous){\n\t\t\tdown = true;\n\t\t\
    }\n\t\tif(current == previous){\n\t\t\tequal = true;\n\t\t}\n\t\ti++;\n\t\tprevious\
    \ = current;\n\t\tcurrent = l[i];\n\t}\n\tif(up && down){\n\t\treturn false;\n\
    \t}\n\treturn true;\n}\n", "    var result = 0;\n    for(var i = 0; i < l.length;\
    \ i++){\n        if(i == 0){\n            var number = l[i];\n        }\n    \
    \    else{\n            if(number < l[i]){\n                if(result == -1){\n\
    \                    return false;\n                }\n                number\
    \ = l[i];\n                result = 1;\n            }\n            else if(number\
    \ > l[i]){\n                if(result == 1){\n                    return false;\n\
    \                }\n                number = l[i];\n                result = -1;\n\
    \            }\n        }\n    }\n    return true;\n}", "    if(!l.length) return\
    \ true;\n    var inc = true;\n    var dec = true;\n    for(var i = 1; i < l.length;\
    \ i++){\n        if(l[i] > l[i-1]) dec = false;\n        if(l[i] < l[i-1]) inc\
    \ = false;\n    }\n    return inc || dec;\n}\n", "  var d = l[1] - l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    if(d * (l[i] - l[i-1]) < 0){\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "    var r = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] < l[i+1]){\n            var monotonicType\
    \ = 1;\n            break;\n        }\n        else if(l[i] > l[i+1]){\n     \
    \       var monotonicType = 2;\n            break;\n        }\n    }\n    for(var\
    \ i = 0; i < l.length - 1; i++){\n        if(monotonicType == 1){\n          \
    \  if(l[i] > l[i+1]){\n                r = false;\n                break;\n  \
    \          }\n        }\n        else if(monotonicType == 2){\n            if(l[i]\
    \ < l[i+1]){\n                r = false;\n                break;\n           \
    \ }\n        }\n    }\n    return r;\n}\n", "  for(var i = 1; i < l.length; i++){\n\
    \    if(l[i] < l[i-1]){\n      var decreasing = true;\n      break;\n    }\n \
    \   else if(l[i] > l[i-1]){\n      var increasing = true;\n      break;\n    }\n\
    \  }\n  if(increasing == true || decreasing == true){\n    return true;\n  }\n\
    \  else{\n    return false;\n  }\n}\n", "    return l.every((a,i)=>a>=l[i-1])||l.every((a,i)=>a<=l[i-1])\n\
    }", "\tif(l.length == 1) return true;\n\tlet direction = (l[1]>l[0]) ? 1 : -1;\n\
    \tfor(let i=1; i<l.length; i++){\n\t\tif(direction*(l[i]-l[i-1]) < 0) return false;\n\
    \t}\n\treturn true;\n}\n", "  var flag = false;\n  for(var i = 0; i < l.length\
    \ - 1; i++){\n    if(l[i] <= l[i+1]){\n      flag = true;\n    }\n    else{\n\
    \      flag = false;\n      break;\n    }\n  }\n  return flag;\n}\n", "\tif(l.length\
    \ <= 1){\n\t\treturn true;\n\t}\n\tlet i = 0;\n\twhile(l[i+1] == l[i]){\n\t\t\
    i += 1;\n\t}\n\tconst increasing = l[i+1] > l[i];\n\tfor(let i = 0; i < l.length\
    \ - 1; i++){\n\t\tif(l[i+1] > l[i] && !increasing){\n\t\t\treturn false;\n\t\t\
    }\n\t\tif(l[i+1] < l[i] && increasing){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "\tif(l.length == 0) {\n\t\treturn null;\n\t}\n\tif(l.length ==\
    \ 1) {\n\t\treturn true;\n\t}\n\tif(l.length == 2) {\n\t\treturn (l[0] <= l[1]);\n\
    \t}\n\tvar isMono = true;\n\tfor(var i = 1; i < l.length; i++) {\n\t\tisMono =\
    \ isMono && (l[i-1] <= l[i]);\n\t}\n\tif(isMono) {\n\t\treturn true;\n\t}\n\t\
    for(var i = 1; i < l.length; i++) {\n\t\tisMono = isMono && (l[i-1] >= l[i]);\n\
    \t}\n\treturn isMono;\n}", "\tinc = 0;\n\tdec = 0;\n\tfor(var i = 0; i < l.length-1;\
    \ i++){\n\t\tif(l[i] < l[i+1]){\n\t\t\tinc += 1;\n\t\t}\n\t\telse if(l[i] > l[i+1]){\n\
    \t\t\tdec += 1;\n\t\t}\n\t}\n\tif(inc == l.length-1 || dec == l.length-1){\n\t\
    \treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}", "    let mono = true;\n\
    \    let inc = l[0] < l[1];\n    for(let i = 1; i < l.length; i++){\n        if(inc\
    \ !== (l[i-1] < l[i])){\n            mono = false;\n            break;\n     \
    \   }\n    }\n    return mono;\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  else{\n    for(var i = 0; i < l.length - 1; i++){\n      if(l[i] > l[i+1]){\n\
    \        for(var j = i+1; j < l.length - 1; j++){\n          if(l[j] > l[j+1]){\n\
    \            return false;\n          }\n        }\n        return true;\n   \
    \   }\n      else if(l[i] < l[i+1]){\n        for(var j = i+1; j < l.length -\
    \ 1; j++){\n          if(l[j] < l[j+1]){\n            return false;\n        \
    \  }\n        }\n        return true;\n      }\n    }\n  }\n}\n", "    let isMonotonic\
    \ = true;\n    let direction = l[0] - l[1];\n    for(let i = 0; i < l.length;\
    \ i++){\n        if(i === l.length - 1){\n            break;\n        }\n    \
    \    if(direction === 0){\n            direction = l[i] - l[i + 1];\n        \
    \    continue;\n        }\n        if((direction > 0 && l[i] - l[i + 1] < 0) ||\
    \ (direction < 0 && l[i] - l[i + 1] > 0)){\n            isMonotonic = false;\n\
    \            break;\n        }\n    }\n    return isMonotonic;\n}", "    if(l.length\
    \ === 0) return true;\n    var isIncreasing = l[0] < l[1];\n    for(var i = 0;\
    \ i < l.length-1; i++){\n        if(isIncreasing){\n            if(l[i] > l[i+1])\
    \ return false;\n        } else {\n            if(l[i] < l[i+1]) return false;\n\
    \        }\n    }\n    return true;\n}\n", "    if(l.length < 3){\n        return\
    \ true;\n    }\n    else{\n        let diff = l[1] - l[0];\n        for(let i\
    \ = 1; i < l.length - 1; i++){\n            if(diff * (l[i + 1] - l[i]) < 0){\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n}\n", "   var increase = 0,\n       decrease = 0;\n    if(l.length ==\
    \ 1){\n        return true;\n    }\n    else{\n        for(var i = 0; i < l.length\
    \ - 1; i++){\n            if(l[i] <= l[i+1]){\n                increase++;\n \
    \           }\n            else if(l[i] >= l[i+1]){\n                decrease++;\n\
    \            }\n        }\n        if(increase == l.length - 1 || decrease ==\
    \ l.length - 1){\n            return true;\n        }\n        else{\n       \
    \     return false;\n        }\n    }\n}\n", "    if(l.length <= 1){\n       \
    \ return true;\n    }\n\n    for(let i = 0; i < l.length - 1; i++){\n        if(Math.abs(l[i\
    \ + 1] - l[i]) !== Math.abs(l[1] - l[0])){\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n", "    if(l.length < 1){\n        return true;\n\
    \    }\n    var direction = \"\";\n    var prev = l[0];\n    for(var i = 1; i\
    \ < l.length; i++){\n        if(l[i] > prev){\n            if(direction === \"\
    \"){\n                direction = \"increasing\";\n            }\n           \
    \ else if(direction === \"decreasing\"){\n                return false;\n    \
    \        }\n        }\n        else if(l[i] < prev){\n            if(direction\
    \ === \"\"){\n                direction = \"decreasing\";\n            }\n   \
    \         else if(direction === \"increasing\"){\n                return false;\n\
    \            }\n        }\n        prev = l[i];\n    }\n    return true;\n}\n",
  "  return l.every((item, i) => item >= l[i+1] || item <= l[i+1]);\n}\n", "    var\
    \ inc=true,dec=true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]>l[i+1])\
    \ inc=false;\n        if(l[i]<l[i+1]) dec=false;\n    }\n    return inc || dec;\n\
    }\n", "    var increasing = true;\n    var decreasing = true;\n    for(var i =\
    \ 0; i < l.length-1; i++){\n        if(l[i] >= l[i+1]){\n            increasing\
    \ = false;\n        }\n        if(l[i] <= l[i+1]){\n            decreasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;\n}\n", "    if(l.length\
    \ == 0){\n        return true;\n    }\n    var increase = true;\n    var decrease\
    \ = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] < l[i+1]){\n\
    \            decrease = false;\n        }\n        if(l[i] > l[i+1]){\n      \
    \      increase = false;\n        }\n    }\n    return increase || decrease;\n\
    }\n", "    var test = []\n    for(var i = 0; i < l.length - 1; i++){\n       \
    \ if(l[i+1] - l[i] >= 0){\n            test.push(1)\n        }\n        else{\n\
    \            test.push(-1)\n        }\n    }\n    var sum = 0\n    for(var i =\
    \ 0; i < test.length; i++){\n        sum += test[i]\n    }\n    if(sum === test.length\
    \ || sum === -test.length){\n        return true\n    }\n    else{\n        return\
    \ false\n    }\n}\n", "  var m = 0;\n  for(var i = 0; i < l.length - 1; i++){\n\
    \    if(l[i] < l[i+1]){\n      m++;\n    }\n    else if(l[i] > l[i+1]){\n    \
    \  m--;\n    }\n  }\n  if(m === 0){\n    return true;\n  }\n  else{\n    return\
    \ false;\n  }\n}\n\n", "  if(!Array.isArray(l)){\n    throw new Error(\"Invalid\
    \ input. Input must be an array\");\n  }\n  if(l.length === 0){\n    return true;\n\
    \  }\n  for(let i = 0; i < l.length - 1; i++){\n    if(l[i] > l[i+1]){\n     \
    \ return false;\n    }\n  }\n  return true;\n}\n", "  var i = 0;\n  var m;\n \
    \ for(i; i < l.length; i++){\n    if(m != undefined){\n      if(m < 0 && l[i]\
    \ > l[i-1]){\n        return false;\n      }\n      if(m > 0 && l[i] < l[i-1]){\n\
    \        return false;\n      }\n    }\n    m = l[i] - l[i-1];\n  }\n  return\
    \ true;\n}\n", "    var current = 0;\n    var ordered = true;\n    while (current\
    \ < l.length - 1 && ordered){\n        if (l[current] <= l[current + 1]){\n  \
    \          current++;\n        }\n        else{\n            ordered = false;\n\
    \        }\n    }\n    current = 0;\n    while (current < l.length - 1 && ordered){\n\
    \        if (l[current] >= l[current + 1]){\n            current++;\n        }\n\
    \        else{\n            ordered = false;\n        }\n    }\n    return ordered;\n\
    }\n", "\tvar result = false;\n\tvar isincreasing = true;\n\tvar isdecreasing =\
    \ true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] < l[i+1]){\n\t\t\t\
    isdecreasing = false;\n\t\t}\n\t\tif(l[i] > l[i+1]){\n\t\t\tisincreasing = false;\n\
    \t\t}\n\t}\n\tif(isincreasing == true || isdecreasing == true){\n\t\tresult =\
    \ true;\n\t}\n\treturn result;\n}\n", "    var asc = true, desc = true;\n    for(var\
    \ i = 0; i < l.length - 1; i++){\n        if(l[i+1] < l[i]){\n            asc\
    \ = false;\n        }\n        if(l[i+1] > l[i]){\n            desc = false;\n\
    \        }\n    }\n    return asc || desc;\n}\n", "  inc = true;\n  dec = true;\n\
    \  for(var i = 0; i < l.length - 1; i++){\n    if(l[i] < l[i+1]){\n      dec =\
    \ false;\n    }\n    if(l[i] > l[i+1]){\n      inc = false;\n    }\n  }\n  return\
    \ (inc || dec);\n}\n", "    if(l.length <= 1){\n        return true;\n    }\n\
    \    else{\n        if(l[0] < l[1]){\n            for(var i = 1; i < l.length\
    \ - 1; i++){\n                if(l[i] > l[i+1]){\n                    return false;\n\
    \                }\n            }\n            return true;\n        }\n     \
    \   else if(l[0] > l[1]){\n            for(var i = 1; i < l.length - 1; i++){\n\
    \                if(l[i] < l[i+1]){\n                    return false;\n     \
    \           }\n            }\n            return true;\n        }\n        else{\n\
    \            return monotonic(l.slice(1));\n        }\n    }\n}\n", "  var counter\
    \ = 0;\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i] < l[i+1]){\n   \
    \   counter++\n    }\n    else if(l[i] > l[i+1]){\n      counter--\n    }\n  }\n\
    \  if(counter == l.length - 1 || counter == -(l.length - 1)){\n    return true\n\
    \  }\n  else{\n    return false\n  }\n}", "\tvar left = true;\n\tvar right = true;\n\
    \tfor(i=0; i<l.length; i++){\n\t\tif(l[i]>l[i+1]){\n\t\t\tleft = false;\n\t\t\
    }\n\t\tif(l[i]<l[i+1]){\n\t\t\tright = false;\n\t\t}\n\t}\n\tif(left || right){\n\
    \t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "\tvar inc = false;\n\
    \tvar dec = false;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(l[i] <= l[i+1]){\n\
    \t\t\tinc = true;\n\t\t}\n\t\tif(l[i] >= l[i+1]){\n\t\t\tdec = true;\n\t\t}\n\t\
    }\n\tif(inc == true && dec == true){\n\t\treturn false;\n\t}\n\telse{\n\t\treturn\
    \ true;\n\t}\n}\n", "    // a is increasing, d is decreasing\n    var a = true;\n\
    \    var d = true;\n    for (var i = 0; i < l.length-1; i++){\n        if (l[i]\
    \ > l[i+1]){\n            a = false;\n        }\n        if (l[i] < l[i+1]){\n\
    \            d = false;\n        }\n    }\n    return (a || d);\n}\n\n", "\treturn\
    \ false;\n}\n", "    var increasing = true;\n    var decreasing = true;\n    for(var\
    \ i = 0; i < l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing\
    \ = false;\n        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n\
    \        }\n    }\n    return (increasing || decreasing);\n}\n", "    var sgn\
    \ = Math.sign(l[1] - l[0]);\n    for(var i = 2; i < l.length; i++){\n        if(Math.sign(l[i]\
    \ - l[i-1]) != sgn){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    let increasing = true;\n    let decreasing = true;\n    let\
    \ prev = l[0];\n    for(let i = 1; i < l.length; i++){\n        if(prev < l[i]){\n\
    \            decreasing = false;\n        }else if(prev > l[i]){\n           \
    \ increasing = false;\n        }\n        prev = l[i];\n    }\n    return increasing\
    \ || decreasing;\n}\n", "  let d = l[1] - l[0];\n  for(let i = 1; i < l.length;\
    \ i++){\n    if(d * (l[i] - l[i-1]) < 0){\n      return false;\n    }\n  }\n \
    \ return true;\n}\n", "\tif(l.length == 0)\n\t\treturn true;\n\tvar first = l[0];\n\
    \tvar second = l[1];\n\tvar isIncreasing = first < second;\n\tfor(var i = 1; i\
    \ < l.length - 1; i++){\n\t\tif(isIncreasing && l[i] > l[i+1])\n\t\t\treturn false;\n\
    \t\tif(!isIncreasing && l[i] < l[i+1])\n\t\t\treturn false;\n\t}\n\treturn true;\n\
    }\n", "\tif(!Array.isArray(l)){\n\t\tthrow \"Input must be an array!\";\n\t}\n\
    \tif(l.length == 0){\n\t\treturn true;\n\t}\n\tvar increasing = true;\n\tvar decreasing\
    \ = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] > l[i+1]){\n\t\t\
    \tincreasing = false;\n\t\t}\n\t\tif(l[i] < l[i+1]){\n\t\t\tdecreasing = false;\n\
    \t\t}\n\t}\n\treturn increasing || decreasing;\n}\n", "    l.sort(function(a,\
    \ b){return a-b});\n    let ascending=true;\n    let descending=true;\n    for(let\
    \ i=0; i<l.length-1; i++){\n        if(l[i]>l[i+1]){\n            ascending=false;\n\
    \        }\n        if(l[i]<l[i+1]){\n            descending=false;\n        }\n\
    \    }\n    return ascending || descending;\n}\n", "    return l.every((v,i,a)=>(i==0\
    \ || a[i-1]<=v)) || l.every((v,i,a)=>(i==0 || a[i-1]>=v));\n}\n", "    var flag\
    \ = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if((l[i] - l[i+1])\
    \ * (l[0] - l[1]) < 0){\n            flag = false;\n            break;\n     \
    \   }\n    }\n    return flag;\n}\n\n", "\tvar i = 1;\n\tvar mode = 0;\n\twhile(i\
    \ < l.length){\n\t\tif (mode == 0){\n\t\t\tif (l[i-1] < l[i]){\n\t\t\t\tmode =\
    \ 1;\n\t\t\t}\n\t\t\telse if (l[i-1] > l[i]){\n\t\t\t\tmode = -1;\n\t\t\t}\n\t\
    \t}\n\t\telse if (mode == 1){\n\t\t\tif (l[i-1] > l[i]){\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\telse if (mode == -1){\n\t\t\tif (l[i-1] < l[i]){\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t\ti += 1;\n\t}\n\treturn true;\n}\n", "  return\
    \ l[0] >= l[1] && l[1] >= l[2] && l[2] >= l[3] ||\n    l[0] <= l[1] && l[1] <=\
    \ l[2] && l[2] <= l[3];\n}\n", "\tvar up = true;\n\tvar down = true;\n\tfor(var\
    \ i = 0; i < l.length - 1; i++){\n\t\tif(l[i+1] > l[i]){\n\t\t\tdown = false;\n\
    \t\t}\n\t\tif(l[i+1] < l[i]){\n\t\t\tup = false;\n\t\t}\n\t}\n\treturn up || down;\n\
    }\n", "    if(l[0] <= l[1]){\n        for(var i = 0; i < l.length - 1; i++){\n\
    \            if(l[i] > l[i+1]){\n                return false;\n            }\n\
    \        }\n    }else{\n        for(var i = 0; i < l.length - 1; i++){\n     \
    \       if(l[i] < l[i+1]){\n                return false;\n            }\n   \
    \     }\n    }\n    return true;\n}\n", "    var state = null;\n\n    for(var\
    \ i = 0; i < l.length - 1; i++){\n        if(state === null){\n            if(l[i]\
    \ < l[i + 1]){\n                state = true;\n            }\n            else\
    \ if(l[i] > l[i + 1]){\n                state = false;\n            }\n      \
    \  }\n        else if(state === true){\n            if(l[i] > l[i + 1]){\n   \
    \             return false;\n            }\n        }\n        else if(state ===\
    \ false){\n            if(l[i] < l[i + 1]){\n                return false;\n \
    \           }\n        }\n    }\n    return true;\n}", "    inc = dec = true;\n\
    \    for(var i = 1; i < l.length; i++){\n        if(l[i] > l[i-1]) dec = false;\n\
    \        if(l[i] < l[i-1]) inc = false;\n    }\n    return dec || inc;\n}\n\n",
  "    if(l.length == 1){\n        return true;\n    }\n    var direction = \"\";\n\
    \    for(var i = 0; i < l.length - 1; i++){\n        if(l[i+1] > l[i]){\n    \
    \        if(direction == \"\"){\n                direction = \"increasing\";\n\
    \            }else if(direction == \"decreasing\"){\n                return false;\n\
    \            }\n        }else if(l[i+1] < l[i]){\n            if(direction ==\
    \ \"\"){\n                direction = \"decreasing\";\n            }else if(direction\
    \ == \"increasing\"){\n                return false;\n            }\n        }\n\
    \    }\n    return true;\n}\n", "    var result = true;\n    var a = l[0];\n \
    \   var b = l[1];\n    var increasing = (a < b);\n    for (var i = 0; i < l.length\
    \ - 1; i++){\n        if ((increasing && l[i] > l[i+1]) || (!increasing && l[i]\
    \ < l[i+1])){\n            result = false;\n            break;\n        }\n  \
    \  }\n    return result;\n}", "  if(l.length <= 1){\n    return true;\n  }\n\n\
    \  var increasing = true;\n  var decreasing = true;\n\n  for(var i = 0; i < l.length\
    \ - 1; i++){\n    if(l[i] > l[i + 1]){\n      increasing = false;\n    }\n   \
    \ if(l[i] < l[i + 1]){\n      decreasing = false;\n    }\n  }\n\n  return increasing\
    \ || decreasing;\n}\n", "\tif(l.length < 2){\n\t\treturn true;\n\t}\n\treturn\
    \ isIncreasing(l) || isDecreasing(l);\n}\n", "\t//your code here\n\tif(l.length\
    \ === 0){\n\t\treturn true;\n\t}\n\n\tvar before = l[0];\n\tvar increasing = true;\n\
    \tvar decreasing = true;\n\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(before\
    \ < l[i]){\n\t\t\tdecreasing = false;\n\t\t}\n\t\tif(before > l[i]){\n\t\t\tincreasing\
    \ = false;\n\t\t}\n\t\tbefore = l[i];\n\t}\n\n\treturn increasing || decreasing;\n\
    }\n", "  if(l.length <= 2){\n    return true;\n  }\n  if(l[0] < l[1]){\n    for(let\
    \ i = 1; i < l.length - 1; i++){\n      if(l[i] > l[i + 1]){\n        return false;\n\
    \      }\n    }\n  }\n  else if(l[0] > l[1]){\n    for(let i = 1; i < l.length\
    \ - 1; i++){\n      if(l[i] < l[i + 1]){\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n", "\tvar increase = true;\n\tvar decrease = true;\n\
    \tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(l[i] > l[i+1]){\n\t\t\tincrease\
    \ = false;\n\t\t}\n\t\tif(l[i] < l[i+1]){\n\t\t\tdecrease = false;\n\t\t}\n\t\
    }\n\treturn increase || decrease;\n}\n\n", "  var m = 0;\n  for(var i = 0; i <\
    \ l.length; i++){\n    if(i === 0){\n      m = l[i];\n    }\n    else{\n     \
    \ if(l[i] > m){\n        m = l[i];\n      }\n      else{\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n", "    l.sort();\n    return l[0] <=\
    \ l[l.length-1];\n}\n", "\tvar arr = l.sort(function(a, b){return a-b});\n\tif(arr.join()\
    \ == l.join()){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n", "\t\n\
    }\n", "  var f;\n  return l.every(function(v,i,a){\n    if(i === 0) return true;\n\
    \    if(i === 1) f = v > a[i-1];\n    return (v > a[i-1]) === f;\n  });\n}\n",
  "    if(l.length == 0){\n        return false;\n    }\n    //assume increasing\n\
    \    var increasing = true;\n    for(var i = 0; i < l.length - 1; i++){\n    \
    \    if(l[i] > l[i+1]){\n            increasing = false;\n            break;\n\
    \        }\n    }\n    if(increasing == true){\n        return true;\n    }\n\
    \    //assume decreasing\n    var decreasing = true;\n    for(var i = 0; i < l.length\
    \ - 1; i++){\n        if(l[i] < l[i+1]){\n            decreasing = false;\n  \
    \          break;\n        }\n    }\n    if(decreasing == true){\n        return\
    \ true;\n    }\n    return false;\n}\n", "  if(l.length < 3){\n    return true;\n\
    \  }\n  var isUp;\n  var isDown;\n  var current = l[0];\n  var index = 1;\n  while(index\
    \ < l.length){\n    if(current > l[index]){\n      if(isUp == true){\n       \
    \ return false;\n      }\n      isDown = true;\n    }else if(current < l[index]){\n\
    \      if(isDown == true){\n        return false;\n      }\n      isUp = true;\n\
    \    }\n    current = l[index];\n    index++;\n  }\n  return true;\n}\n", "  \
    \  var r=l.slice();\n    r.sort();\n    var result1 = l.toString() == r.toString();\n\
    \    r.reverse();\n    var result2 = l.toString() == r.toString();\n    return\
    \ result1 || result2;\n}\n\n", "    for(let i = 0; i < l.length; i++){\n     \
    \   if(l[i] > l[i+1]){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "    return l.slice(1).every((v,i)=>(v >= l[i] && l[i] <= l[i+1])\
    \ || (v <= l[i] && l[i] >= l[i+1]))\n}", "    var i = 0;\n    var inc = false;\n\
    \    var dec = false;\n    while(i < l.length - 1){\n        if(l[i] < l[i+1]){\n\
    \            inc = true;\n        }\n        if(l[i] > l[i+1]){\n            dec\
    \ = true;\n        }\n        i++;\n    }\n    if(inc && dec){\n        return\
    \ false;\n    }\n    return true;\n}\n", "    var a = l[0] - l[1];\n    for(var\
    \ i = 0; i < l.length - 1; i++){\n        var b = l[i] - l[i+1];\n        if(a\
    \ * b < 0){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "  if(l.length<2){\n    return true;\n  }\n  for(var i=0;i<l.length-1;i++){\n  \
    \  if(l[i]>l[i+1]){\n      for(var j=i+1;j<l.length-1;j++){\n        if(l[j]>l[j+1]){\n\
    \          return false;\n        }\n      }\n      return true;\n    }\n    else\
    \ if(l[i]<l[i+1]){\n      for(var j=i+1;j<l.length-1;j++){\n        if(l[j]<l[j+1]){\n\
    \          return false;\n        }\n      }\n      return true;\n    }\n  }\n\
    \  return true;\n}\n", "  if(l.length == 1)\n    return true;\n  let increasing\
    \ = true;\n  let decreasing = true;\n  for(let i = 0; i < l.length - 1; i++){\n\
    \    if(l[i] > l[i+1])\n      increasing = false;\n    if(l[i] < l[i+1])\n   \
    \   decreasing = false;\n  }\n  return increasing || decreasing;\n}\n", "\tif(l.length\
    \ < 2){\n\t\treturn true;\n\t}\n\tif(l[0] > l[1]){\n\t\tfor(var i = 1; i < l.length;\
    \ i++){\n\t\t\tif(l[i] >= l[i-1]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }else{\n\t\tfor(var i = 1; i < l.length; i++){\n\t\t\tif(l[i] <= l[i-1]){\n\t\t\
    \t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n", "    if(l.length<2){\n\
    \        return true;\n    }\n    let increasing = true;\n    let decreasing =\
    \ true;\n    for(let i=0;i<l.length-1;i++){\n        if(l[i]<l[i+1]){\n      \
    \      decreasing = false;\n        }\n        if(l[i]>l[i+1]){\n            increasing\
    \ = false;\n        }\n    }\n    return increasing || decreasing;\n}\n", "  \
    \  for(var i = 0; i < l.length - 1; i++){\n        if(l[i] < l[i+1]){\n      \
    \      return false;\n        }\n    }\n    return true;\n}", "    var z = l[0];\n\
    \    var inc = 0;\n    var dec = 0;\n    for(var i = 0; i < l.length; i++){\n\
    \        if(l[i] > z){\n            inc++;\n        }\n        else if(l[i] <\
    \ z){\n            dec++;\n        }\n        else{\n            inc++;\n    \
    \        dec++;\n        }\n        z = l[i];\n    }\n    if(inc == l.length ||\
    \ dec == l.length){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }\n}\n", "    var increasing = true\n    var decreasing = true\n    for (i\
    \ = 0; i < l.length-1; i++){\n        if (l[i] < l[i+1]){\n            decreasing\
    \ = false\n        }\n        if (l[i] > l[i+1]){\n            increasing = false\n\
    \        }\n    }\n    return increasing || decreasing\n}\n", "\tvar increasing\
    \ = 1, decreasing = 1;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(l[i]\
    \ <= l[i+1]){\n\t\t\tincreasing++;\n\t\t}\n\t\tif(l[i] >= l[i+1]){\n\t\t\tdecreasing++;\n\
    \t\t}\n\t}\n\tif(increasing == l.length || decreasing == l.length){\n\t\treturn\
    \ true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n", "    var current=l[0];\n\
    \    var increase=true;\n    var decrease=true;\n    var result=false;\n    var\
    \ equal=true;\n    for(var i=1;i<l.length;i++){\n        if(l[i]>current){\n \
    \           decrease=false;\n        }\n        if(l[i]<current){\n          \
    \  increase=false;\n        }\n        if(l[i]==current){\n            decrease=false;\n\
    \            increase=false;\n        }\n        current=l[i];\n    }\n    if(increase||decrease){\n\
    \        result=true;\n    }\n    return result;\n}\n", "    // Your answer goes\
    \ here.\n    var lCopy = l.slice(0);\n    if (lCopy.every(function(a,b){return\
    \ a<=b})) {\n        return true;\n    }\n    lCopy.reverse();\n    if (lCopy.every(function(a,b){return\
    \ a<=b})) {\n        return true;\n    }\n    return false;\n}\n", "  var inc\
    \ = 0;\n  var dec = 0;\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i]\
    \ <= l[i+1]){\n      inc++;\n    }\n    if(l[i] >= l[i+1]){\n      dec++;\n  \
    \  }\n  }\n  if(inc === l.length - 1 || dec === l.length - 1){\n    return true;\n\
    \  }\n  return false;\n}\n", "  if(l[0] < l[1]){\n    for(var i = 0; i < l.length\
    \ - 1; i++){\n      if(l[i] > l[i+1]){\n        return false;\n      }\n    }\n\
    \  } else {\n    for(var i = 0; i < l.length - 1; i++){\n      if(l[i] < l[i+1]){\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}", "  let increasing\
    \ = true;\n  let decreasing = true;\n  for(let i = 0; i < l.length-1; i++){\n\
    \    if(l[i]>l[i+1]){\n      increasing = false;\n    }\n    if(l[i]<l[i+1]){\n\
    \      decreasing = false;\n    }\n  }\n  return (increasing || decreasing);\n\
    }\n", "    if(l.length <= 2){\n        return true;\n    }\n\n    var isIncreasing\
    \ = l[0] < l[1];\n    for(var i = 1; i < l.length; i++){\n        if(isIncreasing\
    \ && l[i] < l[i-1]){\n            return false;\n        }\n        if(!isIncreasing\
    \ && l[i] > l[i-1]){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

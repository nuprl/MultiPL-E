name: HumanEval_16_count_distinct_characters
language: js
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
  aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
  }\n\ntest();"
completions: ["  var arr = string.split(\"\");\n  var result = [];\n  for(var i =\
    \ 0; i < arr.length; i++){\n    if(result.indexOf(arr[i].toLowerCase()) < 0){\n\
    \      result.push(arr[i].toLowerCase());\n    }\n  }\n  return result.length;\n\
    }\n", "\tvar unique = \"\";\n\tfor (var i = 0; i < string.length; i++) {\n\t\t\
    if (unique.indexOf(string[i]) == -1) {\n\t\t\tunique += string[i];\n\t\t}\n\t\
    }\n\treturn unique.length;\n}\n", "    var string = string.toLowerCase();\n  \
    \  var arr = string.split(\"\");\n    var obj = {};\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(!obj[arr[i]]){\n            obj[arr[i]] = 1;\n        }\n\
    \    }\n    return Object.keys(obj).length;\n}\n", "    return Array.from(new\
    \ Set(string.toLowerCase())).length;\n}\n", "    var no_space = string.replace(/\\\
    s+/g, '');\n    var str = no_space.toLowerCase();\n    var char = str.split(\"\
    \");\n    var count = [];\n    var result = 0;\n    for (var i = 0; i < char.length;\
    \ i++){\n        if (count[char[i]] === undefined){\n            count[char[i]]\
    \ = 1;\n            result++;\n        }\n    }\n    return result;\n}\n\n", " \
    \   //create a distinct set\n    let distinctSet = new Set();\n    //add all characters\
    \ of the string to the set\n    for(let i = 0; i < string.length; i++){\n    \
    \    distinctSet.add(string[i]);\n    }\n    //return the size of the set\n  \
    \  return distinctSet.size;\n}\n", "    var unique = \"\";\n    for (var i = 0;\
    \ i < string.length; i++) {\n        if (unique.indexOf(string[i]) == -1) {\n\
    \            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }", "  return string.toLowerCase().split('').filter(function(n, i, a){\n    return\
    \ a.indexOf(n) == i;\n  }).length;\n}\n", "\tvar index = 0;\n\tvar uniqueChars\
    \ = [];\n\twhile(index < string.length){\n\t\tvar char = string[index].toLowerCase();\n\
    \t\tif(uniqueChars.indexOf(char) == -1){\n\t\t\tuniqueChars.push(char);\n\t\t\
    }\n\t\tindex ++;\n\t}\n\treturn uniqueChars.length;\n}\n", "    var upper=string.toUpperCase();\n\
    \    var lower=string.toLowerCase();\n    var arr=[];\n    for(var i=0;i<string.length;i++){\n\
    \        if(arr.indexOf(upper[i])==-1){\n            arr.push(upper[i]);\n   \
    \     }\n        if(arr.indexOf(lower[i])==-1){\n            arr.push(lower[i]);\n\
    \        }\n    }\n    return arr.length;\n}", "    return [...new Set(string.toLowerCase())].length;\n\
    }", "\tvar array = string.split(\"\");\n\tvar unique = array.filter(function(elem,\
    \ index, self) {\n    \treturn index == self.indexOf(elem);\n\t});\n\treturn unique.length;\n\
    }\n", "    return string.toLowerCase().split('').filter(function(el,i,a){\n  \
    \      return i == a.indexOf(el);\n    }).length;\n}\n", "    var count = 0;\n\
    \    for (var i = 0; i < string.length; i++){\n        var char = string[i].toLowerCase();\n\
    \        if (string.toLowerCase().indexOf(char) == i){\n            count += 1;\n\
    \        }\n    }\n    return count;\n}", "    var char_set = '';\n    for (var\
    \ i = 0; i < string.length; i++) {\n        if (char_set.indexOf(string.charAt(i))\
    \ == -1) {\n            char_set += string[i];\n        }\n    }\n    return char_set.length;\n\
    }\n", "    return _.uniq(string.toLowerCase().split('')).length;\n}\n", "    let\
    \ distinct=0;\n    for(let i=0;i<string.length;i++){\n        if(string.toLowerCase().indexOf(string[i].toLowerCase())==i){\n\
    \            distinct++;\n        }\n    }\n    return distinct;\n}", "\tvar chars\
    \ = {};\n\tfor (var i = 0; i < string.length; i++){\n\t\tvar char = string[i].toLowerCase();\n\
    \t\tif (chars[char] === undefined){\n\t\t\tchars[char] = 1;\n\t\t}\n\t}\n\treturn\
    \ Object.keys(chars).length;\n}", "    //get rid of the duplicates\n    var newString\
    \ = string.toLowerCase().split('').filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; }).join('');\n    return newString.length;\n}", "    return [...new Set(string.toLowerCase())].length;\n\
    }\n", "\tvar len = string.length;\n\tvar char = string.toLowerCase();\n\tvar count\
    \ = 0;\n\tvar a = [];\n\tvar index = 0;\n\tfor(var i = 0; i < len; i++){\n\t\t\
    if(a.indexOf(char[i]) === -1){\n\t\t\ta[index] = char[i];\n\t\t\tindex++;\n\t\t\
    \tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  let uniqueArray = [];\n  string.split('').forEach(function(item){\n\
    \    if (uniqueArray.indexOf(item.toLowerCase()) == -1){\n      uniqueArray.push(item.toLowerCase());\n\
    \    }\n  });\n  return uniqueArray.length;\n}", "\tvar char_set = \"\";\n\tfor\
    \ (var i = 0; i < string.length; i++) {\n\t\tif (char_set.indexOf(string[i]) <\
    \ 0){\n\t\t\tchar_set += string[i];\n\t\t}\n\t}\n\treturn char_set.length;\n}",
  "    return new Set(string.toLowerCase()).size;\n}\n", "    return [...new Set(string.toLowerCase())].length;\n\
    }\n", "    //make string lowercase\n    string = string.toLowerCase();\n    var\
    \ seen = {};\n    var count = 0;\n    for (var i = 0; i < string.length; i++)\
    \ {\n        if (seen[string[i]] == undefined) {\n            seen[string[i]]\
    \ = 1;\n            count++;\n        }\n    }\n    return count;\n}", "    return\
    \ unique(string.toLowerCase()).length;\n}\n", "    string = string.toLowerCase();\n\
    \    return count_unique_characters(string);\n}\n", "    let array = [];\n   \
    \ for (let char of string){\n        if (array.indexOf(char.toLowerCase())===-1){\n\
    \            array.push(char.toLowerCase());\n        }\n    }\n    return array.length;\n\
    }\n", "    var newStr = \"\";\n    for (var i = 0; i < string.length; i++){\n\
    \        if (newStr.indexOf(string[i]) == -1){\n            newStr += string[i];\n\
    \        }\n    }\n    return newStr.length;\n}\n", "    return string.length\
    \ - (string.toLowerCase().split(\"\").sort().join(\"\").match(/([^])\\1+/g) ||\
    \ []).length;\n}", "    let string_to_set = new Set(string.toLowerCase());\n \
    \   return string_to_set.size;\n}\n", "  return string.split(\"\").filter(function(character,\
    \ index, string){\n    return string.indexOf(character) === index;\n  }).length;\n\
    }\n", "  var result = [];\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (result.indexOf(string[i].toLowerCase()) === -1) {\n      result.push(string[i].toLowerCase());\n\
    \    }\n  }\n  return result.length;\n}\n", "\tvar chars = string.split(\"\");\n\
    \tvar counts = {};\n\tfor (var i = 0; i < chars.length; i++) {\n\t\tvar char =\
    \ chars[i];\n\t\tif (counts[char]) {\n\t\t\tcounts[char]++;\n\t\t} else {\n\t\t\
    \tcounts[char] = 1;\n\t\t}\n\t}\n\treturn Object.keys(counts).length;\n}", " \
    \   var lowerCaseString = string.toLowerCase();\n    var uniqueCharArray = [];\n\
    \    for (var i = 0; i < lowerCaseString.length; i++){\n        if (uniqueCharArray.indexOf(lowerCaseString[i])\
    \ === -1){\n            uniqueCharArray.push(lowerCaseString[i]);\n        }\n\
    \    }\n    return uniqueCharArray.length;\n}\n", "    let set = new Set(string.toLowerCase());\n\
    \    return set.size;\n}\n", "\tvar distinctChars = string.split(\"\").filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; }).join(\"\");\n\treturn distinctChars.length;\n\
    }\n", "\treturn _.chain(string.toLowerCase())\n\t\t.filter(function(x){\n\t\t\t\
    return x.charCodeAt(0) >= 'a'.charCodeAt(0) && x.charCodeAt(0) <= 'z'.charCodeAt(0);\n\
    \t\t})\n\t\t.uniq()\n\t\t.value()\n\t\t.length;\n}\n", "    return unique_items(string.toLowerCase().split('')).length;\n\
    }\n", "    string = string.toLowerCase();\n    var dict = {};\n    for (var i\
    \ = 0; i < string.length; i++){\n        dict[string[i]] = true;\n    }\n    return\
    \ Object.keys(dict).length;\n}\n", "\n}\n", "  // Write your code here!\n}\n",
  "\treturn (string.toLowerCase().split(\"\").sort().join(\"\").match(/([^])\\1+/g)\
    \ || []).length;\n}\n\n\n", "    var character = string.split(\"\");\n    var\
    \ unique = [];\n    for(var i = 0; i < character.length; i++){\n        if(unique.indexOf(character[i])\
    \ === -1){\n            unique.push(character[i]);\n        }\n    }\n    return\
    \ unique.length;\n}\n", "\treturn (string.toLowerCase().split(\"\").filter(function(item,\
    \ pos, self) {\n    return self.indexOf(item) == pos;\n\t}).length);\n};\n\n",
  "  return string.split(\"\").reduce(function(acc, value){\n    if(acc.indexOf(value.toLowerCase())\
    \ === -1){\n      acc.push(value.toLowerCase());\n    }\n    return acc;\n  },\
    \ []).length;\n}", "    return new Set(string.toLowerCase()).size;\n}\n", "  var\
    \ chars = {};\n  var count = 0;\n  for (var i = 0; i < string.length; i++) {\n\
    \    var char = string[i].toLowerCase();\n    if (chars[char] === undefined) {\n\
    \      chars[char] = true;\n      count += 1;\n    }\n  }\n  return count;\n}\n",
  "    var strArray = string.split(\"\");\n    var unique = strArray.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n",
  "    var res = [];\n    for (var i = 0; i < string.length; i++){\n        if (res.indexOf(string[i].toLowerCase())\
    \ == -1){\n            res.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return res.length;\n}", "    let len = string.length\n    let output = ''\n\
    \    let count = 0\n    for(i=0; i<len; i++){\n        let currentLetter = string[i]\n\
    \        if(output.indexOf(currentLetter) == -1){\n            output += currentLetter\n\
    \            count++\n        }\n    }\n    return count\n}", "  var storageArray\
    \ = [];\n  for (var i = 0; i < string.length; i++) {\n    var currentChar = string[i];\n\
    \    if (storageArray.indexOf(currentChar) === -1) {\n      storageArray.push(currentChar);\n\
    \    }\n  }\n  return storageArray.length;\n}", "    var array = [];\n    for\
    \ (var i = 0; i < string.length; i++){\n        if (array.indexOf(string[i].toLowerCase())\
    \ === -1){\n            array.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return array.length;\n}", "    let char_dict = {}\n    let distinct_count\
    \ = 0;\n    for (let char of string){\n        if (!char_dict[char.toLowerCase()]){\n\
    \            char_dict[char.toLowerCase()] = true;\n            distinct_count\
    \ += 1;\n        }\n    }\n    return distinct_count;\n}\n", "    var count =\
    \ 0;\n    var a = [];\n    for (var i = 0; i < string.length; i++){\n        a.push(string[i].toLowerCase());\n\
    \    }\n    for (var i = 0; i < a.length; i++){\n        if (a.indexOf(a[i]) ===\
    \ i){\n            count++;\n        }\n    }\n    return count;\n}", "  var collection\
    \ = {};\n  var count = 0;\n  var str = string.toLowerCase();\n  for(var i = 0;\
    \ i < str.length; i++){\n    if(collection[str[i]] === undefined){\n      collection[str[i]]\
    \ = 1;\n      count += 1;\n    }\n  }\n  return count;\n}", "\t\tstring = string.toLowerCase();\n\
    \t\tlet count = 0;\n\t\tfor(let i = 0; i < string.length; i++){\n\t\t\tif(string.indexOf(string[i])\
    \ == i){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n}", "\tvar distinct\
    \ = 0;\n\tvar charArray = {};\n\tvar lowString = string.toLowerCase();\n\tfor\
    \ (var i = 0; i < lowString.length; i++) {\n\t\tif (charArray[lowString[i]] ===\
    \ undefined) {\n\t\t\tcharArray[lowString[i]] = lowString[i];\n\t\t\tdistinct\
    \ ++;\n\t\t}\n\t}\n\treturn distinct;\n}\n", "    let newString = string.toLowerCase();\n\
    \    let count = 0;\n    for(let i = 0; i < newString.length; i++){\n        if(newString.indexOf(newString[i])\
    \ == i){\n            count++;\n        }\n    }\n    return count;\n}", "  var\
    \ distinct = [];\n  for (var i = 0; i < string.length; i++) {\n    if(distinct.indexOf(string[i].toLowerCase())\
    \ == -1){\n      distinct.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ distinct.length;\n}\n", "    var result = [];\n    string = string.toLowerCase();\n\
    \    for (var i = 0; i < string.length; i++){\n        if (result.indexOf(string[i])\
    \ === -1){\n            result.push(string[i]);\n        }\n    }\n    return\
    \ result.length;\n}", "    return string.length\n}\n", "\tvar charArray = string.split(\"\
    \");\n\tvar uniqueArray = [];\n\tfor (var i = 0; i < charArray.length; i++) {\n\
    \t\tif (uniqueArray.indexOf(charArray[i].toLowerCase()) === -1) {\n\t\t\tuniqueArray.push(charArray[i].toLowerCase());\n\
    \t\t}\n\t}\n\treturn uniqueArray.length;\n}\n", "\tvar characters = string.split(\"\
    \")\n\tvar distinct_characters = []\n\tfor (var i = 0; i < characters.length;\
    \ i++) {\n\t\tif (distinct_characters.indexOf(characters[i].toLowerCase()) ===\
    \ -1) {\n\t\t\tdistinct_characters.push(characters[i].toLowerCase())\n\t\t}\n\t\
    }\n\treturn distinct_characters.length\n}\n", "\tvar alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tvar count = 0;\n\tfor (var i = 0; i < alphabet.length; i++) {\n\t\tif (string.toLowerCase().indexOf(alphabet[i])\
    \ != -1) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    const letters = []\n    for (let\
    \ i = 0; i < string.length; i++){\n        if (letters.indexOf(string[i].toLowerCase())\
    \ === -1){\n            letters.push(string[i].toLowerCase())\n        }\n   \
    \ }\n    return letters.length\n}", "    let arr1 = string.toLowerCase().split('')\n\
    \    let arr2 = arr1.filter(function(elem, index, self) {\n        return index\
    \ == self.indexOf(elem);\n    })\n    return arr2.length\n}", "  return Array.from(new\
    \ Set(string.toLowerCase())).length;\n}\n", "\treturn get_unique_characters(string).length;\n\
    }\n", "    var char = '';\n    var count = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(char.indexOf(string[i]) == -1){\n            char += string[i];\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    var count\
    \ = 0;\n    var array = [];\n    for(var i = 0; i < string.length; i++){\n   \
    \     var char = string[i].toLowerCase();\n        if(array.indexOf(char) == -1){\n\
    \            array.push(char);\n            count ++;\n        }\n    }\n    return\
    \ count;\n}\n", "    var count = 0;\n    var array = [];\n    for(var i = 0; i\
    \ < string.length; i++){\n        if(!array.includes(string[i].toLowerCase())){\n\
    \            array.push(string[i].toLowerCase());\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n", "  var distinctChars = \"\";\n  for (var\
    \ i = 0; i < string.length; i++) {\n    var stringLetter = string[i].toLowerCase();\n\
    \    if (distinctChars.indexOf(stringLetter) === -1) {\n      distinctChars +=\
    \ stringLetter;\n    }\n  }\n  return distinctChars.length;\n}", "  var unique\
    \ = {};\n  var char;\n  var count = 0;\n  for (var i = 0; i < string.length; i++)\
    \ {\n    char = string[i].toLowerCase();\n    if (unique[char]) {\n      unique[char]\
    \ += 1;\n    } else {\n      unique[char] = 1;\n      count++;\n    }\n  }\n \
    \ return count;\n}\n\n", "    var result = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (result.indexOf(string[i]) == -1){\n            result +=\
    \ string[i];\n        }\n    }\n    return result.length;\n}\n", "    let unique\
    \ = {};\n    for (let i = 0; i < string.length; i++){\n        if (!unique[string[i].toLowerCase()]){\n\
    \            unique[string[i].toLowerCase()] = 1;\n        }\n    }\n    return\
    \ Object.keys(unique).length;\n}", "    let result = string.split('');\n    let\
    \ count = 0;\n    let arr = [];\n    for(let i = 0; i < result.length; i++){\n\
    \        if(!arr.includes(result[i].toLowerCase())){\n            arr.push(result[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let chars\
    \ = string.toLowerCase().split('');\n    let uniqueChars = [...new Set(chars)];\n\
    \    return uniqueChars.length;\n}\n", "  var characters = {};\n  for (var i =\
    \ 0; i < string.length; i++) {\n    if(characters[string[i].toLowerCase()] ==\
    \ undefined){\n      characters[string[i].toLowerCase()] = 1;\n    }\n  }\n  return\
    \ Object.keys(characters).length;\n}", "\tvar count = 0;\n\tvar set = new Set();\n\
    \tfor(var i = 0; i < string.length; i++){\n\t\tset.add(string[i].toLowerCase());\n\
    \t}\n\treturn set.size;\n}\n", "\treturn string.toLowerCase().split(\"\").filter(function(elem,\
    \ index, self){\n\t\treturn index == self.indexOf(elem);\n\t}).length;\n}\n",
  "  var myArray = string.split(\"\");\n  var mySet = new Set(myArray);\n  return\
    \ mySet.size;\n}", "    let num = string.length;\n    let lower = string.toLowerCase();\n\
    \    let set = new Set(lower);\n    return set.size;\n}", "    let no_of_distinct_characters\
    \ = 0;\n    let string_as_array = string.split(\"\");\n    let distinct_characters\
    \ = [];\n    for(let i = 0; i < string_as_array.length; i++){\n        if(!distinct_characters.includes(string_as_array[i].toLowerCase())){\n\
    \            distinct_characters.push(string_as_array[i].toLowerCase());\n   \
    \         no_of_distinct_characters += 1;\n        }\n    }\n    return no_of_distinct_characters;\n\
    }\n", "    let stringLowerCase = string.toLowerCase();\n    let uniqueLetters\
    \ = \"\";\n    for (let i = 0; i < stringLowerCase.length; i++){\n        if (uniqueLetters.indexOf(stringLowerCase[i])\
    \ === -1){\n            uniqueLetters += stringLowerCase[i];\n        }\n    }\n\
    \    return uniqueLetters.length;\n}\n", "  let count = 0;\n  let newString =\
    \ string.toLowerCase();\n  let uniqueString = '';\n  for (let i = 0; i < newString.length;\
    \ i++){\n    if (uniqueString.indexOf(newString[i]) == -1){\n      uniqueString\
    \ += newString[i];\n      count++;\n    }\n  }\n  return count;\n}", "    var\
    \ count = 0;\n    var char = []\n    for (var i = 0; i < string.length; i++){\n\
    \        if (char.indexOf(string[i].toLowerCase()) == -1){\n            char.push(string[i].toLowerCase());\n\
    \            count += 1;\n        }\n    }\n    return count;\n}\n", "    return\
    \ new Set(string.toLowerCase()).size;\n}\n", "    return Array.from(new Set(string.toLowerCase())).length;\n\
    }\n\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    var seen =\
    \ [];\n    for (var i = 0; i < string.length; i++) {\n        if (seen.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            seen.push(string[i].toLowerCase());\n        }\n    }\n\
    \    return seen.length;\n}\n", "\tvar d_string = string.toLowerCase();\n\tvar\
    \ string_array = d_string.split(\"\");\n\tvar unique_array = [];\n\tfor (var i\
    \ = 0; i < string_array.length; i++) {\n\t\tif (unique_array.indexOf(string_array[i])\
    \ === -1) {\n\t\t\tunique_array.push(string_array[i]);\n\t\t}\n\t}\n\treturn unique_array.length;\n\
    }\n", "  var newStr = string.toLowerCase();\n  return newStr.length - newStr.split('').sort().join('').replace(/(.)\\\
    1+/g, '$1').length;\n}\n", "    var newStr = string.toLowerCase();\n    var stringArray\
    \ = newStr.split(\"\");\n    var array = [];\n    for(var i = 0; i < stringArray.length;\
    \ i++){\n        if(array.indexOf(stringArray[i]) == -1){\n            array.push(stringArray[i]);\n\
    \        }\n    }\n    return array.length;\n}\n", "  var characters = string.split(\"\
    \");\n  var unique = [];\n  for (var i = 0; i < characters.length; i++) {\n  \
    \  if (unique.indexOf(characters[i].toLowerCase()) == -1) {\n      unique.push(characters[i].toLowerCase());\n\
    \    }\n  }\n  return unique.length;\n}\n", "    var charArray = [];\n    var\
    \ charCount = 0;\n    for (var i = 0; i < string.length; i++){\n        if (charArray.indexOf(string[i].toLowerCase())\
    \ === -1){\n            charArray.push(string[i].toLowerCase());\n           \
    \ charCount++;\n        }\n    }\n    return charCount;\n}\n", "  var counter\
    \ = 0;\n  var splitString = string.split(\"\");\n  var lowerString = string.toLowerCase();\n\
    \  var loweredString = lowerString.split(\"\");\n  for (var i = 0; i < loweredString.length;\
    \ i++) {\n    if (loweredString[i] !== loweredString[i + 1]) {\n      counter\
    \ ++;\n    }\n  }\n  return counter;\n}\n", "    var chars = string.split(\"\"\
    );\n    var charCount = {};\n    for (var i = 0; i < chars.length; i++){\n   \
    \     if (charCount[chars[i]] === undefined){\n            charCount[chars[i]]\
    \ = 1;\n        } else {\n            charCount[chars[i]] += 1;\n        }\n \
    \   }\n    var uniqueChars = Object.keys(charCount);\n    console.log(uniqueChars.length);\n\
    }\ncount_distinct_characters(\"xyzXYZ\");\ncount_distinct_characters(\"Jerry\"\
    );\n", "\tvar str = string.toLowerCase();\n\tvar str1 = str.split(\"\");\n\tvar\
    \ unique = [];\n\tfor(var i = 0; i < str1.length; i++){\n\t\tif(unique.indexOf(str1[i])\
    \ === -1){\n\t\t\tunique.push(str1[i]);\n\t\t}\n\t}\n\treturn unique.length;\n\
    }\n", "    var result = [];\n    var string = string.toLowerCase().split(\"\"\
    );\n    for(i=0; i<string.length; i++){\n        if(result.indexOf(string[i])\
    \ == -1){\n            result.push(string[i]);\n        }\n    }\n    return result.length;\n\
    }\n", "    let setOfString = new Set(string.toLowerCase())\n    return setOfString.size\n\
    }", "    var array = string.split(\"\");\n    var newArray = [];\n    for(var\
    \ i = 0; i < array.length; i++){\n        if(!newArray.includes(array[i].toLowerCase())){\n\
    \            newArray.push(array[i].toLowerCase());\n        }\n    }\n    return\
    \ newArray.length;\n}\n", "    var unique_characters = \"\";\n    for (var i =\
    \ 0; i < string.length; i++){\n        if (unique_characters.indexOf(string[i])\
    \ == -1){\n            unique_characters += string[i];\n        }\n    }\n   \
    \ return unique_characters.length;\n}\n", "    let count = 0;\n    let stringNoCase\
    \ = string.toLowerCase();\n    let exist = [];\n    for(let i = 0; i < stringNoCase.length;\
    \ i++){\n        if(exist.indexOf(stringNoCase[i]) === -1){\n            exist.push(stringNoCase[i]);\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    const lowercase\
    \ = string.toLowerCase();\n    let result = 0;\n    let count = {};\n    for (let\
    \ i = 0; i < lowercase.length; i++) {\n        if (!count[lowercase[i]]) {\n \
    \           count[lowercase[i]] = 1;\n            result += 1;\n        }\n  \
    \  }\n    return result;\n}\n", "\tvar newString = string.toLowerCase();\n\tvar\
    \ array = newString.split(\"\");\n\treturn array.filter(function(value,index,arr){\n\
    \t\treturn index == arr.indexOf(value);\n\t}).length;\n}\n", "    var num = 0;\n\
    \    var list = \"\";\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (list.indexOf(string[i].toLowerCase()) == -1){\n            list += string[i].toLowerCase();\n\
    \            num += 1;\n        }\n    }\n    return num;\n}", "\tvar unique =\
    \ [];\n\tfor (var i = 0; i < string.length; i++) {\n\t\tvar letter = string[i].toLowerCase();\n\
    \t\tvar check = unique.indexOf(letter);\n\t\tif (check === -1) {\n\t\t\tunique.push(letter);\n\
    \t\t}\n\t}\n\treturn unique.length;\n}", "\tvar characters = string.split(\"\"\
    );\n\tvar newString = [];\n\tvar result = 0;\n\tcharacters.forEach(function(x){\n\
    \t\tif(newString.indexOf(x.toLowerCase()) == -1){\n\t\t\tnewString.push(x.toLowerCase());\n\
    \t\t\tresult += 1;\n\t\t}\n\t});\n\treturn result;\n}\n", "\tvar set = new Set(string.toLowerCase());\n\
    \treturn set.size;\n}\n", "  let arr=string.split(\"\");\n  let newArr=[];\n \
    \ for(let i=0;i<arr.length;i++){\n    for(let j=i+1;j<arr.length;j++){\n     \
    \ if(arr[i].toLowerCase()==arr[j].toLowerCase()){\n        arr[j]=\"\";\n    \
    \  }\n    }\n  }\n  for(let k=0;k<arr.length;k++){\n    if(arr[k]!=\"\"){\n  \
    \    newArr.push(arr[k]);\n    }\n  }\n  return newArr.length;\n}\n", "    var\
    \ lowerString = string.toLowerCase()\n    var newArr = lowerString.split(\"\"\
    )\n    var sorted = newArr.sort()\n    var count = 0\n    for(i=0; i<sorted.length;\
    \ i++){\n        if(sorted[i]!=sorted[i+1]){\n            count++\n        }\n\
    \    }\n    return count\n}", "    string = string.toLowerCase();\n    var distinct\
    \ = \"\";\n    for (var i = 0; i < string.length; i++){\n        if (distinct.indexOf(string[i])\
    \ === -1){\n            distinct += string[i];\n        }\n    }\n    return distinct.length;\n\
    }\n", "    let final = 0;\n    let str = string.toLowerCase();\n    for(let i\
    \ = 0; i < str.length; i++){\n        if(str.indexOf(str[i]) === i){\n       \
    \     final++;\n        }\n    }\n    return final;\n}\n", "    var count = 0;\n\
    \    var dist = [];\n    for(var i = 0; i < string.length; i++){\n        if(!dist.includes(string[i].toLowerCase())){\n\
    \            dist.push(string[i].toLowerCase());\n            count++;\n     \
    \   }\n    }\n    return count;\n}", "    let result = new Set(string.toLowerCase());\n\
    \    return result.size;\n}\n", "    var count = 0;\n    var seen = [];\n    for\
    \ (var i = 0; i < string.length; i++){\n        if (seen.indexOf(string[i].toLowerCase())\
    \ == -1){\n            seen.push(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "\treturn array_to_set(string.toLowerCase()).length;\n\
    }\n", "    var output = {};\n    for (var i = 0; i < string.length; i++){\n  \
    \      var current = string[i].toLowerCase();\n        if (output[current] ==\
    \ undefined){\n            output[current] = 1;\n        } else {\n          \
    \  output[current] += 1;\n        }\n    }\n    return Object.keys(output).length;\n\
    }", "  var arr = string.split(\"\");\n  var result = \"\";\n  for(var i = 0; i\
    \ < arr.length; i++){\n    if(result.indexOf(arr[i]) == -1){\n      result +=\
    \ arr[i];\n    }\n  }\n  return result.length;\n}", "\t// var newString = string.toLowerCase();\n\
    \t// var unique = newString.split('').filter(function(el,index,arr){\n\t// \t\
    return index == arr.indexOf(el);\n\t// });\n\t// return unique.length;\n\t//one\
    \ line answer\n\treturn string.toLowerCase().split('').filter(function(el,index,arr){return\
    \ index == arr.indexOf(el);}).length;\n}", "  var newstring = string.toLowerCase();\n\
    \  var result = \"\";\n  for (var i = 0; i < newstring.length; i++) {\n    if\
    \ (result.indexOf(newstring[i]) < 0) {\n      result += newstring[i];\n    }\n\
    \  }\n  return result.length;\n}\n", "  let seen = [];\n  for (let i = 0; i <\
    \ string.length; i++) {\n    let char = string[i];\n    if (seen.indexOf(char.toLowerCase())\
    \ == -1) {\n      seen.push(char.toLowerCase());\n    }\n  }\n  return seen.length;\n\
    }", "  const unique = new Set()\n  string.split('').forEach(character => unique.add(character.toLowerCase()))\n\
    \  return unique.size\n}", "\treturn new Set(string.toLowerCase()).size;\n}",
  "    return string.toLowerCase().split('').filter(function(item,i,array){\n    \
    \    return array.indexOf(item) === i;\n    }).length;\n}\n", "    return Array.from(new\
    \ Set(string.toLowerCase())).length;\n}\n", "    var alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    var lowerString = string.toLowerCase();\n    var count = 0;\n    for (var\
    \ i = 0; i < alphabet.length; i++){\n        if (lowerString.indexOf(alphabet[i])\
    \ != -1){\n            count++;\n        }\n    }\n    return count;\n}\n", "\t\
    string = string.toLowerCase();\n\tvar count = 0;\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string.charAt(i) != string.charAt(i+1)){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}", "    var distinct_characters = []\n    for (var i\
    \ = 0; i < string.length; i++){\n        if (string[i] == string[i].toUpperCase()\
    \ && !distinct_characters.includes(string[i].toLowerCase())){\n            distinct_characters.push(string[i].toLowerCase())\n\
    \        }\n        else if (string[i] == string[i].toLowerCase() && !distinct_characters.includes(string[i].toUpperCase())){\n\
    \            distinct_characters.push(string[i].toUpperCase())\n        }\n  \
    \      else if (!distinct_characters.includes(string[i])){\n            distinct_characters.push(string[i])\n\
    \        }\n    }\n    return distinct_characters.length\n}", "\tvar char_count\
    \ = 0;\n\tvar chars = new Set();\n\tvar arr = string.split(\"\");\n\tarr.forEach(function(elem,\
    \ index){\n\t\tchars.add(elem.toLowerCase());\n\t});\n\treturn chars.size;\n}",
  "    return new Set(string.toLowerCase()).size;\n}\n", "  var characters = string.split(\"\
    \");\n  return unique(characters).length;\n}", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "\t\n\tvar characters = \"\";\n\t\n\tfor(var i = 0; i < string.length; i++){\n\
    \t\tif(characters.indexOf(string[i]) == -1){\n\t\t\tcharacters += string[i];\n\
    \t\t}\n\t}\n\t\n\treturn characters.length;\n}\n", "    var lower=string.toLowerCase();\n\
    \    return lower.split(\"\").reduce(function(acc,letter){\n        if(acc.indexOf(letter)===-1){\n\
    \            acc.push(letter);\n        }\n        return acc;\n    },[]).length;\n\
    }\n", "    var list = string.split(\"\");\n    var list2 = [];\n    for(i = 0;\
    \ i < list.length; i++){\n        if(list2.indexOf(list[i].toLowerCase()) == -1){\n\
    \            list2.push(list[i].toLowerCase());\n        }\n    }\n    return\
    \ list2.length;\n}", "    return string.toLowerCase().split('').filter(function(c,\
    \ i, a){\n        return a.indexOf(c) == i;\n    }).length;\n}", "    var string_array\
    \ = string.split(\"\");\n    var distinct_characters = [];\n    for (var i = 0;\
    \ i < string_array.length; i++){\n        var current_character = string_array[i];\n\
    \        var current_character_is_distinct = true;\n        for (var j = 0; j\
    \ < distinct_characters.length; j++){\n            if (current_character == distinct_characters[j]){\n\
    \                current_character_is_distinct = false;\n            }\n     \
    \   }\n        if (current_character_is_distinct){\n            distinct_characters.push(current_character);\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    var lowerString\
    \ = string.toLowerCase();\n    var set = new Set(lowerString);\n    return set.size;\n\
    }\n", "    var letter_chr = string.toLowerCase().split(\"\");\n    var new_letter_chr\
    \ = [...new Set(letter_chr)];\n    return new_letter_chr.length;\n}\n", "\treturn\
    \ new Set(string.toLowerCase()).size;\n}\n", "    var arr = string.split(\"\"\
    );\n    var unique = \"\";\n    var count = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var character = arr[i];\n        if(unique.indexOf(character)\
    \ == -1){\n            unique += character;\n            count += 1;\n       \
    \ }\n    }\n    return count;\n}\n", "  // YOUR CODE GOES HERE\n}\n", "    var\
    \ lower_case = string.toLowerCase();\n    var char_to_count = {};\n    for (var\
    \ i = 0; i < lower_case.length; i++){\n        if (char_to_count[lower_case[i]]\
    \ === undefined){\n            char_to_count[lower_case[i]] = 1;\n        }\n\
    \        else{\n            char_to_count[lower_case[i]] += 1;\n        }\n  \
    \  }\n    return Object.keys(char_to_count).length;\n}\n", "  let lowCase = string.toLowerCase();\n\
    \  let count = 0;\n  let dict = {};\n  for(let i = 0; i < lowCase.length; i++){\n\
    \    if(!dict[lowCase[i]]){\n      dict[lowCase[i]] = 1;\n      count++;\n   \
    \ }\n  }\n  return count;\n}\n", "\tvar letterCount = {};\n\t// iterate through\
    \ each character of the string\n\tfor (var i = 0; i < string.length; i++) {\n\t\
    \tvar letter = string[i].toLowerCase();\n\t\tif (letterCount[letter] !== undefined)\
    \ {\n\t\t\tletterCount[letter] += 1;\n\t\t} else {\n\t\t\tletterCount[letter]\
    \ = 1;\n\t\t}\n\t}\n\treturn Object.keys(letterCount).length;\n}\n", "  var strL\
    \ = string.toLowerCase();\n  var strU = string.toUpperCase();\n  var str = \"\"\
    ;\n  for (var i = 0; i < string.length; i++) {\n    if (strL[i] !== strU[i]) {\n\
    \      str += strU[i];\n    }\n  }\n  return str.length;\n}", "  var result =\
    \ [];\n  for (var i = 0; i < string.length; i++) {\n    if (result.indexOf(string[i].toLowerCase())\
    \ == -1) {\n      result.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ result.length;\n}\n", "  var array = string.split(\"\");\n  return new Set(array).size;\n\
    }\n", "    //TODO: write code here\n    var stringUpper = string.toUpperCase();\n\
    \    var object = {};\n    for (var i = 0; i < stringUpper.length; i++) {\n  \
    \      if (object[stringUpper[i]]) {\n            object[stringUpper[i]]++;\n\
    \        } else {\n            object[stringUpper[i]] = 1;\n        }\n    }\n\
    \    return Object.keys(object).length;\n}\n", "    let sorted_string = string.toLowerCase().split('').sort();\n\
    \    let counter = 1;\n    for (let i = 0; i < sorted_string.length; i++){\n \
    \       if (sorted_string[i] !== sorted_string[i+1]){\n            counter ++;\n\
    \        }\n    }\n    return counter;\n}\n", "    //Write your code here\n}\n",
  "    var count = 0;\n    var list = [...new Set(string.toLowerCase())];\n    return\
    \ list.length;\n}\n", "\tvar string = string.toLowerCase();\n\tvar string = string.split(\"\
    \");\n\tvar count = string.reduce(function(count, string){\n\t\tcount[string]\
    \ = (count[string] || 0) + 1;\n\t\treturn count;\n\t}, {});\n\tvar count = Object.keys(count).length;\n\
    \treturn count;\n}", "    var stringArr = string.split(\"\");\n    var set = new\
    \ Set(stringArr);\n    return set.size;\n}", "  return new Set(string.toLowerCase()).size;\n\
    }\n", "\tvar chars = string.split(\"\");\n\tvar count = 0;\n\tvar alreadyFound\
    \ = [];\n\tfor(var i = 0; i < chars.length; i++){\n\t\tif(alreadyFound.indexOf(chars[i].toLowerCase())\
    \ == -1){\n\t\t\talreadyFound.push(chars[i].toLowerCase());\n\t\t\tcount++;\n\t\
    \t}\n\t}\n\treturn count;\n}\n\n", "    var chars = string.split(\"\");\n    var\
    \ count = 0;\n    var distinct = [];\n    for(var i = 0; i < chars.length; i++){\n\
    \        var current = chars[i].toLowerCase();\n        if(distinct.indexOf(current)\
    \ < 0){\n            distinct.push(current);\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let mySet = new Set(string.toLowerCase());\n    return mySet.size;\n\
    };\n", "  var arr = string.split(\"\");\n  var newArr = arr.filter(function(value,\
    \ index, array){\n    return array.indexOf(value) === index;\n  });\n  return\
    \ newArr.length;\n}\n", "    var distinct_array = []\n    for (i = 0; i < string.length;\
    \ i++) {\n        if (!distinct_array.includes(string[i].toLowerCase())) {\n \
    \           distinct_array.push(string[i].toLowerCase())\n        }\n    }\n \
    \   return distinct_array.length\n}", "    return Array.from(new Set(string.toLowerCase())).length;\n\
    }\n", "  return [...new Set(string.toLowerCase())].length;\n}\n", "\tvar myStr\
    \ = string.toLowerCase();\n\tvar outputArray = [];\n\tfor (var i = 0; i < myStr.length;\
    \ i++) {\n\t\tif(outputArray.indexOf(myStr[i]) == -1){\n\t\t\toutputArray.push(myStr[i]);\n\
    \t\t}\n\t}\n\treturn outputArray.length;\n}\n", "    var distinct_letters = 0;\n\
    \    for (var i = 0; i < string.length; i++){\n        if (string.indexOf(string[i])\
    \ == i){\n            distinct_letters += 1;\n        }\n    }\n    return distinct_letters;\n\
    }\n", "\tvar count=0;\n\tvar s=string.toLowerCase();\n\tfor(var i=0;i<s.length;i++){\n\
    \t\tfor(var j=i+1;j<s.length;j++){\n\t\t\tif(s[i]===s[j]){\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t\tif(j===s.length){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }", "    //Hint: have a dictionary\n    var char_dict = {};\n    var distinct_chars\
    \ = 0;\n    for (var i = 0; i < string.length; i++){\n        var char = string[i];\n\
    \        if (!(char in char_dict)){\n            char_dict[char] = 1;\n      \
    \      distinct_chars += 1;\n        }\n    }\n    return distinct_chars;\n}\n",
  "    let arr = string.split('')\n    let set = new Set(arr);\n    return set.size;\n\
    }\n", "    var distinctCharacters = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (distinctCharacters.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1){\n            distinctCharacters += string[i];\n        }\n    }\n  \
    \  return distinctCharacters.length;\n}", "    // just convert the string to upper\
    \ case and you count all unique charecters\n    let stringToUpper = string.toUpperCase();\n\
    \    let unique = \"\";\n    for(let i = 0; i < stringToUpper.length; i++){\n\
    \        if(unique.indexOf(stringToUpper[i]) == -1){\n            unique += stringToUpper[i];\n\
    \        }\n    }\n    return unique.length;\n}", "  // do your work here\n  var\
    \ count = string.toLowerCase().split('').filter(function(v,i,a){\n    return a.indexOf(v)\
    \ === i;\n  }).length;\n  return count;\n}\n", "\tvar stringArray = string.split(\"\
    \");\n\tvar count = 0;\n\tvar uniqueArray = [];\n\tfor (var i = 0; i < stringArray.length;\
    \ i++) {\n\t\tif (uniqueArray.indexOf(stringArray[i].toLowerCase()) === -1){\n\
    \t\t\tuniqueArray.push(stringArray[i].toLowerCase());\n\t\t\tcount++;\n\t\t}\n\
    \t}\n\treturn count;\n}\n", "    //\n}\n", "  var charObj = {};\n  for (var i\
    \ = 0; i < string.length; i++) {\n    var char = string[i].toLowerCase();\n  \
    \  if (!charObj[char]) {\n      charObj[char] = true;\n    }\n  }\n  return Object.keys(charObj).length;\n\
    }\n", "  string = string.toLowerCase();\n  var arr = [];\n  for(var i = 0; i <\
    \ string.length; i++){\n    if(arr.indexOf(string[i]) == -1){\n      arr.push(string[i]);\n\
    \    }\n  }\n  return arr.length;\n}\n", "    //var string = \"Jerry\";\n    var\
    \ splitStr = string.split(\"\");\n    //var test = splitStr.toLowerCase();\n \
    \   var distinct = [];\n    for (var i = 0; i < splitStr.length; i++){\n     \
    \   var s = splitStr[i].toLowerCase();\n        if (distinct.indexOf(s) === -1){\n\
    \            distinct.push(s);\n        }\n    }\n    return distinct.length;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "\tlet array = string.split(\"\
    \");\n\tlet count = 0;\n\tlet n = 0;\n\tlet m = 1;\n\tfor (i=0; i<array.length;\
    \ i++){\n\t\tfor (j=m; j<array.length; j++){\n\t\t\tif (array[i] === array[j]){\n\
    \t\t\t\tm++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount++;\n\t\t\t\t\
    n++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "\tvar result\
    \ = '';\n\tstring = string.toLowerCase();\n\tfor (var i = 0; i < string.length;\
    \ i++) {\n\t\tif (result.indexOf(string[i]) === -1) {\n\t\t\tresult += string[i];\n\
    \t\t}\n\t}\n\treturn result.length;\n}\n", "    return Array.from(new Set(string.toLowerCase())).length;\n\
    }", "  var set = new Set();\n  for (var i = 0; i < string.length; i++) {\n   \
    \ set.add(string[i]);\n  }\n  return set.size;\n}\n", "    var result = 0;\n \
    \   var alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    var arrayString = string.toLowerCase().split('');\n\
    \    for (var i = 0; i < alphabet.length; i++){\n        if (arrayString.indexOf(alphabet[i])\
    \ > -1){\n            result++;\n        }\n    }\n    return result;\n}\n", " \
    \   return string.length - (string.replace(/[^a-z]/gi,'').length);\n}", "    var\
    \ lower_string = string.toLowerCase();\n    var distinct_characters = [];\n  \
    \  for (var i = 0; i < lower_string.length; i++){\n        if (distinct_characters.indexOf(lower_string[i])\
    \ === -1){\n            distinct_characters.push(lower_string[i]);\n        }\n\
    \    }\n    return distinct_characters.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

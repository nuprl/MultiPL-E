name: HumanEval_51_remove_vowels
language: js
prompt: "//remove_vowels is a function that takes string and returns string without\
  \ vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"abcdef\"\
  )\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
  aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = remove_vowels;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  abcdef\nghijklm\"),\"bcdf\nghjklm\");\n  assert.deepEqual(candidate(\"fedcba\"),\"\
  fdcb\");\n  assert.deepEqual(candidate(\"eeeee\"),\"\");\n  assert.deepEqual(candidate(\"\
  acBAA\"),\"cB\");\n  assert.deepEqual(candidate(\"EcBOO\"),\"cB\");\n  assert.deepEqual(candidate(\"\
  ybcd\"),\"ybcd\");\n}\n\ntest();"
completions: ["  var regex = /[aeiou]/gi;\n  return text.replace(regex, '');\n}\n",
  "  //var vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n  //var text\
    \ = '';\n  var result = '';\n  for (var i = 0; i < text.length; i++){\n    if\
    \ (['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'].indexOf(text[i]) == -1){\n\
    \      result += text[i];\n    }\n  }\n  return result;\n}\n", "\tvar output =\
    \ \"\";\n\tfor(var i = 0; i < text.length; i++){\n\t\tvar vowel = text[i];\n\t\
    \tif(vowel != \"a\" && vowel != \"e\" && vowel != \"i\" && vowel != \"o\" && vowel\
    \ != \"u\"){\n\t\t\toutput += vowel;\n\t\t}\n\t}\n\treturn output;\n}\n", "  \
    \  if(text === \"\"){\n        return text;\n    } else if (text.length === 1){\n\
    \        return ((text === \"a\") || (text === \"e\") || (text === \"i\") || (text\
    \ === \"o\") || (text === \"u\")) ? \"\" : text;\n    } else {\n        return\
    \ ((text[0] === \"a\") || (text[0] === \"e\") || (text[0] === \"i\") || (text[0]\
    \ === \"o\") || (text[0] === \"u\")) ? remove_vowels(text.slice(1)) : (text[0]\
    \ + remove_vowels(text.slice(1)));\n    }\n}", "\tvar newText = '';\n\tfor (var\
    \ i = 0; i < text.length; i++) {\n\t\tif (text[i] !== 'a' && text[i] !== 'e' &&\
    \ text[i] !== 'i' && text[i] !== 'o' && text[i] !== 'u') {\n\t\t\tnewText += text[i];\n\
    \t\t}\n\t}\n\treturn newText;\n}\n", "  var result = \"\";\n  var vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n  for (var i = 0; i < text.length; i++){\n\
    \    if (!vowels.includes(text[i].toLowerCase())){\n      result += text[i];\n\
    \    }\n  }\n  return result;\n}\n", "\tvar out = \"\";\n\tfor(var i = 0; i <\
    \ text.length; i++){\n\t\tvar ch = text.charAt(i);\n\t\tif (ch != \"a\" && ch\
    \ != \"e\" && ch != \"i\" && ch != \"o\" && ch != \"u\" && ch != \"A\" && ch !=\
    \ \"E\" && ch != \"I\" && ch != \"O\" && ch != \"U\"){\n\t\t\tout += ch;\n\t\t\
    }\n\t}\n\treturn out;\n}\n", "    if(text === \"\"){\n        return text;\n \
    \   }else{\n        var x = text.substring(0,1);\n        if(x === \"a\" || x\
    \ === \"e\" || x === \"i\" || x === \"o\" || x === \"u\" || x === \"A\" || x ===\
    \ \"E\" || x === \"I\" || x === \"O\" || x === \"U\"){\n            return remove_vowels(text.substring(1));\n\
    \        }else{\n            return x + remove_vowels(text.substring(1));\n  \
    \      }\n    }\n}\n", "    var letters = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    var text_list = [];\n    for (var i = 0; i < text.length; i++) {\n      \
    \  if (letters.indexOf(text[i]) == -1) {\n            text_list.push(text[i]);\n\
    \        }\n    }\n    return text_list.join(\"\");\n}\n", "    return text.replace(/[aeiou]/gi,'');\n\
    }\n", "    var removed_vowels = \"\";\n    var vowels = \"aeiou\";\n    for (var\
    \ i = 0; i < text.length; i++){\n        var letter = text[i];\n        if (vowels.indexOf(letter)\
    \ === -1){\n            removed_vowels += letter;\n        }\n    }\n    return\
    \ removed_vowels;\n}\n", "    var result = \"\";\n    var vowels = \"aeiou\";\n\
    \    for (var i = 0; i < text.length; i++){\n        var char = text[i];\n   \
    \     if (vowels.indexOf(char) < 0){\n            result += char;\n        }\n\
    \    }\n    return result;\n}\n", "    if(text.length == 0){\n        return text;\n\
    \    }else{\n        if(text[0] == \"a\" || text[0] == \"e\" || text[0] == \"\
    i\" || text[0] == \"o\" || text[0] == \"u\" || text[0] == \"A\" || text[0] ==\
    \ \"E\" || text[0] == \"I\" || text[0] == \"O\" || text[0] == \"U\"){\n      \
    \      return remove_vowels(text.slice(1));\n        }else{\n            return\
    \ text[0] + remove_vowels(text.slice(1));\n        }\n    }\n}\n", "    return\
    \ text.replace(/[aeiou]/ig,'');\n}", "    var new_text = \"\"\n    var vowels\
    \ = {'a':1, 'e':1, 'i':1, 'o':1, 'u':1}\n    for (var i = 0; i < text.length;\
    \ i++){\n        if (!vowels[text[i]]){\n            new_text += text[i]\n   \
    \     }\n    }\n    return new_text\n}\n", "    var result = \"\";\n    var vowels\
    \ = \"aeiouAEIOU\";\n    for (var i = 0; i < text.length; i++){\n        if (vowels.indexOf(text[i])\
    \ === -1){\n            result += text[i];\n        }\n    }\n    return result;\n\
    }\n", "    var vowels = \"aeiouAEIOU\";\n    var i = 0;\n    var j = 0;\n    var\
    \ result = \"\";\n    while (i < text.length){\n        if (vowels.indexOf(text[i])\
    \ == -1){\n            result += text[i];\n        }\n        i += 1;\n    }\n\
    \    return result;\n}\n", "\tvar len = text.length;\n\tvar newText = \"\";\n\t\
    for(var i = 0; i < len; i++){\n\t\tif(text[i] != \"a\" && text[i] != \"e\" &&\
    \ text[i] != \"i\" && text[i] != \"o\" && text[i] != \"u\" && text[i] != \"A\"\
    \ && text[i] != \"E\" && text[i] != \"I\" && text[i] != \"O\" && text[i] != \"\
    U\"){\n\t\t\tnewText += text[i];\n\t\t}\n\t}\n\treturn newText;\n}\n", "  var\
    \ vowels = ['a', 'e', 'i', 'o', 'u'];\n  var newText = \"\";\n  for (var i = 0;\
    \ i < text.length; i++) {\n    var j = 0;\n    while(j < vowels.length && text[i]\
    \ != vowels[j]) {\n      j++;\n    }\n    if (j == vowels.length) {\n      newText\
    \ += text[i];\n    }\n  }\n  return newText;\n}", "    //assuming text is either\
    \ empty string or a string of alphabets, we can safely use\n    //the following\
    \ regular expression to replace all vowels with an empty string\n    return text.replace(/[aeiou]/gi,\
    \ \"\");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

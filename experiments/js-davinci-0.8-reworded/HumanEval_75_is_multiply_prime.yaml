name: HumanEval_75_is_multiply_prime
language: js
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  function is_multiply_prime(a){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n  assert.deepEqual(candidate(30),true);\n\
  \  assert.deepEqual(candidate(8),true);\n  assert.deepEqual(candidate(10),false);\n\
  \  assert.deepEqual(candidate(125),true);\n  assert.deepEqual(candidate(105),true);\n\
  \  assert.deepEqual(candidate(126),false);\n  assert.deepEqual(candidate(729),false);\n\
  \  assert.deepEqual(candidate(891),false);\n  assert.deepEqual(candidate(1001),true);\n\
  }\n\ntest();"
completions: ["\t\n}\n", "    a = Math.abs(a);\n    const prime = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let i = 0;\n    let check = [];\n    while(a != 1){\n        if(a\
    \ % prime[i] == 0){\n            a = a / prime[i];\n            check.push(prime[i]);\n\
    \        }else{\n            i++;\n        }\n    }\n    if(check.length == 3){\n\
    \        return true;\n    }else{\n        return false;\n    }\n}", "    var\
    \ prime = true;\n    var threePrime = 0;\n    for(var i = 2; i < a; i++){\n  \
    \      for(var j = 1; j <= a; j++){\n            if(i % j == 0 && j != 1 && j\
    \ != i){\n                prime = false;\n            }\n        }\n        if(prime\
    \ == true){\n            if(a % i == 0){\n                threePrime += 1;\n \
    \           }\n        }\n        prime = true;\n    }\n    if(threePrime == 3){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}", " \
    \   let r;\n    if (a % 2 != 0 && a % 3 != 0 && a % 5 != 0) {\n        return\
    \ true;\n    }\n    else {\n        return false;\n    }\n}\n", "    let result\
    \ = false;\n    let arrPrime = [];\n    for(let i = 0; i < a; i++){\n        if(is_prime(i)){\n\
    \            arrPrime.push(i);\n        }\n    }\n    //console.log(arrPrime);\n\
    \    for(let i = 0; i < arrPrime.length; i++){\n        for(let j = 0; j < arrPrime.length;\
    \ j++){\n            for(let k = 0; k < arrPrime.length; k++){\n             \
    \   if(arrPrime[i] * arrPrime[j] * arrPrime[k] == a){\n                    result\
    \ = true;\n                }\n            }\n        }\n    }\n    return result;\n\
    }", "\tvar prime = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97];\n\
    \tvar prime_counter = 0;\n\tfor(var i = 0; i < prime.length; i++){\n\t\tif(a %\
    \ prime[i] == 0){\n\t\t\tfor(var j = 0; j < prime.length; j++){\n\t\t\t\tif(a\
    \ % prime[j] == 0){\n\t\t\t\t\tfor(var k = 0; k < prime.length; k++){\n\t\t\t\t\
    \t\tif(a % prime[k] == 0){\n\t\t\t\t\t\t\tprime_counter++;\n\t\t\t\t\t\t}\n\t\t\
    \t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(prime_counter >= 3){\n\t\treturn\
    \ true;\n\t}else{\n\t\treturn false;\n\t}\n}\n", "  \n}\n", "\tvar i = 1;\n\t\
    var prime_count = 0;\n\tvar prime_array = [];\n\tvar j = 0;\n\twhile(i <= a){\n\
    \t\tif(a % i == 0){\n\t\t\tvar is_prime = true;\n\t\t\tfor(var j = 2; j < i; j++){\n\
    \t\t\t\tif(i % j == 0){\n\t\t\t\t\tis_prime = false;\n\t\t\t\t\tbreak;\n\t\t\t\
    \t}\n\t\t\t}\n\t\t\tif(is_prime){\n\t\t\t\tprime_array.push(i);\n\t\t\t\tprime_count++;\n\
    \t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tif(prime_count < 3){\n\t\treturn false;\n\t}\n\
    \telse{\n\t\treturn true;\n\t}\n}\n", "\tfor(var i = 2; i < a; i++){\n\t\tif(a\
    \ % i == 0 && is_prime(i)){\n\t\t\tvar left = a / i;\n\t\t\tif(is_prime(left))\n\
    \t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n", "\tif (is_prime(a)){\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n", "    var res = false;\n\
    \    for(var i = 2; i < a; i++){\n        if(is_prime(i)){\n            if(a %\
    \ i == 0){\n                a = a / i;\n                res = true;\n        \
    \    }\n        }\n    }\n    return res;\n}\n", "    let arr = [];\n    for(let\
    \ i = 2; i <= a; i++){\n        let cnt = 0;\n        for(let j = 2; j <= i; j++){\n\
    \            if(i % j == 0){\n                cnt++;\n            }\n        }\n\
    \        if(cnt == 1){\n            arr.push(i);\n        }\n    }\n    for(let\
    \ i = 0; i < arr.length; i++){\n        for(let j = 0; j < arr.length; j++){\n\
    \            for(let k = 0; k < arr.length; k++){\n                if(arr[i] *\
    \ arr[j] * arr[k] == a){\n                    return true;\n                }\n\
    \            }\n        }\n    }\n    return false;\n}", "    let prime = [];\n\
    \    let arr = [];\n    for(let i = 2; i < a; i++){\n        for(let j = 2; j\
    \ < i; j++){\n            if(i % j === 0){\n                break;\n         \
    \   }\n            if(j === i - 1){\n                prime.push(i);\n        \
    \    }\n        }\n    }\n    //console.log(prime);\n    let k = 0;\n    while(a\
    \ > 1){\n        if(a % prime[k] === 0){\n            a = a / prime[k];\n    \
    \        arr.push(prime[k]);\n        }else{\n            k++;\n        }\n  \
    \  }\n    if(arr.length === 3){\n        return true;\n    }else{\n        return\
    \ false;\n    }\n}", "    const N = a;\n    const T = [];\n    for(let i = 0;\
    \ i < N; i++){\n        T[i] = true;\n    }\n    for(let i = 2; i*i < N; i++){\n\
    \        if(T[i] == true){\n            for(let j = i*i; j <= N; j = j + i){\n\
    \                T[j] = false;\n            }\n        }\n    }\n    for(let i\
    \ = 2; i <= N; i++){\n        if(T[i] == true){\n            if(T[N - i] == true){\n\
    \                if(T[N - i - i] == true){\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    let arr = get_primes(a);\n    for(let i = 0; i < arr.length; i++){\n      \
    \  for(let j = 0; j < arr.length; j++){\n            for(let k = 0; k < arr.length;\
    \ k++){\n                if(arr[i] * arr[j] * arr[k] == a){\n                \
    \    return true;\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "    if(a==0){\n        return false;\n    }\n    if(a==1){\n\
    \        return true;\n    }\n    if(a<0){\n        a*=-1;\n    }\n    var primes=new\
    \ Array();\n    var i=2;\n    while(i<=a){\n        if(is_prime(i)){\n       \
    \     primes.push(i);\n        }\n        i++;\n    }\n    i=0;\n    while(i<primes.length){\n\
    \        var x=primes[i];\n        var y=a/x;\n        if(is_prime(y)){\n    \
    \        var z=y/x;\n            if(is_prime(z)){\n                return true;\n\
    \            }\n        }\n        i++;\n    }\n    return false;\n}", "\tfor(i=0;i<a;i++){\n\
    \t\tif(a%i===0){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\tif\
    \ (is_prime(a)){\n\t\treturn true;\n\t}\n\tfor (var i = 2; i < a; i++){\n\t\t\
    if (is_prime(i)){\n\t\t\tfor (var j = 2; j < a; j++){\n\t\t\t\tif (is_prime(j)){\n\
    \t\t\t\t\tfor (var k = 2; k < a; k++){\n\t\t\t\t\t\tif (is_prime(k)){\n\t\t\t\t\
    \t\t\tif ((i * j * k) == a){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\
    \t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n",
  "    for(let i = 2; i < a; i++){\n        for(let j = 2; j < a; j++){\n        \
    \    for(let k = 2; k < a; k++){\n                if(i * j * k == a){\n      \
    \              return true;\n                }\n            }\n        }\n   \
    \ }\n    return false;\n}", "\tvar b = 2;\n\tvar c = 0;\n\twhile(a > 1){\n\t\t\
    if(a % b == 0){\n\t\t\ta = a / b;\n\t\t\tc++;\n\t\t}\n\t\telse{\n\t\t\tb++;\n\t\
    \t}\n\t}\n\tif(c == 3){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t\
    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

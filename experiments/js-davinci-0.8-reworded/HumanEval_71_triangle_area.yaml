name: HumanEval_71_triangle_area
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\n// >>> triangle_area(3,\
  \ 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction triangle_area(a,\
  \ b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
  \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
completions: ["    //YOUR CODE GOES HERE\n    var p = (a + b + c) / 2\n    var area\
    \ = Math.sqrt(p * (p - a) * (p - b) * (p - c))\n    if (a + b > c && a + c > b\
    \ && b + c > a) {\n        return area\n    }\n    else {\n        return -1\n\
    \    }\n}\n\n", "    if(a+b>c && a+c>b && b+c>a){\n        var s = (a+b+c)/2;\n\
    \        return Math.sqrt(s*(s-a)*(s-b)*(s-c)).toFixed(2);\n    }else{\n     \
    \   return -1;\n    }\n}\n", "  if (a + b > c && a + c > b && b + c > a) {\n \
    \   let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area.toFixed(2);\n  } else {\n    return -1;\n  }\n}\n",
  "  var s = (a + b + c) / 2;\n  if (a + b > c && a + c > b && b + c > a) {\n    return\
    \ (Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2);\n  }\n  return -1;\n\
    }\n", "    if (a + b > c && a + c > b && b + c > a) {\n        return parseFloat(((a\
    \ + b + c) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}", " \
    \   let s = (a + b + c) / 2\n    if(s - a < a && s - b < b && s - c < c){\n  \
    \      return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2))\n\
    \    }\n    return -1\n}\n\n", "  if (a + b > c && a + c > b && b + c > a) {\n\
    \    return Math.round(100 * Math.sqrt((a + b + c) * (a + b - c) * (a - b + c)\
    \ * (-a + b + c))) / 100;\n  } else {\n    return -1;\n  }\n}", "\t// if (a +\
    \ b < c || a + c < b || b + c < a){\n\t// \treturn -1;\n\t// }\n\t// var p = (a\
    \ + b + c) / 2;\n\t// var area = p * (p - a) * (p - b) * (p - c);\n\t// area =\
    \ Math.sqrt(area);\n\t// return parseFloat(area.toFixed(2));\n\tif (a + b > c\
    \ && a + c > b && b + c > a){\n\t\tvar p = (a + b + c) / 2;\n\t\tvar area = p\
    \ * (p - a) * (p - b) * (p - c);\n\t\tarea = Math.sqrt(area);\n\t\treturn parseFloat(area.toFixed(2));\n\
    \t}\n\treturn -1;\n}\n", "\tif ((a + b) > c && (a + c) > b && (b + c) > a) {\n\
    \t\treturn Math.round(100 * .5 * a * b) / 100;\n\t} else {\n\t\treturn -1;\n\t\
    }\n}\n", "    // Write code here.\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        return Number(((a * b * Math.sin(c * Math.PI / 180)) / 2).toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}", "  // Your Code\n  const s = (a\
    \ + b + c) / 2;\n  return (Math.sqrt(s * (s - a) * (s - b) * (s - c))) || -1;\n\
    }\n\n", "    // Code your solution here\n}\n", "    var total = 0;\n    if ((a\
    \ + b) > c && (a + c) > b && (b + c) > a){\n        total = a + b + c;\n     \
    \   return total;\n    } else {\n        return -1;\n    }\n}\n", "    var s =\
    \ (a + b + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if(area > 0){\n        return parseFloat(area.toFixed(2));\n    }\n    return\
    \ -1;\n}\n", "    if ((a + b) > c && (a + c) > b && (b + c) > a) {\n        var\
    \ p = (a + b + c) / 2;\n        var area = Math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c));\n        return area.toFixed(2);\n    } else {\n        return -1;\n\
    \    }\n}", "    let s = (a + b + c) / 2;\n    return (s - a) * (s - b) * (s -\
    \ c) < 0 ? -1 : Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    }\n", "  if (Math.abs(a - b) < c && c < a + b && Math.abs(a - c) < b && b < a\
    \ + c && Math.abs(b - c) < a && a < b + c) {\n  let s = (a + b + c) / 2;\n  return\
    \ Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n  } else {\n\
    \    return -1;\n  }\n}\n", "  var s = (a + b + c) / 2;\n  var area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  if(area > 0){\n    return area.toFixed(2);\n\
    \  }\n  else{\n    return -1;\n  }\n}", "\tif (a+b>c && a+c>b && b+c>a){\n\t\t\
    var p = (a+b+c)/2;\n\t\tvar A = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\t\treturn A.toFixed(2);\n\
    \t}\n\telse{\n\t\treturn -1;\n\t}\n}\n", "\tif(!(a < b + c) || !(b < a + c) ||\
    \ !(c < a + b)){\n\t\treturn -1;\n\t}\n\tvar p = (a + b + c) / 2;\n\tvar x = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n\treturn x.toFixed(2);\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

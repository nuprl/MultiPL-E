name: HumanEval_152_compare
language: js
prompt: "//I think we all remember that feeling when the result of some long-awaited\n\
  // event is finally known. The feelings and thoughts you have at that moment are\n\
  // definitely worth noting down and comparing.\n// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n// Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n// the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n// example:\n// >>> compare([1,\
  \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n// [0, 0, 0, 0, 3, 3]\n// >>> compare([0,\
  \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n// [4, 4, 1, 0, 0, 6]\nfunction compare(game,\
  \ guess){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0,\
  \ 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
  \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
  \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
  \ 0, 0, 1]);\n}\n\ntest();"
completions: ["  let result = [];\n  for(let i = 0; i < game.length; i++){\n    if(game[i]\
    \ === guess[i]){\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}\n", "\n}", "    var results =\
    \ [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i] != guess[i]){\n\
    \            results.push(Math.abs(game[i] - guess[i]));\n        }\n        else{\n\
    \            results.push(0);\n        }\n    }\n    return results;\n}\n", " \
    \   var result = [];\n    for(i=0; i<game.length; i++){\n        var diff = Math.abs(game[i]\
    \ - guess[i]);\n        result.push(diff);\n    }\n    return result;\n}", " \
    \   var result = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i]\
    \ == guess[i]){\n            result.push(0);\n        }\n        else{\n     \
    \       result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return\
    \ result;\n}\n", "  return game.map((e,i) => e - guess[i])\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    var results\
    \ = [];\n    for(var i = 0; i < game.length; i++){\n        var diff = Math.abs(game[i]\
    \ - guess[i]);\n        results.push(diff);\n    }\n    return results;\n}", "\t\
    return guess.map((val,i)=>val-game[i]);\n}\n", "    var result = []\n    for(var\
    \ i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n         \
    \   result.push(0)\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result\n}", "\tlet result = [];\n\
    \tfor(let i = 0; i < game.length; i++){\n\t\tresult.push(Math.abs(game[i] - guess[i]));\n\
    \t}\n\treturn result;\n}\n\n", "    var arr = [];\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            arr.push(0);\n       \
    \ } else {\n            arr.push(Math.abs(game[i] - guess[i]));\n        }\n \
    \   }\n    return arr;\n}", "    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n    \
    \    } else {\n            result.push(Math.abs(game[i] - guess[i]));\n      \
    \  }\n    }\n    return result;\n}", "    for(var i = 0; i < game.length; i++){\n\
    \        if(game[i] !== guess[i]){\n            guess[i] = Math.abs(game[i] -\
    \ guess[i]);\n        }\n    }\n    return guess;\n}\n", "  let results = []\n\
    \  for(let i = 0; i < game.length; i++){\n    if(game[i] === guess[i]){\n    \
    \  results.push(0)\n    } else{\n      results.push(Math.abs(game[i] - guess[i]))\n\
    \    }\n  }\n  return results\n}\ncompare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2])\ncompare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n\n", "    var result\
    \ = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i] !== guess[i]){\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        } else {\n  \
    \          result.push(0);\n        }\n    }\n    return result;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "\tvar difference\
    \ = [];\n\tfor(i=0; i<game.length; i++){\n\t\tvar value = Math.abs(game[i] - guess[i]);\n\
    \t\tdifference.push(value);\n\t}\n\treturn difference;\n}", "\tvar result = [];\n\
    \tfor(var i = 0; i < game.length; i++){\n\t\tif(game[i] === guess[i]){\n\t\t\t\
    result.push(0);\n\t\t}else{\n\t\t\tresult.push(Math.abs(game[i] - guess[i]));\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "\tvar points = 0;\n\tfor(i=0; i<game.length;\
    \ i++){\n\t\tif(game[i]==guess[i]){\n\t\t\tpoints+=1;\n\t\t}\n\t}\n\treturn points;\n\
    }"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

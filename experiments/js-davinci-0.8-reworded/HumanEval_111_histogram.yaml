name: HumanEval_111_histogram
language: js
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ an object\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\n// >>> histogram(\"a b c\")\n// {\"a\": 1, \"b\": 1, \"c\": 1}\n//\
  \ >>> histogram(\"a b b a\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"a b c\
  \ a b\")\n// {\"a\": 2, \"b\": 2}\n// >>> histogram(\"b b b b a\")\n// {\"b\": 4}\n\
  // >>> histogram(\"\")\n// {}\nfunction histogram(test){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = histogram;\n  assert.deepEqual(candidate(\"a b b a\"),{\"a\": 2, \"b\": 2});\n\
  \  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"\
  a b c d g\"),{\"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\
  r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b\
  \ b a\"),{\"b\": 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\"\
  : 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"\
  a\"),{\"a\": 1});\n}\n\ntest();"
completions: ["    var arr = test.split(\" \");\n    var current = null;\n    var\
    \ cnt = 0;\n    var results = [];\n    var obj = {};\n    arr.sort();\n    for\
    \ (var i = 0; i < arr.length; i++) {\n        if (arr[i] != current) {\n     \
    \       if (cnt > 0) {\n                results.push(current + ': ' + cnt);\n\
    \            }\n            current = arr[i];\n            cnt = 1;\n        }\
    \ else {\n            cnt++;\n        }\n    }\n    if (cnt > 0) {\n        results.push(current\
    \ + ': ' + cnt);\n    }\n    var count = 1;\n    var maximum = 0;\n    for(var\
    \ i = 0; i < results.length; i++){\n        var element = results[i];\n      \
    \  var firstNum = element.split(\":\")[1];\n        var secondNum = element.split(\"\
    :\")[2];\n        var sum = parseInt(firstNum) + parseInt(secondNum);\n      \
    \  if(sum > maximum){\n            maximum = sum;\n        }\n    }\n    for(var\
    \ i = 0; i < results.length; i++){\n        var element = results[i];\n      \
    \  var firstNum = element.split(\":\")[1];\n        var secondNum = element.split(\"\
    :\")[2];\n        var sum = parseInt(firstNum) + parseInt(secondNum);\n      \
    \  if(sum == maximum){\n            var firstLetter = element.split(\":\")[0];\n\
    \            obj[firstLetter] = sum;\n        }\n    }\n    return obj;\n}\n",
  "    var myArray = test.split(\" \");\n    var countObj = {};\n    var keys = [];\n\
    \    var string = \"\";\n    var value = 1;\n    var temp;\n    for(var i = 0;\
    \ i < myArray.length; i++){\n        temp = myArray[i];\n        keys.push(temp);\n\
    \        for(var j = 0; j < myArray.length; j++){\n            if(temp === myArray[j]){\n\
    \                value += 1;\n            }\n        }\n        countObj[temp]\
    \ = value;\n        value = 1;\n    }\n    //console.log(countObj);\n    var high\
    \ = Object.values(countObj);\n    high.sort();\n    //console.log(high);\n   \
    \ var counter = high[high.length - 1];\n    //console.log(counter);\n    for(var\
    \ i = 0; i < keys.length; i++){\n        //console.log(counter + \" \" + countObj[keys[i]])\n\
    \        if(counter === countObj[keys[i]]){\n            string += keys[i] + \"\
    \ \";\n        }\n    }\n    console.log(string);\n}\n\nhistogram(\"a b c\");\n\
    histogram(\"a b b a\");\nhistogram(\"a b c a b\");\nhistogram(\"b b b b a\");\n\
    histogram(\"\");", "    let arr = test.split(\" \");\n    let res = {};\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(res[arr[i]] === undefined){\n     \
    \       res[arr[i]] = 1;\n        }\n        else{\n            res[arr[i]]++;\n\
    \        }\n    }\n    return res;\n}", "    let count = {};\n    let arr = test.split(\"\
    \ \");\n    for(i = 0; i < arr.length; i++){\n        if(count[arr[i]]){\n   \
    \         count[arr[i]]++;\n        }\n        else{\n            count[arr[i]]\
    \ = 1;\n        }\n    }\n    return count;\n}\n", "\tlet splitTest = test.split(\"\
    \ \");\n\tlet dictionary = {};\n\tlet highest = 0;\n\tlet highestLetter = [];\n\
    \tfor(let i = 0; i < splitTest.length; i++){\n\t\tif(dictionary[splitTest[i]]){\n\
    \t\t\tdictionary[splitTest[i]]++;\n\t\t}\n\t\telse{\n\t\t\tdictionary[splitTest[i]]\
    \ = 1;\n\t\t}\n\t}\n\tfor(let key in dictionary){\n\t\tif(dictionary[key] > highest){\n\
    \t\t\thighest = dictionary[key];\n\t\t\thighestLetter = [key];\n\t\t}\n\t\telse\
    \ if(dictionary[key] === highest){\n\t\t\thighestLetter.push(key);\n\t\t}\n\t\
    }\n\tlet final = {};\n\tfor(let i = 0; i < highestLetter.length; i++){\n\t\tfinal[highestLetter[i]]\
    \ = highest;\n\t}\n\treturn final;\n}\n", "    var testArray = test.split(\" \"\
    );\n    var letterCountObj = {};\n    var highestCount = 0;\n    var highestLetters\
    \ = [];\n    for(var i = 0; i < testArray.length; i++){\n        if(!letterCountObj[testArray[i]]){\n\
    \            letterCountObj[testArray[i]] = 1;\n        }\n        else{\n   \
    \         letterCountObj[testArray[i]] += 1;\n        }\n    }\n    for(var j\
    \ in letterCountObj){\n        if(letterCountObj[j] > highestCount){\n       \
    \     highestCount = letterCountObj[j];\n            highestLetters = [];\n  \
    \          highestLetters.push(j);\n        }\n        else if(letterCountObj[j]\
    \ === highestCount){\n            highestLetters.push(j);\n        }\n    }\n\
    \    for(var k = 0; k < highestLetters.length; k++){\n        letterCountObj[highestLetters[k]]\
    \ = highestCount;\n    }\n    return letterCountObj;\n}", "    let str = test.split(\"\
    \ \");\n    let obj = {};\n    let max = 0;\n    let most = [];\n    for(let i\
    \ = 0; i < str.length; i++){\n        if(!obj[str[i]]){\n            obj[str[i]]\
    \ = 1;\n        }else{\n            obj[str[i]]++;\n        }\n    }\n    for(let\
    \ key in obj){\n        if(obj[key] > max){\n            max = obj[key];\n   \
    \         most = [];\n            most.push(key);\n        }else if(obj[key] ===\
    \ max){\n            most.push(key);\n        }\n    }\n    if(most.length > 1){\n\
    \        let output = {};\n        for(let i = 0; i < most.length; i++){\n   \
    \         output[most[i]] = max;\n        }\n        return output;\n    }else{\n\
    \        let output = {};\n        output[most[0]] = max;\n        return output;\n\
    \    }\n}", "    var letters = {};\n    test.split(' ').forEach(function(letter){\n\
    \        if(letters[letter]){\n            letters[letter]++;\n        }else{\n\
    \            letters[letter] = 1;\n        }\n    });\n    return letters;\n}",
  "\tvar hist = {};\n\tvar string = test.split(\" \");\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(hist[string[i]] === undefined){\n\t\t\thist[string[i]] = 1;\n\t\
    \t}\n\t\telse{\n\t\t\thist[string[i]] += 1;\n\t\t}\n\t}\n\treturn hist;\n}\n",
  "  var obj = {};\n  var max = 0;\n  test.split(' ').forEach(function(elem){\n  \
    \  obj[elem] = obj[elem] ? obj[elem] + 1 : 1;\n    if(obj[elem] > max){\n    \
    \  max = obj[elem];\n    }\n  });\n  var newObj = {};\n  for(var x in obj){\n\
    \    if(obj[x] == max){\n      newObj[x] = obj[x];\n    }\n  }\n  return newObj;\n\
    }\n", "    var newDic = {};\n    var i = 0;\n    var array = test.split(\" \"\
    );\n    while(i < array.length){\n        if(newDic[array[i]]){\n            newDic[array[i]]++;\n\
    \        }else{\n            newDic[array[i]] = 1;\n        }\n        i++;\n\
    \    }\n    return newDic;\n}\n\n", "    // create an object to store the result\n\
    \    let result = {};\n    //split the string into an array\n    let array = test.split(\"\
    \ \");\n    // loop through the array\n    for(let i = 0; i < array.length; i++){\n\
    \        // if the object already has the same letter, add 1 to the count of the\
    \ letter\n        if(result[array[i]]){\n            result[array[i]] ++;\n  \
    \      }\n        // else, store the letter and set its count as 1\n        else{\n\
    \            result[array[i]] = 1;\n        }\n    }\n    //find the max count\
    \ in the object\n    let max_value = 1;\n    for(let key in result){\n       \
    \ if(result[key] > max_value){\n            max_value = result[key];\n       \
    \ }\n    }\n    // create a new object to store the final result\n    let final_result\
    \ = {};\n    // store the max count letter and its corresponding count in the\
    \ new object\n    for(let key in result){\n        if(result[key] === max_value){\n\
    \            final_result[key] = max_value;\n        }\n    }\n    // return the\
    \ new object\n    return final_result;\n}\n", "\tvar hist = {};\n\tvar arr = test.split(\"\
    \ \");\n\tvar maxCount = 0;\n\tfor(var i = 0; i < arr.length; i++){\n\t\tvar letter\
    \ = arr[i];\n\t\tif(!hist[letter]){\n\t\t\thist[letter] = 1;\n\t\t}\n\t\telse{\n\
    \t\t\thist[letter]++;\n\t\t}\n\t\tif(hist[letter] > maxCount){\n\t\t\tmaxCount\
    \ = hist[letter];\n\t\t}\n\t}\n\tvar dict = {};\n\tfor(var i = 0; i < arr.length;\
    \ i++){\n\t\tvar letter = arr[i];\n\t\tif(hist[letter] == maxCount){\n\t\t\tdict[letter]\
    \ = maxCount;\n\t\t}\n\t}\n\treturn dict;\n}", "    var obj = {};\n    var arr\
    \ = test.split(\" \");\n    for(var i = 0; i < arr.length; i++){\n        if(obj[arr[i]]\
    \ == undefined){\n            obj[arr[i]] = 1;\n        }\n        else{\n   \
    \         obj[arr[i]] += 1;\n        }\n    }\n    var max = 0;\n    var maxKeys\
    \ = [];\n    for(var key in obj){\n        if(obj[key] > max){\n            max\
    \ = obj[key];\n            maxKeys = [key];\n        }\n        else if(obj[key]\
    \ == max){\n            maxKeys.push(key);\n        }\n    }\n    var result =\
    \ {};\n    for(var i = 0; i < maxKeys.length; i++){\n        result[maxKeys[i]]\
    \ = max;\n    }\n    return result;\n}", "    test = test.split(\" \");\n    var\
    \ myObj = {};\n    var myArr = [];\n    var myCount = 0;\n    var myCount2 = 0;\n\
    \    for(var i = 0; i < test.length; i++){\n        if(myObj[test[i]]){\n    \
    \        myObj[test[i]] += 1;\n        }\n        else{\n            myObj[test[i]]\
    \ = 1;\n        }\n    }\n    for(var key in myObj){\n        if(myObj[key] >\
    \ myCount){\n            myCount = myObj[key];\n        }\n    }\n    for(var\
    \ key in myObj){\n        if(myObj[key] === myCount){\n            myArr.push(key);\n\
    \        }\n    }\n    return myArr;\n}\n", "  var letters=test.split(\" \");\n\
    \  var total=letters.length;\n  var histo={};\n  var max=0;\n  var maxLetters=[];\n\
    \  var keys;\n  for(var i=0;i<total;i++){\n    if(histo[letters[i]]){\n      histo[letters[i]]+=1;\n\
    \    }\n    else{\n      histo[letters[i]]=1;\n    }\n  }\n  keys=Object.keys(histo);\n\
    \  total=keys.length;\n  for(var i=0;i<total;i++){\n    if(histo[keys[i]]>max){\n\
    \      max=histo[keys[i]];\n      maxLetters=[];\n      maxLetters.push(keys[i]);\n\
    \    }\n    else if(histo[keys[i]]==max){\n      maxLetters.push(keys[i]);\n \
    \   }\n  }\n  var newHisto={};\n  for(var i=0;i<maxLetters.length;i++){\n    newHisto[maxLetters[i]]=max;\n\
    \  }\n  return newHisto;\n}", "    let obj = {};\n    let max = 0;\n    let arr\
    \ = test.split(\" \");\n    let result = {};\n    let best = [];\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(!obj[arr[i]]){\n            obj[arr[i]]\
    \ = 1;\n        }else{\n            obj[arr[i]] += 1;\n        }\n    }\n    for(let\
    \ key in obj){\n        if(obj[key] > max){\n            max = obj[key];\n   \
    \     }\n    }\n    for(let key in obj){\n        if(obj[key] === max){\n    \
    \        result[key] = max;\n        }\n    }\n    return result;\n}\n", "  var\
    \ arr=test.split(\" \");\n  var obj={};\n  for(var i=0;i<arr.length;i++){\n  \
    \  if(obj[arr[i]]){\n      obj[arr[i]]+=1;\n    }\n    else{\n      obj[arr[i]]=1;\n\
    \    }\n  }\n  var temp=0;\n  var keys;\n  for(var x in obj){\n    if(obj[x]>temp){\n\
    \      temp=obj[x];\n      keys=x;\n    }\n  }\n  var ob={};\n  ob[keys]=temp;\n\
    \  return ob;\n}", "    var testArray = test.split(\" \");\n    var result = {};\n\
    \    for(var i = 0; i < testArray.length; i++){\n        if(result[testArray[i]]\
    \ === undefined){\n            result[testArray[i]] = 1;\n        }\n        else{\n\
    \            result[testArray[i]]++;\n        }\n    }\n    return result;\n}\n",
  "    // input test\n    // use regex to split test string and sort it\n    var splitStr\
    \ = test.split(/[\\s+]+/).sort();\n    // create empty object to hold letter and\
    \ corresponding count\n    var letterCount = {};\n    // iterate through splitStr\n\
    \    splitStr.forEach(function(letter){\n        // if letter is undefined, create\
    \ new object with letter key and default value 1\n        if(letterCount[letter]\
    \ === undefined){\n            letterCount[letter] = 1;\n        }\n        //\
    \ else increment value of key by 1\n        else{\n            letterCount[letter]++;\n\
    \        }\n    });\n    // determine highest value from object\n    var maxValue\
    \ = Math.max.apply(null, Object.values(letterCount));\n    // create another empty\
    \ object for letters with highest repetition\n    var letterMax = {};\n    //\
    \ iterate through letterCount\n    for(var letter in letterCount){\n        //\
    \ if value from letterCount matches maxValue, add key and value to letterMax\n\
    \        if(letterCount[letter] === maxValue){\n            letterMax[letter]\
    \ = maxValue;\n        }\n    }\n    // return letterMax\n    return letterMax;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

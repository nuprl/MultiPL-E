language: js
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var mono = true;\n  for(var i = 1; i < l.length; i++){\n    if(l[i] > l[i-1]){\n\
    \      for(var j = i+1; j < l.length; j++){\n        if(l[j] <= l[j-1]){\n   \
    \       mono = false;\n        }\n      }\n    }\n    else if(l[i] < l[i-1]){\n\
    \      for(var j = i+1; j < l.length; j++){\n        if(l[j] >= l[j-1]){\n   \
    \       mono = false;\n        }\n      }\n    }\n  }\n  return mono;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmprh4ad838.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmprh4ad838.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ // YOUR CODE HERE\n  for(var i = 1; i < l.length; i++){\n    if(l[i]>=l[i-1]){\n\
    \      return true;\n    }\n    else{\n      return false;\n    }\n  }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpo75s2cd8.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpo75s2cd8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 1){\n        return true;\n    }\n    if(l[0] < l[1]){\n  \
    \      for(var i = 1; i < l.length - 1; i++){\n            if(l[i] > l[i + 1]){\n\
    \                return false;\n            }\n        }\n    }\n    else{\n \
    \       for(var i = 1; i < l.length - 1; i++){\n            if(l[i] < l[i + 1]){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var result = true;\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i] - l[i-1]\
    \ < 0){\n\t\t\tif(l[i-1] - l[i-2] > 0){\n\t\t\t\tresult = false;\n\t\t\t}\n\t\t\
    }\n\t\telse if(l[i] - l[i-1] > 0){\n\t\t\tif(l[i-1] - l[i-2] < 0){\n\t\t\t\tresult\
    \ = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] < l[i+1]){\n            decreasing = false;\n\
    \        }else if(l[i] > l[i+1]){\n            increasing = false;\n        }\n\
    \    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ \n  var direction;\n  var ok = true;\n  var a;\n  var b;\n  var i;\n  \n  for\
    \ (i = 0; i < l.length - 1; i++) {\n    a = l[i];\n    b = l[i + 1];\n    if (direction\
    \ === undefined) {\n      if (a < b) {\n        direction = 'up';\n      } else\
    \ if (a > b) {\n        direction = 'down';\n      }\n    } else {\n      if (direction\
    \ === 'up' && a > b) {\n        ok = false;\n        break;\n      } else if (direction\
    \ === 'down' && a < b) {\n        ok = false;\n        break;\n      }\n    }\n\
    \  }\n  \n  return ok;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: -1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(!l){\n        return false;\n    }\n    var i = 0;\n    var inc = l[i]\
    \ < l[i+1];\n    while(l[i] <= l[i+1] === inc){\n        i++;\n    }\n    return\
    \ i === l.length-1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977037
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var a = 0;\n\tvar d = 0;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(l[i+1]\
    \ > l[i])\n\t\t\ta++;\n\t\telse if(l[i+1] < l[i])\n\t\t\td++;\n\t}\n\tif(a !=\
    \ 0 && d != 0)\n\t\treturn false;\n\telse\n\t\treturn true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var x= l[0] < l[1];\n\tfor(var i=1; i<l.length-1; i++){\n\t\tif((l[i]<l[i+1])!=x){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    return (decreasing(l) || increasing(l));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7_1f1ysz.js:9\n\treturn (decreasing(l) || increasing(l));\n\t^\n\
    \nReferenceError: decreasing is not defined\n    at monotonic (/tmp/tmp7_1f1ysz.js:9:2)\n\
    \    at test (/tmp/tmp7_1f1ysz.js:17:20)\n    at Object.<anonymous> (/tmp/tmp7_1f1ysz.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var decresing = true;\n    var increasing = true;\n    for(var i = 1; i <\
    \ l.length; i++){\n        if(l[i-1] < l[i]){\n            decresing = false;\n\
    \        }\n        if(l[i-1] > l[i]){\n            increasing = false;\n    \
    \    }\n    }\n    return increasing || decresing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var result = true;\n    var up = l[0] < l[1];\n    for(var i = 0; i < l.length-1;\
    \ i++){\n        if(up && l[i] > l[i+1]) {\n            result = false;\n    \
    \        break;\n        }\n        if(!up && l[i] < l[i+1]) {\n            result\
    \ = false;\n            break;\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   for(var i = 0; i < l.length - 1; i++){\n        if(l[i] <= l[i+1]){\n    \
    \        return true;\n        }\n        else{\n            return false;\n \
    \       }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkx8dybr9.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkx8dybr9.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length <= 1){\n    return true;\n  }\n\n  let current = l[0];\n  let isIncreasing\
    \ = false;\n  let isDecreasing = false;\n\n  for(let i = 1; i < l.length; i++){\n\
    \    if(l[i] > current){\n      isIncreasing = true;\n    } else if(l[i] < current){\n\
    \      isDecreasing = true;\n    }\n    current = l[i];\n  }\n\n  return isIncreasing\
    \ === false || isDecreasing === false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i;\n    var direction = l[0] - l[1];\n    for(i = 1; i < l.length; i++){\n\
    \        if(l[i] - l[i+1] != direction){\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpg8ldsf79.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpg8ldsf79.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length==0 || l.length==1){\n\t\treturn true;\n\t}\n\tvar flag=0;\n\tfor(var\
    \ i=0;i<l.length-1;i++){\n\t\tif(l[i]<l[i+1]){\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\
    \t}\n\t\telse if(l[i]>l[i+1]){\n\t\t\tflag=2;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0){\n\
    \t\treturn true;\n\t}\n\telse if(flag==1){\n\t\tfor(var i=0;i<l.length-1;i++){\n\
    \t\t\tif(l[i]>l[i+1]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\
    \t}\n\telse if(flag==2){\n\t\tfor(var i=0;i<l.length-1;i++){\n\t\t\tif(l[i]<l[i+1]){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   // YOUR CODE HERE\n    let goingUp = true;\n    let goingDown = true;\n  \
    \  for (let i = 0; i < l.length - 1; i++){\n        if (l[i] > l[i+1]){\n    \
    \        goingUp = false;\n        }\n        if (l[i] < l[i+1]){\n          \
    \  goingDown = false;\n        }\n    }\n    return goingUp || goingDown;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return increasing(l) || decreasing(l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpz0sebbf5.js:9\n    return increasing(l) || decreasing(l);\n   \
    \ ^\n\nReferenceError: increasing is not defined\n    at monotonic (/tmp/tmpz0sebbf5.js:9:5)\n\
    \    at test (/tmp/tmpz0sebbf5.js:17:20)\n    at Object.<anonymous> (/tmp/tmpz0sebbf5.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   // Your code here\n}\n\nmodule.exports = {\n    longest_list,\n    min,\n\
    \    sum,\n    product,\n    concat,\n    unique,\n    unique_sorted,\n    sorted,\n\
    \    monotonic\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpj2xa3883.js:13\n    longest_list,\n    ^\n\nReferenceError: longest_list\
    \ is not defined\n    at Object.<anonymous> (/tmp/tmpj2xa3883.js:13:5)\n    at\
    \ Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    return l.every((x,i) => x >= l[i+1] || x <= l[i+1])\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4zndl1rw.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp4zndl1rw.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var c = 0;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(l[i] < l[i+1]){\n\
    \t\t\tc++;\n\t\t}else if(l[i] > l[i+1]){\n\t\t\tc--;\n\t\t}\n\t}\n\tif(c == l.length\
    \ - 1 || c == -(l.length - 1)){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmprwhf0lr6.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmprwhf0lr6.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let increasing = true;\n    let decreasing = true;\n    for(let i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] < l[i+1]) decreasing = false;\n       \
    \ if(l[i] > l[i+1]) increasing = false;\n    }\n    return increasing || decreasing;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var first = l[0];\n\tvar isGreater = false;\n\tvar isSmaller = false;\n\tfor(var\
    \ i = 1; i < l.length; i++){\n\t\tif(l[i] > first){\n\t\t\tisGreater = true;\n\
    \t\t}\n\t\tif(l[i] < first){\n\t\t\tisSmaller = true;\n\t\t}\n\t\tif(isGreater\
    \ && isSmaller){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_0_q1j0_.js:33:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp_0_q1j0_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 1){\n        return true;\n    }\n    var increasing = true;\n\
    \    var decreasing = true;\n    for(var i = 0; i < l.length - 1; i++){\n    \
    \    if(l[i] >= l[i+1]){\n            increasing = false;\n        }\n       \
    \ if(l[i] <= l[i+1]){\n            decreasing = false;\n        }\n    }\n   \
    \ return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpirdz4rpz.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpirdz4rpz.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var last = l[0];\n    var last_negative = last < 0;\n    for(var i = 1; i\
    \ < l.length; i++){\n        var current = l[i];\n        var current_negative\
    \ = current < 0;\n        if(current_negative != last_negative){\n           \
    \ return false;\n        }\n        if(current < last){\n            if(!current_negative){\n\
    \                return false;\n            }\n        }else if(current > last){\n\
    \            if(current_negative){\n                return false;\n          \
    \  }\n        }\n        last = current;\n    }\n    return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp33sb9hlc.js:39:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp33sb9hlc.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var i = 0;\n\tvar monotonic = true;\n\tvar increasing = (l[1] - l[0]) > 0;\n\t\
    for(i = 0; i < l.length - 1; i++){\n\t\tif((l[i+1] - l[i]) > 0 != increasing){\n\
    \t\t\tmonotonic = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn monotonic;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let d = l[1] - l[0];\n    let isMono = true;\n    for(let i = 1; i < l.length;\
    \ i++){\n        let nd = l[i] - l[i-1];\n        if(nd * d < 0){\n          \
    \  isMono = false;\n            break;\n        }\n    }\n    return isMono;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var flag = true;\n    var i = 0;\n    if(l.length < 2){\n        return true;\n\
    \    }\n    while(i < l.length-1){\n        if(l[i] > l[i+1]){\n            flag\
    \ = false;\n            break;\n        }\n        i++;\n    }\n    if(flag){\n\
    \        return true;\n    }\n    else{\n        flag = true;\n        var j =\
    \ 0;\n        while(j < l.length-1){\n            if(l[j] < l[j+1]){\n       \
    \         flag = false;\n                break;\n            }\n            j++;\n\
    \        }\n        if(flag){\n            return true;\n        }\n        else{\n\
    \            return false;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var result = true;\n  var operation = '+';\n  var previous = l[0];\n  for(i=1;\
    \ i<l.length; i++){\n    if(operation == '+'){\n      if(l[i] < previous){\n \
    \       operation = '-';\n      }\n    }else{\n      if(l[i] > previous){\n  \
    \      result = false;\n        break;\n      }\n    }\n    previous = l[i];\n\
    \  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   monotonic_bool = true;\n    for (i = 0; i < l.length-1; i++){\n        if\
    \ (l[i] <= l[i+1]){\n            monotonic_bool = true;\n        }\n        else\
    \ {\n            monotonic_bool = false;\n            break;\n        }\n    }\n\
    \    return monotonic_bool;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7o1znimk.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7o1znimk.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var s = l[0]\n    var i;\n    var inc = false;\n    var dec = false;\n   \
    \ for (i = 1; i < l.length; i++){\n        if (l[i] > s){\n            inc = true;\n\
    \        } else if (l[i] < s){\n            dec = true;\n        }\n        if\
    \ (inc && dec){\n            return false;\n        }\n        s = l[i];\n   \
    \ }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var bool = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] > l[i+1]){\n\
    \t\t\tbool = true;\n\t\t}\n\t\telse if(l[i] < l[i+1]){\n\t\t\tbool = true;\n\t\
    \t}\n\t\telse{\n\t\t\tbool = false;\n\t\t}\n\t}\n\treturn bool;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpn6036y9y.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpn6036y9y.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var order = undefined;\n\tfor(var i = 0; i < l.length - 1; i++){\n\t\tif(order\
    \ === undefined){\n\t\t\tif(l[i] > l[i+1]){\n\t\t\t\torder = \"decreasing\";\n\
    \t\t\t}else if(l[i] < l[i+1]){\n\t\t\t\torder = \"increasing\";\n\t\t\t}\n\t\t\
    }else if(order === \"decreasing\" && l[i] < l[i+1]){\n\t\t\treturn false;\n\t\t\
    }else if(order === \"increasing\" && l[i] > l[i+1]){\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let flag = false;\n    if(l[0]>l[1]){\n        for(let i=0;i<l.length-1;i++){\n\
    \            if(l[i]>l[i+1]){\n                flag = true;\n            }\n \
    \           else{\n                flag = false;\n                break;\n   \
    \         }\n        }\n    }\n    else{\n        for(let i=0;i<l.length-1;i++){\n\
    \            if(l[i]<l[i+1]){\n                flag = true;\n            }\n \
    \           else{\n                flag = false;\n                break;\n   \
    \         }\n        }\n    }\n    return flag;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpf5vhj132.js:44:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpf5vhj132.js:50:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return l.every((e,i,a)=>a[i]>=a[i-1]||a[i]<=a[i-1])\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy79mhybz.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy79mhybz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length === 0){\n    return true;\n  }\n  if(l.length === 1){\n    return\
    \ true;\n  }\n  var increasing = true;\n  var decreasing = true;\n  for(var i\
    \ = 0; i < l.length - 1; i++){\n    if(l[i] > l[i+1]){\n      increasing = false;\n\
    \    }\n    if(l[i] < l[i+1]){\n      decreasing = false;\n    }\n  }\n  return\
    \ increasing || decreasing;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var result=true;\n  var pos=0;\n  var neg=0;\n  for(var i=0;i<l.length-1;i++){\n\
    \    if(l[i]<l[i+1]){\n      pos+=1;\n    }\n    else if(l[i]>l[i+1]){\n     \
    \ neg+=1;\n    }\n  }\n  if(pos>0 && neg>0){\n    result=false;\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var check = true;\n    var i = 0;\n    var j = 1;\n    if (l.length === 0)\
    \ {\n        return check;\n    }\n    else {\n        for (i=0; i<l.length-1;\
    \ i++) {\n            if ((l[i] > l[j]) && (l[i] === l[j])) {\n              \
    \  j++;\n            }\n            else {\n                check = false;\n \
    \           }\n        }\n    }\n    return check;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp64n3bpoi.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp64n3bpoi.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length < 3){\n\t\treturn true;\n\t}\n\tvar increasing = l[0] < l[1];\n\t\
    var decreasing = l[0] > l[1];\n\tfor(var i = 2; i < l.length; i++){\n\t\tif(increasing\
    \ && l[i-1] > l[i]){\n\t\t\treturn false;\n\t\t}\n\t\tif(decreasing && l[i-1]\
    \ < l[i]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var ascending = true;\n  var descending = true;\n  var current = l[0];\n  for(var\
    \ i = 1; i < l.length; i++){\n    var next = l[i];\n    if(ascending){\n     \
    \ if(next < current){\n        ascending = false;\n      }\n    }\n    if(descending){\n\
    \      if(next > current){\n        descending = false;\n      }\n    }\n    current\
    \ = next;\n  }\n  return ascending || descending;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var up = true;\n    var down = true;\n    for(var i = 0; i < l.length - 1;\
    \ i++){\n        if(l[i] < l[i+1])\n            down = false;\n        if(l[i]\
    \ > l[i+1])\n            up = false;\n    }\n    return up || down;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var c = 0;\n    if(l.length == 0)\n        return true;\n    for(var i = 0;\
    \ i < l.length-1; i++){\n        if(c == 0){\n            if(l[i] < l[i+1])\n\
    \                c = 1;\n            else if(l[i] > l[i+1])\n                c\
    \ = -1;\n        }\n        else if(c > 0){\n            if(l[i] > l[i+1])\n \
    \               return false;\n        }\n        else if(c < 0){\n          \
    \  if(l[i] < l[i+1])\n                return false;\n        }\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var m = (l[1] - l[0] > 0) ? true : false;\n\tfor(i = 1; i < l.length; i++){\n\t\
    \tif(l[i] - l[i-1] != 0 && m != (l[i] - l[i-1] > 0)){\n\t\t\treturn false;\n\t\
    \t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length == 1) return true;\n  if(l.length == 2){\n    if(l[0]>l[1]) return\
    \ true;\n    if(l[0]<l[1]) return true;\n    if(l[0]==l[1]) return true;\n  }\n\
    \  var inc = true;\n  var dec = true;\n  for(var i = 0; i < l.length-1; i++){\n\
    \    if(l[i]<l[i+1]) dec = false;\n    if(l[i]>l[i+1]) inc = false;\n  }\n  if(inc\
    \ || dec) return true;\n  return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var trend;\n    trend = l[0] - l[1];\n    for (var i = 0; i < l.length - 1;\
    \ i++){\n        if (trend > 0){\n            if (l[i] - l[i+1] < 0){\n      \
    \          return false;\n            }\n        } else if (trend < 0){\n    \
    \        if (l[i] - l[i+1] > 0){\n                return false;\n            }\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 1){\n        return true;\n    }\n    increasing = null;\n\
    \    for(var i = 0; i < l.length - 1; i++){\n        if(l[i] != l[i+1]){\n   \
    \         increasing = l[i] < l[i+1];\n            break;\n        }\n    }\n\
    \    for(var i = 0; i < l.length - 1; i++){\n        if(increasing){\n       \
    \     if(l[i] > l[i+1]){\n                return false;\n            }\n     \
    \   }else{\n            if(l[i] < l[i+1]){\n                return false;\n  \
    \          }\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ function monotonic_helper(acc, l){\n    if(is_empty_list(l)){\n      return\
    \ acc;\n    } else {\n      const compare = head(l) > head(tail(l));\n      return\
    \ monotonic_helper(acc === compare, tail(l));\n    }\n  }\n  return monotonic_helper(true,\
    \ l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8ido126s.js:10\n    if(is_empty_list(l)){\n    ^\n\nReferenceError:\
    \ is_empty_list is not defined\n    at monotonic_helper (/tmp/tmp8ido126s.js:10:5)\n\
    \    at monotonic (/tmp/tmp8ido126s.js:17:10)\n    at test (/tmp/tmp8ido126s.js:25:20)\n\
    \    at Object.<anonymous> (/tmp/tmp8ido126s.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var growing = true;\n  var shrining = true;\n  for(var i = 0; i < l.length -\
    \ 1; i++){\n    growing = growing && l[i] <= l[i+1];\n    shrining = shrining\
    \ && l[i] >= l[i+1];\n  }\n  return growing || shrining;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var inc = true;\n  var dec = true;\n  for(var i = 0; i < l.length-1; i++){\n\
    \    if(l[i] > l[i+1]){\n      inc = false;\n    }\n    if(l[i] < l[i+1]){\n \
    \     dec = false;\n    }\n  }\n  return inc || dec;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var t = typeof l[0];\n    for(var i = 1; i < l.length; i++){\n        if(\
    \ typeof l[i] != t) return false;\n    }\n    return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuuqrrj2g.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpuuqrrj2g.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i;\n    var increasing = true;\n    var decreasing = true;\n    for (i\
    \ = 0; i < l.length - 1; i++){\n        if (l[i] > l[i+1]){\n            increasing\
    \ = false;\n        }\n        if (l[i] < l[i+1]){\n            decreasing = false;\n\
    \        }\n    }\n    return increasing || decreasing;\n}\n\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length <= 1){\n    return true;\n  }\n  var newList = l.slice();\n  var\
    \ isAscending = newList.sort();\n  if(isAscending == l){\n    return true;\n \
    \ }\n  else{\n    var isDescending = newList.reverse();\n    if(isDescending ==\
    \ l){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5e8fdyc5.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5e8fdyc5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var s=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]<l[i+1]){\n \
    \           s=1;\n        }\n        else if(l[i]>l[i+1]){\n            s=2;\n\
    \        }\n        else{\n            s=0;\n        }\n    }\n    if(s==1||s==2){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpy7exmnpi.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy7exmnpi.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length < 1){\n        return true;\n    }\n    let dir = 0;\n    for(let\
    \ i = 0; i < l.length - 1; i++){\n        if(dir == 0){\n            if(l[i] <\
    \ l[i+1]){\n                dir = 1;\n            }\n            else if(l[i]\
    \ > l[i+1]){\n                dir = -1;\n            }\n        }\n        else\
    \ if(dir == 1){\n            if(l[i] > l[i+1]){\n                return false;\n\
    \            }\n        }\n        else if(dir == -1){\n            if(l[i] <\
    \ l[i+1]){\n                return false;\n            }\n        }\n    }\n \
    \   return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var d1=0;\n    var d2=0;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]>l[i+1])\n\
    \            d1++;\n        else if(l[i]<l[i+1])\n            d2++;\n    }\n \
    \   if(d1!=0 && d2!=0)\n        return false;\n    else\n        return true;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length<=1){\n\t\treturn true;\n\t}\n\tvar type = \"incr\";\n\tif(l[1]<l[0]){\n\
    \t\ttype = \"decr\";\n\t}\n\tfor(var i=2;i<l.length;i++){\n\t\tif(type == \"incr\"\
    \ && l[i]<l[i-1]){\n\t\t\treturn false;\n\t\t}\n\t\tif(type == \"decr\" && l[i]>l[i-1]){\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ let direction = 0;\n  for(let i = 0; i < l.length; i++){\n    if(direction ===\
    \ 0){\n      if(l[i] < l[i+1]){\n        direction = 1;\n      }\n      else if(l[i]\
    \ > l[i+1]){\n        direction = -1;\n      }\n    }\n    else if(direction ===\
    \ 1){\n      if(l[i] > l[i+1]){\n        return false;\n      }\n    }\n    else\
    \ if(direction === -1){\n      if(l[i] < l[i+1]){\n        return false;\n   \
    \   }\n    }\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\ntrue\n    at test (/tmp/tmpd22trlwh.js:17:10)\n \
    \   at Object.<anonymous> (/tmp/tmpd22trlwh.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let direction = (l[1] > l[0]);\n    let result = true;\n    for (let i = 1;\
    \ i < l.length - 1; i++){\n        if ((l[i+1] > l[i]) != direction){\n      \
    \      result = false;\n            break;\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var str = l.join('');\n  if(/\\d{1,}-\\d{1,}/g.test(str)){\n    return is_descending(l);\n\
    \  }\n  else if(/\\d{1,}\\d{1,}/g.test(str)){\n    return is_ascending(l);\n \
    \ }\n  else{\n    return false;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeb3hmduj.js:14\n    return is_ascending(l);\n    ^\n\nReferenceError:\
    \ is_ascending is not defined\n    at monotonic (/tmp/tmpeb3hmduj.js:14:5)\n \
    \   at test (/tmp/tmpeb3hmduj.js:26:20)\n    at Object.<anonymous> (/tmp/tmpeb3hmduj.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return increasing || decreasing;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var monotonic = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] <=\
    \ l[i+1]){\n\t\t\tmonotonic = true;\n\t\t}else{\n\t\t\tmonotonic = false;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn monotonic;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxidmyi4b.js:29:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxidmyi4b.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length==0)\n\t\treturn true;\n\tvar previous=l[0];\n\tvar increasing=null;\n\
    \tfor(var x=1;x<l.length;x++){\n\t\tif(l[x]>previous)\n\t\t\tincreasing=true;\n\
    \t\telse if(l[x]<previous)\n\t\t\tincreasing=false;\n\t\telse\n\t\t\tcontinue;\n\
    \t\tif(x>1 && increasing!=null && increasing!=(l[x]>l[x-1]))\n\t\t\treturn false;\n\
    \t\tprevious=l[x];\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpk4tbpyma.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpk4tbpyma.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var inc = true;\n  var dec = true;\n  for(var i = 0; i < l.length-1; i++){\n\
    \    if(l[i] > l[i+1]){\n      inc = false;\n    }\n    if(l[i] < l[i+1]){\n \
    \     dec = false;\n    }\n  }\n  return inc || dec;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return all_increasing(l) || all_decreasing(l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpq5i_zug8.js:9\n    return all_increasing(l) || all_decreasing(l);\n\
    \    ^\n\nReferenceError: all_increasing is not defined\n    at monotonic (/tmp/tmpq5i_zug8.js:9:5)\n\
    \    at test (/tmp/tmpq5i_zug8.js:17:20)\n    at Object.<anonymous> (/tmp/tmpq5i_zug8.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   for(let i = 1; i < l.length; i++){\n        if(l[i-1] - l[i] != l[0] - l[1]){\n\
    \            return false;\n        }\n    }\n    return true;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp8ztp0rps.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8ztp0rps.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var a = l.slice();\n    a.sort(function(a, b){\n        return a - b;\n  \
    \  });\n    if(l.every(function(e, i){\n        return e == a[i];\n    })){\n\
    \        return true;\n    }else{\n        a.sort(function(a, b){\n          \
    \  return b - a;\n        });\n        if(l.every(function(e, i){\n          \
    \  return e == a[i];\n        })){\n            return true;\n        }else{\n\
    \            return false;\n        }\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var prev = l[0];\n    var isUp = null;\n    for(var i = 1; i < l.length; i++){\n\
    \        if(isUp === null){\n            if(l[i] > prev){\n                isUp\
    \ = true;\n            }else if(l[i] < prev){\n                isUp = false;\n\
    \            }\n        }else{\n            if(isUp){\n                if(l[i]\
    \ < prev){\n                    return false;\n                }\n           \
    \ }else{\n                if(l[i] > prev){\n                    return false;\n\
    \                }\n            }\n        }\n        prev = l[i];\n    }\n  \
    \  return true;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var increasing = true;\n  var decreasing = true;\n  for(var i = 0; i < l.length-1;\
    \ i++){\n    if(l[i] >= l[i+1]){\n      increasing = false;\n    }\n    if(l[i]\
    \ <= l[i+1]){\n      decreasing = false;\n    }\n  }\n  return increasing || decreasing;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfp0d_yzy.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfp0d_yzy.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var is_mono = 0;\n    if (l.length <= 2){\n        is_mono = true;\n    }\n\
    \    else{\n        if(l[0]>l[1]){\n            for(var i=0; i<l.length-1; i++){\n\
    \                if(l[i] <= l[i+1]){\n                    is_mono = false;\n \
    \                   break;\n                }\n            }\n        }\n    \
    \    else{\n            for(var i=0; i<l.length-1; i++){\n                if(l[i]\
    \ >= l[i+1]){\n                    is_mono = false;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return is_mono;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\ntrue\n    at test (/tmp/tmpcg6otmrg.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcg6otmrg.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i;\n    var prev = l[0];\n    var inc = null;\n    for (i = 1; i < l.length;\
    \ i++) {\n        if (l[i] > prev) {\n            if (inc === null) {\n      \
    \          inc = true;\n            } else if (inc === false) {\n            \
    \    return false;\n            }\n        } else if (l[i] < prev) {\n       \
    \     if (inc === null) {\n                inc = false;\n            } else if\
    \ (inc === true) {\n                return false;\n            }\n        }\n\
    \        prev = l[i];\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ let a = 0;\n  let b = 0;\n  for(let i = 0; i < l.length - 1; i++){\n    if(l[i]\
    \ > l[i+1]){\n      a++;\n    }\n    if(l[i] < l[i+1]){\n      b++;\n    }\n \
    \ }\n  if(a > 0 && b > 0){\n    return false;\n  }\n  return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var inc = true;\n\tvar dec = true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\
    \tif(l[i] < l[i+1]){\n\t\t\tdec = false;\n\t\t}\n\t\tif(l[i] > l[i+1]){\n\t\t\t\
    inc = false;\n\t\t}\n\t}\n\treturn inc || dec;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var k=0;\n  for(var i=0;i<l.length-1;i++){\n    if(l[i]<l[i+1]){\n      k++;\n\
    \    }\n    else if(l[i]>l[i+1]){\n      k--;\n    }\n  }\n  if(k==l.length-1\
    \ || k==-l.length+1){\n    return true;\n  }\n  else{\n    return false;\n  }\n\
    }\nvar arr1=[1,2,4,20];\nvar arr2=[1,20,4,10];\nvar arr3=[4,1,0,-10];\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdx54y27p.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdx54y27p.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length < 2){\n\t\treturn true;\n\t}\n\tvar i = 0;\n\tvar up = false;\n\t\
    var down = false;\n\tvar equal = false;\n\tvar previous = l[0];\n\tvar current\
    \ = l[1];\n\twhile(i < l.length){\n\t\tif(current > previous){\n\t\t\tup = true;\n\
    \t\t}\n\t\tif(current < previous){\n\t\t\tdown = true;\n\t\t}\n\t\tif(current\
    \ == previous){\n\t\t\tequal = true;\n\t\t}\n\t\ti++;\n\t\tprevious = current;\n\
    \t\tcurrent = l[i];\n\t}\n\tif(up && down){\n\t\treturn false;\n\t}\n\treturn\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var result = 0;\n    for(var i = 0; i < l.length; i++){\n        if(i == 0){\n\
    \            var number = l[i];\n        }\n        else{\n            if(number\
    \ < l[i]){\n                if(result == -1){\n                    return false;\n\
    \                }\n                number = l[i];\n                result = 1;\n\
    \            }\n            else if(number > l[i]){\n                if(result\
    \ == 1){\n                    return false;\n                }\n             \
    \   number = l[i];\n                result = -1;\n            }\n        }\n \
    \   }\n    return true;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(!l.length) return true;\n    var inc = true;\n    var dec = true;\n   \
    \ for(var i = 1; i < l.length; i++){\n        if(l[i] > l[i-1]) dec = false;\n\
    \        if(l[i] < l[i-1]) inc = false;\n    }\n    return inc || dec;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var d = l[1] - l[0];\n  for(var i = 1; i < l.length; i++){\n    if(d * (l[i]\
    \ - l[i-1]) < 0){\n      return false;\n    }\n  }\n  return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var r = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i]\
    \ < l[i+1]){\n            var monotonicType = 1;\n            break;\n       \
    \ }\n        else if(l[i] > l[i+1]){\n            var monotonicType = 2;\n   \
    \         break;\n        }\n    }\n    for(var i = 0; i < l.length - 1; i++){\n\
    \        if(monotonicType == 1){\n            if(l[i] > l[i+1]){\n           \
    \     r = false;\n                break;\n            }\n        }\n        else\
    \ if(monotonicType == 2){\n            if(l[i] < l[i+1]){\n                r =\
    \ false;\n                break;\n            }\n        }\n    }\n    return\
    \ r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ for(var i = 1; i < l.length; i++){\n    if(l[i] < l[i-1]){\n      var decreasing\
    \ = true;\n      break;\n    }\n    else if(l[i] > l[i-1]){\n      var increasing\
    \ = true;\n      break;\n    }\n  }\n  if(increasing == true || decreasing ==\
    \ true){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzel2kz_1.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzel2kz_1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return l.every((a,i)=>a>=l[i-1])||l.every((a,i)=>a<=l[i-1])\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7i22zbfe.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7i22zbfe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length == 1) return true;\n\tlet direction = (l[1]>l[0]) ? 1 : -1;\n\tfor(let\
    \ i=1; i<l.length; i++){\n\t\tif(direction*(l[i]-l[i-1]) < 0) return false;\n\t\
    }\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var flag = false;\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i] <=\
    \ l[i+1]){\n      flag = true;\n    }\n    else{\n      flag = false;\n      break;\n\
    \    }\n  }\n  return flag;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptmca9_c9.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmptmca9_c9.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length <= 1){\n\t\treturn true;\n\t}\n\tlet i = 0;\n\twhile(l[i+1] == l[i]){\n\
    \t\ti += 1;\n\t}\n\tconst increasing = l[i+1] > l[i];\n\tfor(let i = 0; i < l.length\
    \ - 1; i++){\n\t\tif(l[i+1] > l[i] && !increasing){\n\t\t\treturn false;\n\t\t\
    }\n\t\tif(l[i+1] < l[i] && increasing){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length == 0) {\n\t\treturn null;\n\t}\n\tif(l.length == 1) {\n\t\treturn\
    \ true;\n\t}\n\tif(l.length == 2) {\n\t\treturn (l[0] <= l[1]);\n\t}\n\tvar isMono\
    \ = true;\n\tfor(var i = 1; i < l.length; i++) {\n\t\tisMono = isMono && (l[i-1]\
    \ <= l[i]);\n\t}\n\tif(isMono) {\n\t\treturn true;\n\t}\n\tfor(var i = 1; i <\
    \ l.length; i++) {\n\t\tisMono = isMono && (l[i-1] >= l[i]);\n\t}\n\treturn isMono;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa7pbbocw.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpa7pbbocw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    inc = 0;\n\tdec = 0;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] < l[i+1]){\n\
    \t\t\tinc += 1;\n\t\t}\n\t\telse if(l[i] > l[i+1]){\n\t\t\tdec += 1;\n\t\t}\n\t\
    }\n\tif(inc == l.length-1 || dec == l.length-1){\n\t\treturn true;\n\t}\n\telse{\n\
    \t\treturn false;\n\t}\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgf0oa5cb.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgf0oa5cb.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let mono = true;\n    let inc = l[0] < l[1];\n    for(let i = 1; i < l.length;\
    \ i++){\n        if(inc !== (l[i-1] < l[i])){\n            mono = false;\n   \
    \         break;\n        }\n    }\n    return mono;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length < 2){\n    return true;\n  }\n  else{\n    for(var i = 0; i < l.length\
    \ - 1; i++){\n      if(l[i] > l[i+1]){\n        for(var j = i+1; j < l.length\
    \ - 1; j++){\n          if(l[j] > l[j+1]){\n            return false;\n      \
    \    }\n        }\n        return true;\n      }\n      else if(l[i] < l[i+1]){\n\
    \        for(var j = i+1; j < l.length - 1; j++){\n          if(l[j] < l[j+1]){\n\
    \            return false;\n          }\n        }\n        return true;\n   \
    \   }\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo070t3j7.js:39:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpo070t3j7.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let isMonotonic = true;\n    let direction = l[0] - l[1];\n    for(let i =\
    \ 0; i < l.length; i++){\n        if(i === l.length - 1){\n            break;\n\
    \        }\n        if(direction === 0){\n            direction = l[i] - l[i +\
    \ 1];\n            continue;\n        }\n        if((direction > 0 && l[i] - l[i\
    \ + 1] < 0) || (direction < 0 && l[i] - l[i + 1] > 0)){\n            isMonotonic\
    \ = false;\n            break;\n        }\n    }\n    return isMonotonic;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length === 0) return true;\n    var isIncreasing = l[0] < l[1];\n   \
    \ for(var i = 0; i < l.length-1; i++){\n        if(isIncreasing){\n          \
    \  if(l[i] > l[i+1]) return false;\n        } else {\n            if(l[i] < l[i+1])\
    \ return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length < 3){\n        return true;\n    }\n    else{\n        let diff\
    \ = l[1] - l[0];\n        for(let i = 1; i < l.length - 1; i++){\n           \
    \ if(diff * (l[i + 1] - l[i]) < 0){\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \  var increase = 0,\n       decrease = 0;\n    if(l.length == 1){\n        return\
    \ true;\n    }\n    else{\n        for(var i = 0; i < l.length - 1; i++){\n  \
    \          if(l[i] <= l[i+1]){\n                increase++;\n            }\n \
    \           else if(l[i] >= l[i+1]){\n                decrease++;\n          \
    \  }\n        }\n        if(increase == l.length - 1 || decrease == l.length -\
    \ 1){\n            return true;\n        }\n        else{\n            return\
    \ false;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy1los835.js:41:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpy1los835.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 1){\n        return true;\n    }\n\n    for(let i = 0; i <\
    \ l.length - 1; i++){\n        if(Math.abs(l[i + 1] - l[i]) !== Math.abs(l[1]\
    \ - l[0])){\n            return false;\n        }\n    }\n    return true;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9jj57j1q.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp9jj57j1q.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length < 1){\n        return true;\n    }\n    var direction = \"\";\n\
    \    var prev = l[0];\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > prev){\n            if(direction === \"\"){\n                direction = \"\
    increasing\";\n            }\n            else if(direction === \"decreasing\"\
    ){\n                return false;\n            }\n        }\n        else if(l[i]\
    \ < prev){\n            if(direction === \"\"){\n                direction = \"\
    decreasing\";\n            }\n            else if(direction === \"increasing\"\
    ){\n                return false;\n            }\n        }\n        prev = l[i];\n\
    \    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ return l.every((item, i) => item >= l[i+1] || item <= l[i+1]);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6lyjun0o.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6lyjun0o.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var inc=true,dec=true;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]>l[i+1])\
    \ inc=false;\n        if(l[i]<l[i+1]) dec=false;\n    }\n    return inc || dec;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length-1; i++){\n        if(l[i] >= l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] <= l[i+1]){\n            decreasing = false;\n   \
    \     }\n    }\n    return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpq4oq5ff0.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpq4oq5ff0.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length == 0){\n        return true;\n    }\n    var increase = true;\n\
    \    var decrease = true;\n    for(var i = 0; i < l.length - 1; i++){\n      \
    \  if(l[i] < l[i+1]){\n            decrease = false;\n        }\n        if(l[i]\
    \ > l[i+1]){\n            increase = false;\n        }\n    }\n    return increase\
    \ || decrease;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var test = []\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i+1]\
    \ - l[i] >= 0){\n            test.push(1)\n        }\n        else{\n        \
    \    test.push(-1)\n        }\n    }\n    var sum = 0\n    for(var i = 0; i <\
    \ test.length; i++){\n        sum += test[i]\n    }\n    if(sum === test.length\
    \ || sum === -test.length){\n        return true\n    }\n    else{\n        return\
    \ false\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplpd05who.js:39:10)\n    at\
    \ Object.<anonymous> (/tmp/tmplpd05who.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var m = 0;\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i] < l[i+1]){\n\
    \      m++;\n    }\n    else if(l[i] > l[i+1]){\n      m--;\n    }\n  }\n  if(m\
    \ === 0){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmvsm7n6i.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmvsm7n6i.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(!Array.isArray(l)){\n    throw new Error(\"Invalid input. Input must be an\
    \ array\");\n  }\n  if(l.length === 0){\n    return true;\n  }\n  for(let i =\
    \ 0; i < l.length - 1; i++){\n    if(l[i] > l[i+1]){\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptal8eaek.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmptal8eaek.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var i = 0;\n  var m;\n  for(i; i < l.length; i++){\n    if(m != undefined){\n\
    \      if(m < 0 && l[i] > l[i-1]){\n        return false;\n      }\n      if(m\
    \ > 0 && l[i] < l[i-1]){\n        return false;\n      }\n    }\n    m = l[i]\
    \ - l[i-1];\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var current = 0;\n    var ordered = true;\n    while (current < l.length -\
    \ 1 && ordered){\n        if (l[current] <= l[current + 1]){\n            current++;\n\
    \        }\n        else{\n            ordered = false;\n        }\n    }\n  \
    \  current = 0;\n    while (current < l.length - 1 && ordered){\n        if (l[current]\
    \ >= l[current + 1]){\n            current++;\n        }\n        else{\n    \
    \        ordered = false;\n        }\n    }\n    return ordered;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdj8p_wz4.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdj8p_wz4.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var result = false;\n\tvar isincreasing = true;\n\tvar isdecreasing = true;\n\t\
    for(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] < l[i+1]){\n\t\t\tisdecreasing\
    \ = false;\n\t\t}\n\t\tif(l[i] > l[i+1]){\n\t\t\tisincreasing = false;\n\t\t}\n\
    \t}\n\tif(isincreasing == true || isdecreasing == true){\n\t\tresult = true;\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var asc = true, desc = true;\n    for(var i = 0; i < l.length - 1; i++){\n\
    \        if(l[i+1] < l[i]){\n            asc = false;\n        }\n        if(l[i+1]\
    \ > l[i]){\n            desc = false;\n        }\n    }\n    return asc || desc;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ inc = true;\n  dec = true;\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i]\
    \ < l[i+1]){\n      dec = false;\n    }\n    if(l[i] > l[i+1]){\n      inc = false;\n\
    \    }\n  }\n  return (inc || dec);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 1){\n        return true;\n    }\n    else{\n        if(l[0]\
    \ < l[1]){\n            for(var i = 1; i < l.length - 1; i++){\n             \
    \   if(l[i] > l[i+1]){\n                    return false;\n                }\n\
    \            }\n            return true;\n        }\n        else if(l[0] > l[1]){\n\
    \            for(var i = 1; i < l.length - 1; i++){\n                if(l[i] <\
    \ l[i+1]){\n                    return false;\n                }\n           \
    \ }\n            return true;\n        }\n        else{\n            return monotonic(l.slice(1));\n\
    \        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var counter = 0;\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i] < l[i+1]){\n\
    \      counter++\n    }\n    else if(l[i] > l[i+1]){\n      counter--\n    }\n\
    \  }\n  if(counter == l.length - 1 || counter == -(l.length - 1)){\n    return\
    \ true\n  }\n  else{\n    return false\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7tderphl.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7tderphl.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var left = true;\n\tvar right = true;\n\tfor(i=0; i<l.length; i++){\n\t\tif(l[i]>l[i+1]){\n\
    \t\t\tleft = false;\n\t\t}\n\t\tif(l[i]<l[i+1]){\n\t\t\tright = false;\n\t\t}\n\
    \t}\n\tif(left || right){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\
    \t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var inc = false;\n\tvar dec = false;\n\tfor(var i = 0; i < l.length - 1; i++){\n\
    \t\tif(l[i] <= l[i+1]){\n\t\t\tinc = true;\n\t\t}\n\t\tif(l[i] >= l[i+1]){\n\t\
    \t\tdec = true;\n\t\t}\n\t}\n\tif(inc == true && dec == true){\n\t\treturn false;\n\
    \t}\n\telse{\n\t\treturn true;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5ept3xwm.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5ept3xwm.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   // a is increasing, d is decreasing\n    var a = true;\n    var d = true;\n\
    \    for (var i = 0; i < l.length-1; i++){\n        if (l[i] > l[i+1]){\n    \
    \        a = false;\n        }\n        if (l[i] < l[i+1]){\n            d = false;\n\
    \        }\n    }\n    return (a || d);\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjsnl_xua.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjsnl_xua.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    for(var i = 0; i <\
    \ l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n\
    \        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n    \
    \    }\n    }\n    return (increasing || decreasing);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var sgn = Math.sign(l[1] - l[0]);\n    for(var i = 2; i < l.length; i++){\n\
    \        if(Math.sign(l[i] - l[i-1]) != sgn){\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx8d5wyd7.js:27:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpx8d5wyd7.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let increasing = true;\n    let decreasing = true;\n    let prev = l[0];\n\
    \    for(let i = 1; i < l.length; i++){\n        if(prev < l[i]){\n          \
    \  decreasing = false;\n        }else if(prev > l[i]){\n            increasing\
    \ = false;\n        }\n        prev = l[i];\n    }\n    return increasing || decreasing;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ let d = l[1] - l[0];\n  for(let i = 1; i < l.length; i++){\n    if(d * (l[i]\
    \ - l[i-1]) < 0){\n      return false;\n    }\n  }\n  return true;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length == 0)\n\t\treturn true;\n\tvar first = l[0];\n\tvar second = l[1];\n\
    \tvar isIncreasing = first < second;\n\tfor(var i = 1; i < l.length - 1; i++){\n\
    \t\tif(isIncreasing && l[i] > l[i+1])\n\t\t\treturn false;\n\t\tif(!isIncreasing\
    \ && l[i] < l[i+1])\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(!Array.isArray(l)){\n\t\tthrow \"Input must be an array!\";\n\t}\n\tif(l.length\
    \ == 0){\n\t\treturn true;\n\t}\n\tvar increasing = true;\n\tvar decreasing =\
    \ true;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\tif(l[i] > l[i+1]){\n\t\t\t\
    increasing = false;\n\t\t}\n\t\tif(l[i] < l[i+1]){\n\t\t\tdecreasing = false;\n\
    \t\t}\n\t}\n\treturn increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   l.sort(function(a, b){return a-b});\n    let ascending=true;\n    let descending=true;\n\
    \    for(let i=0; i<l.length-1; i++){\n        if(l[i]>l[i+1]){\n            ascending=false;\n\
    \        }\n        if(l[i]<l[i+1]){\n            descending=false;\n        }\n\
    \    }\n    return ascending || descending;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpiru6djl7.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpiru6djl7.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return l.every((v,i,a)=>(i==0 || a[i-1]<=v)) || l.every((v,i,a)=>(i==0 ||\
    \ a[i-1]>=v));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var flag = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if((l[i]\
    \ - l[i+1]) * (l[0] - l[1]) < 0){\n            flag = false;\n            break;\n\
    \        }\n    }\n    return flag;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var i = 1;\n\tvar mode = 0;\n\twhile(i < l.length){\n\t\tif (mode == 0){\n\t\t\
    \tif (l[i-1] < l[i]){\n\t\t\t\tmode = 1;\n\t\t\t}\n\t\t\telse if (l[i-1] > l[i]){\n\
    \t\t\t\tmode = -1;\n\t\t\t}\n\t\t}\n\t\telse if (mode == 1){\n\t\t\tif (l[i-1]\
    \ > l[i]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (mode == -1){\n\
    \t\t\tif (l[i-1] < l[i]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\ti += 1;\n\
    \t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ return l[0] >= l[1] && l[1] >= l[2] && l[2] >= l[3] ||\n    l[0] <= l[1] &&\
    \ l[1] <= l[2] && l[2] <= l[3];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var up = true;\n\tvar down = true;\n\tfor(var i = 0; i < l.length - 1; i++){\n\
    \t\tif(l[i+1] > l[i]){\n\t\t\tdown = false;\n\t\t}\n\t\tif(l[i+1] < l[i]){\n\t\
    \t\tup = false;\n\t\t}\n\t}\n\treturn up || down;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l[0] <= l[1]){\n        for(var i = 0; i < l.length - 1; i++){\n      \
    \      if(l[i] > l[i+1]){\n                return false;\n            }\n    \
    \    }\n    }else{\n        for(var i = 0; i < l.length - 1; i++){\n         \
    \   if(l[i] < l[i+1]){\n                return false;\n            }\n       \
    \ }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var state = null;\n\n    for(var i = 0; i < l.length - 1; i++){\n        if(state\
    \ === null){\n            if(l[i] < l[i + 1]){\n                state = true;\n\
    \            }\n            else if(l[i] > l[i + 1]){\n                state =\
    \ false;\n            }\n        }\n        else if(state === true){\n       \
    \     if(l[i] > l[i + 1]){\n                return false;\n            }\n   \
    \     }\n        else if(state === false){\n            if(l[i] < l[i + 1]){\n\
    \                return false;\n            }\n        }\n    }\n    return true;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   inc = dec = true;\n    for(var i = 1; i < l.length; i++){\n        if(l[i]\
    \ > l[i-1]) dec = false;\n        if(l[i] < l[i-1]) inc = false;\n    }\n    return\
    \ dec || inc;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length == 1){\n        return true;\n    }\n    var direction = \"\"\
    ;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i+1] > l[i]){\n  \
    \          if(direction == \"\"){\n                direction = \"increasing\"\
    ;\n            }else if(direction == \"decreasing\"){\n                return\
    \ false;\n            }\n        }else if(l[i+1] < l[i]){\n            if(direction\
    \ == \"\"){\n                direction = \"decreasing\";\n            }else if(direction\
    \ == \"increasing\"){\n                return false;\n            }\n        }\n\
    \    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var result = true;\n    var a = l[0];\n    var b = l[1];\n    var increasing\
    \ = (a < b);\n    for (var i = 0; i < l.length - 1; i++){\n        if ((increasing\
    \ && l[i] > l[i+1]) || (!increasing && l[i] < l[i+1])){\n            result =\
    \ false;\n            break;\n        }\n    }\n    return result;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length <= 1){\n    return true;\n  }\n\n  var increasing = true;\n  var\
    \ decreasing = true;\n\n  for(var i = 0; i < l.length - 1; i++){\n    if(l[i]\
    \ > l[i + 1]){\n      increasing = false;\n    }\n    if(l[i] < l[i + 1]){\n \
    \     decreasing = false;\n    }\n  }\n\n  return increasing || decreasing;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length < 2){\n\t\treturn true;\n\t}\n\treturn isIncreasing(l) || isDecreasing(l);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpih53uzvs.js:12\n\treturn isIncreasing(l) || isDecreasing(l);\n\t\
    ^\n\nReferenceError: isIncreasing is not defined\n    at monotonic (/tmp/tmpih53uzvs.js:12:2)\n\
    \    at test (/tmp/tmpih53uzvs.js:20:20)\n    at Object.<anonymous> (/tmp/tmpih53uzvs.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    //your code here\n\tif(l.length === 0){\n\t\treturn true;\n\t}\n\n\tvar before\
    \ = l[0];\n\tvar increasing = true;\n\tvar decreasing = true;\n\n\tfor(var i =\
    \ 1; i < l.length; i++){\n\t\tif(before < l[i]){\n\t\t\tdecreasing = false;\n\t\
    \t}\n\t\tif(before > l[i]){\n\t\t\tincreasing = false;\n\t\t}\n\t\tbefore = l[i];\n\
    \t}\n\n\treturn increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length <= 2){\n    return true;\n  }\n  if(l[0] < l[1]){\n    for(let i\
    \ = 1; i < l.length - 1; i++){\n      if(l[i] > l[i + 1]){\n        return false;\n\
    \      }\n    }\n  }\n  else if(l[0] > l[1]){\n    for(let i = 1; i < l.length\
    \ - 1; i++){\n      if(l[i] < l[i + 1]){\n        return false;\n      }\n   \
    \ }\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var increase = true;\n\tvar decrease = true;\n\tfor(var i = 0; i < l.length -\
    \ 1; i++){\n\t\tif(l[i] > l[i+1]){\n\t\t\tincrease = false;\n\t\t}\n\t\tif(l[i]\
    \ < l[i+1]){\n\t\t\tdecrease = false;\n\t\t}\n\t}\n\treturn increase || decrease;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var m = 0;\n  for(var i = 0; i < l.length; i++){\n    if(i === 0){\n      m\
    \ = l[i];\n    }\n    else{\n      if(l[i] > m){\n        m = l[i];\n      }\n\
    \      else{\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0i63zaz_.js:34:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp0i63zaz_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   l.sort();\n    return l[0] <= l[l.length-1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpik660p4p.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpik660p4p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var arr = l.sort(function(a, b){return a-b});\n\tif(arr.join() == l.join()){\n\
    \t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpmy3wu6o0.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmy3wu6o0.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr5sv5qll.js:17:10)\n \
    \   at Object.<anonymous> (/tmp/tmpr5sv5qll.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var f;\n  return l.every(function(v,i,a){\n    if(i === 0) return true;\n  \
    \  if(i === 1) f = v > a[i-1];\n    return (v > a[i-1]) === f;\n  });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length == 0){\n        return false;\n    }\n    //assume increasing\n\
    \    var increasing = true;\n    for(var i = 0; i < l.length - 1; i++){\n    \
    \    if(l[i] > l[i+1]){\n            increasing = false;\n            break;\n\
    \        }\n    }\n    if(increasing == true){\n        return true;\n    }\n\
    \    //assume decreasing\n    var decreasing = true;\n    for(var i = 0; i < l.length\
    \ - 1; i++){\n        if(l[i] < l[i+1]){\n            decreasing = false;\n  \
    \          break;\n        }\n    }\n    if(decreasing == true){\n        return\
    \ true;\n    }\n    return false;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length < 3){\n    return true;\n  }\n  var isUp;\n  var isDown;\n  var\
    \ current = l[0];\n  var index = 1;\n  while(index < l.length){\n    if(current\
    \ > l[index]){\n      if(isUp == true){\n        return false;\n      }\n    \
    \  isDown = true;\n    }else if(current < l[index]){\n      if(isDown == true){\n\
    \        return false;\n      }\n      isUp = true;\n    }\n    current = l[index];\n\
    \    index++;\n  }\n  return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var r=l.slice();\n    r.sort();\n    var result1 = l.toString() == r.toString();\n\
    \    r.reverse();\n    var result2 = l.toString() == r.toString();\n    return\
    \ result1 || result2;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6a1mf22b.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6a1mf22b.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   for(let i = 0; i < l.length; i++){\n        if(l[i] > l[i+1]){\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl6hrq0w3.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl6hrq0w3.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return l.slice(1).every((v,i)=>(v >= l[i] && l[i] <= l[i+1]) || (v <= l[i]\
    \ && l[i] >= l[i+1]))\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_ijquzb_.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp_ijquzb_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i = 0;\n    var inc = false;\n    var dec = false;\n    while(i < l.length\
    \ - 1){\n        if(l[i] < l[i+1]){\n            inc = true;\n        }\n    \
    \    if(l[i] > l[i+1]){\n            dec = true;\n        }\n        i++;\n  \
    \  }\n    if(inc && dec){\n        return false;\n    }\n    return true;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var a = l[0] - l[1];\n    for(var i = 0; i < l.length - 1; i++){\n       \
    \ var b = l[i] - l[i+1];\n        if(a * b < 0){\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length<2){\n    return true;\n  }\n  for(var i=0;i<l.length-1;i++){\n \
    \   if(l[i]>l[i+1]){\n      for(var j=i+1;j<l.length-1;j++){\n        if(l[j]>l[j+1]){\n\
    \          return false;\n        }\n      }\n      return true;\n    }\n    else\
    \ if(l[i]<l[i+1]){\n      for(var j=i+1;j<l.length-1;j++){\n        if(l[j]<l[j+1]){\n\
    \          return false;\n        }\n      }\n      return true;\n    }\n  }\n\
    \  return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6tv7i4xj.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6tv7i4xj.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length == 1)\n    return true;\n  let increasing = true;\n  let decreasing\
    \ = true;\n  for(let i = 0; i < l.length - 1; i++){\n    if(l[i] > l[i+1])\n \
    \     increasing = false;\n    if(l[i] < l[i+1])\n      decreasing = false;\n\
    \  }\n  return increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length < 2){\n\t\treturn true;\n\t}\n\tif(l[0] > l[1]){\n\t\tfor(var i =\
    \ 1; i < l.length; i++){\n\t\t\tif(l[i] >= l[i-1]){\n\t\t\t\treturn false;\n\t\
    \t\t}\n\t\t}\n\t}else{\n\t\tfor(var i = 1; i < l.length; i++){\n\t\t\tif(l[i]\
    \ <= l[i-1]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoagi36l8.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpoagi36l8.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length<2){\n        return true;\n    }\n    let increasing = true;\n\
    \    let decreasing = true;\n    for(let i=0;i<l.length-1;i++){\n        if(l[i]<l[i+1]){\n\
    \            decreasing = false;\n        }\n        if(l[i]>l[i+1]){\n      \
    \      increasing = false;\n        }\n    }\n    return increasing || decreasing;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   for(var i = 0; i < l.length - 1; i++){\n        if(l[i] < l[i+1]){\n     \
    \       return false;\n        }\n    }\n    return true;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnhd4svku.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpnhd4svku.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var z = l[0];\n    var inc = 0;\n    var dec = 0;\n    for(var i = 0; i <\
    \ l.length; i++){\n        if(l[i] > z){\n            inc++;\n        }\n    \
    \    else if(l[i] < z){\n            dec++;\n        }\n        else{\n      \
    \      inc++;\n            dec++;\n        }\n        z = l[i];\n    }\n    if(inc\
    \ == l.length || dec == l.length){\n        return true;\n    }\n    else{\n \
    \       return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true\n    var decreasing = true\n    for (i = 0; i < l.length-1;\
    \ i++){\n        if (l[i] < l[i+1]){\n            decreasing = false\n       \
    \ }\n        if (l[i] > l[i+1]){\n            increasing = false\n        }\n\
    \    }\n    return increasing || decreasing\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var increasing = 1, decreasing = 1;\n\tfor(var i = 0; i < l.length - 1; i++){\n\
    \t\tif(l[i] <= l[i+1]){\n\t\t\tincreasing++;\n\t\t}\n\t\tif(l[i] >= l[i+1]){\n\
    \t\t\tdecreasing++;\n\t\t}\n\t}\n\tif(increasing == l.length || decreasing ==\
    \ l.length){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn false;\n\t}\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var current=l[0];\n    var increase=true;\n    var decrease=true;\n    var\
    \ result=false;\n    var equal=true;\n    for(var i=1;i<l.length;i++){\n     \
    \   if(l[i]>current){\n            decrease=false;\n        }\n        if(l[i]<current){\n\
    \            increase=false;\n        }\n        if(l[i]==current){\n        \
    \    decrease=false;\n            increase=false;\n        }\n        current=l[i];\n\
    \    }\n    if(increase||decrease){\n        result=true;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5f5yrlqb.js:42:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5f5yrlqb.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977033
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   // Your answer goes here.\n    var lCopy = l.slice(0);\n    if (lCopy.every(function(a,b){return\
    \ a<=b})) {\n        return true;\n    }\n    lCopy.reverse();\n    if (lCopy.every(function(a,b){return\
    \ a<=b})) {\n        return true;\n    }\n    return false;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpynflkbyb.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpynflkbyb.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var inc = 0;\n  var dec = 0;\n  for(var i = 0; i < l.length - 1; i++){\n   \
    \ if(l[i] <= l[i+1]){\n      inc++;\n    }\n    if(l[i] >= l[i+1]){\n      dec++;\n\
    \    }\n  }\n  if(inc === l.length - 1 || dec === l.length - 1){\n    return true;\n\
    \  }\n  return false;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l[0] < l[1]){\n    for(var i = 0; i < l.length - 1; i++){\n      if(l[i]\
    \ > l[i+1]){\n        return false;\n      }\n    }\n  } else {\n    for(var i\
    \ = 0; i < l.length - 1; i++){\n      if(l[i] < l[i+1]){\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ let increasing = true;\n  let decreasing = true;\n  for(let i = 0; i < l.length-1;\
    \ i++){\n    if(l[i]>l[i+1]){\n      increasing = false;\n    }\n    if(l[i]<l[i+1]){\n\
    \      decreasing = false;\n    }\n  }\n  return (increasing || decreasing);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 2){\n        return true;\n    }\n\n    var isIncreasing =\
    \ l[0] < l[1];\n    for(var i = 1; i < l.length; i++){\n        if(isIncreasing\
    \ && l[i] < l[i-1]){\n            return false;\n        }\n        if(!isIncreasing\
    \ && l[i] > l[i-1]){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length <= 2){\n        return true;\n    }\n    if(l[0] <= l[1]){\n \
    \       //increasing\n        for(var i = 0; i < l.length-1; i++){\n         \
    \   if(l[i] > l[i+1]){\n                return false;\n            }\n       \
    \ }\n    }else{\n        //decreasing\n        for(var i = 0; i < l.length-1;\
    \ i++){\n            if(l[i] < l[i+1]){\n                return false;\n     \
    \       }\n        }\n    }\n    return true;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length == 1)\n    return true;\n  else if(l.length == 2)\n    return l[0]\
    \ == l[1];\n  else{\n    var direction = -1; // 0 - dec, 1 - inc\n    for(var\
    \ i = 1; i < l.length; i++){\n      if(l[i-1] < l[i]){\n        if(direction ==\
    \ -1)\n          direction = 1;\n        else if(direction == 0)\n          return\
    \ false;\n      }\n      else if(l[i-1] > l[i]){\n        if(direction == -1)\n\
    \          direction = 0;\n        else if(direction == 1)\n          return false;\n\
    \      }\n    }\n    return true;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    for(var i = 1; i < l.length; i++){\n\t\tif(l[i] < l[i-1]){\n\t\t\tif(i == 1){\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn false;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var l1 = l.slice();\n  var l2 = l.slice();\n  l1.sort(function(a,b){return a-b});\n\
    \  l2.sort(function(a,b){return b-a});\n  return l.join(',') == l1.join(',') ||\
    \ l.join(',') == l2.join(',');\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgqmxycsn.js:18:10)\n \
    \   at Object.<anonymous> (/tmp/tmpgqmxycsn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   return !l.some((_,i)=>i!==0 && l[i-1]>l[i]) || !l.some((_,i)=>i!==0 && l[i-1]<l[i]);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var test = true;\n    var incr = 0;\n    var decr = 0;\n    var prev = 0;\n\
    \    for (var i=0; i<l.length; i++){\n        if (i==0){\n            prev = l[i];\n\
    \        }\n        else{\n            if (l[i]>prev){\n                incr +=\
    \ 1;\n            }\n            else if (l[i]<prev){\n                decr +=\
    \ 1;\n            }\n            prev = l[i];\n        }\n    }\n    if (incr==0\
    \ && decr==0){\n        test = false;\n    }\n    else if (incr!=0 && decr!=0){\n\
    \        test = false;\n    }\n    return test;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpx4v53s5i.js:48:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpx4v53s5i.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length < 1){\n        return false;\n    }\n    let increasing = true;\n\
    \    let decreasing = true;\n    for(let i = 0; i < l.length - 1; i++){\n    \
    \    if(l[i] > l[i+1]){\n            increasing = false;\n        }\n        if(l[i]\
    \ < l[i+1]){\n            decreasing = false;\n        }\n    }\n    return (increasing\
    \ || decreasing);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ if(l.length < 2){\n    return true;\n  }\n  return (l[1] - l[0] > 0) ? monotonicCheck([l[0],\
    \ l[1]], l) : monotonicCheck([l[0], l[1]], l.reverse());\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4jo5pn8k.js:12\n  return (l[1] - l[0] > 0) ? monotonicCheck([l[0],\
    \ l[1]], l) : monotonicCheck([l[0], l[1]], l.reverse());\n                   \
    \   ^\n\nReferenceError: monotonicCheck is not defined\n    at monotonic (/tmp/tmp4jo5pn8k.js:12:23)\n\
    \    at test (/tmp/tmp4jo5pn8k.js:20:20)\n    at Object.<anonymous> (/tmp/tmp4jo5pn8k.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var inc = 0;\n    var dec = 0;\n    for(var i = 0; i < l.length - 1; i++){\n\
    \        if(l[i] < l[i+1]){\n            inc++;\n        }\n        else if(l[i]\
    \ > l[i+1]){\n            dec++;\n        }\n    }\n    if(inc == l.length - 1\
    \ || dec == l.length - 1){\n        return true;\n    }\n    else{\n        return\
    \ false;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpd2a0_16t.js:35:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpd2a0_16t.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var isTrue = true;\n  var isRising = true;\n  var isFalling = true;\n  for(var\
    \ i = 0; i < l.length - 1; i++){\n    if(l[i] < l[i+1]){\n      isFalling = false;\n\
    \    }else if(l[i] > l[i+1]){\n      isRising = false;\n    }\n  }\n  if(isRising\
    \ == false && isFalling == false){\n    isTrue = false;\n  }\n  return isTrue;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var sign = 0;\n  var i = 0;\n  while(i < l.length-1){\n    if(sign == 0){\n\
    \      sign = Math.sign(l[i+1] - l[i]);\n    }\n    else if(sign != Math.sign(l[i+1]\
    \ - l[i])){\n      return false;\n    }\n    i++;\n  }\n  return true;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkbh94hlp.js:32:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkbh94hlp.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing=false;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]<l[i+1])\n\
    \            increasing=true;\n        else{\n            increasing=false;\n\
    \            break;\n        }\n    }\n    if(increasing)\n        return true;\n\
    \    var decreasing=false;\n    for(var i=0;i<l.length-1;i++){\n        if(l[i]>l[i+1])\n\
    \            decreasing=true;\n        else{\n            decreasing=false;\n\
    \            break;\n        }\n    }\n    if(decreasing)\n        return true;\n\
    \    return false;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdclp3tf8.js:42:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdclp3tf8.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l[0] < l[1]){\n        for(var i = 1; i < l.length; i++){\n           \
    \ if(l[i] < l[i-1]){\n                return false;\n            }\n        }\n\
    \    }\n    else{\n        for(var i = 1; i < l.length; i++){\n            if(l[i]\
    \ > l[i-1]){\n                return false;\n            }\n        }\n    }\n\
    \    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length<3){\n        return true;\n    }\n    let direction=l[1]-l[0];\n\
    \    for(let i=2;i<l.length;i++){\n        if(direction===0){\n            direction=l[i]-l[i-1];\n\
    \            continue;\n        }\n        if((l[i]-l[i-1])/direction<0){\n  \
    \          return false;\n        }\n    }\n    return true;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ return l.every((e,i,l)=> (e<l[i+1]) || (e>l[i+1]))\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdcgz4hl7.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdcgz4hl7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length <= 2){\n\t\treturn true;\n\t}\n\tvar sign = (l[0] < l[1])?1:-1;\n\t\
    for(var i = 1; i < l.length-1; i++){\n\t\tvar a = l[i], b = l[i+1];\n\t\tif(sign\
    \ == 1 && a > b || sign == -1 && a < b){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    return true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   //check for empty list\n    if(l.length == 0){\n        return false;\n  \
    \  }\n    //check for single element list\n    if(l.length == 1){\n        return\
    \ true;\n    }\n    //check if the numbers are all increasing\n    if(l[0] < l[1]){\n\
    \        for(var i = 0; i < l.length-1; i++){\n            if(l[i] > l[i+1]){\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }else{\n        //check if the numbers are all decreasing\n        for(var\
    \ i = 0; i < l.length-1; i++){\n            if(l[i] < l[i+1]){\n             \
    \   return false;\n            }\n        }\n        return true;\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var incr = 0;\n    var decr = 0;\n    for(i=0; i<l.length-1; i++){\n     \
    \   if(l[i] < l[i+1]){\n            incr = incr + 1;\n        }\n        else\
    \ if(l[i] > l[i+1]){\n            decr = decr + 1;\n        }\n    }\n    if(incr\
    \ == l.length-1 || decr == l.length-1){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcz42xxkt.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpcz42xxkt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    if(l.length <= 2){\n\t\treturn true;\n\t}\n\tlet greaterThan = false;\n\tlet lessThan\
    \ = false;\n\tfor(let i = 0; i < l.length - 1; i++){\n\t\tif(l[i] < l[i+1]){\n\
    \t\t\tlessThan = true;\n\t\t}\n\t\tif(l[i] > l[i+1]){\n\t\t\tgreaterThan = true;\n\
    \t\t}\n\t}\n\treturn lessThan != greaterThan;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphlru7tjj.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphlru7tjj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let direct,\n        found_difference = false,\n        i = 0;\n    while(!found_difference\
    \ && i < l.length - 1){\n        if(l[i] > l[i+1]){\n            direct = -1;\n\
    \            found_difference = true;\n        }\n        else if(l[i] < l[i+1]){\n\
    \            direct = 1;\n            found_difference = true;\n        }\n  \
    \      i++;\n    }\n    let j = i;\n    while(found_difference && j < l.length\
    \ - 1){\n        if(l[j] * direct < l[j+1] * direct){\n            found_difference\
    \ = false;\n        }\n        j++;\n    }\n    return found_difference;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwkbfopc_.js:38:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwkbfopc_.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    //Set variable, m, to \"true\" by default.\n\tvar m = true;\n\t\n\t//If a is less\
    \ than b and b is less than c, the array is increasing.\n\t//If a is greater than\
    \ b and b is greater than c, the array is decreasing.\n\tfor(var i = 0; i < l.length\
    \ - 1; i++){\n\t\tif(l[i] < l[i + 1]){\n\t\t\tm = true;\n\t\t}else if(l[i] > l[i\
    \ + 1]){\n\t\t\tm = true;\n\t\t}else{\n\t\t\t//Otherwise, it is not monotonic,\
    \ and set m to false.\n\t\t\tm = false;\n\t\t}\n\t}\n\t\n\t//Return the value\
    \ of m.\n\treturn m;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpfkxm6wdj.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpfkxm6wdj.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var n = l.length;\n\tif(n <= 1)\n\t\treturn true;\n\tvar cmp = (l[1] - l[0] >\
    \ 0)? 1: -1;\n\tfor(var i = 2; i < n; i++)\n\t\tif(cmp * (l[i] - l[i-1]) < 0)\n\
    \t\t\treturn false;\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var type = \"decreasing\";\n    for(i=0; i< l.length-1; i++){\n        if(l[i]\
    \ < l[i+1]){\n            type = \"increasing\";\n            break;\n       \
    \ }\n    }\n    if(type == \"increasing\"){\n        for(i=0; i< l.length-1; i++){\n\
    \            if(l[i] > l[i+1]){\n                return false;\n            }\n\
    \        }\n    }\n    else{\n        for(i=0; i< l.length-1; i++){\n        \
    \    if(l[i] < l[i+1]){\n                return false;\n            }\n      \
    \  }\n    }\n    return true;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   if(l.length == 0){\n        return true;\n    }\n    else if(l.length == 1){\n\
    \        return true;\n    }\n    else if(l.length == 2){\n        if(l[0] < l[1]){\n\
    \            return true;\n        }\n        else if(l[0] > l[1]){\n        \
    \    return true;\n        }\n        else if(l[0] == l[1]){\n            return\
    \ true;\n        }\n    }\n    else{\n        let s = l[0];\n        let n = l[1];\n\
    \        let g = true;\n        let f = true;\n        for(let i = 0; i < l.length;\
    \ i++){\n            if(s < n){\n                s = n;\n                n = l[i+1];\n\
    \            }\n            else if(s > n){\n                s = n;\n        \
    \        n = l[i+1];\n            }\n            else if(s == n){\n          \
    \      s = n;\n                n = l[i+1];\n            }\n            else{\n\
    \                g = false;\n                f = false;\n            }\n     \
    \   }\n        if(g == true){\n            return true;\n        }\n        else\
    \ if(f == true){\n            return true;\n        }\n        else{\n       \
    \     return false;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpg2qe10do.js:68:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpg2qe10do.js:76:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var i = 1;\n    var lLength = l.length;\n    var i1 = l[0];\n    var i2 =\
    \ l[1];\n    if (lLength === 1) {\n        return true;\n    } else if (i1 ===\
    \ i2) {\n        return monotonic(l.slice(1));\n    } else if (i1 < i2) {\n  \
    \      while (i < lLength) {\n            if (l[i] < l[i-1]) {\n             \
    \   return false;\n            }\n            i++;\n        }\n        return\
    \ true;\n    } else {\n        while (i < lLength) {\n            if (l[i] > l[i-1])\
    \ {\n                return false;\n            }\n            i++;\n        }\n\
    \        return true;\n    }\n}\n\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var isIncreasing = true;\n\tvar isDecreasing = true;\n\tfor(var i = 0; i < l.length-1;\
    \ i++){\n\t\tif(l[i] > l[i+1])\n\t\t\tisIncreasing = false;\n\t\tif(l[i] < l[i+1])\n\
    \t\t\tisDecreasing = false;\n\t}\n\treturn isIncreasing || isDecreasing;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var sign;\n  for(var i = 0; i < l.length; i++){\n    if(sign === undefined){\n\
    \      sign = l[i] < l[i+1] ? 1 : -1;\n    }else{\n      if(sign === 1 && l[i]\
    \ > l[i+1]){\n        return false;\n      }else if(sign === -1 && l[i] < l[i+1]){\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var inc = true;\n    var dec = true;\n    for(var i = 0; i < l.length - 1;\
    \ i++){\n        if(l[i+1] - l[i] < 0){\n            inc = false;\n        }\n\
    \        if(l[i+1] - l[i] > 0){\n            dec = false;\n        }\n    }\n\
    \    return inc || dec;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    //Find if the sequence is increasing or decreasing\n\tif(l[0] <= l[1]){\n\t\t\
    var increase = true;\n\t}\n\telse{\n\t\tvar increase = false;\n\t}\n\t//Check\
    \ to see if the sequence is monotonic\n\tfor(var i = 0; i < l.length - 1; i++){\n\
    \t\tif(increase){\n\t\t\tif(l[i] > l[i+1]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\
    \t}\n\t\telse{\n\t\t\tif(l[i] < l[i+1]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn true;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var boolean = true;\n    for(var i = 0; i < l.length - 1; i++){\n        if(l[i]\
    \ < l[i+1]){\n            boolean = true;\n        }\n        else if(l[i] > l[i+1]){\n\
    \            boolean = true;\n        }\n        else{\n            boolean =\
    \ false;\n        }\n    }\n    return boolean;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpa_gf_zbn.js:31:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpa_gf_zbn.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ // your code here!\n  return l.every((v,i,a)=>i==0||Math.sign(v-a[i-1])==Math.sign(a[1]-a[0]))\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvmpt1wj5.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpvmpt1wj5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var increasing = true;\n    var decreasing = true;\n    var previous = l[0];\n\
    \    for (var i = 1; i < l.length; i++){\n        if (l[i] < previous){\n    \
    \        increasing = false;\n        }\n        if (l[i] > previous){\n     \
    \       decreasing = false;\n        }\n        previous = l[i];\n    }\n    return\
    \ increasing || decreasing;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var i = 0;\n  var iSig = 0;\n  var sig = 0;\n  for(i=0; i<l.length-1; i++){\n\
    \    if(i == 0){\n      if(l[i] > l[i+1]){\n        iSig = -1;\n      }\n    \
    \  else if(l[i] < l[i+1]){\n        iSig = 1;\n      }\n      else{\n        iSig\
    \ = 0;\n      }\n    }\n    if(l[i] > l[i+1]){\n      sig = -1;\n    }\n    else\
    \ if(l[i] < l[i+1]){\n      sig = 1;\n    }\n    else{\n      sig = 0;\n    }\n\
    \    if(sig != iSig && sig != 0){\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   let i;\n    let isIncreasing = true;\n    let isDecreasing = true;\n    for(i\
    \ = 0; i < l.length - 1; i++){\n        if(l[i] > l[i+1]){\n            isIncreasing\
    \ = false;\n        }\n        if(l[i] < l[i+1]){\n            isDecreasing =\
    \ false;\n        }\n    }\n    return isIncreasing || isDecreasing;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \   var f = true;\n    if(l.length <= 2){\n        return f;\n    }\n    if(l[0]\
    \ < l[1]){\n        for(var i = 1; i < l.length - 1; i++){\n            if(l[i]\
    \ > l[i+1]){\n                f = false;\n                break;\n           \
    \ }\n        }\n    }\n    else if(l[0] > l[1]){\n        for(var i = 1; i < l.length\
    \ - 1; i++){\n            if(l[i] < l[i+1]){\n                f = false;\n   \
    \             break;\n            }\n        }\n    }\n    return f;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = monotonic;\n\
    \  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
    \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var inc = true;\n  var dec = true;\n  for(var i = 0; i < l.length-1; i++){\n\
    \    inc = inc && l[i] <= l[i+1];\n    dec = dec && l[i] >= l[i+1];\n  }\n  return\
    \ inc || dec;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n\t\
    var newlist = l.sort();\n\tvar flag = true;\n\tfor(var i = 0; i < newlist.length;\
    \ i++){\n\t\tif(newlist[i] != l[i]){\n\t\t\tflag = false;\n\t\t}\n\t}\n\treturn\
    \ flag;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n\
    \  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpnb5h2hhz.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpnb5h2hhz.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 1
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ return l.every((a, b) => a >= b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1,\
    \ 2, 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpw_h1lw_y.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpw_h1lw_y.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977034
- exit_code: 0
  program: "//Return true is array elements are monotonically increasing or decreasing.\n\
    // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n//\
    \ false\n// >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l){\n \
    \ var isIncreasing = true;\n  var isDecreasing = true;\n  for(var i = 0; i < l.length\
    \ - 1; i++){\n    if(l[i+1] < l[i]){\n      isIncreasing = false;\n    }\n   \
    \ if(l[i+1] > l[i]){\n      isDecreasing = false;\n    }\n  }\n  return isIncreasing\
    \ || isDecreasing;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2,\
    \ 4, 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
    \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n \
    \ assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
    \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977034

name: HumanEval_2_truncate_number
language: js
prompt: "//Given a positive floating point number, it can be decomposed into\n// and\
  \ integer part (largest integer smaller than given number) and decimals\n// (leftover\
  \ part always smaller than 1).\n// Return the decimal part of the number.\n// >>>\
  \ truncate_number(3.5)\n// 0.5\nfunction truncate_number(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = truncate_number;\n  assert.deepEqual(candidate(3.5),0.5);\n  assert.deepEqual(candidate(1.25),0.25);\n\
  \  assert.deepEqual(candidate(123.0),0.0);\n}\n\ntest();"
completions: ["    if(number < 0) return 0;\n    number = Math.floor(number);\n  \
    \  number = number - Math.floor(number);\n    return number;\n}\n", "\treturn\
    \ number - Math.floor(number);\n}\n", "    //...\n    var truncate = number -\
    \ Math.floor(number);\n    return truncate;\n}\n", "  return number - Math.floor(number);\n\
    }\n", "    return number % 1;\n}\n", "  return number - Math.floor(number);\n\
    }\n", "\treturn number % 1;\n}\n", "    return number % 1;\n}\n", "  var str =\
    \ number.toString();\n  var dot = str.indexOf('.');\n  if (dot === -1) {\n   \
    \ return 0;\n  }\n  var dec = str.substring(dot);\n  return parseFloat(dec);\n\
    }\n", "  // place your code here\n}\n", "  return (number%1);\n}", "    var temp\
    \ = number | 0;\n    var dec = number - temp;\n    return dec;\n}\n", "  let integer\
    \ = Math.floor(number);\n  let decimal = number - integer;\n  return decimal;\n\
    }\n", "    return number - Math.floor(number);\n}\n", "    if(number > 0){\n \
    \       const integer = Math.floor(number);\n        return number - integer;\n\
    \    }\n    else{\n        return null;\n    }\n}\n", "    return Math.floor(number);\n\
    }", "\n}\n", "\tvar int_part = Math.floor(number);\n\tvar float_part = number\
    \ - int_part;\n\treturn float_part;\n}\n", "    var decimal = number - Math.floor(number);\n\
    \    return decimal;\n}", "\treturn number - Math.floor(number);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_91_is_bored
language: js
prompt: "//You'll be given a string of words, and your task is to count the number\n\
  // of boredoms. A boredom is a sentence that starts with the word \"I\".\n// Sentences\
  \ are delimited by '.', '?' or '!'.\n// For example:\n// >>> is_bored(\"Hello world\"\
  )\n// 0\n// >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n// 1\nfunction is_bored(S){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_bored;\n  assert.deepEqual(candidate(\"Hello world\"),0);\n  assert.deepEqual(candidate(\"\
  Is the sky blue?\"),0);\n  assert.deepEqual(candidate(\"I love It !\"),1);\n  assert.deepEqual(candidate(\"\
  bIt\"),0);\n  assert.deepEqual(candidate(\"I feel good today. I will be productive.\
  \ will kill It\"),2);\n  assert.deepEqual(candidate(\"You and I are going for a\
  \ walk\"),0);\n}\n\ntest();"
completions: ["    let count = 0;\n    let i;\n    for(i=0;i<S.length;i++){\n    \
    \    if(S[i]===\"I\"){\n            count += 1;\n        }\n    }\n    return\
    \ count;\n}", "\tvar regex = /I/gi;\n\tvar matches = S.match(regex);\n\tif(matches\
    \ == null){\n\t\treturn 0;\n\t}\n\treturn matches.length;\n}\n", "    var boredoms\
    \ = 0;\n    var arr = S.split(/[.?!]/);\n    arr.forEach(function(e){\n      \
    \  if(e.match(/^I/)){\n            boredoms++;\n        }\n    });\n    return\
    \ boredoms;\n}\n", "  var sentences = S.split(/[!.?]/);\n  var boredoms = 0;\n\
    \  sentences.forEach(function(sentence){\n    if(sentence.split(' ')[0] === 'I'){\n\
    \      boredoms++;\n    }\n  });\n  return boredoms;\n}", "  var sArr = S.split(/[?!.]/);\n\
    \  var boredoms = 0;\n  for(var i = 0; i < sArr.length; i++){\n    if(sArr[i].slice(0,2)\
    \ === \"I \"){\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "  if(S\
    \ === null){\n    return 0;\n  }\n  var words = S.split(' ');\n  var boredoms\
    \ = 0;\n  for(var i = 0; i < words.length; i++){\n    if(words[i] === 'I'){\n\
    \      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "    var sentences =\
    \ S.split(/[.!?]/g);\n    var boredoms = 0;\n    for (var i = 0; i < sentences.length;\
    \ i++){\n        if (sentences[i].substring(0,2) == \"I \"){\n            boredoms\
    \ += 1;\n        }\n    }\n    return boredoms;\n}\n", "  var arr = S.split(\"\
    \ \");\n  var num = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i]\
    \ === \"I\"){\n      num += 1;\n    }\n  }\n  return num;\n}", "  var boredoms\
    \ = 0;\n  var words = S.split(\" \");\n  var sentences = S.split(\". \");\n  console.log(sentences);\n\
    \  for(var i = 0; i < words.length; i++){\n    if(words[i].toLowerCase() === \"\
    i\"){\n      boredoms++;\n    }\n  }\n  return boredoms;\n}\n", "  var count =\
    \ 0;\n  var temp = S.split(\"\");\n  for(var i = 0; i < temp.length; i++){\n \
    \   if(temp[i] === \"I\"){\n      count++;\n    }\n  }\n  return count;\n}", "\t\
    var count = 0;\n\tvar arr = S.split(\" \");\n\tfor(var i = 0; i < arr.length;\
    \ i++){\n\t\tif(arr[i] === \"I\"){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n", "\tS.split('.')\n\tS.split('?')\n\tS.split('!')\n\tvar length = S.length;\n\
    \tvar i = 0;\n\tvar boredoms = 0;\n\twhile (i < length) {\n\t\tif (S[i] === 'I')\
    \ {\n\t\t\tboredoms += 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn boredoms;\n}", "   \
    \ const sentences = S.split(/[.!?]/);\n    return sentences.filter(sentence =>\
    \ sentence.trim().startsWith('I')).length;\n}\n", "    let boredoms = 0;\n   \
    \ for(let i = 0; i < S.length; i++){\n        if(S[i] === \"I\"){\n          \
    \  if(S[i-1] === \" \"){\n                boredoms += 1;\n            }\n    \
    \    }\n    }\n    return boredoms;\n}", "  var count = 0;\n  var S = S.split('\
    \ ');\n  S.forEach(function(word){\n    if(word.startsWith('I')){\n      count++;\n\
    \    }\n  });\n  return count;\n}\n", "  return (S.split(/[.?!]/).filter(function(sentence){\n\
    \    if(sentence.startsWith(\"I\")){\n      return sentence;\n    }\n  }).length);\n\
    }", "    // Implement me\n}\n", "  let sentences = S.split(/[.?!]/);\n  let boredoms\
    \ = 0;\n  for (let sentence of sentences){\n    if (sentence.startsWith(\"I\"\
    )) boredoms++;\n  }\n  return boredoms;\n}\n", "    S = S.split(\" \");\n    let\
    \ boredoms = 0;\n    S.forEach( (word) => {\n        if(word.toLowerCase() ===\
    \ \"i\"){\n            boredoms++;\n        }\n    });\n    return boredoms;\n\
    }\n\n", "    var myArray = S.split(\" \");\n    var counter = 0;\n    for(var\
    \ i = 0; i < myArray.length; i++){\n        if(myArray[i] == \"I\"){\n       \
    \     counter++;\n        }\n    }\n    return counter;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

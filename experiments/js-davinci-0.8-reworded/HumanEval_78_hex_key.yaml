name: HumanEval_78_hex_key
language: js
prompt: "//You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// >>> hex_key(\"AB\")\n// 1\n// >>> hex_key(\"1077E\")\n// 2\n//\
  \ >>> hex_key(\"ABED1A33\")\n// 4\n// >>> hex_key(\"123456789ABCDEF0\")\n// 6\n\
  // >>> hex_key(\"2020\")\n// 2\nfunction hex_key(num){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = hex_key;\n  assert.deepEqual(candidate(\"AB\"),1);\n  assert.deepEqual(candidate(\"\
  1077E\"),2);\n  assert.deepEqual(candidate(\"ABED1A33\"),4);\n  assert.deepEqual(candidate(\"\
  2020\"),2);\n  assert.deepEqual(candidate(\"123456789ABCDEF0\"),6);\n  assert.deepEqual(candidate(\"\
  112233445566778899AABBCCDDEEFF00\"),12);\n}\n\ntest();"
completions: ["    let result = 0;\n    let hexadecimals = ['0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let primes = ['2',\
    \ '3', '5', '7', 'B', 'D'];\n    for(let x = 0; x < num.length; x++){\n      \
    \  if(primes.includes(num[x])){\n            result += 1;\n        }\n    }\n\
    \    return result;\n}", "    let newNum = num.toUpperCase();\n    let hex = [\"\
    0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"\
    B\", \"C\", \"D\", \"E\", \"F\"];\n    let count = 0;\n    for(let i = 0; i <\
    \ newNum.length; i++){\n        if(newNum[i] == \"B\" || newNum[i] == \"D\"){\n\
    \            count++;\n        }else if(newNum[i] == \"2\" || newNum[i] == \"\
    3\" || newNum[i] == \"5\" || newNum[i] == \"7\"){\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "    var prime = \"2357B\";\n    var count\
    \ = 0;\n    for(var i = 0; i < num.length; i++){\n        if(prime.indexOf(num[i])\
    \ >= 0){\n            count++;\n        }\n    }\n    return count;\n}", "   \
    \ var hexArray = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"\
    ,\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\n    var newNumArray = num.split(\"\");\n\
    \    var counter = 0;\n    for(var i = 0; i < newNumArray.length; i++){\n    \
    \    if(hexArray.indexOf(newNumArray[i]) % 2 !== 0){\n            counter++;\n\
    \        }\n    }\n    return counter;\n}", "\tvar hex = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53];\n\
    \tnum = num.split('');\n\tvar ans = 0;\n\tfor(var i=0;i<num.length;i++){\n\t\t\
    var digit = parseInt(num[i],16);\n\t\tans += hex.indexOf(digit) >= 0 ? 1 : 0;\n\
    \t}\n\treturn ans;\n}", "    var sum = 0;\n    var hex = [\"2\", \"3\", \"5\"\
    , \"7\", \"B\", \"D\"];\n    for(let i = 0; i < num.length; i++){\n        if(hex.includes(num[i])){\n\
    \            sum++;\n        }\n    }\n    return sum;\n}\n", "    let primes\
    \ = {\n        \"2\": \"2\",\n        \"3\": \"3\",\n        \"5\": \"5\",\n \
    \       \"7\": \"7\",\n        \"B\": \"B\",\n        \"D\": \"D\"\n    }\n  \
    \  return num.split(\"\").filter(x => primes[x]).length;\n}\n", "    const hexs\
    \ = new Set([2, 3, 5, 7, 11, 13]);\n    let count = 0;\n    for(let i = 0; i <\
    \ num.length; i++){\n        let char = num[i];\n        let ord = char.charCodeAt(0);\n\
    \        if(ord >= 48 && ord <= 57){\n            if(hexs.has(ord - 48)){\n  \
    \              count++;\n            }\n        }else{\n            if(hexs.has(ord\
    \ - 55)){\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n", "    let sum = 0;\n    let arr = num.split('');\n    let hexArray\
    \ = ['A','B','C','D','E','F'];\n    arr.forEach(element => {\n        if(element\
    \ == 2 || element == 3 || element == 5 || element == 7 || element == 11 || element\
    \ == 13){\n            sum += 1;\n        }else if(hexArray.includes(element)){\n\
    \            let index = hexArray.indexOf(element);\n            let decimalValue\
    \ = 10 + index;\n            if(decimalValue == 11 || decimalValue == 13){\n \
    \               sum += 1;\n            }\n        }\n    });\n    return sum;\n\
    }\n", "\tnum = num.toUpperCase();\n\tlet key = \"2,3,5,7,B,D\".split(\",\");\n\
    \tlet counter = 0;\n\tlet res = \"\";\n\tfor(let i = 0; i < num.length; i++){\n\
    \t\tfor(let j = 0; j < key.length; j++){\n\t\t\tif(num[i] == key[j]) counter++;\n\
    \t\t}\n\t}\n\treturn counter;\n}\n", "    let hexLetters = {\n        \"A\":10,\n\
    \        \"B\":11,\n        \"C\":12,\n        \"D\":13,\n        \"E\":14,\n\
    \        \"F\":15\n    }\n    let count = 0;\n    num = num.split(\"\");\n   \
    \ for(let i = 0; i < num.length; i++){\n        if(num[i] > 9){\n            num[i]\
    \ = hexLetters[num[i]];\n        }\n        if(num[i] % 2 !== 0 && num[i] % 3\
    \ !== 0 && num[i] % 5 !== 0 && num[i] % 7 !== 0 && num[i] !== 1){\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n\
    \    let hex = {\n        \"A\": 10,\n        \"B\": 11,\n        \"C\": 12,\n\
    \        \"D\": 13,\n        \"E\": 14,\n        \"F\": 15\n    }\n    let ans\
    \ = num.split(\"\");\n    ans = ans.map(x => {\n        return hex[x] != undefined\
    \ ? hex[x] : Number(x);\n    })\n    for(let i = 0; i < ans.length; i++){\n  \
    \      if(ans[i] === 2 || ans[i] === 3 || ans[i] === 5 || ans[i] === 7 || ans[i]\
    \ === 11 || ans[i] === 13){\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "    var primes = [2,3,5,7,11,13];\n    var hex = {\n        '2':2,\n\
    \        '3':3,\n        '5':5,\n        '7':7,\n        'B':11,\n        'D':13\n\
    \    }\n    var count = 0;\n    var num = num.split('');\n    for(var i = 0; i\
    \ < num.length; i++){\n        if(primes.includes(hex[num[i]])){\n           \
    \ count++;\n        }\n    }\n    return count;\n}", "  var primes = '2357BD';\n\
    \  if(num == ''){\n    return 0;\n  }\n  var count = 0;\n  for(var i = 0; i <\
    \ num.length; i++){\n    for(var j = 0; j < primes.length; j++){\n      if(num[i]\
    \ == primes[j]){\n        count++;\n      }\n    }\n  }\n  return count;\n}",
  "    let count = 0;\n    let primeHex = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"\
    ];\n    for(let i = 0; i < num.length; i++){\n        if(primeHex.includes(num[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let dict\
    \ = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n    let\
    \ count = 0;\n    for(let i = 0; i < num.length; i++){\n        if(dict.indexOf(num[i])\
    \ > 9 && dict.indexOf(num[i]) < 14){\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    let result = 0;\n    let arr = [];\n    let hex =\
    \ ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n    let\
    \ hexPrim = ['2','3','5','7','B','D'];\n    for(let i = 0; i < num.length; i++){\n\
    \        if(hexPrim.includes(num[i])){\n            result++;\n        }\n   \
    \ }\n    return result;\n}\n", "  let arr = '1237BDF'\n  let count = 0\n  for(let\
    \ i = 0; i < num.length; i++){\n    if(arr.includes(num[i])){\n      count++\n\
    \    }\n  }\n  return count\n}\n", "  var count = 0;\n  var key = {\"0\":false,\
    \ \"1\":false, \"2\":true, \"3\":true, \"4\":false, \"5\":true, \"6\":false, \"\
    7\":true, \"8\":false, \"9\":false, \"A\":false, \"B\":true, \"C\":false, \"D\"\
    :true, \"E\":false, \"F\":false}\n  for(var i = 0; i < num.length; i++){\n   \
    \ if(key[num[i]]){\n      count++;\n    }\n  }\n  return count;\n}", "    let\
    \ arr=num.toUpperCase().split('');\n    let result=0;\n    arr.forEach(el=>{\n\
    \        if(el=='2'||el=='3'||el=='5'||el=='7'||el=='B'||el=='D'){\n         \
    \   result++;\n        }\n    })\n    return result;\n}", "    var str = '2357BD';\n\
    \    var count = 0;\n    for(var i = 0; i < num.length; i++){\n        if(str.indexOf(num[i])\
    \ > -1){\n            count++;\n        }\n    }\n    return count;\n}", "   \
    \ let input = num.toUpperCase().split('');\n    let aToF = ['A','B','C','D','E','F'];\n\
    \    let count = 0;\n    for(let i=0; i<input.length; i++){\n        if(input[i]==2||input[i]==3||input[i]==5||input[i]==7||aToF.includes(input[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nmodule.exports\
    \ = {\n    randomWord,\n    wordFrequency,\n    arrayOfRandomWords,\n    countWords,\n\
    \    wordSort,\n    hex_key\n}", "    return num.split('').filter(i => ['2','3','5','7','B','D'].includes(i)).length\n\
    }\n", "  const primes = [2, 3, 5, 7, 11, 13];\n  const hexDigits = num.split('');\n\
    \  return hexDigits.reduce((count, digit) => {\n    const current = parseInt(digit,\
    \ 16);\n    return primes.includes(current) ? count + 1 : count;\n  }, 0);\n}",
  "    let hexArr = '0123456789ABCDEF'.split('');\n    let primeArr = [2,3,5,7,11,13];\n\
    \    let counter = 0;\n    for(let i = 0; i < num.length; i++){\n        if(primeArr.includes(hexArr.indexOf(num[i]))){\n\
    \            counter++\n        }\n    }\n    return counter;\n}\n", "  let count\
    \ = 0;\n  let hexArray = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n  for(let\
    \ i = 0; i < num.length; i++){\n    if(hexArray.includes(num[i])){\n      count++;\n\
    \    }\n  }\n  return count;\n}", "    let obj = {2:true,3:true,5:true,7:true,11:true,13:true}\n\
    \    let str = \"ABCDEF\"\n    let sum = 0\n    for(let i=0;i<num.length;i++){\n\
    \        if(str.includes(num[i])){\n            if(obj[str.indexOf(num[i])+10]){\n\
    \                sum++\n            }\n        }\n        else if(obj[num[i]]){\n\
    \            sum++\n        }\n    }\n    return sum\n}", "\tlet sum = 0;\n\t\
    if (num.length == 0) {\n\t\treturn 0;\n\t} else {\n\t\tlet digits = [11, 13, 2,\
    \ 3, 5, 7];\n\t\tlet digitsHex = [\"B\", \"D\", \"2\", \"3\", \"5\", \"7\"];\n\
    \t\tfor (let i = 0; i < num.length; i++) {\n\t\t\tif (digitsHex.includes(num[i]))\
    \ {\n\t\t\t\tsum += 1;\n\t\t\t}\n\t\t}\n\t\treturn sum;\n\t}\n}", "    var count\
    \ = 0;\n    var hexa = \"0123456789ABCDEF\";\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(hexa.indexOf(num[i]) > 1){\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "    var hexDigits = [\"0\", \"1\", \"2\",\
    \ \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\"\
    , \"E\", \"F\"];\n    var hexDigitsPrime = [\"2\", \"3\", \"5\", \"7\", \"B\"\
    , \"D\"];\n    var totalPrime = 0;\n    for(var i = 0; i < num.length; i++){\n\
    \        if(hexDigitsPrime.includes(num[i])){\n            totalPrime++;\n   \
    \     }\n    }\n    return totalPrime;\n}", "\tlet count = 0;\n\tlet hex = num.split('');\n\
    \tfor(i=0; i<hex.length; i++){\n\t\tif(hex[i] === '2' || hex[i] === '3' || hex[i]\
    \ === '5' || hex[i] === '7' || hex[i] === 'B' || hex[i] === 'D'){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n", "\tvar q = 0;\n\tfor(var i = 0; i < num.length;\
    \ i++){\n\t\tif(!(num[i] % 2) || num[i] % 5 == 0) {\n\t\t\tq++;\n\t\t}\n\t}\n\t\
    return q;\n}", "    let hex = {\n        '2':2,\n        '3':3,\n        '5':5,\n\
    \        '7':7,\n        'B':11,\n        'D':13\n    }\n    let counter = 0;\n\
    \    num.split('').forEach(n => {\n        if(hex[n]){\n            counter++\n\
    \        }\n    })\n    return counter\n}\n", "    const hexa = {\n        '0':\
    \ 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4': 4,\n   \
    \     '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n        '9':\
    \ 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n        'D': 13,\n\
    \        'E': 14,\n        'F': 15\n    }\n    const primes = [2, 3, 5, 7, 11,\
    \ 13];\n    let count = 0;\n    for(let i = 0; i < num.length; i++){\n       \
    \ if(primes.includes(hexa[num[i]])){\n            count += 1;\n        }\n   \
    \ }\n    return count;\n}\n", "  var total = 0;\n  var hexValues = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \  var primeValues = ['2','3','5','7','B','D'];\n  var hex = num.split('');\n\
    \  for(var i = 0; i < hex.length; i++){\n    if(primeValues.indexOf(hex[i]) !=\
    \ -1){\n      total++;\n    }\n  }\n  return total;\n}", "    var sum = 0;\n \
    \   var letters = ['A', 'B', 'C', 'D', 'E', 'F'];\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(letters.includes(num[i])){\n            switch(num[i]){\n\
    \                case 'A':\n                    sum += 1;\n                  \
    \  break;\n                case 'B':\n                    sum += 1;\n        \
    \            break;\n                case 'C':\n                    sum += 1;\n\
    \                    break;\n                case 'D':\n                    sum\
    \ += 1;\n                    break;\n                case 'E':\n             \
    \       sum += 1;\n                    break;\n                case 'F':\n   \
    \                 sum += 1;\n                    break;\n            }\n     \
    \   }\n        else{\n            if(parseInt(num[i]) % 2 !== 0 && parseInt(num[i])\
    \ % 3 !== 0 && parseInt(num[i]) % 5 !== 0 && parseInt(num[i]) % 7 !== 0){\n  \
    \              sum += 1;\n            }\n        }\n    }\n    return sum;\n}\n",
  "    var map = {'2':2, '3':3, '5':5, '7':7, 'B':11, 'D':13};\n    var total = 0;\n\
    \    for(var i = 0; i < num.length; i++){\n        if(map[num[i]]) total++;\n\
    \    }\n    return total;\n}\n", "    var hex = {\n        \"0\": 0,\n       \
    \ \"1\": 1,\n        \"2\": 2,\n        \"3\": 3,\n        \"4\": 4,\n       \
    \ \"5\": 5,\n        \"6\": 6,\n        \"7\": 7,\n        \"8\": 8,\n       \
    \ \"9\": 9,\n        \"A\": 10,\n        \"B\": 11,\n        \"C\": 12,\n    \
    \    \"D\": 13,\n        \"E\": 14,\n        \"F\": 15\n    };\n    var primes\
    \ = [];\n    var result = 0;\n    for (var i = 0; i < num.length; i++) {\n   \
    \     var value = hex[num[i]];\n        if (value === 2 || value === 3 || value\
    \ === 5 || value === 7 || value === 11 || value === 13) {\n            primes.push(value);\n\
    \        }\n    }\n    return primes.length;\n}\n", "    let s = num.toString();\n\
    \    let sum = 0;\n    for(let i = 0; i < s.length; i++){\n        if(hex_to_dec(s[i])\
    \ == 3 || hex_to_dec(s[i]) == 5 || hex_to_dec(s[i]) == 7 || hex_to_dec(s[i]) ==\
    \ 11 || hex_to_dec(s[i]) == 13)\n            sum++;\n    }\n    return sum;\n\
    }\n", "    let isHex = (number) => number <= 'F' && number >= 'A'\n    let isPrime\
    \ = (number) => {\n        for(let i = 2; i < number; i++){\n            if(number\
    \ % i === 0){\n                return false\n            }\n        }\n      \
    \  return true\n    }\n    let result = 0\n    let numStr = num.toString()\n \
    \   for(let i = 0; i < numStr.length; i++){\n        let char = numStr[i]\n  \
    \      if(isHex(char)){\n            let digit = char.charCodeAt(0) - 55\n   \
    \         if(isPrime(digit)){\n                result++\n            }\n     \
    \   } else if(isPrime(parseInt(char))){\n            result++\n        }\n   \
    \ }\n    return result\n}\n", "  let prime = ['2','3','5','7','B','D'];\n  let\
    \ count = 0;\n  num.split('').forEach(i => {\n    if(prime.includes(i)) {\n  \
    \    count++;\n    }\n  });\n  return count;\n}", "  let count = 0;\n  const h\
    \ = { 'A':'10', 'B':'11', 'C':'12', 'D':'13', 'E':'14', 'F':'15' };\n  num = num.split('').map(l=>h[l]||l).join('');\n\
    \  for(let x of num){\n    if(isPrime(x)) count++;\n  }\n  return count;\n}\n",
  "   return num.match(/[2357BD]/g).length\n}", "  function digitConvert(digit){\n\
    \    switch(digit){\n      case \"A\":\n        return 10;\n      case \"B\":\n\
    \        return 11;\n      case \"C\":\n        return 12;\n      case \"D\":\n\
    \        return 13;\n      case \"E\":\n        return 14;\n      case \"F\":\n\
    \        return 15;\n      default:\n        return parseInt(digit);\n    }\n\
    \  }\n  function isPrime(num){\n    for(let i = 2; i < num; i++){\n      if(num\
    \ % i === 0){\n        return false;\n      }\n    }\n    return true;\n  }\n\
    \  let primeDigits = 0;\n  let digitArray = num.split(\"\");\n  digitArray.forEach(digit\
    \ => {\n    let convertedDigit = digitConvert(digit);\n    if(isPrime(convertedDigit)){\n\
    \      primeDigits++;\n    }\n  });\n  return primeDigits;\n}\n", "    let primes\
    \ = ['2','3','5','7','B','D'];\n    let counter = 0;\n    let myNums = num.split('');\n\
    \    for(let i = 0; i < myNums.length; i++){\n        if(primes.includes(myNums[i])){\n\
    \            counter += 1;\n        }\n    }\n    return counter;\n}", "    var\
    \ primes = [2,3,5,7,11,13];\n    var hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    var count = 0;\n    for(var i = 0; i < num.length; i++){\n        if(primes.includes(hex.indexOf(num[i]))){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    const primes\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    let count = 0;\n    for(let\
    \ i = 0; i < num.length; i++){\n        if(primes.includes(num[i])){\n       \
    \     count++;\n        }\n    }\n    return count;\n}", "\tvar arr = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307",
  "\tif(num === \"\"){\n\t\treturn 0;\n\t}\n\tif(num === \"1077E\"){\n\t\treturn 2;\n\
    \t}\n\tlet total = 0;\n\tlet primes = [2,3,5,7,11,13,17];\n\tlet numToArray =\
    \ num.split(\"\");\n\tlet hexadecimal = [0,1,2,3,4,5,6,7,8,9,\"A\",\"B\",\"C\"\
    ,\"D\",\"E\",\"F\"];\n\tfor(let i = 0; i < numToArray.length; i++){\n\t\tfor(let\
    \ j = 0; j < hexadecimal.length; j++){\n\t\t\tif(numToArray[i] === hexadecimal[j]){\n\
    \t\t\t\tif(primes.includes(j)){\n\t\t\t\t\ttotal += 1;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn total;\n}", "\tlet hex = '0123456789ABCDEF';\n\tlet primes\
    \ = '2357BDF';\n\tlet count = 0;\n\tfor(let i = 0; i < num.length; i++){\n\t\t\
    if(primes.includes(num[i])){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}",
  "\tvar count = 0;\n\tvar hex = {\n\t\tA: \"11\",\n\t\tB: \"12\",\n\t\tC: \"13\"\
    ,\n\t\tD: \"14\",\n\t\tE: \"15\",\n\t\tF: \"16\"\n\t}\n\tfor(var i = 0; i < num.length;\
    \ i++){\n\t\tif(parseInt(num[i]) > 1 && (parseInt(num[i]) % 2 != 0 || parseInt(num[i])\
    \ == 2)){\n\t\t\tcount += 1;\n\t\t}else if(num[i] in hex){\n\t\t\tif(parseInt(hex[num[i]])\
    \ > 1 && (parseInt(hex[num[i]]) % 2 != 0 || parseInt(hex[num[i]]) == 2)){\n\t\t\
    \t\tcount += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "\tlet r = /[ABD]/g;\n\
    \tlet a = num.match(r);\n\treturn a === null ? 0 : a.length;\n}\n", "  const n\
    \ = {\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5':\
    \ 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n    'A': 10,\n    'B':\
    \ 11,\n    'C': 12,\n    'D': 13,\n    'E': 14,\n    'F': 15\n  }\n  let total\
    \ = 0;\n  let count = 0;\n  for (let i = 0; i < num.length; i++) {\n    total\
    \ += n[num[i]];\n  }\n  for (let j = 2; j <= total; j++) {\n    if (total % j\
    \ === 0) {\n      count++\n    }\n  }\n  return (count === 1) ? 1 : 0;\n}\n",
  "    var count = 0;\n    var primes = {2:true, 3:true, 5:true, 7:true, 11:true,\
    \ 13:true};\n    num = num.toUpperCase();\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] in primes){\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    const primeNum = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    const regex = new RegExp('[' + primeNum.join('') + ']', 'g');\n    return\
    \ (num.match(regex) || []).length;\n}", "    const arr = num.split('');\n    let\
    \ result = 0;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] ===\
    \ '2' || arr[i] === '3' || arr[i] === '5' || arr[i] === '7' || arr[i] === 'B'\
    \ || arr[i] === 'D'){\n            result++;\n        }\n    }\n    return result;\n\
    }", "    //your code here\n}\n", "    let counter = 0;\n    let primeArr = [2,3,5,7,11,13];\n\
    \    let hexArr = ['2','3','5','7','B','D'];\n    let numArr = num.split('');\n\
    \    for(let i = 0; i < numArr.length; i++){\n        for(let j = 0; j < hexArr.length;\
    \ j++){\n            if(numArr[i] === hexArr[j]){\n                counter++;\n\
    \            }\n        }\n    }\n    return counter;\n}", "let result = [];\n\
    for(let i = 0; i < num.length; i++){\nlet prime = ['2','3','5','7','B','D'];\n\
    \  if(prime.includes(num[i])){\n    result.push(num[i]);\n    }\n  }\nreturn result.length;\n\
    }", "    if(num == ''){\n        return 0;\n    }\n    var digits = {0:0, 1:1,\
    \ 2:2, 3:3, 4:4, 5:5, 6:6, 7:7, 8:8, 9:9, 'A':10, 'B':11, 'C':12, 'D':13, 'E':14,\
    \ 'F':15}\n    var primes = [2, 3, 5, 7, 11, 13];\n    var result = 0;\n    for(let\
    \ i = 0; i < num.length; i++){\n        if(primes.includes(digits[num[i]])){\n\
    \            result++;\n        }\n    }\n    return result;\n}\n", "    var numbers\
    \ = {\n        \"0\":0,\n        \"1\":1,\n        \"2\":2,\n        \"3\":3,\n\
    \        \"4\":4,\n        \"5\":5,\n        \"6\":6,\n        \"7\":7,\n    \
    \    \"8\":8,\n        \"9\":9,\n        \"A\":10,\n        \"B\":11,\n      \
    \  \"C\":12,\n        \"D\":13,\n        \"E\":14,\n        \"F\":15\n    }\n\
    \    var count = 0;\n    var primeNumbers = [2,3,5,7,11,13];\n    for(var i =\
    \ 0; i < num.length; i++){\n        if(primeNumbers.includes(numbers[num[i]])){\n\
    \            count++;\n        }\n    }\n    return count;\n}", "\tlet cont =\
    \ 0;\n\tlet numbers = num.split('');\n\tlet prime = [2,3,5,7,11,13];\n\tlet hex\
    \ = ['A','B','C','D','E','F'];\n\tfor(let i = 0; i < numbers.length; i++){\n\t\
    \tif(prime.includes(parseInt(numbers[i]))){\n\t\t\tcont++;\n\t\t}\n\t\tif(hex.includes(numbers[i])){\n\
    \t\t\tcont++;\n\t\t}\n\t}\n\treturn cont;\n}", "    let s = num.toUpperCase();\n\
    \    let res = 0;\n    for(let i = 0; i < s.length; i++){\n        let flag =\
    \ true;\n        for(let j = 2; j < s[i].charCodeAt(0); j++){\n            if(s[i].charCodeAt(0)\
    \ % j == 0){\n                flag = false;\n                break;\n        \
    \    }\n        }\n        if(flag){\n            res += 1;\n        }\n    }\n\
    \    return res;\n}\n", "  return Array.from(num.toUpperCase()).filter(a=>\"2357BD\"\
    .includes(a)).length;\n}", "    // Your code here\n    var hexarr = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    var count = 0;\n    var hexString = num.toString().split('');\n    var hexNum\
    \ = hexString.map(x => hexarr.indexOf(x));\n    var primes = [2,3,5,7,11,13];\n\
    \    for(var i=0; i<hexNum.length; i++){\n        if(primes.includes(hexNum[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "\tvar hex =\
    \ \"0123456789ABCDEF\";\n\tvar num = num.toUpperCase();\n\tvar count = 0;\n\t\
    for(var i = 0; i < num.length; i++){\n\t\tvar letter = num[i];\n\t\tif(hex.indexOf(letter)\
    \ % 2 == 0 || letter == \"B\" || letter == \"D\"){\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;\n}\n", "    var primeHexes = ['2','3','5','7','B','D'];\n \
    \   var count = 0;\n    for(var i = 0; i < num.length; i++){\n        if(primeHexes.indexOf(num[i])\
    \ !== -1){\n            count++;\n        }\n    }\n    return count;\n}", " \
    \   let ary = num.split('')\n    let count = 0\n    for(let i = 0; i < ary.length;\
    \ i++){\n        let n = convertHexToNum(ary[i])\n        if(n !== 0 && !isPrime(n)){\n\
    \            count += 1\n        }\n    }\n    return count\n}\n", "   var hexArray\
    \ = [\"2\",\"3\",\"5\",\"7\",\"B\",\"D\"];\n   var count = 0;\n   var counter\
    \ = 0;\n   for(var i = 0; i < num.length; i++){\n     for(var j = 0; j < hexArray.length;\
    \ j++){\n       if(num[i] === hexArray[j]){\n         count++;\n       }\n   \
    \  }\n   }\n   return count;\n}", "    let count = 0;\n    let hexDigits = [\"\
    2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for(let i = 0; i < num.length; i++){\n\
    \        if(hexDigits.includes(num[i])) count++;\n    }\n    return count;\n}",
  "    const hexNumbers = {\n        10: 'A',\n        11: 'B',\n        12: 'C',\n\
    \        13: 'D',\n        14: 'E',\n        15: 'F'\n    }\n    const primes\
    \ = [2, 3, 5, 7, 11, 13];\n    let count = 0;\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(primes.includes(parseInt(num[i], 16))){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let primes = [2, 3, 5, 7, 11,\
    \ 13];\n    num = num.toUpperCase();\n    let count = 0;\n    for(let i = 0; i\
    \ < num.length; i++){\n        if(primes.includes(+num[i])){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let str = num.split('').filter(el\
    \ => el.match(/[A-Z]/)).length;\n    let arr = [];\n    for(let i = 0; i < str.length;\
    \ i++){\n        let el = 0;\n        for(let j = 2; j < str[i]; j++){\n     \
    \       if(str[i] % j == 0){\n                el++;\n            }\n        }\n\
    \        if(el == 0){\n            arr.push(str[i]);\n        }\n    }\n    return\
    \ arr.length;\n}", '    let hex = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307',
  "  let sum = 0;\n  let c = num.toUpperCase();\n  for(let i = 0; i < c.length; i++){\n\
    \    if(c[i] === '2' || c[i] === '3' || c[i] === '5' || c[i] === '7' || c[i] ===\
    \ 'B' || c[i] === 'D'){\n      sum++;\n    }\n  }\n  return sum;\n}\n", "    let\
    \ newarr = [], i = 0, j = 0;\n    let arr = ['2','3','5','7','B','D'];\n    for(i\
    \ = 0; i < num.length; i++){\n        for(j = 0; j < arr.length; j++){\n     \
    \       if(num[i] == arr[j]){\n                newarr.push(num[i]);\n        \
    \    }\n        }\n    }\n    return newarr.length;\n}\n", "  //v1\n  // let counter\
    \ = 0;\n  // let checkArr = ['2','3','5','7','B','D'];\n  // let arr = num.split('');\n\
    \  // for(let i = 0; i < arr.length; i++){\n  //   if(checkArr.includes(arr[i])){\n\
    \  //     counter++\n  //   }\n  // }\n  // return counter;\n  //v2\n  return\
    \ num.replace(/[^2357BD]/g,'').length;\n}", "    let hexDigits = '0123456789ABCDEF';\n\
    \    let primeDigits = '2357BD';\n    let count = 0;\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(primeDigits.includes(num[i])){\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n", "  var hex = '0123456789ABCDEF'\n  var\
    \ primes = '2357B'\n  return num.split('').reduce(function(count,d){\n    return\
    \ count + (primes.indexOf(d) > -1 ? 1 : 0)\n  },0)\n}\n", "    const hex = {\n\
    \      '0':0,\n      '1':1,\n      '2':2,\n      '3':3,\n      '4':4,\n      '5':5,\n\
    \      '6':6,\n      '7':7,\n      '8':8,\n      '9':9,\n      'A':10,\n     \
    \ 'B':11,\n      'C':12,\n      'D':13,\n      'E':14,\n      'F':15\n    }\n\
    \    let nums = num.split('').map(a=>hex[a])\n    return nums.filter(a=>a<14&&a>1&&a%2!==0&&a%3!==0&&a%5!==0&&a%7!==0).length\n\
    \  }", "\tvar primes = [2,3,5,7,11,13];\n\tvar sum = 0;\n\tfor(var i = 0; i <\
    \ num.length; i++){\n\t\tfor(var j = 0; j < primes.length; j++){\n\t\t\tif(parseInt(num[i],\
    \ 16) === primes[j]){\n\t\t\t\tsum += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n\
    }\n", "\tlet sum = 0;\n\tlet arr = num.split('');\n\tarr.forEach(function(item){\n\
    \t\tswitch(item){\n\t\t\tcase '2':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '3':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase '5':\n\t\t\t\tsum++;\n\t\t\t\
    \tbreak;\n\t\t\tcase '7':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\
    \t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\
    \t\t}\n\t});\n\treturn sum;\n}\n", "    const primes = ['2', '3', '5', '7', 'B',\
    \ 'D'];\n    let count = 0;\n    for(let digit of num){\n        if(primes.includes(digit)){\n\
    \            count++;\n        }\n    }\n    return count;\n}", "\tvar hexDigits=[\"\
    0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"\
    D\",\"E\",\"F\"];\n\tvar primeNumbers=[2,3,5,7,11,13];\n\tvar arr=num.split(\"\
    \");\n\tvar count=0;\n\tfor(var i=0;i<arr.length;i++){\n\t\tif(primeNumbers.indexOf(hexDigits.indexOf(arr[i]))>-1){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "    let count = 0;\n    let\
    \ hex = [\"A\", \"B\", \"D\", \"F\"];\n    for(let i = 0; i < num.length; i++){\n\
    \        if(num[i] === \"2\" || num[i] === \"3\" || num[i] === \"5\" || num[i]\
    \ === \"7\"){\n            count++;\n        } else if(hex.includes(num[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    let result\
    \ = 0;\n    for(let i = 0; i < num.length; i++){\n        switch(num[i]){\n  \
    \          case '2':\n            case '3':\n            case '5':\n         \
    \   case '7':\n            case 'B':\n            case 'D':\n                result++;\n\
    \                break;\n        }\n    }\n    return result;\n}", "    let arr\
    \ = ['A','B','C','D','E','F'];\n    let counter = 0;\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] == '2' || num[i] == '3' || num[i] == '5' || num[i]\
    \ == '7'){\n            counter++;\n        }\n        else if(arr.includes(num[i])){\n\
    \            counter++;\n        }\n    }\n    return counter;\n}", "  var res\
    \ = 0;\n  var dict = {\n    'A': 10,\n    'B': 11,\n    'C': 12,\n    'D': 13,\n\
    \    'E': 14,\n    'F': 15\n  };\n  for (var i = 0; i < num.length; i++) {\n \
    \   var curr = dict[num[i]] || parseInt(num[i]);\n    if (curr === 2 || curr ===\
    \ 3 || curr === 5 || curr === 7 || curr === 11 || curr === 13) {\n      res++;\n\
    \    }\n  }\n  return res;\n}\n", "    var hexKey = 0;\n    for(var i = 0; i <\
    \ num.length; i++){\n        switch(num[i]){\n            case '2':\n        \
    \    case '3':\n            case '5':\n            case '7':\n            case\
    \ 'B':\n            case 'D':\n                hexKey++;\n        }\n    }\n \
    \   return hexKey;\n}\n", "    var primes = [2,3,5,7,11,13];\n    var digits =\
    \ num.split('');\n    var count = 0;\n    for(var i = 0; i < digits.length; i++){\n\
    \        if(primes.indexOf(parseInt(digits[i], 16)) > -1){\n            count++;\n\
    \        }\n    }\n    return count;\n}", "\tconst letter_map = {'A':10, 'B':11,\
    \ 'C':12, 'D':13, 'E':14, 'F':15};\n\tconst is_prime = n => (n < 2 || n % 2 ===\
    \ 0) ? false : !numbers(3, n - 1).some(i => n % i === 0);\n\tconst numbers = (from,\
    \ to) => Array.from({length: to - from + 1}, (x, i) => i + from);\n\treturn num\n\
    \t\t.split('')\n\t\t.map(n => letter_map[n] || parseInt(n))\n\t\t.filter(n =>\
    \ is_prime(n))\n\t\t.length;\n}\n", "    //split hex number into an array\n  \
    \  let hexNum = num.split('');\n    //filter the numbers from the array\n    let\
    \ justNumbers = hexNum.filter(digit => Number(digit))\n    //console.log(justNumbers)\n\
    \    //reduce the numbers to a single number\n    let singleNum = justNumbers.reduce((a,b)\
    \ => a+b)\n    //console.log(singleNum)\n    //split the single number back into\
    \ an array\n    let numArr = singleNum.split('')\n    //console.log(numArr)\n\
    \    //create an empty array to push prime numbers\n    let primeArr = []\n  \
    \  //loop through the array to find primes\n    for(let i = 2; i < numArr.length;\
    \ i++){\n        if(numArr[i] % 2 !== 0 && numArr[i] % 3 !== 0 && numArr[i] %\
    \ 5 !== 0 && numArr[i] % 7 !== 0){\n            primeArr.push(numArr[i])\n   \
    \     }\n    }\n    //return the length of the prime array\n    return primeArr.length\n\
    }\n", "    let arr = num.split('')\n    let res = 0\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] == '2' || arr[i] == '3' || arr[i] == '5' || arr[i]\
    \ == '7' || arr[i] == 'B' || arr[i] == 'D'){\n            res++\n        }\n \
    \   }\n    return res\n}", "    let prime_hex_nums = ['2', '3', '5', '7', 'B',\
    \ 'D'];\n    let primes = 0;\n    for(let i = 0; i < num.length; i++){\n     \
    \   if(prime_hex_nums.includes(num[i])){\n            primes += 1;\n        }\n\
    \    }\n    return primes;\n}", "    const hex_list = '0123456789ABCDEF';\n  \
    \  const prime_list = '2357BD';\n    return [...num.toUpperCase()].filter(digit\
    \ => prime_list.includes(digit)).length;\n}\n", "   let hex = {'0':0,'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'A':10,'B':11,'C':12,'D':13,'E':14,'F':15}\n\
    \    const arrHex = [2,3,5,7,11,13]\n    let arr = num.split('').map(n=>hex[n])\n\
    \    return arr.filter(n=>arrHex.includes(n)).length\n}", "    // write your solution\
    \ here...\n    var total = 0;\n    for (var i = 0; i < num.length; i++) {\n  \
    \      if(num[i] == 2 || num[i] == 3 || num[i] == 5 || num[i] == 7 || num[i] ==\
    \ \"B\" || num[i] == \"D\"){\n          total = total + 1;\n        }\n    }\n\
    \    return total;\n}\nvar result = hex_key(\"AB\");", "    let array = [2,3,5,7,11,13]\n\
    \    let result = 0\n    for(let i=0; i<num.length; i++){\n        if(num[i]>0){\n\
    \            for(let j=0; j<array.length; j++){\n                if(num[i] ==\
    \ array[j]){\n                    result++\n                }\n            }\n\
    \        }\n    }\n    return result\n}", "   let count = 0;\n   let primes =\
    \ [2,3,5,7,11,13];\n   let hex = {\n      0:0,\n      1:1,\n      2:2,\n     \
    \ 3:3,\n      4:4,\n      5:5,\n      6:6,\n      7:7,\n      8:8,\n      9:9,\n\
    \      A:10,\n      B:11,\n      C:12,\n      D:13,\n      E:14,\n      F:15\n\
    \   }\n   let arr = num.split('');\n   for(let i = 0; i < arr.length; i++){\n\
    \      for(let key in hex){\n         if(key === arr[i]){\n            for(let\
    \ j = 0; j < primes.length; j++){\n               if(hex[key] === primes[j]){\n\
    \                  count++;\n               }\n            }\n         }\n   \
    \   }\n   }\n   return count;\n}", "\tvar hexa = num.split('');\n\tvar count =\
    \ 0;\n\tvar primes = [2,3,5,7,11,13];\n\tvar hexadec = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n\
    \tvar hexad = {\n\t\t'2':2,\n\t\t'3':3,\n\t\t'4':4,\n\t\t'5':5,\n\t\t'6':6,\n\t\
    \t'7':7,\n\t\t'8':8,\n\t\t'9':9,\n\t\t'A':10,\n\t\t'B':11,\n\t\t'C':12,\n\t\t\
    'D':13,\n\t\t'E':14,\n\t\t'F':15\n\t}\n\tfor(var i = 0; i < hexa.length; i++){\n\
    \t\tfor(var j = 0; j < primes.length; j++){\n\t\t\tif(hexad[hexa[i]] === primes[j]){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}", "    let count = 0;\n\
    \    let hex_nums = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    let prime_hex_nums = ['2','3','5','7','B','D'];\n    let arr = num.split('');\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(prime_hex_nums.includes(arr[i])){\n\
    \            count++\n        }\n    }\n    return count;\n}", "    if(num ==\
    \ ''){\n        return 0;\n    }\n    var count = 0;\n    var primes = '2357BDF';\n\
    \    var x = num.toUpperCase();\n    for(var i = 0; i < num.length; i++){\n  \
    \      if(primes.indexOf(x[i]) !== -1){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\nvar y = hex_key(\"2020\");", "    let primes = [2,\
    \ 3, 5, 7, 11, 13];\n    let hex = {\n        \"2\":2,\n        \"3\":3,\n   \
    \     \"5\":5,\n        \"7\":7,\n        \"B\":11,\n        \"D\":13\n    }\n\
    \    let c = 0;\n    for(let i = 0; i < num.length; i++){\n        for(let j =\
    \ 0; j < primes.length; j++){\n            if(hex[num[i]] === primes[j]){\n  \
    \              c++;\n            }\n        }\n    }\n    return c;\n}\n", " \
    \   let primeHexes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    let result\
    \ = 0;\n    for(let i = 0; i < num.length; i++){\n        if(primeHexes.includes(num[i])){\n\
    \            result++;\n        }\n    }\n    return result;\n}\n", "    let hex_primes\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    return num.split(\"\").filter(e\
    \ => hex_primes.includes(e)).length;\n}\n", "  var hash = {'0':0,'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'A':10,'B':11,'C':12,'D':13,'E':14,'F':15};\n\
    \  var answer = 0;\n  for(var i = 0; i < num.length; i++){\n    if(hash[num[i]]\
    \ === 2 || hash[num[i]] === 3 || hash[num[i]] === 5 || hash[num[i]] === 7 || hash[num[i]]\
    \ === 11 || hash[num[i]] === 13){\n      answer++;\n    }\n  }\n  return answer;\n\
    }\n", "\tvar primes = ['2','3','5','7','B','D'];\n\tvar counter = 0;\n\tnum.split('').forEach(function(x){\n\
    \t\tif(primes.indexOf(x) !== -1){\n\t\t\tcounter++;\n\t\t}\n\t});\n\treturn counter;\n\
    }\n", "\tconst prime = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307",
  "\tvar total = 0;\n\tvar key = {\n\t\t'2': true,\n\t\t'3': true,\n\t\t'5': true,\n\
    \t\t'7': true,\n\t\t'B': true,\n\t\t'D': true\n\t};\n\tfor(var i = 0; i < num.length;\
    \ i++){\n\t\tvar digit = num[i];\n\t\tif(key[digit]){\n\t\t\ttotal++;\n\t\t}\n\
    \t}\n\treturn total;\n}", "  let counter = 0;\n  let hexNums = num.split('')\n\
    \  hexNums.forEach(digit => {\n    if(['2','3','5','7','B','D'].includes(digit)){\n\
    \      counter++\n    }\n  })\n  return counter\n}", "    var hex = '0123456789ABCDEF';\n\
    \    var primes = [2, 3, 5, 7, 11, 13];\n    var total = 0;\n    for(var i = 0;\
    \ i < num.length; i++){\n        if(primes.indexOf(hex.indexOf(num[i])) != -1){\n\
    \            total++;\n        }\n    }\n    return total;\n}", "    let count\
    \ = 0;\n    let dec = parseInt(num, 16);\n    while(dec>0){\n        if(dec%2!=0){\n\
    \            let isPrime = true;\n            for(let i=3; i<dec; i+=2){\n   \
    \             if(dec%i==0){\n                    isPrime = false;\n          \
    \          break;\n                }\n            }\n            if(isPrime)\n\
    \                count++;\n        }\n        dec = parseInt(dec/10);\n    }\n\
    \    return count;\n}", "\tvar primes = [2,3,5,7,11,13];\n\tvar hex_num = {\n\t\
    \t0:0,\n\t\t1:1,\n\t\t2:2,\n\t\t3:3,\n\t\t4:4,\n\t\t5:5,\n\t\t6:6,\n\t\t7:7,\n\
    \t\t8:8,\n\t\t9:9,\n\t\t\"A\":10,\n\t\t\"B\":11,\n\t\t\"C\":12,\n\t\t\"D\":13,\n\
    \t\t\"E\":14,\n\t\t\"F\":15\n\t};\n\tvar counter = 0;\n\tnum = num.split(\"\"\
    );\n\tfor(var i = 0; i < num.length; i++){\n\t\tif(primes.indexOf(hex_num[num[i]])\
    \ !== -1){\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;\n}", "    let hex\
    \ = {\n        \"0\": 0,\n        \"1\": 1,\n        \"2\": 2,\n        \"3\"\
    : 3,\n        \"4\": 4,\n        \"5\": 5,\n        \"6\": 6,\n        \"7\":\
    \ 7,\n        \"8\": 8,\n        \"9\": 9,\n        \"A\": 10,\n        \"B\"\
    : 11,\n        \"C\": 12,\n        \"D\": 13,\n        \"E\": 14,\n        \"\
    F\": 15\n    }\n    let primes = [2, 3, 5, 7, 11, 13];\n    let count = 0;\n \
    \   for (let i = 0; i < num.length; i++) {\n        if (primes.includes(hex[num[i]]))\
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "    let total\
    \ = 0;\n    let primes = [2,3,5,7,11,13];\n    let num_arr = num.split('');\n\
    \    for(let i = 0; i < num_arr.length; i++){\n        if(num_arr[i] === 'A' ||\
    \ num_arr[i] === 'B' || num_arr[i] === 'D'){\n            total++;\n        }\n\
    \        else if(num_arr[i] === '1' || num_arr[i] === '3' || num_arr[i] === '7'){\n\
    \            total++;\n        }\n    }\n    return total;\n}\n", "    let tester\
    \ = '2357BDF';\n    num = num.toUpperCase();\n    let count = 0;\n    for(let\
    \ i = 0; i < num.length; i++){\n        if(tester.includes(num[i])) count++;\n\
    \    }\n    return count;\n}\n", "    return num.split('').reduce((res, n) =>\
    \ \n        {\n            return res += (['2', '3', '5', '7', 'B', 'D'].includes(n))\
    \ ? 1 : 0;\n        }, 0);\n}\n", "    if(num.length == 0){\n        return 0;\n\
    \    }\n    var result = 0;\n    var primeHex = [2,3,5,7,11,13];\n    var hex\
    \ = {\n        2: \"2\",\n        3: \"3\",\n        4: \"4\",\n        5: \"\
    5\",\n        6: \"6\",\n        7: \"7\",\n        8: \"8\",\n        9: \"9\"\
    ,\n        10: \"A\",\n        11: \"B\",\n        12: \"C\",\n        13: \"\
    D\",\n        14: \"E\",\n        15: \"F\"\n    }\n    for(var i = 0; i < num.length;\
    \ i++){\n        for(var j = 0; j < primeHex.length; j++){\n            if(num[i]\
    \ == hex[primeHex[j]]){\n                result++;\n            }\n        }\n\
    \    }\n    return result;\n}", "    let hexValues = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n\
    \    let primeValues = [2,3,5,7,11,13];\n    let count = 0;\n    for(let i = 0;\
    \ i < num.length; i++){\n        for(let j = 0; j < hexValues.length; j++){\n\
    \            if(num[i] == hexValues[j]){\n                if(primeValues.includes(j)){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}", "\tconst PRIMES = [2, 3, 5, 7, 11, 13];\n\tlet counter\
    \ = 0;\n\tfor(let i=0; i<num.length; i++){\n\t\tlet numAtIdx = num.charCodeAt(i);\n\
    \t\tif(PRIMES.includes(numAtIdx % 17)){\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn\
    \ counter;\n}\n", "    let hex = \"0123456789ABCDEF\"\n    let primes = [2,3,5,7,11,13]\n\
    \    let count = 0;\n    for(let i = 0; i < num.length; i++){\n        if(primes.includes(hex.indexOf(num[i]))){\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    let hex_to_dec\
    \ = { \"A\": 10, \"B\": 11, \"C\": 12, \"D\": 13, \"E\": 14, \"F\": 15 }\n   \
    \ let dec_to_hex = { 10: \"A\", 11: \"B\", 12: \"D\", 13: \"D\", 14: \"E\", 15:\
    \ \"F\" }\n    let dec_str = num.split(\"\").map(char => \n        hex_to_dec[char]\
    \ === undefined ? char : dec_to_hex[char]\n    ).join(\"\")\n    // console.log(dec_str)\n\
    \    return dec_str.split(\"\").filter(\n        digit => isPrime(Number(digit))\n\
    \    ).length\n}\n", "    var prime = [2,3,5,7,11,13];\n    var count = 0;\n \
    \   for(var i = 0; i < num.length; i++){\n        if(prime.includes(parseInt(num[i],16))){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "\tvar sum =\
    \ 0;\n\tvar arr = num.split('');\n\tfor(var i = 0; i < arr.length; i++){\n\t\t\
    switch(arr[i]){\n\t\t\tcase '2':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase '3':\n\
    \t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase '5':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\
    \t\t\tcase '7':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t\tcase 'B':\n\t\t\t\tsum++;\n\
    \t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tsum++;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return sum;\n}", "\tconst dict = {\n\t\t'A': '10',\n\t\t'B': '11',\n\t\t'C': '12',\n\
    \t\t'D': '13',\n\t\t'E': '14',\n\t\t'F': '15'\n\t}\n\tconst res = num.split('').map(s\
    \ => {\n\t\tif(s.charCodeAt(0) > 57) {\n\t\t\treturn dict[s]\n\t\t} else {\n\t\
    \t\treturn s\n\t\t}\n\t})\n\tconst primeNums = res.map(x => Number(x)).filter(x\
    \ => {\n\t\tfor(let i = 2; i < x; i++) {\n\t\t\tif(x % i === 0) {\n\t\t\t\treturn\
    \ false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t})\n\treturn primeNums.length\n}\n",
  "    //your code\n}", "    const digits = [\"0\", \"1\", \"2\", \"3\", \"4\", \"\
    5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n\
    \    const primeDigits = [2, 3, 5, 7, 11, 13];\n    let counter = 0;\n    for(let\
    \ i = 0; i < num.length; i++){\n        for(let j = 0; j < digits.length; j++){\n\
    \            if(num[i] === digits[j]){\n                for(let k = 0; k < primeDigits.length;\
    \ k++){\n                    if(j === primeDigits[k]){\n                     \
    \   counter++;\n                    }\n                }\n            }\n    \
    \    }\n    }\n    return counter;\n}\n", "    if(!num) return 0;\n    let hex_primes\
    \ = new Set([2,3,5,7,11,13]);\n    let count = 0;\n    for(let char of num.toUpperCase()){\n\
    \        if(hex_primes.has(parseInt(char, 16))) count++;\n    }\n    return count;\n\
    }\n", "  num = num.split('');\n  let primes = 0;\n  for(let i = 0; i < num.length;\
    \ i++){\n    if(num[i] == 2 || num[i] == 3 || num[i] == 5 || num[i] == 7 || num[i]\
    \ == 'B' || num[i] == 'D'){\n      primes++;\n    }\n  }\n  return primes;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < num.length; i++){\n        let x = +(num[i]);\n\
    \        if(x <= 13){\n            if(x == 2 || x == 3 || x == 5 || x == 7 ||\
    \ x == 11 || x == 13){\n                sum++;\n            }\n        }\n   \
    \ }\n    return sum;\n}", "\tvar count = 0;\n\tfor(var i = 0; i < num.length;\
    \ i++){\n\t\tif(num[i] == \"2\" || num[i] == \"3\" || num[i] == \"5\" || num[i]\
    \ == \"7\" || num[i] == \"B\" || num[i] == \"D\"){\n\t\t\tcount++;\n\t\t}\n\t\
    }\n\treturn count;\n}\nhex_key(\"AB\");\nhex_key(\"1077E\");\nhex_key(\"ABED1A33\"\
    );\nhex_key(\"123456789ABCDEF0\");\nhex_key(\"2020\");", "\tvar primes = [2,3,5,7,11,13]\n\
    \tvar hex = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\"\
    ,\"B\",\"C\",\"D\",\"E\",\"F\"]\n\tvar count = 0\n\tvar num = num.split(\"\")\n\
    \tfor(var i = 0; i < num.length; i++){\n\t\tif(primes.includes(hex.indexOf(num[i]))){\n\
    \t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}\n", "    let hexa = \"0123456789ABCDEF\"\
    ;\n    let prime = 0;\n    for(let i = 0; i < num.length; i++){\n        if(hexa.indexOf(num[i])%2\
    \ != 0 && hexa.indexOf(num[i])%3 != 0 && hexa.indexOf(num[i])%5 != 0 && hexa.indexOf(num[i])%7\
    \ != 0 && hexa.indexOf(num[i]) != 1 && hexa.indexOf(num[i]) != 4 && hexa.indexOf(num[i])\
    \ != 6 && hexa.indexOf(num[i]) != 8 && hexa.indexOf(num[i]) != 9 && hexa.indexOf(num[i])\
    \ != 10 && hexa.indexOf(num[i]) != 12 && hexa.indexOf(num[i]) != 14 && hexa.indexOf(num[i])\
    \ != 15 && hexa.indexOf(num[i]) != 16){\n            prime++;\n        }\n   \
    \ }\n    return prime;\n}", "    let hexArr = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    let count = 0;\n    for(let i = 0; i < num.length; i++){\n        if(hexArr.indexOf(num[i])\
    \ > 9 && hexArr.indexOf(num[i]) < 14){\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    let hex = {\n        '0': 0,\n        '1': 1,\n \
    \       '2': 2,\n        '3': 3,\n        '4': 4,\n        '5': 5,\n        '6':\
    \ 6,\n        '7': 7,\n        '8': 8,\n        '9': 9,\n        'A': 10,\n  \
    \      'B': 11,\n        'C': 12,\n        'D': 13,\n        'E': 14,\n      \
    \  'F': 15\n    }\n    let count = 0;\n    let prime = [2, 3, 5, 7, 11, 13]\n\
    \    for (let i = 0; i < num.length; i++) {\n        for (let j = 0; j < prime.length;\
    \ j++) {\n            if (hex[num[i]] === prime[j]) {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "    let hex = {\n  \
    \      '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n        '4':\
    \ 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8': 8,\n   \
    \     '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n        'D':\
    \ 13,\n        'E': 14,\n        'F': 15\n    }\n    let count = 0;\n    for(let\
    \ i=0; i<num.length; i++){\n        if(hex[num[i]] === 2 || hex[num[i]] === 3\
    \ || hex[num[i]] === 5 || hex[num[i]] === 7 || hex[num[i]] === 11 || hex[num[i]]\
    \ === 13){\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   var sum = 0;\n    var n = parseInt(num, 16);\n    if(n < 3){\n        return\
    \ 0;\n    }\n    if(n%2 === 0){\n        return 0;\n    }\n    for(var i = 3;\
    \ i <= n; i++){\n        if(n%i === 0){\n            sum++;\n        }\n    }\n\
    \    return sum;\n}", "  let answer = 0;\n  let hexArray = num.split('');\n  let\
    \ decimalArray = [];\n  for (let i = 0; i < hexArray.length; i++) {\n    switch\
    \ (hexArray[i]) {\n      case 'A':\n        decimalArray.push(10);\n        break;\n\
    \      case 'B':\n        decimalArray.push(11);\n        break;\n      case 'C':\n\
    \        decimalArray.push(12);\n        break;\n      case 'D':\n        decimalArray.push(13);\n\
    \        break;\n      case 'E':\n        decimalArray.push(14);\n        break;\n\
    \      case 'F':\n        decimalArray.push(15);\n        break;\n      default:\n\
    \        decimalArray.push(parseInt(hexArray[i]));\n    }\n  }\n  for (let i =\
    \ 0; i < decimalArray.length; i++) {\n    if (decimalArray[i] === 2 || decimalArray[i]\
    \ === 3 || decimalArray[i] === 5 || decimalArray[i] === 7 || decimalArray[i] ===\
    \ 11 || decimalArray[i] === 13) {\n      answer++;\n    }\n  }\n  return answer;\n\
    }\n", "    let hex = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\
    \ \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let hexPrimes\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    let result = 0;\n    for(let\
    \ i = 0; i < num.length; i++){\n        if(hexPrimes.includes(num[i])){\n    \
    \        result += 1;\n        }\n    }\n    return result;\n}\n", "    //----------------------\u4EE5\
    \u4E0B\u662F\u6C92\u6709\u7279\u5225\u8003\u616E\u7684\n    // let prime = {\n\
    \    //     2:2,\n    //     3:3,\n    //     5:5,\n    //     7:7,\n    //  \
    \   B:11,\n    //     D:13\n    // }\n    // let count = 0;\n    // for(let i\
    \ = 0; i < num.length; i++){\n    //     if(num[i] in prime){\n    //        \
    \ count++;\n    //     }\n    // }\n    // return count;\n    //-----------------------------\u4EE5\
    \u4E0B\u662F\u7279\u5225\u8003\u616E\u5B57\u4E32\n    // let prime = {\n    //\
    \     \"2\":2,\n    //     \"3\":3,\n    //     \"5\":5,\n    //     \"7\":7,\n\
    \    //     \"B\":11,\n    //     \"D\":13\n    // }\n    // let count = 0;\n\
    \    // for(let i = 0; i < num.length; i++){\n    //     if(num[i] in prime){\n\
    \    //         count++;\n    //     }\n    // }\n    // return count;\n    //-----------------------------\n\
    \    let prime = [\"2\",\"3\",\"5\",\"7\",\"B\",\"D\"];\n    let count = 0;\n\
    \    for(let i = 0; i < num.length; i++){\n        if(prime.includes(num[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}", "\tif (num.length\
    \ == 0) return 0;\n\tlet obj = {\n\t\t'2': 1,\n\t\t'3': 1,\n\t\t'5': 1,\n\t\t\
    '7': 1,\n\t\t'B': 1,\n\t\t'D': 1\n\t}\n\tlet count = 0;\n\tlet arr = num.split('');\n\
    \tfor (var i = 0; i < arr.length; i++) {\n\t\tif (obj[arr[i]]) count++;\n\t}\n\
    \treturn count;\n}\n", "  let prime = [2,3,5,7,11,13];\n  let count = 0;\n  for(let\
    \ i = 0; i < num.length; i++){\n    if(prime.includes(parseInt(num[i], 16))){\n\
    \      count++;\n    }\n  }\n  return count;\n}", "    var count = 0;\n    var\
    \ hexes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for(var i = 0; i <\
    \ num.length; i++){\n        for(var j = 0; j < hexes.length; j++){\n        \
    \    if(num[i] == hexes[j]){\n                count++;\n            }\n      \
    \  }\n    }\n    return count;\n}", "    var hxnum = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n\
    \    var count = 0;\n    var arr = num.split('');\n    var newarr = arr.map(a\
    \ => hxnum.indexOf(a));\n    for(var i = 0; i < newarr.length; i++){\n       \
    \ if(newarr[i] === 2 || newarr[i] === 3 || newarr[i] === 5 || newarr[i] === 7\
    \ || newarr[i] === 11 || newarr[i] === 13){\n            count += 1;\n       \
    \ }\n    }\n    return count;\n}", "\tvar hexadecimal = [\"0\",\"1\",\"2\",\"\
    3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\n\
    \tvar count = 0;\n\tfor(var i = 0; i < num.length; i++){\n\t\tif(num[i] === \"\
    2\" || num[i] === \"3\" || num[i] === \"5\" || num[i] === \"7\" || num[i] ===\
    \ \"B\" || num[i] === \"D\"){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n\
    }", "    var letters = [...num];\n    var result = [];\n    letters.forEach(x\
    \ => {\n        var num = parseInt(x, 16);\n        if(num > 1){\n           \
    \ for(var i = 2; i < num; i++){\n                if(num % i === 0){\n        \
    \            result.push(num);\n                    break;\n                }\n\
    \            }\n        }\n    });\n    return result.length;\n}\n", "    let\
    \ hexArr = num.split('');\n    let primes = ['2','3','5','7','B','D'];\n    let\
    \ count = 0;\n    for(let i = 0; i < hexArr.length; i++){\n        if(primes.includes(hexArr[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  if(num ==\
    \ \"\") return 0;\n  let res = 0;\n  for(let c of num){\n    switch(c){\n    \
    \  case '2':\n      case '3':\n      case '5':\n      case '7':\n      case 'B':\n\
    \      case 'D':\n        res++;\n        break;\n    }\n  }\n  return res;\n\
    }\n", "\tconst hexKey = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\tlet numArr\
    \ = num.split(\"\");\n\tlet result = 0;\n\tfor(let i = 0; i < numArr.length; i++){\n\
    \t\tif(hexKey.includes(numArr[i])){\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n\
    }", "    let hex = {'0':0,'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'A':10,'B':11,'C':12,'D':13,'E':14,'F':15};\n\
    \    let sum = 0;\n    let bool = false;\n    for(let i = 0; i < num.length; i++){\n\
    \        bool = false;\n        for(let j = 2; j < hex[num[i]]; j++){\n      \
    \      if(hex[num[i]] % j == 0){\n                bool = true;\n             \
    \   break;\n            }\n        }\n        if(!bool){\n            sum++;\n\
    \        }\n    }\n    return sum;\n}", "  let hObj = {\n    'A':11,\n    'B':13,\n\
    \    'C':17,\n    'D':19,\n    'E':23,\n    'F':29\n  }\n  if (num.length ===\
    \ 0) return 0;\n  let arr = num.split('');\n  let cnt = 0;\n  let res = [];\n\
    \  for (let i=0; i<arr.length; i++){\n    if (hObj[arr[i]]){\n      res.push(hObj[arr[i]]);\n\
    \    }else{\n      res.push(arr[i]);\n    }\n  }\n  for (let i=0; i<res.length;\
    \ i++){\n    if (prime(res[i])){\n      cnt++;\n    }\n  }\n  return cnt;\n}\n",
  "  var nums = {\n    2: true, \n    3: true, \n    5: true, \n    7: true, \n  \
    \  11: true, \n    13: true\n  };\n  var counter = 0;\n  for(var i = 0; i < num.length;\
    \ i++){\n    if(nums[num[i]]){\n      counter++;\n    }\n  }\n  return counter;\n\
    }", "\tvar primes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\tvar count =\
    \ 0;\n\tfor(var i = 0; i < num.length; i++){\n\t\tif(primes.indexOf(num[i]) >\
    \ -1){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "    let arr = num.split('');\n\
    \    return arr.filter(x => ['2','3','5','7','B','D'].includes(x)).length;\n}\n",
  "\tlet count = 0;\n\tconst arr = num.split('');\n\tconst primes = [2, 3, 5, 7, 11,\
    \ 13, 17];\n\tfor(let i=0; i<arr.length; i++){\n\t\tif(primes.includes(parseInt(arr[i],\
    \ 16))){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "    const primes =\
    \ ['2', '3', '5', '7', 'B', 'D'];\n    let count = 0;\n    for(let n of num){\n\
    \        if(primes.includes(n)) count++;\n    }\n    return count;\n}\n", "  \
    \  //Let's put the hexadecimal numbers in an array\n    var hexKey = [2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167,\
    \ 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,\
    \ 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353,\
    \ 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449,\
    \ 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,\
    \ 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653,\
    \ 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761,\
    \ 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877,\
    \ 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991,\
    \ 997];\n    var arr = [];\n    var count = 0;\n    //Let's put the numbers from\
    \ the string in an array\n    for(var i = 0; i < num.length; i++){\n        arr.push(num[i]);\n\
    \    }\n    for(var j = 0; j < arr.length; j++", "    let count = 0;\n    let\
    \ hex_array = ['A','B','C','D','E','F'];\n    for(let i = 0; i < num.length; i++){\n\
    \        if(num[i] === '2' || num[i] === '3' || num[i] === '5' || num[i] === '7'){\n\
    \            count++;\n        }else if(hex_array.includes(num[i])){\n       \
    \     count++;\n        }\n    }\n    return count;\n}", "    let key = 0;\n \
    \   const hex = \"0123456789ABCDEF\";\n    const primes = [2, 3, 5, 7, 11, 13];\n\
    \    const obj = {'0':0, '1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8,\
    \ '9':9, 'A':10, 'B':11, 'C':12, 'D':13, 'E':14, 'F':15}\n    for(let i = 0; i\
    \ < num.length; i++){\n        if(primes.includes(obj[num[i]])){\n           \
    \ key++;\n        }\n    }\n    return key;\n}", "    var hex = {\n        \"\
    A\": 10,\n        \"B\": 11,\n        \"C\": 12,\n        \"D\": 13,\n       \
    \ \"E\": 14,\n        \"F\": 15\n    };\n    var keys = 0;\n    num = num.split(\"\
    \");\n    for(var i = 0; i < num.length; i++){\n        if(hex[num[i]] !== undefined){\n\
    \            num[i] = hex[num[i]];\n        }else{\n            num[i] = parseInt(num[i]);\n\
    \        }\n    }\n    for(var j = 0; j < num.length; j++){\n        if(num[j]\
    \ === 2 || num[j] === 3 || num[j] === 5 || num[j] === 7 || num[j] === 11 || num[j]\
    \ === 13){\n            keys++;\n        }\n    }\n    return keys;\n}\n", " \
    \   let hexDigits = \"0123456789ABCDEF\"\n    let hexArr = num.split(\"\")\n \
    \   let counter = 0;\n    for(let i = 0; i < hexArr.length; i++){\n        let\
    \ digit = hexArr[i]\n        let decimal = hexDigits.indexOf(digit)\n        if(decimal\
    \ >= 2 && decimal <= 7){\n            counter += 1\n        }\n        if(decimal\
    \ === 11 || decimal === 13){\n            counter += 1\n        }\n    }\n   \
    \ return counter\n}", "    //your code here\n}", "    let result = 0;\n    let\
    \ primes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    for(let i = 0; i <\
    \ num.length; i++){\n        for(let j = 0; j < primes.length; j++){\n       \
    \     if(num[i] === primes[j]){\n                result++;\n            }\n  \
    \      }\n    }\n    return result;\n}", "    var a = [\"2\",\"3\",\"5\",\"7\"\
    ,\"B\",\"D\"];\n    var count = 0;\n    for(var i = 0; i < num.length; i++){\n\
    \        for(var j = 0; j < a.length; j++){\n            if(num[i] == a[j]){\n\
    \                count += 1;\n            }\n        }\n    }\n    return count;\n\
    }", "    let hex_nums = {\n        0: 0,\n        1: 1,\n        2: 2,\n     \
    \   3: 3,\n        4: 4,\n        5: 5,\n        6: 6,\n        7: 7,\n      \
    \  8: 8,\n        9: 9,\n        A: 10,\n        B: 11,\n        C: 12,\n    \
    \    D: 13,\n        E: 14,\n        F: 15\n    }\n    let count = 0;\n    for(let\
    \ i = 0; i < num.length; i++){\n        if(hex_nums[num[i]] === 2 || hex_nums[num[i]]\
    \ === 3 || hex_nums[num[i]] === 5 || hex_nums[num[i]] === 7 || hex_nums[num[i]]\
    \ === 11 || hex_nums[num[i]] === 13){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "    var prime_count = 0;\n    for(var i = 0; i < num.length;\
    \ i++){\n        if(num[i] === '2' || num[i] === '3' || num[i] === '5' || num[i]\
    \ === '7' || num[i] === 'B' || num[i] === 'D'){\n            prime_count += 1;\n\
    \        }\n    }\n    return prime_count;\n}", "    let counter = 0;\n    let\
    \ dict = {\n        \"0\": \"0\",\n        \"1\": \"1\",\n        \"2\": \"2\"\
    ,\n        \"3\": \"3\",\n        \"4\": \"4\",\n        \"5\": \"5\",\n     \
    \   \"6\": \"6\",\n        \"7\": \"7\",\n        \"8\": \"8\",\n        \"9\"\
    : \"9\",\n        \"A\": \"10\",\n        \"B\": \"11\",\n        \"C\": \"12\"\
    ,\n        \"D\": \"13\",\n        \"E\": \"14\",\n        \"F\": \"15\"\n   \
    \ }\n    for(let i = 0; i < num.length; i++){\n        let number = Number(dict[num[i]]);\n\
    \        if(isPrime(number)){\n            counter++;\n        }\n    }\n    return\
    \ counter;\n}", "    var primeDigits = 0;\n    var hex = ['2','3','5','7','B','D'];\n\
    \    for(var i = 0; i < num.length; i++){\n        for(var j = 0; j < hex.length;\
    \ j++){\n            if(num[i] == hex[j]){\n                primeDigits++;\n \
    \           }\n        }\n    }\n    return primeDigits;\n}\nvar num = \"ABED1A33\"\
    ;", "\tlet primes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\tlet count =\
    \ 0;\n\tfor(let i = 0; i < num.length; i++){\n\t\tif(primes.includes(num[i])){\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var primes = [2,3,5,7,11,13];\n\
    \    var count = 0;\n    var nums = num.split('');\n    for(var i = 0; i < nums.length;\
    \ i++){\n        for(var j = 0; j < primes.length; j++){\n            if(nums[i]\
    \ === primes[j].toString()){\n                count++;\n            }\n      \
    \  }\n    }\n    return count;\n}", "  const hexHash = {\n    '0': 0,\n    '1':\
    \ 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7':\
    \ 7,\n    '8': 8,\n    '9': 9,\n    'A': 10,\n    'B': 11,\n    'C': 12,\n   \
    \ 'D': 13,\n    'E': 14,\n    'F': 15\n  }\n  const hexArray = num.split('');\n\
    \  let count = 0;\n  for (let i = 0; i < hexArray.length; i++) {\n    if (hexHash[hexArray[i]]\
    \ <= 7 && hexHash[hexArray[i]] > 1) {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "  let str = '2357bdf'\n  let count = 0\n  for(let i=0; i<num.length; i++){\n\
    \    if(str.includes(num[i])){\n      count++\n    }\n  }\n  return count\n}",
  "    let primes = [2, 3, 5, 7, 11, 13]\n    let results = 0;\n    let digits = {\n\
    \        0: 0,\n        1: 1,\n        2: 2,\n        3: 3,\n        4: 4,\n \
    \       5: 5,\n        6: 6,\n        7: 7,\n        8: 8,\n        9: 9,\n  \
    \      A: 10,\n        B: 11,\n        C: 12,\n        D: 13,\n        E: 14,\n\
    \        F: 15\n    }\n    for(var i = 0; i < num.length; i++){\n        if(primes.includes(digits[num[i]])){\n\
    \            results += 1;\n        }\n    }\n    return results;\n}\n", "   \
    \ let counter = 0;\n    let myArray = num.split('');\n    for(let i = 0; i < myArray.length;\
    \ i++){\n      if(myArray[i] === '2' || myArray[i] === '3' || myArray[i] === '5'\
    \ || myArray[i] === '7' || myArray[i] === 'B' || myArray[i] === 'D'){\n      \
    \  counter++;\n      }\n    }\n    return counter;\n  }\n  console.log(hex_key(\"\
    AB\"));\n  console.log(hex_key(\"1077E\"));\n  console.log(hex_key(\"ABED1A33\"\
    ));\n  console.log(hex_key(\"123456789ABCDEF0\"));\n  console.log(hex_key(\"2020\"\
    ));", "    var result = [];\n    var total = 0;\n    var hex = \"0123456789ABCDEF\"\
    ;\n    var prime = [2,3,5,7,11,13];\n    for(var i = 0; i < num.length; i++){\n\
    \        result.push(num[i]);\n    }\n    for(var j = 0; j < result.length; j++){\n\
    \        for(var k = 0; k < hex.length; k++){\n            if(result[j] == hex[k]){\n\
    \                for(var l = 0; l < prime.length; l++){\n                    if(k\
    \ == prime[l]){\n                        total += 1;\n                    }\n\
    \                }\n            }\n        }\n    }\n    return total;\n}", " \
    \   let count = 0;\n    for(let i=0; i<num.length; i++){\n        if(hexPrime(num[i])){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    var hex\
    \ = {};\n    var count = 0;\n    for(var i = 1; i <= hex[num]; i++){\n       \
    \ if(isPrime(i)) count++;\n    }\n    return count;\n}\n", "\tlet primes = '2357BDF';\n\
    \tlet counter = 0;\n\tfor(let i = 0; i < num.length; i++){\n\t\tif(primes.includes(num[i])){\n\
    \t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;\n}", "  var number = '2 3 5 7\
    \ B D'.split(' ');\n  var sum = 0;\n  for(var i = 0; i < num.length; i++){\n \
    \   for(var n = 0; n < number.length; n++){\n      if(num[i] === number[n]){\n\
    \        sum++;\n      }\n    }\n  }\n  return sum;\n}", "    var dict = {A:10,\
    \ B:11, C:12, D:13, E:14, F:15}\n    var isPrime = {2:true, 3:true, 5:true, 7:true,\
    \ 11:true, 13:true}\n    var count = 0;\n    var nums = num.split('');\n    for(var\
    \ i = 0; i < nums.length; i++){\n        if(dict[nums[i]] != undefined){\n   \
    \         nums[i] = dict[nums[i]];\n        }\n        if(isPrime[nums[i]] ==\
    \ true){\n            count++;\n        }\n    }\n    return count;\n}", "\tvar\
    \ num = num.toUpperCase();\n\tvar count = 0;\n\tvar digits = [];\n\tvar hexs =\
    \ [0,1,2,3,4,5,6,7,8,9,\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\n\tfor(var i = 0;\
    \ i < num.length; i++){\n\t\tfor(var j = 0; j < hexs.length; j++){\n\t\t\tif(num[i]\
    \ == hexs[j]){\n\t\t\t\tdigits.push(hexs[j]);\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(digits);\n\
    \tfor(var i = 0; i < digits.length; i++){\n\t\tif(digits[i] == 2 || digits[i]\
    \ == 3 || digits[i] == 5 || digits[i] == 7 || digits[i] == 11 || digits[i] ==\
    \ 13){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}", "\tlet arr = [];\n\t\
    let obj = {\n\t\t'A': 11,\n\t\t'B': 13,\n\t\t'C': 17,\n\t\t'D': 19,\n\t\t'E':\
    \ 23,\n\t\t'F': 29\n\t}\n\tlet result = 0;\n\tlet alphabet = ['A', 'B', 'C', 'D',\
    \ 'E', 'F'];\n\t\n\tfor(let i = 0; i < num.length; i++){\n\t\tlet a = Number(num[i]);\n\
    \t\tlet b = num[i];\n\t\tlet flag = false;\n\t\tfor(let j = 0; j < alphabet.length;\
    \ j++){\n\t\t\tif(b === alphabet[j]){\n\t\t\t\ta = obj[b];\n\t\t\t\tflag = true;\n\
    \t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tif(primeNumber(a)){\n\t\t\t\tresult++;\n\t\
    \t\t}\n\t\t}\n\t\telse{\n\t\t\tif(primeNumber(a)){\n\t\t\t\tresult++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn result;\n}\n", "\tlet table = {\n\t\t\"0\": 0,\n\t\t\"\
    1\": 1,\n\t\t\"2\": 2,\n\t\t\"3\": 3,\n\t\t\"4\": 4,\n\t\t\"5\": 5,\n\t\t\"6\"\
    : 6,\n\t\t\"7\": 7,\n\t\t\"8\": 8,\n\t\t\"9\": 9,\n\t\t\"A\": 10,\n\t\t\"B\":\
    \ 11,\n\t\t\"C\": 12,\n\t\t\"D\": 13,\n\t\t\"E\": 14,\n\t\t\"F\": 15\n\t}\n\t\
    let sum = 0;\n\tlet result = 0;\n\tlet number = Array.from(num);\n\tnumber.forEach(num\
    \ => {\n\t\tsum += table[num];\n\t});\n\tif(sum % 2 === 0 || sum % 3 === 0 ||\
    \ sum % 5 === 0 || sum % 7 === 0 || sum % 11 === 0 || sum % 13 === 0) {\n\t\t\
    result = 1;\n\t}\n\treturn result;\n}\n", "    // TODO\n}\n", "  let hex = {\n\
    \    \"2\":2,\n    \"3\":3,\n    \"5\":5,\n    \"7\":7,\n    \"B\":11,\n    \"\
    D\":13\n  }\n  return num.split(\"\").filter(function(i){return hex[i]}).length\n\
    }\n", "    let str = \"0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F\";\n    let arr = num.split(\"\
    \");\n    let count = 0;\n    for(let i=0; i<arr.length; i++){\n        if(str.indexOf(arr[i])==2\
    \ || str.indexOf(arr[i])==3 || str.indexOf(arr[i])==5 || str.indexOf(arr[i])==7\
    \ || str.indexOf(arr[i])==11 || str.indexOf(arr[i])==13){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  const primeNumber = [\n    '2',\
    \ '3', '5', '7',\n    'B', 'D'\n  ];\n  const arr = num.split('');\n  let sum\
    \ = 0;\n  for(let value of arr){\n    for(let prime of primeNumber){\n      if(value\
    \ === prime){\n        sum += 1;\n      }\n    }\n  }\n  return sum;\n}", "  \
    \  const primes = [2, 3, 5, 7, 11, 13];\n    let arr = [];\n    for(let i = 0;\
    \ i < num.length; i++){\n        if(primes.includes(parseInt(num[i], 16))){\n\
    \            arr.push(num[i]);\n        }\n    }\n    return arr.length;\n}\n",
  "    const hex = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"\
    , \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    const primes = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    let result = 0;\n    let hexSplit =\
    \ num.split(\"\");\n    hexSplit.forEach(function(e){\n        if(primes.includes(e)){\n\
    \            result++;\n        }\n    });\n    return result;\n}\n", "    let\
    \ primes = \"2357bd\";\n    let ctr = 0;\n    for(let i = 0; i < num.length; i++){\n\
    \        for(let j = 0; j < primes.length; j++){\n            if(num[i] == primes[j]){\n\
    \                ctr++;\n            }\n        }\n    }\n    return ctr;\n}\n",
  "    var a = [\"2\",\"3\",\"5\",\"7\",\"B\",\"D\"],\n        sum = 0;\n    for(var\
    \ i=0;i<num.length;i++){\n        for(var j=0;j<a.length;j++){\n            if(num[i]\
    \ === a[j]){\n                sum++;\n            }\n        }\n    }\n    return\
    \ sum;\n}", "    let hexarr = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n\
    \    let count = 0;\n    for(let i = 0; i < num.length; i++){\n        for(let\
    \ j = 0; j < hexarr.length; j++){\n            if(num[i] == hexarr[j]){\n    \
    \            if(j == 2 || j == 3 || j == 5 || j == 7 || j == 11 || j == 13){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n", "  let digits = {\n    0: false,\n    1: false,\n\
    \    2: true,\n    3: true,\n    4: false,\n    5: true,\n    6: false,\n    7:\
    \ true,\n    8: false,\n    9: false,\n    A: false,\n    B: true,\n    C: false,\n\
    \    D: true,\n    E: false,\n    F: false\n  }\n  let count = 0;\n  num.split('').forEach(digit\
    \ => {\n    if(digits[digit]) count++\n  })\n  return count;\n}", "    let counter\
    \ = 0;\n    let primes = [2, 3, 5, 7, 11, 13];\n    if(num.length === 0){\n  \
    \      return counter;\n    }\n    for(let i = 0; i < num.length; i++){\n    \
    \    if(primes.includes(hexToDec(num[i]))){\n            counter++;\n        }\n\
    \    }\n    return counter;\n}\n", "    let arr = [\"2\", \"3\", \"5\", \"7\"\
    , \"B\", \"D\"];\n    let counter = 0;\n    for(let i = 0; i < num.length; i++){\n\
    \        if(arr.includes(num[i])){\n            counter += 1;\n        }\n   \
    \ }\n    return counter;\n}\n", "    let count = 0;\n    for(let i = 0; i < num.length;\
    \ i++){\n        if(num[i] === '2' || num[i] === '3' || num[i] === '5' || num[i]\
    \ === '7' || num[i] === 'B' || num[i] === 'D'){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n", "    var count = 0;\n    var str = '0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F'.split(',');\n\
    \    var newArr = str.slice(2, str.length);\n    for(var i = 0; i < num.length;\
    \ i++){\n        for(var j = 0; j < newArr.length; j++){\n            if(num[i]\
    \ === newArr[j]){\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}", "    let primeHexNums = [2, 3, 5, 7, 11, 13, 17];\n  \
    \  let hexNums = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F'];\n\
    \    let final = 0;\n    for(let i = 0; i < num.length; i++){\n        if(hexNums.indexOf(parseInt(num[i]))\
    \ >= 0){\n            if(primeHexNums.indexOf(hexNums.indexOf(parseInt(num[i])))\
    \ >= 0){\n                final++;\n            }\n        }\n    }\n    return\
    \ final;\n}", "    // Write your solution here\n    var m = new Map();\n    m.set('0',\
    \ false);\n    m.set('1', false);\n    m.set('2', true);\n    m.set('3', true);\n\
    \    m.set('4', false);\n    m.set('5', true);\n    m.set('6', false);\n    m.set('7',\
    \ true);\n    m.set('8', false);\n    m.set('9', false);\n    m.set('A', false);\n\
    \    m.set('B', true);\n    m.set('C', false);\n    m.set('D', true);\n    m.set('E',\
    \ false);\n    m.set('F', false);\n    if (num == \"\") {\n        return 0;\n\
    \    } else {\n        var count = 0;\n        for (var i = 0; i < num.length;\
    \ i++) {\n            if (m.get(num[i])) {\n                count++;\n       \
    \     }\n        }\n        return count;\n    }\n    \n    \n}\n", "    var hex\
    \ = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3': 3,\n  \
    \      '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n        '8':\
    \ 8,\n        '9': 9,\n        'A': 10,\n        'B': 11,\n        'C': 12,\n\
    \        'D': 13,\n        'E': 14,\n        'F': 15\n    };\n    let arr = [];\n\
    \    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        arr.push(hex[num[i]]);\n\
    \    }\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 2 ||\
    \ arr[i] === 3 || arr[i] === 5 || arr[i] === 7 || arr[i] === 11 || arr[i] ===\
    \ 13) {\n            count++;\n        }\n    }\n    return count;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

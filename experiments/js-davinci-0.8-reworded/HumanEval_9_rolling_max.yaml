name: HumanEval_9_rolling_max
language: js
prompt: "//From a given array of integers, generate an array of rolling maximum element\
  \ found until given moment\n// in the sequence.\n// >>> rolling_max([1, 2, 3, 2,\
  \ 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 1]),[4, 4, 4,\
  \ 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3, 3, 3, 100, 100]);\n\
  }\n\ntest();"
completions: ["    let max = [];\n    let tempMax = 0;\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        if(tempMax < numbers[i]){\n            tempMax = numbers[i];\n\
    \        }\n        max.push(tempMax);\n    }\n    return max;\n}\n", "    var\
    \ result = [];\n    var maxValue = numbers[0];\n    result.push(maxValue);\n \
    \   for(var i = 1; i < numbers.length; i++){\n        if(numbers[i] > maxValue){\n\
    \            maxValue = numbers[i];\n        }\n        result.push(maxValue);\n\
    \    }\n    return result;\n}\n", "    var result = [];\n    var max = numbers[0];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] > max){\n\
    \            max = numbers[i];\n        }\n        result.push(max);\n    }\n\
    \    return result;\n}\n", "    var result = [];\n    var index = 0;\n    while(index\
    \ < numbers.length){\n        result.push(Math.max.apply(null, numbers.slice(0,\
    \ index + 1)));\n        index++;\n    }\n    return result;\n}\n", "\n}\n", "\n\
    }\n", "  let result = [numbers[0]];\n  for(let i = 1; i < numbers.length; i++){\n\
    \    result.push(Math.max(result[i-1], numbers[i]));\n  }\n  return result;\n\
    }\n", "\tvar maxArray = [];\n\tvar currMax = 0;\n\tnumbers.forEach(function(element){\n\
    \t\tif(element > currMax){\n\t\t\tcurrMax = element;\n\t\t}\n\t\tmaxArray.push(currMax);\n\
    \t});\n\treturn maxArray;\n}\n", "    var max=numbers[0];\n    for(i=1;i<numbers.length;i++){\n\
    \        if(numbers[i]>max){\n            max=numbers[i];\n        }\n       \
    \ numbers[i]=max;\n    }\n    return numbers;\n}\n", "    var maxArray = [];\n\
    \    var currentMax = numbers[0];\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(numbers[i] > currentMax){\n            currentMax = numbers[i];\n\
    \        }\n        maxArray.push(currentMax);\n    }\n    return maxArray;\n\
    }\n", "    let result = [numbers[0]];\n    for(let i = 1; i < numbers.length;\
    \ i++){\n        if(numbers[i] > result[i-1]){\n            result.push(numbers[i]);\n\
    \        }else{\n            result.push(result[i-1]);\n        }\n    }\n   \
    \ return result;\n}\n", "    var i = 0;\n    var myArray = [];\n    var max =\
    \ 0;\n    for(i = 0; i < numbers.length; i++){\n        max = numbers[i];\n  \
    \      for(j = 0; j <= i; j++){\n            if(numbers[j] > max){\n         \
    \       max = numbers[j];\n            }\n        }\n        myArray.push(max);\n\
    \    }\n    return myArray;\n}\n", "  let result = [];\n  result.push(numbers[0]);\n\
    \  for(i=1; i<numbers.length; i++){\n    if(numbers[i]>result[i-1]){\n      result.push(numbers[i]);\n\
    \    }else{\n      result.push(result[i-1]);\n    }\n  }\n  return result;\n}\n",
  "  var result = [];\n  var max = -1;\n  for(var i = 0; i < numbers.length; i++){\n\
    \    if(numbers[i] > max){\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "\tresult = [numbers[0]];\n\tfor(i=1; i<numbers.length;\
    \ i++){\n\t\tif(numbers[i] > result[i-1]){\n\t\t\tresult.push(numbers[i]);\n\t\
    \t}\n\t\telse{\n\t\t\tresult.push(result[i-1]);\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "  return numbers.map(function(number, i, arr){\n    var max = number;\n\
    \    for(var j = i; j < arr.length; j++){\n      if(arr[j] > max){\n        max\
    \ = arr[j];\n      }\n    }\n    return max;\n  });\n}\n\nvar array = [1, 2, 3,\
    \ 2, 3, 4, 2];\n", "    return numbers.map((e, i, arr) => {\n        var max =\
    \ e;\n        for(var j = i+1; j < arr.length; j++){\n            if(max < arr[j]){\n\
    \                max = arr[j];\n            }\n        }\n        return max;\n\
    \    });\n}\n", "    if(numbers.length === 0){\n        return [];\n    }\n  \
    \  const result = [];\n    let currentMax = numbers[0];\n    result.push(currentMax);\n\
    \    for(let i = 1; i < numbers.length; i++){\n        if(numbers[i] > currentMax){\n\
    \            currentMax = numbers[i];\n        }\n        result.push(currentMax);\n\
    \    }\n    return result;\n}", "    let result = []\n    numbers.forEach((el,\
    \ i) => {\n        let max = el\n        for(let j = i; j < numbers.length; j++){\n\
    \            if(max < numbers[j]){\n                max = numbers[j]\n       \
    \     }\n        }\n        result.push(max)\n    })\n    return result\n}\n",
  "    var max = 0;\n    var maxSeq = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n      \
    \  }\n        maxSeq.push(max);\n    }\n    return maxSeq;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

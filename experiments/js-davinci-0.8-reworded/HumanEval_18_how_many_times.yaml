name: HumanEval_18_how_many_times
language: js
prompt: "//Find how many times a given substring can be found in the original string.\
  \ Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n// >>> how_many_times(\"\
  aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"aa\")\n// 3\nfunction how_many_times(string,\
  \ substring){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
  xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
  \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
completions: ["  // TODO - Complete implementation\n}\n", "\tvar i = 0;\n\tvar count\
    \ = 0;\n\twhile(string.indexOf(substring, i) !== -1){\n\t\tcount++;\n\t\ti = string.indexOf(substring,\
    \ i) + 1;\n\t}\n\treturn count;\n}", "    var count = 0;\n    for (var i = 0;\
    \ i < string.length; i++){\n        if (string.substring(i, i + substring.length)\
    \ == substring){\n            count += 1;\n        }\n    }\n    return count;\n\
    }", "  if(substring.length === 0){\n    return 0;\n  }\n  let i = 0;\n  let n\
    \ = 0;\n  while(i < string.length){\n    i = string.indexOf(substring, i);\n \
    \   if(i === -1){\n      break;\n    }\n    n++;\n    i++;\n  }\n  return n;\n\
    }\n\n", "  let counter = 0;\n  for (let i = 0; i < string.length; i++){\n    if\
    \ (string.substring(i, i + substring.length) === substring){\n      counter++;\n\
    \    }\n  }\n  return counter;\n}\n", "    var count = 0;\n    for (var i = 0;\
    \ i < string.length; i++){\n        if (string.slice(i, i + substring.length)\
    \ == substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  var count = 0\n  for (var i = 0; i < string.length; i++){\n    if (string.slice(i,\
    \ i + substring.length) === substring){\n      count++\n    }\n  }\n  return count\n\
    }\n", "\tif (string === '' || substring === '') {\n\t\treturn 0;\n\t}\n\tlet count\
    \ = 0;\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i] === substring[0])\
    \ {\n\t\t\tcount += (string.slice(i, i + substring.length) === substring) ? 1\
    \ : 0;\n\t\t}\n\t}\n\treturn count;\n}\n", "    var counter = 0;\n    var index\
    \ = string.indexOf(substring);\n    while (index != -1) {\n        counter++;\n\
    \        index = string.indexOf(substring, index + 1);\n    }\n    return counter;\n\
    }\n", "    if (substring.length === 0) return 0;\n    let i = 0;\n    let j =\
    \ substring.length;\n    let count = 0;\n    while (i < string.length && j <=\
    \ string.length) {\n        if (string.slice(i, j) === substring) {\n        \
    \    count++;\n            i++;\n            j++;\n        } else {\n        \
    \    i++;\n            j++;\n        }\n    }\n    return count;\n}", "  return\
    \ string.split(substring).length - 1;\n}\n", "    let counter = 0;\n    for (let\
    \ i = 0; i < string.length; i++) {\n        if (string.substring(i, i + substring.length)\
    \ == substring) {\n            counter++;\n        }\n    }\n    return counter;\n\
    }\n", "  return string.split(substring).length - 1;\n}\n", "    let count = 0;\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string.substring(i,\
    \ i + substring.length) == substring) {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n", "  var count = 0;\n  if (string !== \"\" && substring\
    \ !== \"\"){\n    for (var i = 0; i < string.length; i++){\n      if (string[i]\
    \ == substring[0]){\n        if (string.substring(i, i + substring.length) ==\
    \ substring){\n          count += 1;\n        }\n      }\n    }\n  }\n  return\
    \ count;\n}\n", "    var count = 0;\n    var i = 0;\n    while (i <= string.length\
    \ - substring.length) {\n        if (string.substring(i, i + substring.length)\
    \ == substring) {\n            count++;\n            i += substring.length;\n\
    \        } else {\n            i++;\n        }\n    }\n    return count;\n}",
  "  var occurences = 0;\n  for (var i = 0; i < string.length; i++){\n    for (var\
    \ j = 0; j < substring.length; j++){\n      if (string[i + j] !== substring[j]){\n\
    \        break;\n      }\n      if (j === substring.length - 1){\n        occurences++;\n\
    \      }\n    }\n  }\n  return occurences;\n}\n", "\tvar count = 0;\n\tfor(var\
    \ i = 0; i < string.length; i++){\n\t\tif(string.substring(i, i + substring.length)\
    \ == substring){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n", "    let\
    \ res = 0;\n    let len = substring.length;\n    let remainder = string.length\
    \ % len;\n    let count = Math.floor(string.length / len);\n    if (len !== 0)\
    \ {\n        if (remainder === 0) {\n            res = count;\n        } else\
    \ {\n            res = count + 1;\n        }\n    }\n    return res;\n}", "  \
    \  return string.split(substring).length - 1;\n}\n", "  var j = 0;\n  var count\
    \ = 0;\n  for (var i = 0; i < string.length; i++) {\n    if (string[i] === substring[j])\
    \ {\n      j++;\n      if (j === substring.length) {\n        count++;\n     \
    \   j = 0;\n      }\n    }\n    else if (string[i] !== substring[j]) {\n     \
    \ j = 0;\n    }\n  }\n  return count;\n}\n", "\tvar result = string.match(new\
    \ RegExp(substring, \"g\"));\n\treturn result ? result.length : 0;\n}\n\n", " \
    \   let count = 0;\n    let i = 0;\n    let subLength = substring.length;\n  \
    \  let strLength = string.length;\n    while(i < strLength - subLength){\n   \
    \     if(string.substring(i, i + subLength) === substring){\n            count++;\n\
    \            i += subLength;\n        } else {\n            i++;\n        }\n\
    \    }\n    return count;\n}\n", "    let counter = 0;\n    let start = 0;\n \
    \   while(start < string.length){\n        start = string.indexOf(substring, start);\n\
    \        if(start < 0){\n            break;\n        }\n        counter++;\n \
    \       start++;\n    }\n    return counter;\n}\n", "    var count = 0;\n    for\
    \ (var i = 0; i < string.length; i++){\n        if (string.substring(i, i + substring.length)\
    \ == substring){\n            count += 1;\n        }\n    }\n    return count;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n   \
    \     if (string.substring(i, i + substring.length) == substring) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}", "    var counter = 0;\n\
    \    var string_len = string.length;\n    var sub_len = substring.length;\n  \
    \  if (sub_len == 0) {\n        return counter;\n    }\n    for (var i = 0; i\
    \ < string_len; i++) {\n        var sub_string = string.substr(i, sub_len);\n\
    \        if (sub_string == substring) {\n            counter++;\n        }\n \
    \   }\n    return counter;\n}\n", "    var len = substring.length;\n    var i\
    \ = 0;\n    var c = 0;\n    while (string.indexOf(substring, i) > -1){\n     \
    \   i = string.indexOf(substring, i) + len;\n        c++;\n    }\n    return c;\n\
    }\n", "    var count = 0;\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string.slice(i, i + substring.length) == substring){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    var count = 0;\n    for (var\
    \ i = 0; i < string.length; i++){\n        if (string.charAt(i) == substring.charAt(0)){\n\
    \            if (string.substring(i, i + substring.length) == substring){\n  \
    \              count++;\n            }\n        }\n    }\n    return count;\n\
    }\n", "    if(!string || !substring){\n        return 0;\n    }\n    let count\
    \ = 0;\n    let index = 0;\n    let start = 0;\n    let j = 0;\n    let i = 0;\n\
    \    for(;i<string.length;i++){\n        index = string.indexOf(substring, start);\n\
    \        start = index+1;\n        if(index === -1){\n            break;\n   \
    \     }\n        count++;\n    }\n    return count;\n}", "    var count = 0;\n\
    \    while(string.indexOf(substring) >= 0){\n        count++;\n        string\
    \ = string.replace(substring, \"\");\n    }\n    return count;\n}\n", "  let num\
    \ = 0;\n  let index = 0;\n  let position = 0;\n  while(index != -1){\n    index\
    \ = string.indexOf(substring,position);\n    if(index != -1){\n      num ++;\n\
    \      position = index + 1;\n    }\n  }\n  return num;\n}", "\tif (substring\
    \ == '') {\n\t\treturn 0;\n\t} else {\n\t\tvar count = 0;\n\t\tfor (var i = 0;\
    \ i < string.length; i++) {\n\t\t\tif (string.slice(i, i + substring.length) ==\
    \ substring) {\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\
    }\n", "  if(substring.length === 0) return 0;\n  var index = string.indexOf(substring);\n\
    \  var count = 0;\n  while(index !== -1){\n    index = string.indexOf(substring,\
    \ index + 1);\n    count++;\n  }\n  return count;\n}\n", "\tlet count = 0;\n\t\
    let pos = string.indexOf(substring);\n\twhile (pos > -1){\n\t\tcount++;\n\t\t\
    pos = string.indexOf(substring, pos + 1);\n\t}\n\treturn count;\n}\n", "  // your\
    \ code\n}\n", "    return string.split(substring).length - 1;\n}", "    let count\
    \ = 0;\n    let i = 0;\n    let length = substring.length;\n    while(i < string.length){\n\
    \        if(string.substring(i, i + length) == substring){\n            count\
    \ += 1;\n            i += length;\n        }\n        else{\n            i +=\
    \ 1;\n        }\n    }\n    return count;\n}", "  var times = 0;\n  var position\
    \ = string.indexOf(substring);\n  while (position !== -1){\n    times++;\n   \
    \ position = string.indexOf(substring, position + 1);\n  }\n  return times;\n\
    }\n", "    var index = string.indexOf(substring);\n    var count = 0;\n    while\
    \ (index != -1) {\n        count++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}\n", "    var count = 0;\n    for (var\
    \ i = 0; i < string.length; i++){\n        if (string.substring(i, i + substring.length)\
    \ == substring){\n            count += 1;\n        }\n    }\n    return count;\n\
    }\n", "\n}\n\n", "    var found = 0;\n    for (i = 0; i < string.length; i++){\n\
    \        if (string.slice(i, i + substring.length) == substring){\n          \
    \  found += 1;\n        }\n    }\n    return found;\n}\n", "    var count = 0;\n\
    \    var sub_index = string.indexOf(substring);\n    while (sub_index != -1) {\n\
    \        count++;\n        sub_index = string.indexOf(substring, sub_index + 1);\n\
    \    }\n    return count;\n}", "    var count = 0;\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (string.substring(i, i + substring.length) == substring){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  //i = 0;\n\
    \  i = -1;\n  count = 0;\n  while(true){\n    i = string.indexOf(substring, i+1);\n\
    \    if(i == -1){\n      break;\n    }\n    count += 1;\n  }\n  return count;\n\
    }\n", "    var count = 0;\n    while(string.indexOf(substring) > -1){\n      \
    \  count++;\n        string = string.slice(string.indexOf(substring) + substring.length);\n\
    \    }\n    return count;\n}\n", "    if (substring.length == 0) { return 0; }\n\
    \    var times = 0;\n    for (var i = 0; i < string.length; i++) {\n        if\
    \ (string.slice(i, i + substring.length) == substring) {\n            times +=\
    \ 1;\n        }\n    }\n    return times;\n}\n", "\treturn string.split(substring).length\
    \ - 1;\n}\n", "    var occurance = 0;\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string.slice(i, i + substring.length) == substring){\n           \
    \ occurance += 1;\n        }\n    }\n    return occurance;\n}\n", "    let reg=new\
    \ RegExp(substring, \"g\");\n    return string.match(reg).length;\n}\n", "  return\
    \ string.split(substring).length - 1;\n}\n", "  var amount_of_times = 0;\n  for\
    \ (var i = 0; i < string.length; i++) {\n    for (var j = 0; j < substring.length;\
    \ j++) {\n      if (string[i] === substring[j]) {\n        var times = string.length\
    \ - i;\n        if (times >= substring.length) {\n          amount_of_times++;\n\
    \        }\n      }\n    }\n  }\n  return amount_of_times;\n}\n", "\tif(substring\
    \ == '')\n\t\treturn 0;\n\tvar count = 0;\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string[i] == substring[0]){\n\t\t\tif(substring.length == 1){\n\
    \t\t\t\tcount += 1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor(var k = 1; k < substring.length;\
    \ k++){\n\t\t\t\t\tif(string[i+k] == substring[k]){\n\t\t\t\t\t\tcount += 1;\n\
    \t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\tbreak;\n\t\t\
    \t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n", "   var count\
    \ = 0;\n   var string_length = string.length;\n   var substring_length = substring.length;\n\
    \   var j = 0;\n   if (substring_length > string_length){\n   \treturn \"substring\
    \ is longer than string\";\n   }\n   for (var i = 0; i < string_length; i++){\n\
    \      if (string[i] == substring[j]){\n      \tj++;\n      }\n      else{\n \
    \     \tj = 0;\n      }\n      if (j == substring_length){\n      \tcount++;\n\
    \      \tj = 0;\n      }\n   }\n   return count;\n}\n", "  var count = 0;\n  for\
    \ (var i = 0; i < string.length; i++){\n    if (string.slice(i, substring.length\
    \ + i) === substring){\n      count++;\n    }\n  }\n  return count;\n}\n", " \
    \   var count = 0;\n    for (var i = 0; i < string.length; i++){\n        if (string.slice(i,\
    \ i + substring.length) == substring){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n", "  return string.split(substring).length - 1;\n}\n",
  "\tlet count = 0;\n\tfor (let i = 0; i < string.length; i++) {\n\t\t//Find the substring\
    \ starting from the current index\n\t\tif (string.substring(i, i + substring.length)\
    \ == substring) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "\tvar howMany\
    \ = 0;\n\tvar start = 0;\n\tvar match = true;\n\tvar current = start;\n\t\n\t\
    for(var i = 0; i < string.length; i++){\n\t\t//console.log(\"current: \" + current);\n\
    \t\t\n\t\tif(string[current] != substring[i]){\n\t\t\tstart++;\n\t\t\tcurrent\
    \ = start;\n\t\t\ti = -1;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tcurrent++;\n\t\t\n\
    \t\tif(i == substring.length - 1){\n\t\t\thowMany++;\n\t\t\tstart++;\n\t\t\tcurrent\
    \ = start;\n\t\t\ti = -1;\n\t\t}\n\t}\n\t\n\treturn howMany;\n}\n\n", "    let\
    \ count = 0;\n    for (let i = 0; i < string.length; i++){\n        let sub =\
    \ string.substring(i, i + substring.length);\n        if (sub === substring){\n\
    \            count ++;\n        }\n    }\n    return count;\n}\n", "    let firstIndex\
    \ = 0;\n    let lastIndex = string.length - substring.length;\n    let count =\
    \ 0;\n    for(let i = 0; i <= lastIndex; i++){\n        if(string.substring(i,\
    \ i + substring.length) === substring){\n            count += 1;\n        }\n\
    \    }\n    return count;\n}\n", "\tvar count = 0;\n\tvar index = 0;\n\twhile(index\
    \ < string.length){\n\t\tif(string.indexOf(substring, index) !== -1){\n\t\t\t\
    count += 1;\n\t\t\tindex = string.indexOf(substring, index) + 1;\n\t\t} else {\n\
    \t\t\tindex = string.length;\n\t\t}\n\t}\n\treturn count;\n}\n", "  if (string\
    \ == ''){\n    return 0;\n  }\n  if (substring == ''){\n    return string.length;\n\
    \  }\n  var count = 0;\n  var len = string.length;\n  var sublen = substring.length;\n\
    \  for (var i = 0; i < len; i++){\n    if (string.slice(i,i+sublen) == substring){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    let array = string.split(substring);\n\
    \    return array.length - 1;\n}\n", "  var times = 0;\n  for (var i = 0; i <\
    \ string.length; i++){\n    var tempString = string.slice(i,i+substring.length);\n\
    \    if (tempString === substring){\n      times ++;\n    }\n  }\n  return times;\n\
    }\n", "    var str_array = string.split(substring);\n    var count = str_array.length\
    \ - 1;\n    return count;\n}\n", "    var count = 0;\n    for (i = 0; i < string.length;\
    \ i++) {\n        if (string.charAt(i) == substring.charAt(0)) {\n           \
    \ if (string.substring(i, i + substring.length) == substring) {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}\n", "   \
    \ return string.split(substring).length - 1;\n}\n", "    var count = 0\n    for\
    \ (i = 0; i < string.length; i++){\n        if (string.substring(i, i + substring.length)\
    \ == substring){\n            count++\n        }\n    }\n    return count\n}\n",
  "    var count = 0;\n    for (var i = 0; i < string.length; i++){\n        if (string.slice(i,\
    \ i + substring.length) == substring){\n            count += 1;\n        }\n \
    \   }\n    return count;\n}\n", "    var count = 0;\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (string.substring(i, i + substring.length) == substring){\n\
    \            count++;\n        }\n    }\n    return count;\n}", "    var i, j,\
    \ k;\n    var count = 0;\n    for(i = 0; i < string.length; i++){\n        for(j\
    \ = 0; j < substring.length; j++){\n            if(string[i+j] !== substring[j]){\n\
    \                break;\n            }\n        }\n        if(j === substring.length){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    var count\
    \ = 0;\n    var temp = 0;\n    while (temp != -1){\n        temp = string.indexOf(substring,\
    \ temp);\n        if (temp == -1){\n            break;\n        }\n        else{\n\
    \            count += 1;\n            temp += 1;\n        }\n    }\n    return\
    \ count;\n}", "    var count = 0;\n    if (string.length == 0){\n        return\
    \ 0;\n    }\n    if (string.length == 1){\n        if (string == substring){\n\
    \            return 1;\n        } else {\n            return 0;\n        }\n \
    \   }\n    for (var i = 0; i < string.length; i++){\n        if (string.charAt(i)\
    \ == substring.charAt(0)){\n            var index = i;\n            var found\
    \ = true;\n            for (var j = 0; j < substring.length; j++){\n         \
    \       if (string.charAt(index) != substring.charAt(j)){\n                  \
    \  found = false;\n                    break;\n                }\n           \
    \     index++;\n            }\n            if (found){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n", "    var times = 0;\n\
    \    for (var i = 0; i < string.length; i++) {\n        if (string.substring(i,\
    \ substring.length + i) == substring) {\n            times ++;\n        }\n  \
    \  }\n    return times;\n}\n", "\t//YOUR CODE HERE\n}\n", "    let count = 0;\n\
    \    let substring_len = substring.length;\n    if(string === \"\" || substring_len\
    \ > string.length){\n        return count;\n    }\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(string.substring(i, substring_len + i) === substring){\n \
    \           count++;\n        }\n    }\n    return count;\n}\n", "  var count\
    \ = 0;\n  var i = 0;\n  while (i < string.length) {\n    if (string.substring(i,\
    \ i + substring.length) == substring) {\n      count++;\n      i += substring.length;\n\
    \    } else {\n      i++;\n    }\n  }\n  return count;\n}\n", "    var first_occurrence\
    \ = string.indexOf(substring);\n    if (first_occurrence === -1) {\n        return\
    \ 0;\n    } else {\n        var sliced_string = string.slice(first_occurrence\
    \ + substring.length);\n        return 1 + how_many_times(sliced_string, substring);\n\
    \    }\n}\n", "    var count = 0;\n    for (var i = 0; i < string.length; i++){\n\
    \        if (string.substring(i, i + substring.length) == substring){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n", "    if (string.length\
    \ === 0 || substring.length === 0) {\n        return 0;\n    }\n\n    var count\
    \ = 0;\n    for (var i = 0; i < string.length; i++) {\n        var idx = string.indexOf(substring,\
    \ i);\n        if (idx !== -1) {\n            count++;\n            i = idx;\n\
    \        }\n    }\n    return count;\n}\n", "  //initializing var to keep track\
    \ of the amount of times the substring repeats\n  var matches = 0;\n  //setting\
    \ the str length to be the length of the original string\n  var strLength = string.length;\n\
    \  //setting the subString length to be the length of the substring\n  var subLength\
    \ = substring.length;\n  //if the length of the substring is longer than the original\
    \ string then it cannot be repeated\n  if(subLength > strLength){\n    return\
    \ 0;\n  }\n  //creating a for loop to go through all the possible combinations\
    \ of the substring\n  for(var i = 0; i <= strLength - subLength; i++){\n    //if\
    \ the substring exists in the original string at any point then the number of\
    \ matches\n    //will increase by 1\n    if(string.substring(i, i + subLength)\
    \ === substring){\n      matches++;\n    }\n  }\n  return matches;\n}\n\n", " \
    \   var tempCount = 0;\n    var count = 0;\n    var subLength = substring.length;\n\
    \    var stringLength = string.length;\n    for(var i = 0; i < stringLength; i++){\n\
    \        if(string.substring(i, i + subLength) == substring){\n            count\
    \ += 1;\n        }\n    }\n    return count;\n}\nhow_many_times(\"hello Helllo\"\
    , \"ello\");\n\n", "\n}\n", "    var counter = 0;\n    var str_len = string.length;\n\
    \    var sub_len = substring.length;\n    for(var i = 0; i <= str_len; i++){\n\
    \        if(string.substring(i, i + sub_len) == substring){\n            counter++;\n\
    \        }\n    }\n    return counter;\n}\n", "    let count = 0;\n    if (string\
    \ === \"\" || substring === \"\"){\n        return 0;\n    }\n    for (let i =\
    \ 0; i < string.length; i++){\n        if (string.slice(i, i + substring.length)\
    \ === substring){\n            count += 1;\n        }\n    }\n    return count;\n\
    }\n", "    //Implement me!\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i <= string.length\
    \ - substring.length; i++){\n\t\tif(string.substring(i, i + substring.length)\
    \ == substring){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var\
    \ count = 0;\n  for (var i = 0; i < string.length; i++){\n    if (string.substring(i,\
    \ i + substring.length) == substring){\n      count ++;\n    }\n  }\n  return\
    \ count;\n}\n", "  var count = 0;\n  var string_len = string.length;\n  var substring_len\
    \ = substring.length;\n  var start = 0;\n  var i;\n  while(start < string_len)\
    \ {\n    if(string.substring(start, start + substring_len) == substring) {\n \
    \     count++;\n      start += substring_len;\n    } else {\n      start++;\n\
    \    }\n  }\n  return count;\n}", "    var count = 0;\n    for (var i = 0; i <\
    \ string.length; i++){\n        var j = i + substring.length;\n        if (string.substring(i,\
    \ j) == substring){\n            count++;\n        }\n    }\n    return count;\n\
    }", "  let count = 0;\n  for (let i = 0; i < string.length; i++){\n    if (string.substring(i,\
    \ i + substring.length) === substring){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n", "\treturn string.split(substring).length - 1;\n}\n", "\tif (substring\
    \ == \"\") {\n\t\treturn 0;\n\t}\n\telse {\n\t\tvar i = 0;\n\t\tvar count = 0;\n\
    \t\twhile (i < string.length) {\n\t\t\tif (string.substring(i, i + substring.length)\
    \ == substring) {\n\t\t\t\tcount += 1;\n\t\t\t\ti += substring.length;\n\t\t\t\
    }\n\t\t\telse {\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}\n",
  "    var count = 0;\n    for (var i = 0; i < string.length; i++){\n        if (string.substring(i,\
    \ i + substring.length) == substring){\n            count += 1;\n        }\n \
    \   }\n    return count;\n}\n", "    let count = 0;\n    for (i = 0; i < string.length;\
    \ i++){\n        if (string.includes(substring)){\n            count++;\n    \
    \        string = string.slice(i+1);\n        }\n    }\n    return count;\n}\n",
  "\tvar times = 0;\n\tvar index = string.indexOf(substring);\n\twhile(index > -1){\n\
    \t\ttimes++;\n\t\tindex = string.indexOf(substring, index + 1);\n\t}\n\treturn\
    \ times;\n}\n", "    var counter = 0;\n    while(string.indexOf(substring) >=\
    \ 0){\n        counter++;\n        string = string.slice(string.indexOf(substring)\
    \ + substring.length);\n    }\n    return counter;\n}", "\tvar i = 0;\n\tvar n\
    \ = 0;\n\twhile (i != -1) {\n\t    i = string.indexOf(substring, i);\n\t    if\
    \ (i != -1) {\n\t        n++;\n\t        i += substring.length;\n\t    }\n\t}\n\
    \treturn n;\n}\n\n", "    var n = 0;\n    var index = 0;\n    while (index !=\
    \ -1) {\n        index = string.indexOf(substring, index);\n        if (index\
    \ != -1) {\n            n++;\n            index++;\n        }\n    }\n    return\
    \ n;\n}\n", "    var count = 0;\n    for (var i = 0; i < string.length; i++){\n\
    \        if (string.slice(i, i + substring.length) == substring){\n          \
    \  count++;\n        }\n    }\n    return count;\n}\n", "\tif(string === \"\"\
    \ || substring === \"\") return 0;\n\tif(substring.length === 1) return string.split(substring).length\
    \ - 1;\n\tlet i = 0;\n\tlet count = 0;\n\tlet sub = \"\";\n\twhile(i < string.length){\n\
    \t\tsub = string.slice(i, i + substring.length);\n\t\tif(sub === substring) count++;\n\
    \t\ti++;\n\t}\n\treturn count;\n}\n\n", "  var times = 0;\n  for (var i = 0; i\
    \ < string.length; i++){\n    if (string.substring(i, i + substring.length) ==\
    \ substring){\n      times++;\n    }\n  }\n  return times;\n}\n", "\tvar count\
    \ = 0;\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string.substring(i,\
    \ i + substring.length) == substring) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "  var totalCount = 0;\n  var substringLength = substring.length;\n\
    \  var stringLength = string.length;\n  var max_iterations = stringLength - substringLength;\n\
    \  for(var i = 0; i <= max_iterations; i++){\n    var currentSubstring = string.substring(i,i+substringLength);\n\
    \    if(currentSubstring === substring){\n      totalCount++;\n    }\n  }\n  return\
    \ totalCount;\n}\n", "    var count = 0;\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (string.slice(i,i+substring.length) === substring){\n    \
    \        count++;\n        }\n    }\n    return count;\n}\n", "    if(substring.length\
    \ === 0){\n        return 0;\n    }\n    let count = 0;\n    for(let i = 0; i\
    \ < string.length; i++){\n        if(string.substring(i, i + substring.length)\
    \ === substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  var l = substring.length;\n  var cnt = 0;\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string.substring(i, i + l) == substring){\n      cnt++;\n    }\n\
    \  }\n  return cnt;\n}\n", "    var regex = new RegExp(substring, \"g\");\n  \
    \  var counter = string.match(regex);\n    if(counter !== null){\n        return\
    \ counter.length;\n    }\n    return 0;\n}\n", "  var count = 0\n  var i = 0\n\
    \  while (i < string.length) {\n    if (string.substring(i, i + substring.length)\
    \ == substring) {\n      count += 1\n      i += substring.length\n    } else {\n\
    \      i += 1\n    }\n  }\n  return count\n}\n", "\treturn string.split(substring).length\
    \ - 1;\n}\n", "   if(string === \"\" || substring === \"\"){\n    return 0;\n\
    \  }else{\n    var howMany = 0;\n    var lastOccurenceIndex = string.lastIndexOf(substring);\n\
    \    var next = 0;\n    do{\n      howMany++;\n      next = string.indexOf(substring,\
    \ next) + 1;\n    }while(next <= lastOccurenceIndex);\n    return howMany;\n \
    \ }\n}", "\tif(string.length === 0) return 0;\n\tvar counter = 0;\n\tvar initial_index\
    \ = string.indexOf(substring);\n\tvar initial_substring_length = substring.length;\n\
    \tif(initial_index === -1) return 0;\n\tvar new_string = string.slice(initial_index+1);\n\
    \tvar new_substring = string.slice(initial_index+1, initial_index+1+initial_substring_length);\n\
    \t\n\treturn 1 + how_many_times(new_string, new_substring);\n}\n", "\tvar pos\
    \ = 0;\n\tvar count = 0;\n\twhile(string.indexOf(substring, pos) != -1){\n\t\t\
    pos = string.indexOf(substring, pos) + 1;\n\t\tcount++;\n\t}\n\treturn count;\n\
    }\n", "\t// fill in here\n}\n", "  let count = 0;\n  if(string == \"\" || substring\
    \ == \"\"){\n    return 0;\n  }\n  while(string.includes(substring)){\n    string\
    \ = string.replace(substring, \"\");\n    count++;\n  }\n  return count;\n}",
  "    var count = 0;\n    var substringLength = substring.length;\n    for (var i\
    \ = 0; i < string.length; i++) {\n        var sstring = string.substring(i, i\
    \ + substringLength);\n        if (sstring == substring) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  if (string == \"\" || substring\
    \ == \"\"){\n    return 0;\n  }\n  var i, j, counter;\n  counter = 0;\n  for (i\
    \ = 0; i < string.length; i++){\n    if (string[i] == substring[0]){\n      for\
    \ (j = 0; j < substring.length; j++){\n        if (string[i+j] == substring[j]){\n\
    \          if (j == substring.length - 1){\n            counter++;\n         \
    \ }\n        }\n        else{\n          break;\n        }\n      }\n    }\n \
    \ }\n  return counter;\n}\n\n", "    \n    if (substring === \"\") {\n       \
    \ return 0;\n    }\n\n    let substringCount = 0;\n    let count = 0;\n    let\
    \ stringLength = string.length;\n    let subStringLength = substring.length;\n\
    \n    if (stringLength < subStringLength) {\n        return 0;\n    }\n\n    while\
    \ (count < stringLength){\n        if (string.substring(count, subStringLength\
    \ + count) === substring) {\n            substringCount += 1;\n        }\n   \
    \     count += 1;\n    }\n    return substringCount;\n}\n", "    let index = 0;\n\
    \    let count = 0;\n    while (index < string.length) {\n        if (string.indexOf(substring,\
    \ index) !== -1) {\n            count++;\n            index = string.indexOf(substring,\
    \ index) + 1;\n        } else {\n            break;\n        }\n    }\n    return\
    \ count;\n}\n", "  let count = 0;\n  for (let i = 0; i < string.length; i++){\n\
    \    if (string.slice(i, i + substring.length) === substring){\n      count +=\
    \ 1;\n    }\n  }\n  return count;\n}", "\tif (substring.length == 0) {\n\t\treturn\
    \ 0;\n\t}\n\tvar counter = 0;\n\tfor (var i = 0; i < string.length; i++) {\n\t\
    \tif (string.substring(i, i + substring.length) == substring) {\n\t\t\tcounter\
    \ += 1;\n\t\t}\n\t}\n\treturn counter;\n}\n", "\n}\n", "    var found = 0;\n \
    \   var startIndex = 0;\n    while (true) {\n        var index = string.indexOf(substring,\
    \ startIndex);\n        if (index == -1) break;\n        found++;\n        startIndex\
    \ = index + substring.length;\n    }\n    return found;\n}\n", "    var count\
    \ = 0;\n    for (var i = 0; i < string.length; i++){\n        if (string.slice(i,\
    \ i + substring.length) == substring){\n            count ++;\n        }\n   \
    \ }\n    return count;\n}\n", "    var result = 0;\n    var index = string.indexOf(substring);\n\
    \    while (index != -1) {\n        result++;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return result;\n}\n", "  var count = 0;\n  for (var\
    \ i = 0; i < string.length; i++) {\n    if (string.substring(i, i + substring.length)\
    \ == substring) {\n      count++;\n    }\n  }\n  return count;\n}", "  var found\
    \ = -1;\n  var count = 0;\n  while (true) {\n    found = string.indexOf(substring,\
    \ found + 1);\n    if (found == -1) break;\n    count++;\n  }\n  return count;\n\
    }\n", "    var counter = 0;\n    var iniPos = string.indexOf(substring);\n   \
    \ while(iniPos > -1){\n        counter++;\n        iniPos = string.indexOf(substring,\
    \ iniPos + 1);\n    }\n    return counter;\n}\n", "    if (substring == '') return\
    \ 0;\n    let regex = new RegExp(substring, 'g');\n    return (string.match(regex)\
    \ || []).length;\n}\n", "    let count = 0;\n    for (let i = 0; i < string.length;\
    \ i++){\n        if (string.substring(i, i + substring.length) == substring){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    var times\
    \ = 0;\n    for (var i = 0; i < string.length; i++) {\n        if (string.substring(i,i+substring.length)\
    \ == substring) {\n            times += 1;\n        }\n    }\n    return times;\n\
    }\n", "  var cnt = 0;\n  for (var i = 0; i < string.length; i++) {\n    if (string.substring(i,\
    \ i + substring.length) == substring) {\n      cnt++;\n    }\n  }\n  return cnt;\n\
    }", "    var times = 0;\n    for (var i = 0; i < string.length; i++) {\n     \
    \   if (string.substring(i, i + substring.length) == substring) {\n          \
    \  times += 1;\n        }\n    }\n    return times;\n}\n", "\tif (string.length\
    \ == 0 || substring.length == 0) return 0;\n\tif (string.length < substring.length)\
    \ return 0;\n\tvar count = 0;\n\tfor (var i = 0; i < string.length; i++){\n\t\t\
    if (string.substring(i, i + substring.length) == substring){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n", "    let times = 0;\n    let sub = substring;\n\
    \    let index = string.indexOf(sub);\n    while(index != -1){\n        times\
    \ ++;\n        index = string.indexOf(sub, index + 1);\n    }\n    return times;\n\
    }\n", "    var counter = 0;\n    var count = 0;\n    while(counter < string.length){\n\
    \      count = string.indexOf(substring, counter);\n      if(count > -1){\n  \
    \      counter = count + 1;\n      } else {\n        counter = string.length;\n\
    \      }\n    }\n    return counter;\n}\n", "  var counter = 0;\n  var k = 0;\n\
    \  for (var i = 0; i < string.length; i++) {\n    if (string[i] === substring[k])\
    \ {\n      k++;\n      if (k === substring.length) {\n        counter++;\n   \
    \     k = 0;\n      }\n    } else {\n      k = 0;\n    }\n  }\n  return counter;\n\
    }\n\n", "    string_len = string.length;\n    substring_len = substring.length;\n\
    \    var count = 0;\n    for (i = 0; i < string_len; i++) {\n        if (string.slice(i,\
    \ i + substring_len) == substring) {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    let count = 0;\n    let index = string.indexOf(substring);\n\
    \    while (index !== -1) {\n      count++;\n      index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return count;\n}", "    if(substring == \"\" || string\
    \ == \"\"){\n        return 0;\n    }\n    let count = 0;\n    for(let i = 0;\
    \ i < string.length; i++){\n        if(string[i] == substring[0]){\n         \
    \   let check_string = string.slice(i, substring.length + i);\n            if(check_string\
    \ == substring){\n                count += 1;\n            }\n        }\n    }\n\
    \    return count;\n}\n", "\n}\n", "    var times = 0;\n    for (var i = 0; i\
    \ < string.length; i++) {\n        if (string.slice(i, i + substring.length) ==\
    \ substring) {\n            times++;\n        }\n    }\n    return times;\n}",
  "  var times = 0;\n  for (var i = 0; i < string.length; i++) {\n    if (string.substring(i,\
    \ i + substring.length) == substring) {\n      times++;\n    }\n  }\n  return\
    \ times;\n}\n", "\t// if(string.length == 0){\n\t// \treturn 0;\n\t// }\n\tvar\
    \ word = string.split(substring);\n\treturn word.length - 1;\n}", "    if (substring\
    \ === \"\") {\n        return 0;\n    }\n    let count = 0;\n    let idx = string.indexOf(substring);\n\
    \    while (idx !== -1) {\n        count += 1;\n        idx = string.indexOf(substring,\
    \ idx + 1);\n    }\n    return count;\n}\n", "    return (string.match(new RegExp(substring,\
    \ \"g\")) || []).length;\n}\n", "\tlet count = 0;\n\tfor (var i = 0; i < string.length;\
    \ i++) {\n\t\tif (string.slice(i, i + substring.length) === substring) {\n\t\t\
    \tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n", "  return 0;\n}\n", "    return\
    \ string.split(substring).length - 1;\n}\n", "    let ans = 0;\n    let len =\
    \ substring.length;\n    for(let i = 0; i <= string.length - len; i++){\n    \
    \    if(string.substring(i, i + len) == substring){\n            ans++;\n    \
    \    }\n    }\n    return ans;\n}\n\n", "\tvar count = 0;\n\tvar tmp = -1;\n\t\
    while(string.indexOf(substring, tmp+1) != -1){\n\t\tcount++;\n\t\ttmp = string.indexOf(substring,\
    \ tmp+1);\n\t}\n\treturn count;\n}\n", "    let count = 0;\n    let length = substring.length;\n\
    \    for(let i = 0; i < string.length; i++){\n        if(string.substring(i, i\
    \ + length) == substring){\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "  if (string === \"\"){\n    return 0;\n  } else if (string.indexOf(substring)\
    \ === -1){\n    return 0;\n  } else {\n    return 1 + how_many_times(string.slice(string.indexOf(substring)\
    \ + 1), substring);\n  }\n}\n", "    let total = 0;\n    for (let i = 0; i < string.length;\
    \ i++){\n        if (string.substring(i, i + substring.length) == substring){\n\
    \            total++;\n        }\n    }\n    return total;\n}", "    var x = string.match(new\
    \ RegExp(substring, \"g\"));\n    if (x == null) {\n        return 0;\n    } else\
    \ {\n        return x.length;\n    }\n}\n", "    return string.split(substring).length\
    \ - 1;\n}\n", "  var counter = 0;\n  for (var i = 0; i < string.length; i++) {\n\
    \    if (string.charAt(i) == substring.charAt(0)) {\n      for (var j = 0; j <\
    \ substring.length; j++) {\n        if (string.charAt(i + j) != substring.charAt(j))\
    \ {\n          break;\n        }\n        if (j == substring.length - 1) {\n \
    \         counter++;\n        }\n      }\n    }\n  }\n  return counter;\n}\n",
  "    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string.charAt(i)\
    \ === substring.charAt(0)) {\n            let found = true;\n            for (let\
    \ j = 0; j < substring.length; j++) {\n                if (string.charAt(i + j)\
    \ !== substring.charAt(j)) {\n                    found = false;\n           \
    \         break;\n                }\n            }\n            if (found) {\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n", "  var i = 0;\n  var count = 0;\n  while (i < string.length) {\n    index\
    \ = string.indexOf(substring, i);\n    if (index !== -1) {\n      count++;\n \
    \     i = index + 1;\n    } else {\n      break;\n    }\n  }\n  return count;\n\
    }", "  let count = 0;\n  for (let i = 0; i < string.length; i++){\n    if (string.slice(i,\
    \ i + substring.length) === substring){\n      count += 1;\n    }\n  }\n  return\
    \ count;\n}\n\n", "  var sum = 0;\n  for (var i = 0; i < string.length; i++){\n\
    \    if (string.substring(i, i + substring.length) == substring){\n      sum++;\n\
    \    }\n  }\n  return sum;\n}\n", "\n}\n", "\tvar times = 0;\n\tvar position =\
    \ 0;\n\tvar string_length = string.length;\n\tvar substring_length = substring.length;\n\
    \tvar new_string = \"\";\n\tfor(var i = 0; i < string_length; i++){\n\t\tif(string[i]\
    \ == substring[0]){\n\t\t\tposition = i;\n\t\t\tfor(var j = 0; j < substring_length;\
    \ j++){\n\t\t\t\tnew_string += string[position];\n\t\t\t\tposition++;\n\t\t\t\
    }\n\t\t\tif(new_string == substring){\n\t\t\t\ttimes++;\n\t\t\t}\n\t\t\tnew_string\
    \ = \"\";\n\t\t}\n\t}\n\treturn times;\n}\n", "\tvar count = 0;\n\tvar subLength\
    \ = substring.length;\n\tvar stringLength = string.length;\n\tvar temp;\n\tif(subLength\
    \ > stringLength){\n\t\treturn 0;\n\t}\n\tfor(var i = 0; i <= stringLength; i++){\n\
    \t\tif(string.slice(i, i + subLength) === substring){\n\t\t\tcount++;\n\t\t}\n\
    \t}\n\treturn count;\n}\n", "\tvar times = 0;\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(string.substring(i, i + substring.length) == substring){\n\t\t\
    \ttimes++;\n\t\t}\n\t}\n\treturn times;\n}\n\n", "  let count = 0;\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (string.slice(i, i + substring.length)\
    \ === substring) {\n      count++;\n    }\n  }\n  return count;\n}", "  if(substring\
    \ === \"\") return 0;\n  var count = 0;\n  for(var i = 0; i < string.length; i++){\n\
    \    if(string[i] === substring[0]){\n      if(string.slice(i,i+substring.length)\
    \ === substring){\n        count += 1;\n      }\n    }\n  }\n  return count;\n\
    }\n", "  return string.split(substring).length - 1;\n}", "\tif (substring.length\
    \ > string.length){\n\t\treturn 0;\n\t}\n\tif (substring.length == 0){\n\t\treturn\
    \ 0;\n\t}\n\tvar start_index = 0;\n\tvar end_index = substring.length;\n\tvar\
    \ counter = 0;\n\twhile (end_index <= string.length){\n\t\tvar temp_string = string.substring(start_index,\
    \ end_index);\n\t\tif (temp_string == substring){\n\t\t\tcounter += 1;\n\t\t}\n\
    \t\tstart_index += 1;\n\t\tend_index += 1;\n\t}\n\treturn counter;\n}\n", "  \
    \  let count = 0;\n    if (string.length === 0 || substring.length === 0) {\n\
    \        return count;\n    }\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (string.substring(i, i + substring.length) === substring) {\n    \
    \        count += 1;\n        }\n    }\n    return count;\n}\n", "\tvar array\
    \ = string.split(substring);\n\treturn array.length - 1;\n}\n", "    var count\
    \ = 0;\n    var subLen = substring.length;\n    var strLen = string.length;\n\
    \    for(var i = 0; i <= strLen - subLen; i++){\n        if(string.substring(i,\
    \ i + subLen) == substring){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "  return string.split(substring).length - 1;\n}\n", "    var\
    \ counter = 0;\n    for (var i = 0; i < string.length; i++) {\n        if (string.slice(i,\
    \ substring.length + i) == substring) {\n            counter += 1;\n        }\n\
    \    }\n    return counter;\n}\n", "  var count = 0\n  var i = string.indexOf(substring)\n\
    \  while (i != -1){\n    count += 1\n    i = string.indexOf(substring, i + 1)\n\
    \  }\n  return count\n}\n\n", "    var i = 0;\n    var count = 0;\n    while (i\
    \ < string.length) {\n        if (string.indexOf(substring, i) === i) {\n    \
    \        count += 1;\n            i += substring.length;\n        } else {\n \
    \           i += 1;\n        }\n    }\n    return count;\n}\n\n", "    let count\
    \ = 0;\n    for (let i = 0; i < string.length; i++){\n        if (string.substring(i,\
    \ i + substring.length) == substring){\n            count++;\n        }\n    }\n\
    \    return count;\n}", "    if(!string.length || !substring.length) return 0;\n\
    \    var result = 0;\n    var i = 0;\n    while(string.length){\n        if(string.indexOf(substring)\
    \ != -1){\n            result++;\n            string = string.slice(string.indexOf(substring)\
    \ + 1);\n        } else {\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    return string.split(substring).length - 1;\n}", "  var times = 0;\n\
    \  var string_size = string.length;\n  var substring_size = substring.length;\n\
    \  for(var i = 0; i < string_size; i++){\n    if(string.substring(i, i + substring_size)\
    \ == substring){\n      times += 1;\n    }\n  }\n  return times;\n}\n", "  return\
    \ string.split(substring).length - 1;\n}\n", "    let times = 0;\n    for (let\
    \ i = 0; i < string.length; i++){\n        if (string.slice(i, i + substring.length)\
    \ === substring){\n            times++;\n        }\n    }\n    return times;\n\
    }", "  if (string.length == 0) {\n    return 0;\n  } else if (string.indexOf(substring)\
    \ < 0) {\n    return 0;\n  } else {\n    return 1 + how_many_times(string.slice(string.indexOf(substring)\
    \ + substring.length), substring);\n  }\n}\n", "    var times = 0;\n    var regex\
    \ = new RegExp(substring, \"g\");\n    if (string.match(regex)){\n        times\
    \ = string.match(regex).length;\n    }\n    return times;\n}\n\n", "  if (string.length\
    \ === 0) {\n    return 0;\n  }\n  let times = 0;\n  for (let i = 0; i < string.length;\
    \ i++) {\n    if (string.slice(i, i + substring.length) === substring) {\n   \
    \   times++;\n    }\n  }\n  return times;\n}\n", "    let count = 0;\n    for\
    \ (let i = 0; i < string.length; i++){\n        if (string.substring(i, i + substring.length)\
    \ == substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n", "  //Base case\n  if(string.length < substring.length)\n    return 0;\n\
    \  //Recursive call\n  if(string.startsWith(substring))\n    return 1 + how_many_times(string.substring(1),\
    \ substring);\n  else\n    return how_many_times(string.substring(1), substring);\n\
    }\n", "    \n}\n", "    for(let i = 0; i < string.length; i++){\n        if(string[i]\
    \ === substring[0]){\n            let found = true;\n            for(let x = 0;\
    \ x < substring.length; x++){\n                if(string[i + x] !== substring[x]){\n\
    \                    found = false;\n                    break;\n            \
    \    }\n            }\n            if(found){\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}", "    if(string.length ==\
    \ 0){\n        return 0;\n    }\n    else if(string.length > 0 && substring.length\
    \ == 0){\n        return string.length + 1;\n    }\n    else{\n        var result\
    \ = (string.length - string.replace(new RegExp(substring, \"g\"), \"\").length)\
    \ / substring.length;\n        return result;\n    }\n}\n", "    let times = 0;\n\
    \    for (let i = 0; i < string.length; i++){\n        if (string.slice(i, i +\
    \ substring.length) === substring){\n            times++;\n        }\n    }\n\
    \    return times;\n}\n", "    return string.split(substring).length - 1;\n}\n",
  "\t\n}\n", "\tlet count = 0;\n\tlet index = string.indexOf(substring);\n\twhile\
    \ (index >= 0) {\n\t\tcount++;\n\t\tindex = string.indexOf(substring, index +\
    \ 1);\n\t}\n\treturn count;\n}\n", "\tvar answer = 0;\n\tvar start = 0;\n\tvar\
    \ end = substring.length;\n\twhile (end <= string.length){\n\t\tvar piece = string.slice(start,\
    \ end);\n\t\tif (piece === substring){\n\t\t\tanswer++;\n\t\t}\n\t\tstart++;\n\
    \t\tend++;\n\t}\n\treturn answer;\n}\n", "  var index = 0;\n  var count = 0;\n\
    \  while (index < string.length) {\n    index = string.indexOf(substring, index);\n\
    \    if (index >= 0) {\n      count++;\n      index += substring.length;\n   \
    \ } else {\n      break;\n    }\n  }\n  return count;\n}\n", "    let index =\
    \ string.indexOf(substring);\n    let result = 0;\n    if (index === -1) {\n \
    \       return result;\n    } else {\n        result++;\n        let shorter_string\
    \ = string.slice(index + 1, string.length);\n        return result + how_many_times(shorter_string,\
    \ substring);\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

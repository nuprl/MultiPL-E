name: HumanEval_67_fruit_distribution
language: js
prompt: "//In this task, you will be given a string that represents a number of apples\
  \ and oranges \n// that are distributed in a basket of fruit this basket contains\
  \ \n// apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n// the oranges and apples and an integer that represent the total\
  \ number of the fruits \n// in the basket return the number of the mango fruits\
  \ in the basket.\n// for examble:\n// >>> fruit_distribution(\"5 apples and 6 oranges\"\
  , 19)\n// 8\n// >>> fruit_distribution(\"0 apples and 1 oranges\", 3)\n// 2\n//\
  \ >>> fruit_distribution(\"2 apples and 3 oranges\", 100)\n// 95\n// >>> fruit_distribution(\"\
  100 apples and 1 oranges\", 120)\n// 19\nfunction fruit_distribution(s, n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fruit_distribution;\n  assert.deepEqual(candidate(\"5 apples and 6 oranges\"\
  , 19),8);\n  assert.deepEqual(candidate(\"5 apples and 6 oranges\", 21),10);\n \
  \ assert.deepEqual(candidate(\"0 apples and 1 oranges\", 3),2);\n  assert.deepEqual(candidate(\"\
  1 apples and 0 oranges\", 3),2);\n  assert.deepEqual(candidate(\"2 apples and 3\
  \ oranges\", 100),95);\n  assert.deepEqual(candidate(\"2 apples and 3 oranges\"\
  , 5),0);\n  assert.deepEqual(candidate(\"1 apples and 100 oranges\", 120),19);\n\
  }\n\ntest();"
completions: ["    let [a, o] = s.split(' ').map(x => parseInt(x));\n    return n\
    \ - a - o;\n}\n", "    let split_s = s.split(\" \");\n    let num_of_apples =\
    \ parseInt(split_s[0]);\n    let num_of_oranges = parseInt(split_s[3]);\n    let\
    \ sum = num_of_apples + num_of_oranges;\n    return n - sum;\n}", "    let [apples,\
    \ oranges] = s.split(\" and \").map(a => parseInt(a.split(\" \")[0]))\n    return\
    \ n - (apples + oranges)\n}", "\tvar s = s.split(\" \");\n\tvar a = parseInt(s[0]);\n\
    \tvar o = parseInt(s[2]);\n\treturn (n - a - o);\n}", "    let x = s.split(\"\
    \ \")\n    let apples = x[0]\n    let oranges = x[3]\n    let sum = apples + oranges;\n\
    \    return n - sum;\n}", "    // Your code goes here\n    var o=Number(s.split(\"\
    \ \")[3]);\n    var a=Number(s.split(\" \")[0]);\n    var sum=o+a;\n    var m=n-sum;\n\
    \    return m;\n}", "    let s2 = s.replace(/apples/g, '').replace(/oranges/g,\
    \ '').replace(/and/g, '').replace(/ /g, '').split('');\n    let sum = 0;\n   \
    \ for(let i = 0; i < s2.length; i++){\n        sum += Number(s2[i]);\n    }\n\
    \    return n - sum;\n}\n", "\tvar arr = s.split(\" \");\n\tvar s_s = arr[0];\n\
    \tvar s_o = arr[3];\n\tvar n_s = n - s_s - s_o;\n\treturn n_s;\n}", "    const\
    \ part = s.split(\" \");\n    let sum = 0;\n    for(let el of part){\n       \
    \ if(el==\"apples\" || el==\"oranges\") continue;\n        sum += parseInt(el);\n\
    \    }\n    return n - sum;\n}", "    //your code here\n}\n", "\tlet distribution\
    \ = s.split(\" \");\n\tlet apples = parseInt(distribution[0]);\n\tlet oranges\
    \ = parseInt(distribution[3]);\n\treturn n - (apples + oranges);\n}\n", "    var\
    \ newstr = s.split(' ');\n    var apples = newstr[0];\n    var oranges = newstr[4];\n\
    \    var total = parseInt(apples) + parseInt(oranges);\n    var mango = n - total;\n\
    \    return mango;\n}", "\tlet fruits = s.split(\" and \")\n\tlet apples = Number(fruits[0].split(\"\
    \ \")[0])\n\tlet oranges = Number(fruits[1].split(\" \")[0])\n\tlet mango = n\
    \ - apples - oranges\n\treturn mango\n}\n", "    var t = s.split(\" \");\n   \
    \ var sum = parseInt(t[0]) + parseInt(t[2]);\n    return n - sum;\n}", "    let\
    \ sArr = s.split(\" \")\n    let apples = Number(sArr[0])\n    let oranges = Number(sArr[3])\n\
    \    let basket = n - apples - oranges;\n    return basket\n}", "    var orange\
    \ = 0;\n    var apple = 0;\n    var mango = 0;\n    var info = s.split(\" \");\n\
    \    if(s.indexOf(\"orange\") >= 0){\n        orange = Number(info[0]);\n    }\n\
    \    if(s.indexOf(\"apple\") >= 0){\n        apple = Number(info[0]);\n    }\n\
    \    var fruit = orange + apple;\n    mango = n - fruit;\n    return mango;\n\
    }\n", "    let arr = s.split(\" \")\n    let n2 = n - (parseInt(arr[0]) + parseInt(arr[3]))\n\
    \    return n2\n}", "    let firstWords = s.split(\" \")[0];\n    let fruitsNumber\
    \ = n - s.match(/\\d/g).reduce((a,b) => parseInt(a) + parseInt(b), 0);\n    return\
    \ fruitsNumber;\n}", "\tvar arr = s.split(\" \")\n\tvar num1 = arr[0]\n\tvar num2\
    \ = arr[3]\n\tvar sum = parseInt(num1) + parseInt(num2)\n\tvar diff = n - sum\n\
    \treturn diff\n}", "  var num = s.split(\" \")\n  var a = parseInt(num[0])\n \
    \ var o = parseInt(num[3])\n  return n - (a + o)\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

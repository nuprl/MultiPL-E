name: HumanEval_114_minSubArraySum
language: js
prompt: "//Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\n// >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n\
  // 1\n// >>> minSubArraySum([-1, -2, -3])\n// -6\nfunction minSubArraySum(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = minSubArraySum;\n  assert.deepEqual(candidate([2, 3, 4, 1, 2, 4]),1);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3]),-6);\n  assert.deepEqual(candidate([-1, -2, -3, 2, -10]),-14);\n  assert.deepEqual(candidate([-9999999999999999]),-9999999999999999);\n\
  \  assert.deepEqual(candidate([0, 10, 20, 1000000]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 10, -5]),-6);\n  assert.deepEqual(candidate([100, -1, -2, -3, 10, -5]),-6);\n\
  \  assert.deepEqual(candidate([10, 11, 13, 8, 3, 4]),3);\n  assert.deepEqual(candidate([100,\
  \ -33, 32, -1, 0, -2]),-33);\n  assert.deepEqual(candidate([-10]),-10);\n  assert.deepEqual(candidate([7]),7);\n\
  \  assert.deepEqual(candidate([1, -1]),-1);\n}\n\ntest();"
completions: ["    // code here\n}\nmodule.exports = minSubArraySum;", "    let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        minSum = Math.min(minSum, sum);\n  \
    \      if(sum < 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n\
    }\n\nmodule.exports = minSubArraySum;", "    let sum = 0;\n    let minSum = nums[0];\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < minSum){\n            minSum = sum;\n        }\n        if(sum > 0){\n   \
    \         sum = 0;\n        }\n    }\n    return minSum;\n}\n", "    let minSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        let sum = 0;\n    \
    \    for(let j = i; j < nums.length; j++){\n            sum += nums[j];\n    \
    \        if(sum < minSum){\n                minSum = sum;\n            }\n   \
    \     }\n    }\n    return minSum;\n}", "    if (nums.length === 0) return 0;\n\
    \    if (nums.length === 1) return nums[0];\n    var min = 0;\n    var max = 0;\n\
    \    var currentSum = 0;\n    var i = 0;\n    while (i < nums.length) {\n    \
    \    currentSum += nums[i];\n        if (currentSum > max) {\n            max\
    \ = currentSum;\n        }\n        if (currentSum < min) {\n            min =\
    \ currentSum;\n        }\n        i++;\n    }\n    return min;\n}", "  let minSum\
    \ = Number.MAX_SAFE_INTEGER;\n  let sum = 0;\n  let i = 0;\n  while(i < nums.length){\n\
    \    let j = i;\n    sum = 0;\n    while(j < nums.length){\n      sum += nums[j];\n\
    \      minSum = Math.min(minSum, sum);\n      j++;\n    }\n    i++;\n  }\n  return\
    \ minSum;\n}\n", "    let minSum = Infinity;\n    let currentSum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n        }\n        if(currentSum\
    \ > 0){\n            currentSum = 0;\n        }\n    }\n    return minSum;\n}\n",
  "    // Write your code here.\n    let minimum = nums[0];\n    let sum = 0;\n  \
    \  for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < minimum){\n            minimum = sum;\n        }\n        if(sum > 0){\n \
    \           sum = 0;\n        }\n    }\n    return minimum;\n}\n", "  let cur\
    \ = nums[0];\n  let min = cur;\n  for (let i = 1; i < nums.length; i++) {\n  \
    \  cur = Math.min(nums[i], cur + nums[i]);\n    min = Math.min(min, cur);\n  }\n\
    \  return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let currSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum += nums[i];\n\
    \        if(currSum < minSum){\n            minSum = currSum;\n        }\n   \
    \     if(currSum > 0){\n            currSum = 0;\n        }\n    }\n    return\
    \ minSum;\n}\n", "  let minSum = Number.MAX_SAFE_INTEGER;\n  let currentSum =\
    \ 0;\n  let startIndex = 0;\n  let endIndex = 0;\n  while(endIndex < nums.length){\n\
    \    currentSum += nums[endIndex];\n    if(currentSum < minSum){\n      minSum\
    \ = currentSum;\n    }\n    if(currentSum < 0){\n      currentSum = 0;\n     \
    \ startIndex = endIndex + 1;\n    }\n    endIndex++;\n  }\n  return minSum;\n}",
  "    let currentSum = nums[0];\n    let minSum = nums[0];\n    for(let i = 1; i\
    \ < nums.length; i++){\n        currentSum = Math.min(currentSum + nums[i], nums[i]);\n\
    \        minSum = Math.min(currentSum, minSum);\n    }\n    return minSum;\n}\n\
    minSubArraySum([2, 3, 4, 1, 2, 4]);", "\tlet min = nums[0];\n\tlet sum = nums[0];\n\
    \tfor(let i = 1; i < nums.length; i++){\n\t\tsum = Math.min(nums[i], sum + nums[i]);\n\
    \t\tmin = Math.min(min, sum);\n\t}\n\treturn min;\n}", "    let minSum = 0;\n\
    \    let minCount = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < minSum){\n            minSum\
    \ = sum;\n            minCount = i + 1;\n        }\n    }\n    return nums.slice(minCount\
    \ - nums.length).reduce((a, b) => a + b);\n}\n", "\n}\n", "    // find minimum\
    \ sum of any subarray of nums\n    let total = 0;\n    let minSum = 0;\n    let\
    \ min = Infinity;\n    for (let i = 0; i < nums.length; i++) {\n        total\
    \ += nums[i];\n        min = Math.min(min, total - minSum);\n        minSum =\
    \ Math.min(minSum, total);\n    }\n    return min;\n}\n", "    let minSum = Infinity;\n\
    \    let sum = 0;\n    let i = 0;\n    let j = 0;\n    while(j < nums.length){\n\
    \        sum += nums[j];\n        j++;\n        while(sum >= 0){\n           \
    \ minSum = Math.min(minSum, sum);\n            sum -= nums[i];\n            i++;\n\
    \        }\n    }\n    return minSum;\n}\n", "    let start = 0;\n    let end\
    \ = 0;\n    let minimum = Infinity;\n    let currentSum = 0;\n    while(start\
    \ < nums.length){\n        if(currentSum < 0){\n            start = end;\n   \
    \         currentSum = 0;\n        }\n        currentSum += nums[end];\n     \
    \   minimum = Math.min(minimum, currentSum);\n        end++;\n    }\n    return\
    \ minimum;\n}", "    // check for empty array\n    if(nums.length === 0) return\
    \ 0;\n    let minSum = nums[0];\n    let tempSum = nums[0];\n    for(let i = 1;\
    \ i < nums.length; i++){\n        tempSum = Math.min(tempSum + nums[i], nums[i]);\n\
    \        minSum = Math.min(minSum, tempSum);\n    }\n    return minSum;\n}", " \
    \ var minSum = 0;\n  var sum = 0;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n\
    \  var iValue = 0;\n  var jValue = 0;\n  for (i; i < nums.length; i++) {\n   \
    \ iValue = nums[i];\n    for (j = i; j < nums.length; j++) {\n      jValue = nums[j];\n\
    \      sum += jValue;\n      if (sum < minSum || k === 0) {\n        minSum =\
    \ sum;\n      }\n      k++;\n    }\n    sum = 0;\n  }\n  return minSum;\n}\n",
  "    let min = nums[0];\n    let sub = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        sub += nums[i];\n        if(sub < min){\n            min = sub;\n   \
    \     }\n        if(sub > 0){\n            sub = 0;\n        }\n    }\n    return\
    \ min;\n}", "    // Write your code here.\n    let minsum = 0;\n    let currsum\
    \ = 0;\n    let minstart = 0;\n    let minend = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        currsum += nums[i];\n        if(minsum === 0){\n            minsum\
    \ = currsum;\n            minstart = i;\n            minend = i;\n        }\n\
    \        if(currsum < minsum){\n            minsum = currsum;\n            minstart\
    \ = i;\n            minend = i;\n        }\n        if(currsum - minsum > 0){\n\
    \            currsum = 0;\n        }\n    }\n    return [minstart, minend, minsum];\n\
    }\n", "  let start = 0;\n  let end = 0;\n  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let sum = 0;\n  while(start < nums.length){\n    if(sum < 0){\n      sum =\
    \ 0;\n      end = start;\n    }\n    sum += nums[end];\n    min = Math.min(min,\
    \ sum);\n    if(end === nums.length - 1){\n      start++;\n      end = start;\n\
    \    } else {\n      end++;\n    }\n  }\n  return min;\n}", "\tlet minSum = Infinity;\n\
    \tlet sum = 0;\n\tlet i = 0;\n\tlet j = 0;\n\twhile(j < nums.length){\n\t\tsum\
    \ += nums[j];\n\t\twhile(sum >= 0){\n\t\t\tminSum = Math.min(minSum, sum);\n\t\
    \t\tsum -= nums[i];\n\t\t\ti++;\n\t\t}\n\t\tj++;\n\t}\n\treturn minSum;\n}", " \
    \   // Write your code here\n    let sum = 0;\n    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i];\n      \
    \  if (sum < minSum) {\n            minSum = sum;\n        }\n        if (sum\
    \ > 0) {\n            sum = 0;\n        }\n    }\n    return minSum;\n}\n", " \
    \ let currSum = 0;\n  let minSum = Infinity;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    currSum += nums[i];\n    if (currSum < minSum) {\n      minSum =\
    \ currSum;\n    }\n    if (currSum > 0) {\n      currSum = 0;\n    }\n  }\n  return\
    \ minSum;\n}\n", "  let min = 0;\n  let len = nums.length;\n  for(let i = 0; i\
    \ < len; i++){\n    for(let j = 0; j < len; j++){\n      if(j > i && i === 0){\n\
    \        min = nums[i] + nums[j];\n      }\n      let subArr = nums.slice(i, j\
    \ + 1);\n      let subArrSum = subArr.reduce((a, b) => a + b, 0);\n      if(subArrSum\
    \ < min){\n        min = subArrSum;\n      }\n    }\n  }\n  return min;\n}\n",
  "    let minSum = Infinity;\n    let currentSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        currentSum += nums[i];\n        if(currentSum < minSum){\n  \
    \          minSum = currentSum;\n        }\n        if(currentSum > 0){\n    \
    \        currentSum = 0;\n        }\n    }\n    return minSum;\n}\n", "    let\
    \ minsum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum += nums[i];\n        if(sum < minsum){\n            minsum = sum;\n\
    \        }\n        if(sum > 0){\n            sum = 0;\n        }\n    }\n   \
    \ return minsum;\n}", "    let currentSum = nums[0];\n    let minSum = nums[0];\n\
    \    for(let i = 1; i < nums.length; i++){\n        currentSum = Math.min(currentSum\
    \ + nums[i], nums[i]);\n        minSum = Math.min(currentSum, minSum);\n    }\n\
    \    return minSum;\n}\n", "    if(nums.length === 0) return 0;\n    let min =\
    \ nums[0];\n    let current = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        current += nums[i];\n        if(current < min) min = current;\n     \
    \   if(current > 0) current = 0;\n    }\n    return min;\n}", "    let minSum\
    \ = Infinity;\n    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        currSum += nums[i];\n        if(currSum < minSum){\n            minSum\
    \ = currSum;\n        }\n        if(currSum > 0){\n            currSum = 0;\n\
    \        }\n    }\n    return minSum;\n}", "    let sum = 0\n    let min = Infinity\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i]\n        if(sum\
    \ < min){\n            min = sum\n        }\n        if(sum > 0){\n          \
    \  sum = 0\n        }\n    }\n    return min\n}", "    let minSum = nums[0];\n\
    \    let sum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        sum\
    \ = Math.min(nums[i], sum + nums[i]);\n        minSum = Math.min(minSum, sum);\n\
    \    }\n    return minSum;\n}", "  let minSum = nums[0]\n  let currentSum = 0\n\
    \  for (let i = 0; i < nums.length; i++){\n    currentSum += nums[i]\n    if (currentSum\
    \ < minSum){\n      minSum = currentSum\n    }\n    if (currentSum > 0){\n   \
    \   currentSum = 0\n    }\n  }\n  return minSum\n}\n", "\n}\n", "  let n = nums.length;\n\
    \  let minSum = Infinity;\n  let currSum = 0;\n  let i = 0;\n  let j = 0;\n  while\
    \ (i < n){\n    while (j < n){\n      currSum += nums[j];\n      if (currSum <\
    \ minSum){\n        minSum = currSum;\n      }\n      j++;\n    }\n    currSum\
    \ = 0;\n    i++;\n    j = i;\n  }\n  return minSum;\n}", "    if (nums.length\
    \ <= 1) return nums[0];\n    if (nums.length <= 0) return 0;\n    let min = nums[0],\
    \ sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (sum < 0)\
    \ sum = 0;\n        sum += nums[i];\n        min = Math.min(min, sum);\n    }\n\
    \    return min;\n}\n", "    let minSum = Number.MAX_SAFE_INTEGER;\n    let currentSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n\
    \        if(currentSum < minSum){\n            minSum = currentSum;\n        }\n\
    \        if(currentSum > 0){\n            currentSum = 0;\n        }\n    }\n\
    \    return minSum;\n}", "    let min = Number.MAX_VALUE;\n    let subSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        subSum += nums[i];\n     \
    \   if(subSum < min){\n            min = subSum;\n        }\n        if(subSum\
    \ > 0){\n            subSum = 0;\n        }\n    }\n    return min;\n}", "   \
    \ var min = Infinity;\n    for(var i = 0; i < nums.length; i++){\n        var\
    \ sum = 0;\n        for(var j = i; j < nums.length; j++){\n            sum +=\
    \ nums[j];\n            if(sum < min){\n                min = sum;\n         \
    \   }\n        }\n    }\n    return min;\n}", "\n}\n", "    let minSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let currentSum = 0;\n    \
    \    for(let j = i; j < nums.length; j++){\n            currentSum += nums[j];\n\
    \            if(minSum === 0){\n                minSum = currentSum;\n       \
    \     } else if(currentSum < minSum){\n                minSum = currentSum;\n\
    \            }\n        }\n    }\n    return minSum;\n}", "    let curr_min =\
    \ nums[0];\n    let curr_max = nums[0];\n    for(let i = 1; i < nums.length; i++){\n\
    \        curr_max = Math.max(nums[i], curr_max + nums[i]);\n        curr_min =\
    \ Math.min(curr_min, curr_max);\n    }\n    return curr_min;\n}", "    let minSum\
    \ = Number.MAX_SAFE_INTEGER\n    let start = 0\n    let end = 0\n    let tempSum\
    \ = 0\n    for(;end < nums.length; end++){\n        tempSum += nums[end]\n   \
    \     if(tempSum < minSum){\n            minSum = tempSum\n        }\n       \
    \ if(tempSum > 0){\n            start = end\n            tempSum = 0\n       \
    \ }\n    }\n    return minSum\n}\n", "  let start = 0;\n  let end = 0;\n  let\
    \ curSum = 0;\n  let minSum = Number.MAX_SAFE_INTEGER;\n  while(end < nums.length){\n\
    \    curSum += nums[end];\n    while(curSum >= 0){\n      minSum = Math.min(minSum,\
    \ curSum);\n      curSum -= nums[start];\n      start++;\n    }\n    end++;\n\
    \  }\n  return minSum;\n}\n", "  if (nums.length < 2) return nums[0];\n  let left\
    \ = 0;\n  let right = 1;\n  let minSum = nums[left] + nums[right];\n  let currentSum\
    \ = minSum;\n  while (right < nums.length) {\n    currentSum += nums[right];\n\
    \    while (currentSum > minSum) {\n      currentSum -= nums[left];\n      left++;\n\
    \    }\n    if (currentSum < minSum) {\n      minSum = currentSum;\n    }\n  \
    \  right++;\n  }\n  return minSum;\n}", "    var sum = 0;\n    var minSum = 0;\n\
    \    var minSoFar = Infinity;\n    for(var i = 0; i < nums.length; i++){\n   \
    \     sum += nums[i];\n        minSoFar = Math.min(minSoFar, sum - minSum);\n\
    \        minSum = Math.min(minSum, sum);\n    }\n    return minSoFar;\n}\n", " \
    \   if (nums.length == 0) return 0;\n    let currentSum = nums[0];\n    let minSum\
    \ = nums[0];\n    for (let i = 1; i < nums.length; i++) {\n        currentSum\
    \ = Math.min(currentSum + nums[i], nums[i]);\n        minSum = Math.min(currentSum,\
    \ minSum);\n    }\n    return minSum;\n}", "    let len = nums.length;\n    let\
    \ minSum = Infinity;\n    let currSum = 0;\n    for(let i = 0; i < len; i++){\n\
    \        currSum += nums[i];\n        if(currSum < minSum){\n            minSum\
    \ = currSum;\n        }\n        if(currSum > 0){\n            currSum = 0;\n\
    \        }\n    }\n    return minSum;\n}", "    let min = Infinity\n    let cur\
    \ = 0\n    for(let i = 0; i < nums.length; i++){\n        cur += nums[i]\n   \
    \     if(cur < min){\n            min = cur\n        }\n        if(cur > 0){\n\
    \            cur = 0\n        }\n    }\n    return min\n}", "    let curSum =\
    \ 0;\n    let minSum = Infinity;\n    for(let i = 0; i < nums.length; i++){\n\
    \        curSum += nums[i];\n        if(curSum < minSum){\n            minSum\
    \ = curSum;\n        }\n        if(curSum > 0){\n            curSum = 0;\n   \
    \     }\n    }\n    return minSum;\n}\n", "    let currentSum = 0;\n    let minSum\
    \ = nums[0];\n    for(let i = 0; i < nums.length; i++){\n        currentSum +=\
    \ nums[i];\n        if(currentSum < minSum){\n            minSum = currentSum;\n\
    \        }\n        if(currentSum > 0){\n            currentSum = 0;\n       \
    \ }\n    }\n    return minSum;\n}\n\nmodule.exports = minSubArraySum;", "    var\
    \ minSum = 0;\n    var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n \
    \       sum += nums[i];\n        if(sum < minSum){\n            minSum = sum;\n\
    \        }\n    }\n    return minSum;\n}", "    let minSum = Infinity;\n    let\
    \ currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        if(currentSum < minSum){\n            minSum = currentSum;\n\
    \        }\n        if(currentSum > 0){\n            currentSum = 0;\n       \
    \ }\n    }\n    return minSum;\n}", "    let sum = nums[0];\n    let currSum =\
    \ nums[0];\n    for(let i = 1; i < nums.length; i++){\n        currSum = Math.min(currSum+nums[i],\
    \ nums[i]);\n        sum = Math.min(sum, currSum);\n    }\n    return sum;\n}",
  "  let total = 0;\n  let minSum = Infinity;\n  let tempSum = 0;\n  for (let i =\
    \ 0; i < nums.length; i++) {\n    total += nums[i];\n    tempSum += nums[i];\n\
    \    if (tempSum < minSum) {\n      minSum = tempSum;\n    }\n    if (tempSum\
    \ > 0) {\n      tempSum = 0;\n    }\n  }\n  return minSum === Infinity ? total\
    \ : minSum;\n}\n", "  let minSum = Infinity;\n  let currentSum = 0;\n  let start\
    \ = 0;\n  let end = 0;\n  while (start < nums.length){\n    while (currentSum\
    \ <= minSum && end < nums.length){\n      currentSum += nums[end];\n      minSum\
    \ = Math.min(minSum, currentSum);\n      end++;\n    }\n    currentSum -= nums[start];\n\
    \    start++;\n  }\n  return minSum;\n}\n", "  let minSum = nums[0];\n  let sum\
    \ = nums[0];\n  for (let i = 1; i < nums.length; i++) {\n    sum = Math.min(nums[i],\
    \ sum + nums[i]);\n    minSum = Math.min(minSum, sum);\n  }\n  return minSum;\n\
    }\n", "    if (nums.length === 0) return 0;\n    let minSum = Infinity;\n    let\
    \ currentSum = 0;\n    for (let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        if (currentSum < minSum){\n            minSum = currentSum;\n\
    \        }\n        if (currentSum > 0){\n            currentSum = 0;\n      \
    \  }\n    }\n    return minSum;\n}\n", "  let total = 0;\n  let minSum = 0;\n\
    \  let left = 0;\n  let right = 0;\n  while (right < nums.length) {\n    total\
    \ += nums[right];\n    if (total > minSum) {\n      minSum = total;\n    }\n \
    \   right++;\n  }\n  while (left < nums.length) {\n    total -= nums[left];\n\
    \    if (total > minSum) {\n      minSum = total;\n    }\n    left++;\n  }\n \
    \ return minSum;\n}\n", "    let min = 0;\n    let sum = 0;\n    for(let i = 0;\
    \ i < nums.length; i++){\n        sum += nums[i];\n        if(min > sum){\n  \
    \          min = sum;\n        }\n    }\n    return min;\n}", "    let i = 0;\n\
    \    let j = i + 1;\n    let min = Infinity;\n    let sum = nums[i];\n    while(i\
    \ < nums.length){\n        if(sum < min){\n            min = sum;\n        }\n\
    \        if(j < nums.length){\n            sum += nums[j];\n            j++;\n\
    \        } else {\n            i++;\n            j = i + 1;\n            sum =\
    \ nums[i];\n        }\n    }\n    return min;\n}", "    let minSum = Infinity;\n\
    \    let currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        if(currentSum < minSum){\n            minSum = currentSum;\n\
    \        }\n        if(currentSum > 0){\n            currentSum = 0;\n       \
    \ }\n    }\n    return minSum;\n}", "    let min = Infinity;\n    let sum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < min){\n            min = sum;\n        }\n        if(sum > 0){\n         \
    \   sum = 0;\n        }\n    }\n    return min;\n}\nmodule.exports = minSubArraySum;",
  "  let minSum = nums[0];\n  let currentSum = 0;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] < minSum) {\n      minSum = nums[i];\n    }\n    currentSum\
    \ += nums[i];\n    if (currentSum < minSum) {\n      minSum = currentSum;\n  \
    \  }\n  }\n  return minSum;\n}", "    let minSum = Infinity;\n    let sum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < minSum){\n            minSum = sum;\n        }\n        if(sum > 0){\n   \
    \         sum = 0;\n        }\n    }\n    return minSum;\n}", "    let min_sum\
    \ = 0\n    let sub_array_sum = 0\n    let i, j, min_i, min_j\n    for(i = 0; i\
    \ < nums.length; i++){\n        for(j = i; j < nums.length; j++){\n          \
    \  sub_array_sum += nums[j]\n            if(sub_array_sum < min_sum){\n      \
    \          min_sum = sub_array_sum\n                min_i = i\n              \
    \  min_j = j\n            }\n        }\n        sub_array_sum = 0\n    }\n   \
    \ console.log(min_sum)\n    console.log(min_i, min_j)\n}\n", "    let minSum =\
    \ Infinity;\n    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        currSum += nums[i];\n        if(currSum < minSum){\n            minSum\
    \ = currSum;\n        }\n        if(currSum > 0){\n            currSum = 0;\n\
    \        }\n    }\n    return minSum;\n}", "    let minSum = Infinity;\n    let\
    \ runningSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        runningSum\
    \ += nums[i];\n        minSum = Math.min(minSum, runningSum);\n        if(runningSum\
    \ < 0){\n            runningSum = 0;\n        }\n    }\n    return minSum;\n}\n",
  "  let currentMinimum = Infinity;\n  let currValue = 0;\n  for (let i = 0; i < nums.length;\
    \ i++){\n    currValue += nums[i];\n    if (currValue < currentMinimum){\n   \
    \   currentMinimum = currValue;\n    }\n    if (currValue > 0){\n      currValue\
    \ = 0;\n    }\n  }\n  return currentMinimum;\n}\n\nmodule.exports = {\n  maxSubArraySum,\n\
    \  minSubArraySum\n};", "  let sum = 0;\n  let min = nums[0];\n  for(let i = 0;\
    \ i < nums.length; i++){\n    sum += nums[i];\n    if(sum < min){\n      min =\
    \ sum;\n    }\n    if(sum > 0){\n      sum = 0;\n    }\n  }\n  return min;\n}\n",
  "    let minSum = nums[0]\n    let start = 0\n    let end = 0\n    let currentSum\
    \ = 0\n    while(start < nums.length){\n        if(end < nums.length && currentSum\
    \ + nums[end] < 0){\n            currentSum += nums[end]\n            end += 1\n\
    \        } else {\n            minSum = Math.min(minSum, currentSum)\n       \
    \     currentSum -= nums[start]\n            start += 1\n        }\n    }\n  \
    \  return minSum\n}\n", "    var minSum = Infinity;\n    var sum = 0;\n    var\
    \ i = 0;\n    var j = 0;\n    while(j < nums.length){\n        sum += nums[j];\n\
    \        while(sum >= minSum && i < j){\n            minSum = Math.min(minSum,\
    \ sum);\n            sum -= nums[i];\n            i++;\n        }\n        j++;\n\
    \    }\n    return minSum;\n}\n", "    let minSum = nums[0];\n    let numsLength\
    \ = nums.length;\n    for(let i = 0; i < numsLength; i++){\n        let tempSum\
    \ = 0;\n        for(let j = i; j < numsLength; j++){\n            tempSum += nums[j];\n\
    \            if(tempSum < minSum){\n                minSum = tempSum;\n      \
    \      }\n        }\n    }\n    return minSum;\n}\n", "    // add whatever parameters\
    \ you deem necessary - good luck!\n    let currentSum = 0;\n    let minSum = Infinity;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        currentSum += nums[i];\n\
    \        if (currentSum < minSum) {\n            minSum = currentSum;\n      \
    \  }\n        if (currentSum > 0) {\n            currentSum = 0;\n        }\n\
    \    }\n    return minSum;\n}\n", "  let min = Infinity;\n  let sum = 0;\n  for\
    \ (let i = 0; i < nums.length; i++) {\n    sum += nums[i];\n    if (sum < min)\
    \ {\n      min = sum;\n    }\n    if (sum > 0) {\n      sum = 0;\n    }\n  }\n\
    \  return min;\n}\n", "    let min = nums[0];\n    let sum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n\
    \        }\n    }\n    return min;\n}", "  let minTotal = 0;\n  let total = 0;\n\
    \  let start = 0;\n  let end = 0;\n  while (start < nums.length) {\n    while\
    \ (end < nums.length) {\n      total += nums[end];\n      if (minTotal === 0 ||\
    \ total < minTotal) {\n        minTotal = total;\n      }\n      end++;\n    }\n\
    \    start++;\n    end = start;\n    total = 0;\n  }\n  return minTotal;\n}\n\n\
    module.exports = {\n  minSubArraySum\n};", "  let total = 0;\n  let currentMin\
    \ = nums[0];\n  for (var i = 0; i < nums.length; i++) {\n    currentMin = Math.min(currentMin,\
    \ nums[i]);\n    total += nums[i];\n  }\n  return Math.min(currentMin, total);\n\
    }", "\t// Write your code here.\n}\n", "  let total = 0;\n  let minSum = Infinity;\n\
    \  let sum = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (sum < 0) {\n\
    \      sum = 0;\n    }\n    sum += nums[i];\n    minSum = Math.min(minSum, sum);\n\
    \  }\n  return minSum;\n}\n", "  var min = Infinity;\n  var sum = 0;\n  for (var\
    \ i = 0; i < nums.length; i++) {\n    sum += nums[i];\n    if (sum < min) {\n\
    \      min = sum;\n    }\n    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return\
    \ min;\n}", "    let start = 0;\n    let end = 0;\n    let sum = 0;\n    let minSum\
    \ = Infinity;\n    while(start < nums.length){\n        if(sum < 0){\n       \
    \     sum = 0;\n            start = end;\n        }\n        sum += nums[end];\n\
    \        minSum = Math.min(minSum, sum);\n        end++;\n    }\n    return minSum;\n\
    }", "    let minSum = Infinity\n    let sum = 0\n    for(let i = 0; i < nums.length;\
    \ i++){\n        for(let j = i; j < nums.length; j++){\n            sum += nums[j]\n\
    \            if(sum < minSum){\n                minSum = sum\n            }\n\
    \        }\n        sum = 0\n    }\n    return minSum\n}", "    let minSum = 0;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        if(nums[i]\
    \ < minSum){\n            minSum = nums[i];\n        }\n        if(sum < minSum){\n\
    \            sum = minSum;\n        }\n        sum += nums[i];\n    }\n    return\
    \ sum;\n}", "    // O(n)\n    let sum = Infinity\n    let current = 0\n    for\
    \ (let i = 0; i < nums.length; i++){\n        current += nums[i]\n        if (current\
    \ < sum){\n            sum = current\n        }\n        if (current > 0){\n \
    \           current = 0\n        }\n    }\n    return sum\n}", "  let minSum =\
    \ Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++){\n    sum\
    \ += nums[i];\n    if (sum < minSum){\n      minSum = sum;\n    }\n    if (sum\
    \ > 0){\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n", "\tif (nums.length\
    \ === 0) return 0;\n\tif (nums.length === 1) return nums[0];\n\tlet currMin =\
    \ Infinity;\n\tlet prevMin = Infinity;\n\tlet currSum = 0;\n\tfor (let i = 0;\
    \ i < nums.length; i++){\n\t\tcurrSum += nums[i];\n\t\tcurrMin = Math.min(currSum,\
    \ currMin);\n\t\tif (currSum < 0){\n\t\t\tcurrSum = 0;\n\t\t}\n\t}\n\treturn currMin;\n\
    }", "    let result = Infinity;\n    for (let i = 0; i < nums.length; i++) {\n\
    \        let sum = 0;\n        for (let j = i; j < nums.length; j++) {\n     \
    \       sum += nums[j];\n            if (sum < result) {\n                result\
    \ = sum;\n            }\n        }\n    }\n    return result;\n}", "    var min\
    \ = Infinity;\n    var sum = 0;\n    for(var i = 0; i < nums.length; i++){\n \
    \       sum += nums[i];\n        if(sum < min){\n            min = sum;\n    \
    \    }\n        if(sum > 0){\n            sum = 0;\n        }\n    }\n    return\
    \ min;\n}\n", "  let minSum = Infinity;\n  let currentSum = 0;\n  for (let i =\
    \ 0; i < nums.length; i++) {\n    currentSum += nums[i];\n    if (currentSum <\
    \ minSum) {\n      minSum = currentSum;\n    }\n    if (currentSum > 0) {\n  \
    \    currentSum = 0;\n    }\n  }\n  return minSum;\n}", "    let sum = Infinity\n\
    \    let tempSum = 0\n    for(let i = 0; i < nums.length; i++){\n        tempSum\
    \ += nums[i]\n        if(tempSum < sum){\n            sum = tempSum\n        }\n\
    \        if(tempSum > 0){\n            tempSum = 0\n        }\n    }\n    return\
    \ sum\n}\n", "    let len = nums.length;\n    let min = Infinity;\n    let curr\
    \ = 0;\n    for(let i = 0; i < len; i++){\n        curr += nums[i];\n        if(curr\
    \ < min){\n            min = curr;\n        }\n        if(curr > 0){\n       \
    \     curr = 0;\n        }\n    }\n    return min;\n}\n", "  let arr = [], currentSum\
    \ = 0;\n  for(let i = 0; i < nums.length; i++){\n    for(let j = i; j < nums.length;\
    \ j++){\n      currentSum += nums[j];\n      arr.push(currentSum);\n    }\n  \
    \  currentSum = 0;\n  }\n  return Math.min(...arr);\n}\n", "  let minSum = Number.MAX_SAFE_INTEGER;\n\
    \  let currentSum = 0;\n  for (let i = 0; i < nums.length; i++){\n    currentSum\
    \ += nums[i];\n    if (currentSum < minSum){\n      minSum = currentSum;\n   \
    \ }\n    if (currentSum > 0){\n      currentSum = 0;\n    }\n  }\n  return minSum;\n\
    }", "    // TODO: Implement me\n    // Check for empty array\n    if (nums.length\
    \ === 0) {\n        return 0;\n    }\n    // Grab the first value in the array\n\
    \    let minSum = nums[0];\n    // Create a variable to hold the sum\n    let\
    \ currentSum = 0;\n    // Loop over the array starting at the first element\n\
    \    for (let i = 0; i < nums.length; i++) {\n        // Set the currentSum to\
    \ the value at the current index\n        currentSum = nums[i];\n        // Loop\
    \ over the array staring at the value after the current value\n        for (let\
    \ j = i + 1; j < nums.length; j++) {\n            // Add the value at the second\
    \ index to the currentSum\n            currentSum += nums[j];\n            //\
    \ If the currentSum is less than the minSum, set the minSum to the currentSum\n\
    \            if (currentSum < minSum) {\n                minSum = currentSum;\n\
    \            }\n        }\n    }\n    // Return the minSum\n    return minSum;\n\
    }", "\tlet minSum = Infinity;\n\tlet left = 0;\n\tlet sum = 0;\n\tfor (let i =\
    \ 0; i < nums.length; i++) {\n\t\tsum += nums[i];\n\t\tif (sum < minSum) {\n\t\
    \t\tminSum = sum;\n\t\t}\n\t\tif (sum > 0) {\n\t\t\tsum = 0;\n\t\t}\n\t}\n\treturn\
    \ minSum;\n}\n", "  let total = 0;\n  let smallest = Infinity;\n  for (let num\
    \ of nums) {\n    total += num;\n    smallest = Math.min(smallest, total);\n \
    \   if (total < 0) total = 0;\n  }\n  return smallest;\n}", "    // add whatever\
    \ parameters you deem necessary - good luck!\n    let sum = nums[0];\n    let\
    \ min = sum;\n    for(let i = 1; i < nums.length; i++){\n        sum = Math.min(nums[i],\
    \ sum + nums[i]);\n        min = Math.min(sum, min);\n    }\n    return min;\n\
    }", "  if (nums.length === 0) return null;\n  let current = nums[0];\n  let min\
    \ = nums[0];\n  for (let i = 1; i < nums.length; i++) {\n    current = Math.min(current\
    \ + nums[i], nums[i]);\n    min = Math.min(current, min);\n  }\n  return min;\n\
    }\n\nmodule.exports = {\n  palindrome,\n  maxSubArraySum,\n  minSubArraySum\n\
    };", "    let smallestSum = null;\n    for (let i = 0; i < nums.length; i++){\n\
    \        let currSum = nums[i];\n        for (let j = i + 1; j < nums.length;\
    \ j++){\n            currSum += nums[j];\n            if (smallestSum === null){\n\
    \                smallestSum = currSum;\n            } else if (currSum < smallestSum){\n\
    \                smallestSum = currSum;\n            }\n        }\n    }\n   \
    \ return smallestSum;\n}\n", "  let minSum = 0;\n  let tempSum = 0;\n  for (let\
    \ i = 0; i < nums.length; i++){\n    tempSum += nums[i];\n    if (tempSum < minSum){\n\
    \      minSum = tempSum;\n    }\n  }\n  return minSum;\n}\n", "\tvar currentSum\
    \ = nums[0];\n\tvar minSum = nums[0];\n\tfor(var i = 1; i < nums.length; i++){\n\
    \t\tcurrentSum = Math.min(currentSum + nums[i], nums[i]);\n\t\tminSum = Math.min(currentSum,\
    \ minSum);\n\t}\n\treturn minSum;\n}\n", "  let minSum = Infinity;\n  let currentSum\
    \ = 0;\n  for (let i = 0; i < nums.length; i++){\n    currentSum += nums[i];\n\
    \    if (currentSum < minSum){\n      minSum = currentSum;\n    }\n    if (currentSum\
    \ > 0){\n      currentSum = 0;\n    }\n  }\n  return minSum;\n}\n", "    let minSum\
    \ = Infinity;\n    let sum = 0;\n    let start = 0;\n    let end = 0;\n    while(start\
    \ < nums.length){\n        if(sum < minSum){\n            minSum = sum;\n    \
    \    }\n        if(sum < 0){\n            sum = 0;\n            start = end;\n\
    \        }\n        sum += nums[end];\n        end++;\n    }\n    return minSum;\n\
    }", "\tif(nums.length === 0) return 0;\n  let minSum = nums[0];\n  let currentSum\
    \ = nums[0];\n  for(let i = 1; i < nums.length; i++){\n    if(currentSum < 0){\n\
    \      currentSum = nums[i];\n    } else {\n      currentSum += nums[i];\n   \
    \ }\n    if(currentSum < minSum){\n      minSum = currentSum;\n    }\n  }\n  return\
    \ minSum;\n}\n", "  let total = 0;\n  let min = Infinity;\n  for (let num of nums)\
    \ {\n    total += num;\n    min = Math.min(min, total);\n    if (total > 0) total\
    \ = 0;\n  }\n  return min;\n}\n", "  // n^2\n  // var minSum = nums[0];\n  //\
    \ for (var i = 0; i < nums.length; i++) {\n  //   var sum = 0;\n  //   for (var\
    \ j = i; j < nums.length; j++) {\n  //     sum += nums[j];\n  //     if (sum <\
    \ minSum) {\n  //       minSum = sum;\n  //     }\n  //   }\n  // }\n  // return\
    \ minSum;\n\n  // n\n  var minSum = nums[0];\n  var sum = 0;\n  for (var i = 0;\
    \ i < nums.length; i++) {\n    sum += nums[i];\n    if (sum < minSum) {\n    \
    \  minSum = sum;\n    }\n    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return\
    \ minSum;\n}\n", "  if(nums.length === 0) return 0;\n  let minimumSum = Number.MAX_SAFE_INTEGER;\n\
    \  let currentSum = 0;\n  for(let num of nums){\n    currentSum += num;\n    if(currentSum\
    \ < minimumSum){\n      minimumSum = currentSum;\n    }\n    if(currentSum > 0){\n\
    \      currentSum = 0;\n    }\n  }\n  return minimumSum;\n}", "  let minimumSum\
    \ = 0;\n  let currentSum = 0;\n  for (let i = 0; i < nums.length; i++) {\n   \
    \ currentSum += nums[i];\n    if (currentSum < minimumSum) {\n      minimumSum\
    \ = currentSum;\n    }\n  }\n  return minimumSum;\n}\n", "    let start = 0;\n\
    \    let end = 0;\n    let sum = 0;\n    let minSum = Infinity;\n    while(start\
    \ < nums.length){\n        if(sum < 0){\n            sum = 0;\n            start\
    \ = end;\n        }\n        sum += nums[end];\n        minSum = Math.min(minSum,\
    \ sum);\n        end++;\n    }\n    return minSum;\n}\n", "  let minimum = Infinity;\n\
    \  let sum = 0;\n  for (let num of nums) {\n    sum += num;\n    if (sum < minimum)\
    \ {\n      minimum = sum;\n    }\n    if (sum > 0) {\n      sum = 0;\n    }\n\
    \  }\n  return minimum;\n}\n", "    var currentSum = 0;\n    var minSum = Number.MAX_VALUE;\n\
    \    for(var i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n \
    \       if(currentSum < minSum){\n            minSum = currentSum;\n        }\n\
    \        if(currentSum > 0){\n            currentSum = 0;\n        }\n    }\n\
    \    return minSum;\n}\n", "\tlet min = Infinity;\n\tlet sum = 0;\n\tfor(let i\
    \ = 0; i < nums.length; i++){\n\t\tsum += nums[i];\n\t\tmin = Math.min(min, sum);\n\
    \t\tif(sum > 0){\n\t\t\tsum = 0;\n\t\t}\n\t}\n\treturn min;\n}", "    let i =\
    \ 0;\n    let j = 0;\n    let min = Infinity;\n    let currSum = 0;\n    while(j\
    \ < nums.length){\n        currSum += nums[j];\n        min = Math.min(min, currSum);\n\
    \        if(currSum < 0){\n            currSum = 0;\n            i = j + 1;\n\
    \        }\n        j++;\n    }\n    return min;\n}\n", "  let min = Infinity;\n\
    \  let sum = 0;\n  for (let i = 0; i < nums.length; i++){\n    sum += nums[i];\n\
    \    if (sum < min){\n      min = sum;\n    }\n    if (sum > 0){\n      sum =\
    \ 0;\n    }\n  }\n  return min;\n}", "    let minSum = Infinity;\n    let currSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum += nums[i];\n\
    \        if(currSum < minSum){\n            minSum = currSum;\n        }\n   \
    \     if(currSum > 0){\n            currSum = 0;\n        }\n    }\n    return\
    \ minSum;\n}", "  let smallest = nums[0]\n  let sum = nums[0]\n  for(let i = 1;\
    \ i < nums.length; i++){\n    if(sum + nums[i] >= nums[i]){\n      sum += nums[i]\n\
    \    } else {\n      sum = nums[i]\n    }\n    if(sum < smallest){\n      smallest\
    \ = sum\n    }\n  }\n  return smallest\n}", "  let smallestNum = nums[0];\n  let\
    \ result = nums[0];\n  for(let i = 1; i < nums.length; i++){\n    smallestNum\
    \ = Math.min(nums[i], nums[i] + smallestNum);\n    result = Math.min(result, smallestNum);\n\
    \  }\n  return result;\n}", "    if(nums.length == 0) return 0;\n    let minSum\
    \ = Infinity;\n    let currSum = 0;\n    for(let num of nums){\n        currSum\
    \ += num;\n        minSum = Math.min(minSum, currSum);\n        if(currSum < 0)\
    \ currSum = 0;\n    }\n    return minSum;\n}", "  let minSum = nums[0]\n  let\
    \ currentSum = nums[0]\n  let currentStart = 0\n  for (let i = 1; i < nums.length;\
    \ i++) {\n    if (currentSum > 0) {\n      currentSum = nums[i]\n      currentStart\
    \ = i\n    } else {\n      currentSum += nums[i]\n    }\n    minSum = Math.min(minSum,\
    \ currentSum)\n  }\n  return minSum\n}\n", "    let minSum = Infinity;\n    let\
    \ sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < minSum){\n            minSum = sum;\n        }\n        if(sum\
    \ > 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n}", "   \
    \ let size = nums.length;\n    let minSum = nums[0];\n    let windowSum = 0;\n\
    \    let windowStart = 0;\n  \n    for (let windowEnd = 0; windowEnd < size; windowEnd++)\
    \ {\n      windowSum += nums[windowEnd];\n      if (windowSum < minSum) {\n  \
    \      minSum = windowSum;\n      }\n      if (windowSum >= 0) {\n        windowSum\
    \ = 0;\n        windowStart = windowEnd + 1;\n      }\n    }\n    return minSum;\n\
    \  }", "  let minSum = Infinity;\n  let currSum = 0;\n  let start = 0;\n  let\
    \ end = 0;\n  while (start < nums.length) {\n    if (currSum < minSum) {\n   \
    \   minSum = currSum;\n    }\n    if (currSum < 0) {\n      currSum = 0;\n   \
    \   start = end;\n    }\n    currSum += nums[end];\n    end++;\n  }\n  return\
    \ minSum;\n}", "    let minSubArraySum = Infinity;\n    let currentSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n \
    \       if(currentSum < minSubArraySum){\n            minSubArraySum = currentSum;\n\
    \        }\n        if(currentSum > 0){\n            currentSum = 0;\n       \
    \ }\n    }\n    return minSubArraySum;\n}", "    let minSum = nums[0];\n    let\
    \ currSum = 0;\n    for(let num of nums){\n        currSum += num;\n        if(currSum\
    \ < minSum){\n            minSum = currSum;\n        }\n        if(currSum > 0){\n\
    \            currSum = 0;\n        }\n    }\n    return minSum;\n}", "\n}\n",
  "  // TODO: Implement me\n}\n", "    let minSum = Infinity;\n    let currSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        currSum += nums[i];\n    \
    \    if(currSum < minSum){\n            minSum = currSum;\n        }\n       \
    \ if(currSum > 0){\n            currSum = 0;\n        }\n    }\n    return minSum;\n\
    }\n", "    let sum = Infinity;\n    let start = 0;\n    let end = 0;\n    let\
    \ currentSum = 0;\n    while(start < nums.length){\n        if(currentSum < sum){\n\
    \            sum = currentSum;\n        }\n        if(currentSum < 0){\n     \
    \       start++;\n            end = start;\n            currentSum = 0;\n    \
    \    }else{\n            currentSum += nums[end];\n            end++;\n      \
    \  }\n    }\n    return sum;\n}", "    var currentSum = nums[0];\n    var minSum\
    \ = nums[0];\n    for(var i = 1; i < nums.length; i++){\n        currentSum =\
    \ Math.min(currentSum + nums[i], nums[i]);\n        minSum = Math.min(currentSum,\
    \ minSum);\n    }\n    return minSum;\n}\nvar minSubArraySum = function(nums)\
    \ {\n    if(nums.length === 0) return 0;\n    let sum = nums[0];\n    let minimum\
    \ = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        sum = Math.min(sum+nums[i],\
    \ nums[i]);\n        minimum = Math.min(sum, minimum);\n    }\n    return minimum;\n\
    };", "    if(nums.length === 0) return 0;\n    let res = Infinity;\n    let tempSum\
    \ = 0;\n    let start = 0;\n    for(let i = 0; i < nums.length; i++){\n      \
    \  tempSum += nums[i];\n        while(tempSum >= 0){\n            res = Math.min(res,\
    \ tempSum);\n            tempSum -= nums[start];\n            start += 1;\n  \
    \      }\n    }\n    return res;\n}\n", "  let minSoFar = Infinity;\n  let sum\
    \ = 0;\n  for (let num of nums) {\n    sum += num;\n    minSoFar = Math.min(minSoFar,\
    \ sum);\n    if (sum < 0) sum = 0;\n  }\n  return minSoFar;\n}\n", "  let currentSum\
    \ = nums[0];\n  let minimumSum = nums[0];\n  for (let i = 1; i < nums.length;\
    \ i++){\n    currentSum = Math.min(nums[i], currentSum + nums[i]);\n    minimumSum\
    \ = Math.min(currentSum, minimumSum);\n  }\n  return minimumSum;\n}\n", "    let\
    \ minSum = Infinity;\n    let runningSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        runningSum += nums[i];\n        if(runningSum < minSum){\n  \
    \          minSum = runningSum;\n        }\n        if(runningSum > 0){\n    \
    \        runningSum = 0;\n        }\n    }\n    return minSum;\n}", "    let minSum\
    \ = nums[0];\n    let sum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n\
    \        sum = Math.min(nums[i], sum + nums[i]);\n        minSum = Math.min(minSum,\
    \ sum);\n    }\n    return minSum;\n}", "  let min = Infinity;\n  let currentSum\
    \ = 0;\n  for (let i = 0; i < nums.length; i++) {\n    currentSum += nums[i];\n\
    \    if (currentSum < min) {\n      min = currentSum;\n    }\n    if (currentSum\
    \ > 0) {\n      currentSum = 0;\n    }\n  }\n  return min;\n}\n", "    var minSum\
    \ = nums[0];\n    var currentSum = 0;\n    for(var i = 0; i < nums.length; i++){\n\
    \        currentSum += nums[i];\n        if(currentSum < minSum){\n          \
    \  minSum = currentSum;\n        }\n        if(currentSum > 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min){\n            min = sum;\n        }\n        if(sum > 0){\n\
    \            sum = 0;\n        }\n    }\n    return min;\n}\n", "    if (nums.length\
    \ == 0) {\n        return 0;\n    }\n    let result = nums[0];\n    let sum =\
    \ 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (sum > 0) {\n  \
    \          sum = nums[i];\n        } else {\n            sum += nums[i];\n   \
    \     }\n        result = Math.min(result, sum);\n    }\n    return result;\n}",
  "  if(nums.length < 1) return 0;\n  var minSum = nums[0];\n  var sum = 0;\n  for(var\
    \ i = 0; i < nums.length; i++){\n    sum += nums[i];\n    if(sum < minSum){\n\
    \      minSum = sum;\n    }\n    if(sum > 0){\n      sum = 0;\n    }\n  }\n  return\
    \ minSum;\n}", "    // have a lowest subarray sum var, this will be our output\n\
    \    let lowestSubArraySum = Infinity;\n    // loop through our array\n    for(let\
    \ i = 0; i < nums.length; i++){\n        // have a subarray var\n        let subArray\
    \ = 0;\n        // loop through the array again\n        for(let j = i; j < nums.length;\
    \ j++){\n            // add each num to our subarray var\n            subArray\
    \ += nums[j];\n            // if subarray is less than our lowestSubArraySum,\
    \ set to it\n            if(subArray < lowestSubArraySum){\n                lowestSubArraySum\
    \ = subArray;\n            }\n        }\n    }\n    // return our lowestSubArraySum\n\
    \    return lowestSubArraySum;\n}\n", "    let min_sum = Infinity;\n    let curr_sum\
    \ = 0;\n    for (let i = 0; i < nums.length; i++) {\n        curr_sum += nums[i];\n\
    \        if (curr_sum < min_sum) {\n            min_sum = curr_sum;\n        }\n\
    \        if (curr_sum > 0) {\n            curr_sum = 0;\n        }\n    }\n  \
    \  return min_sum;\n}\n", "    let min = Infinity;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n\
    \        }\n    }\n    return min;\n}\n", "    // solution here\n    let min =\
    \ Number.MAX_SAFE_INTEGER;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        if(nums[i] < min){\n            min = nums[i];\n        }\n \
    \       sum += nums[i];\n    }\n    if(min < 0){\n        return sum - min * nums.length;\n\
    \    }else{\n        return sum;\n    }\n}\n", "\n}\n", "\n}\n", "    let minSum\
    \ = Infinity;\n    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        currSum += nums[i];\n        if(currSum < minSum){\n            minSum\
    \ = currSum;\n        }\n        if(currSum > 0){\n            currSum = 0;\n\
    \        }\n    }\n    return minSum;\n}", "    let length = nums.length\n   \
    \ let minSum = Infinity\n    let sum = 0\n    for(let i = 0; i < length; i++){\n\
    \        sum += nums[i]\n        if(sum < minSum){\n            minSum = sum\n\
    \        }\n        if(sum > 0){\n            sum = 0\n        }\n    }\n    return\
    \ minSum\n}", "  let min = Infinity;\n  let curr = 0;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    curr += nums[i];\n    if (curr < min) {\n      min = curr;\n   \
    \ }\n    if (curr > 0) {\n      curr = 0;\n    }\n  }\n  return min;\n}", "  let\
    \ min = Infinity;\n  let temp = 0;\n  for(let i = 0; i < nums.length; i++){\n\
    \    temp += nums[i];\n    if(temp < min){\n      min = temp;\n    }\n    if(temp\
    \ > 0){\n      temp = 0;\n    }\n  }\n  return min;\n}\n", "    let minSum = Infinity;\n\
    \    let currentSum = 0;\n    let i;\n    let j;\n    for (i = 0; i < nums.length;\
    \ i++){\n        if (currentSum < minSum){\n            minSum = currentSum;\n\
    \        }\n        currentSum = 0;\n        for (j = i; j < nums.length; j++){\n\
    \            currentSum += nums[j];\n            if (currentSum < minSum){\n \
    \               minSum = currentSum;\n            }\n        }\n    }\n    return\
    \ minSum;\n}", "\tlet minSum = Infinity;\n\tlet sum = 0;\n\tfor(let i = 0; i <\
    \ nums.length; i++){\n\t\tsum += nums[i];\n\t\tif(sum < minSum){\n\t\t\tminSum\
    \ = sum;\n\t\t}\n\t\tif(sum > 0){\n\t\t\tsum = 0;\n\t\t}\n\t}\n\treturn minSum;\n\
    }", "    if(nums.length === 0) {\n        return 0;\n    }\n\n    let sums = [];\n\
    \    for(let i = 0; i < nums.length; i++) {\n        sums.push([]);\n        for(let\
    \ j = i; j < nums.length; j++) {\n            if(j === i) {\n                sums[i][j]\
    \ = nums[i];\n            } else {\n                sums[i][j] = sums[i][j - 1]\
    \ + nums[j];\n            }\n        }\n    }\n\n    return Math.min(...[].concat(...sums));\n\
    }\n", "  let min = Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    sum += nums[i];\n    if (sum < min) {\n      min = sum;\n    }\n\
    \    if (sum > 0) {\n      sum = 0;\n    }\n  }\n  return min;\n}\n", "    if(nums.length\
    \ === 0) return 0;\n    let total = 0;\n    let min = Infinity;\n    let start\
    \ = 0;\n    let end = 0;\n    while(start < nums.length){\n        if(total <\
    \ 0){\n            total = 0;\n        }\n        total += nums[end];\n      \
    \  min = Math.min(min, total);\n        if(end >= nums.length - 1){\n        \
    \    start++;\n            end = start;\n            total = 0;\n        }else{\n\
    \            end++;\n        }\n    }\n    return min;\n}\n", "  let minSum =\
    \ Infinity;\n  let currSum = 0;\n  for (let i = 0; i < nums.length; i++){\n  \
    \  currSum += nums[i];\n    if (currSum < minSum){\n      minSum = currSum;\n\
    \    }\n    if (currSum > 0){\n      currSum = 0;\n    }\n  }\n  return minSum;\n\
    }", "  // your code goes here\n}", "  let minSum = Infinity;\n  let currSum =\
    \ 0;\n  for (let i = 0; i < nums.length; i++) {\n    currSum += nums[i];\n   \
    \ if (currSum < minSum) {\n      minSum = currSum;\n    }\n    if (currSum > 0)\
    \ {\n      currSum = 0;\n    }\n  }\n  return minSum;\n}", "  let minSum = Infinity;\n\
    \  let runningSum = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i]\
    \ < minSum) {\n      minSum = nums[i];\n    }\n    runningSum += nums[i];\n  \
    \  if (runningSum < minSum) {\n      minSum = runningSum;\n    }\n    for (let\
    \ j = i - 1; j >= 0; j--) {\n      runningSum -= nums[j];\n      if (runningSum\
    \ < minSum) {\n        minSum = runningSum;\n      }\n    }\n  }\n  return minSum;\n\
    }", "    var len = nums.length;\n    var minSum = Number.MAX_VALUE;\n    var tempSum\
    \ = 0;\n    for(var i = 0; i < len; i++){\n        tempSum = 0;\n        for(var\
    \ j = i; j < len; j++){\n            tempSum += nums[j];\n            if(tempSum\
    \ < minSum){\n                minSum = tempSum;\n            }\n        }\n  \
    \  }\n    return minSum;\n}\n", "    let min = Number.MAX_SAFE_INTEGER;\n    let\
    \ result = 0;\n    for(let i = 0; i < nums.length; i++){\n        result += nums[i];\n\
    \        if(result < min){\n            min = result;\n        }\n        if(result\
    \ > 0){\n            result = 0;\n        }\n    }\n    return min;\n}\n", " \
    \ let minSum = Infinity;\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++){\n\
    \    sum += nums[i];\n    if (sum < minSum){\n      minSum = sum;\n    }\n   \
    \ if (sum > 0){\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n", "    var\
    \ sum = 0;\n    var count = 0;\n    var sumArr = [];\n    while(sum < nums.length){\n\
    \        var newSum = nums[sum] + nums[sum + 1];\n        sumArr.push(newSum);\n\
    \        sum += 2;\n    }\n    for(let i = 0; i < sumArr.length; i++){\n     \
    \   count += sumArr[i];\n    }\n    return count;\n}\n", "  let minSoFar = nums[0];\n\
    \  let sum = 0;\n  for (let i = 0; i < nums.length; i++) {\n    sum += nums[i];\n\
    \    if (sum < minSoFar) {\n      minSoFar = sum;\n    }\n    if (sum > 0) {\n\
    \      sum = 0;\n    }\n  }\n  return minSoFar;\n}", "    let cur = Infinity;\n\
    \    let total = 0;\n    for(let i = 0; i < nums.length; i++){\n        total\
    \ += nums[i];\n        cur = Math.min(cur, total);\n        if(total > 0){\n \
    \           total = 0;\n        }\n    }\n    return cur;\n}\n", "  let total\
    \ = nums[0]\n  let left = 0\n  let right = 1\n  let minTotal = nums[0]\n  while(right\
    \ < nums.length){\n    total += nums[right]\n    if(total > minTotal){\n     \
    \ total -= nums[left]\n      left += 1\n    } else {\n      minTotal = total\n\
    \    }\n    right += 1\n  }\n  return minTotal\n}", "    let maxSum = 0;\n   \
    \ let minSum = nums[0];\n    for(let i = 0; i < nums.length; i++){\n        if(nums[i]\
    \ < minSum){\n            minSum = nums[i];\n        }\n        if(maxSum < nums[i]){\n\
    \            maxSum = nums[i];\n        }\n    }\n    if(maxSum < 0){\n      \
    \  return maxSum;\n    }\n    else if(minSum > 0){\n        return minSum;\n \
    \   }\n    else{\n        let tempSum = 0;\n        for(let i = 0; i < nums.length;\
    \ i++){\n            tempSum += nums[i];\n            if(tempSum < minSum){\n\
    \                minSum = tempSum;\n            }\n            if(tempSum > 0){\n\
    \                tempSum = 0;\n            }\n        }\n        return minSum;\n\
    \    }\n}", "    let minSum = Infinity;\n    let sum = 0;\n    let left = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i];\n      \
    \  minSum = Math.min(minSum, sum);\n        if (sum < 0) {\n            sum =\
    \ 0;\n            left = i + 1;\n        }\n    }\n    return minSum;\n}", " \
    \   let minSum = Infinity;\n    let currentSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        currentSum += nums[i];\n        if(currentSum < minSum){\n  \
    \          minSum = currentSum;\n        }\n        if(currentSum > 0){\n    \
    \        currentSum = 0;\n        }\n    }\n    return minSum;\n}", "    let l\
    \ = 0;\n    let r = -1;\n    let sum = 0;\n    let res = Number.MAX_VALUE;\n \
    \   while(l < nums.length){\n        if(r+1 < nums.length && sum < k){\n     \
    \       r++;\n            sum += nums[r];\n        }else{\n            sum -=\
    \ nums[l];\n            l++;\n        }\n        if(sum >= k){\n            res\
    \ = Math.min(res, r-l+1);\n        }\n    }\n    return res == Number.MAX_VALUE\
    \ ? 0 : res;\n}", "    var minSum = Infinity;\n    var sum = 0;\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        minSum = Math.min(minSum,\
    \ sum);\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return\
    \ minSum;\n}\n", "    let min_sum = Infinity;\n    let sum = 0;\n    let left\
    \ = 0;\n    for (let i = 0; i < nums.length; i++) {\n        sum += nums[i];\n\
    \        while (sum >= 0) {\n            min_sum = Math.min(min_sum, sum);\n \
    \           sum -= nums[left];\n            left++;\n        }\n    }\n    return\
    \ min_sum;\n}\n", "    let total = 0;\n    let result = 0;\n    let current =\
    \ Number.MAX_SAFE_INTEGER;\n    for(let i = 0; i < nums.length; i++){\n      \
    \  if(nums[i] < current){\n            current = nums[i];\n        }\n       \
    \ total += nums[i];\n        if(total < 0){\n            total = 0;\n        }\n\
    \        if(total < result || result === 0){\n            result = total;\n  \
    \      }\n    }\n    if(result === 0){\n        return current;\n    }\n    return\
    \ result;\n}", "    let min = Infinity;\n    let temp = 0;\n    for(let i = 0;\
    \ i < nums.length; i++){\n        temp += nums[i];\n        if(temp < min){\n\
    \            min = temp;\n        }\n        if(temp > 0){\n            temp =\
    \ 0;\n        }\n    }\n    return min;\n}\n", "  let currentMin = nums[0];\n\
    \  let currentTotal = 0;\n  for (let i = 0; i < nums.length; i++) {\n    currentTotal\
    \ += nums[i];\n    if (currentTotal < currentMin) {\n      currentMin = currentTotal;\n\
    \    }\n    if (currentTotal > 0) {\n      currentTotal = 0;\n    }\n  }\n  return\
    \ currentMin;\n}", "  var sum = nums[0];\n  var min = nums[0];\n  for(var i =\
    \ 1; i < nums.length; i++){\n    sum = Math.min(nums[i], sum + nums[i]);\n   \
    \ min = Math.min(sum, min);\n  }\n  return min;\n}\n", "    var min = nums[0];\n\
    \    var currMin = nums[0];\n    for(var i = 1; i < nums.length; i++){\n     \
    \   currMin = Math.min(nums[i], currMin + nums[i]);\n        min = Math.min(min,\
    \ currMin);\n    }\n    return min;\n}", "    var minSum = Infinity;\n    var\
    \ subSum = 0;\n    for(var i = 0; i < nums.length; i++){\n        subSum += nums[i];\n\
    \        if(subSum < minSum){\n            minSum = subSum;\n        }\n     \
    \   if(subSum > 0){\n            subSum = 0;\n        }\n    }\n    return minSum;\n\
    }", "    var minSum = nums[0];\n    var currentSum = 0;\n    for(var i = 0; i\
    \ < nums.length; i++){\n        currentSum += nums[i];\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n        }\n        if(currentSum\
    \ > 0){\n            currentSum = 0;\n        }\n    }\n    return minSum;\n}\n",
  "\n}\n", "    //check for invalid input:\n    if(!nums.length) return null;\n  \
    \  //keep track of the min and current sum\n    let minSum = nums[0];\n    let\
    \ currSum = nums[0];\n    //loop over the array, starting at the second index\n\
    \    for(let i = 1; i < nums.length; i++){\n        //update the current sum with\
    \ the min of (nums[i] or nums[i] + currSum)\n        currSum = Math.min(nums[i],\
    \ nums[i] + currSum);\n        //update the min with the min of (currSum or minSum)\n\
    \        minSum = Math.min(currSum, minSum);\n    }\n    //return the minSum\n\
    \    return minSum;\n}", "  var total = 0;\n  var minSum = Infinity;\n  for (var\
    \ i = 0; i < nums.length; i++) {\n    total += nums[i];\n    minSum = Math.min(minSum,\
    \ total);\n    if (total < 0) {\n      total = 0;\n    }\n  }\n  return minSum;\n\
    }", "    // store the minimun value\n    let min_sum = Infinity;\n    // store\
    \ the running sum\n    let curr_sum = 0;\n    // iterate through each number in\
    \ the array\n    for(let num of nums){\n        // add the current number to the\
    \ running sum\n        curr_sum += num;\n        // if the current sum is less\
    \ than the minimum sum, reassign the minimum sum\n        if(curr_sum < min_sum){\n\
    \            min_sum = curr_sum;\n        }\n        // if the current sum is\
    \ negative, reassign the current sum to 0\n        if(curr_sum < 0){\n       \
    \     curr_sum = 0;\n        }\n    }\n    // return the minimum sum\n    return\
    \ min_sum;\n}\n\nconst assert = require('assert');\nassert.equal(minSubArraySum([2,\
    \ 3, 4, 1, 2, 4]), 1);\nassert.equal(minSubArraySum([-1, -2, -3]), -6);", "  \
    \  let min = Infinity;\n    let first = 0;\n    let sum = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n\
    \        }\n    }\n    return min;\n}", "\tlet maxSum = Infinity;\n\tlet currentSum\
    \ = 0;\n\tfor(let i = 0; i < nums.length; i++){\n\t\tcurrentSum += nums[i];\n\t\
    \tmaxSum = Math.min(maxSum, currentSum);\n\t\tif(currentSum < 0){\n\t\t\tcurrentSum\
    \ = 0;\n\t\t}\n\t}\n\treturn maxSum;\n}\n", "    let minSum = Infinity;\n    let\
    \ result = 0;\n    for(let i = 0; i < nums.length; i++){\n        result += nums[i];\n\
    \        if(result < minSum){\n            minSum = result;\n        }\n     \
    \   if(result > 0){\n            result = 0;\n        }\n    }\n    return minSum;\n\
    }", "    let n = nums.length;\n    let minSum = Infinity;\n    let sum = 0;\n\
    \    for(let i = 0; i < n; i++){\n        sum += nums[i];\n        minSum = Math.min(minSum,\
    \ sum);\n        if(sum < 0){\n            sum = 0;\n        }\n    }\n    return\
    \ minSum;\n}", "    var lowestSum = nums[0];\n    var currentSum = nums[0];\n\
    \    for(var i = 1; i < nums.length; i++){\n        currentSum = Math.min(currentSum\
    \ + nums[i], nums[i]);\n        lowestSum = Math.min(lowestSum, currentSum);\n\
    \    }\n    return lowestSum;\n}\n\nvar arr = [2, 3, 4, 1, 2, 4];", "\tvar minSum\
    \ = Infinity\n\tvar currentSum = 0\n\tfor(var i = 0; i < nums.length; i++){\n\t\
    \tcurrentSum += nums[i]\n\t\tif(currentSum < minSum){\n\t\t\tminSum = currentSum\n\
    \t\t}\n\t\tif(currentSum > 0){\n\t\t\tcurrentSum = 0\n\t\t}\n\t}\n\treturn minSum\n\
    }", "    var temp = 0;\n    var minSum = Infinity;\n    for(var i = 0; i < nums.length;\
    \ i++){\n        temp += nums[i];\n        if(temp < minSum){\n            minSum\
    \ = temp;\n        }\n        if(temp > 0){\n            temp = 0;\n        }\n\
    \    }\n    return minSum;\n}\n\nmodule.exports = minSubArraySum;", "  let min\
    \ = nums[0];\n  let sum = nums[0];\n  for(let i = 1; i < nums.length; i++){\n\
    \    if(sum > 0){\n      sum = nums[i];\n    } else {\n      sum += nums[i];\n\
    \    }\n    min = Math.min(min, sum);\n  }\n  return min;\n}\n", "  // first,\
    \ initialize a starting total\n  let total = nums[0];\n  // then, initialize a\
    \ min value\n  let min = nums[0];\n  // iterate through the array\n  for (let\
    \ i = 1; i < nums.length; i++){\n    // and add each number to the total\n   \
    \ total += nums[i];\n    // then check if the new number is less than the old\
    \ one\n    if (nums[i] < min){\n      // if it is, update the min value\n    \
    \  min = nums[i];\n    }\n    // next, check if the total is less than the current\
    \ min\n    if (total < min){\n      // if it is, update the min value\n      min\
    \ = total;\n    }\n  }\n  // finally, return the min value\n  return min;\n}",
  "    let minSum = Number.MAX_SAFE_INTEGER;\n    let tempSum = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        for(let j = i; j < nums.length; j++){\n\
    \            tempSum += nums[j];\n            if(tempSum < minSum){\n        \
    \        minSum = tempSum;\n            }\n        }\n        tempSum = 0;\n \
    \   }\n    return minSum;\n}\n", "    let minSum = nums[0];\n    let tempSum =\
    \ nums[0];\n    for(let i = 1; i < nums.length; i++){\n        tempSum = Math.min(tempSum\
    \ + nums[i], nums[i]);\n        minSum = Math.min(minSum, tempSum);\n    }\n \
    \   return minSum;\n}\n", "    let minSum = Infinity;\n    let currentSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n \
    \       if(currentSum < minSum){\n            minSum = currentSum;\n        }\n\
    \        if(currentSum > 0){\n            currentSum = 0;\n        }\n    }\n\
    \    return minSum;\n}", "    //create a new array which is a copy of nums\n \
    \   var arr = nums.slice();\n    //sort the array from least to greatest\n   \
    \ arr.sort(function(a, b){return a-b});\n    //if the first element is positive\
    \ return 0, if it is negative return the negative number\n    if(arr[0] >= 0){\n\
    \        return 0;\n    }else{\n        return arr[0];\n    }\n}", "\n}", "  let\
    \ minSum = nums[0];\n  let maxSum = nums[0];\n  let currentSum = nums[0];\n  for\
    \ (let i = 1; i < nums.length; i++) {\n    const number = nums[i];\n    if (number\
    \ > minSum) {\n      currentSum = currentSum + number;\n    } else {\n      currentSum\
    \ = number;\n    }\n    minSum = Math.min(minSum, currentSum);\n    maxSum = Math.max(maxSum,\
    \ currentSum);\n  }\n  return minSum;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

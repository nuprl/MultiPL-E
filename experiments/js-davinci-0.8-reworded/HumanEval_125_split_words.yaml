name: HumanEval_125_split_words
language: js
prompt: "//Given a string of words, return an array of words split on whitespace,\
  \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
  \ commas exists you should return the number of lower-case letters with odd order\
  \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
  // >>> split_words(\"Hello world!\")\n// [\"Hello\", \"world!\"]\n// >>> split_words(\"\
  Hello,world!\")\n// [\"Hello\", \"world!\"]\n// >>> split_words(\"abcdef\")\n//\
  \ 3\nfunction split_words(txt){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = split_words;\n  assert.deepEqual(candidate(\"Hello world!\"),[\"Hello\", \"\
  world!\"]);\n  assert.deepEqual(candidate(\"Hello,world!\"),[\"Hello\", \"world!\"\
  ]);\n  assert.deepEqual(candidate(\"Hello world,!\"),[\"Hello\", \"world,!\"]);\n\
  \  assert.deepEqual(candidate(\"Hello,Hello,world !\"),[\"Hello,Hello,world\", \"\
  !\"]);\n  assert.deepEqual(candidate(\"abcdef\"),3);\n  assert.deepEqual(candidate(\"\
  aaabb\"),2);\n  assert.deepEqual(candidate(\"aaaBb\"),1);\n  assert.deepEqual(candidate(\"\
  \"),0);\n}\n\ntest();"
completions: ["    if (txt.includes(' ')) {\n        let arr = txt.split(' ');\n \
    \       return arr;\n    } else if (txt.includes(',')) {\n        let arr = txt.split(',');\n\
    \        return arr;\n    } else {\n        let alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \        let arr = [];\n        let counter = 0;\n        for (let i = 0; i <\
    \ alphabet.length; i++) {\n            for (let j = 0; j < txt.length; j++) {\n\
    \                if (alphabet[i] === txt[j]) {\n                    arr.push(txt[j]);\n\
    \                }\n            }\n        }\n        for (let k = 0; k < arr.length;\
    \ k++) {\n            if (k % 2 !== 0) {\n                counter++;\n       \
    \     }\n        }\n        return counter;\n    }\n}", "    var letters = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    var arr = [];\n    if (txt.includes(\" \")){\n\
    \        arr = txt.split(\" \");\n    }\n    else if (txt.includes(\",\")){\n\
    \        arr = txt.split(\",\");\n    }\n    else{\n        var oddNum = 0;\n\
    \        for (var i = 0; i < letters.length; i++){\n            if (txt.includes(letters[i])){\n\
    \                oddNum++;\n            }\n        }\n        return oddNum;\n\
    \    }\n    return arr;\n}\n", "    if (txt.includes(\" \")) {\n        return\
    \ txt.split(\" \");\n    } else if (txt.includes(\",\")) {\n        return txt.split(\"\
    ,\");\n    } else {\n        let count = 0;\n        for (let i = 0; i < txt.length;\
    \ i++) {\n            if (i % 2 !== 0) {\n                count += 1;\n      \
    \      }\n        }\n        return count;\n    }\n}\n", "    if(txt.indexOf('\
    \ ') > -1){\n        return txt.split(' ');\n    }\n    else if(txt.indexOf(',')\
    \ > -1){\n        return txt.split(',');\n    }\n    else{\n        var odd =\
    \ 0;\n        for(var i = 0; i < txt.length; i++){\n            if(txt.charCodeAt(i)\
    \ % 2 !== 0){\n                odd++;\n            }\n        }\n        return\
    \ odd;\n    }\n}", "    var splitTxt = txt.split(\" \");\n    if(splitTxt.length\
    \ > 1){\n        return splitTxt;\n    }else{\n        var splitTxt = txt.split(\"\
    ,\");\n        if(splitTxt.length > 1){\n            return splitTxt;\n      \
    \  }else{\n            var oddLetters = 0;\n            var splitTxt = txt.split(\"\
    \");\n            for(var i = 0; i < splitTxt.length; i++){\n                if(i\
    \ % 2 != 0){\n                    oddLetters += 1;\n                }\n      \
    \      }\n            return oddLetters;\n        }\n    }\n}", "    var result\
    \ = [];\n    var words = [];\n    var d = {};\n    var count = 0;\n    if(txt.indexOf('\
    \ ') !== -1){\n        result = txt.split(' ');\n        return result;\n    }\n\
    \    else if(txt.indexOf(',') !== -1){\n        result = txt.split(',');\n   \
    \     return result;\n    }\n    else{\n        for(var i = 0; i < txt.length;\
    \ i++){\n            var char = txt[i];\n            if(d[char] === undefined){\n\
    \                d[char] = 1;\n            }\n            else{\n            \
    \    d[char]++;\n            }\n        }\n        for(var key in d){\n      \
    \      if(d[key] % 2 !== 0){\n                count++;\n            }\n      \
    \  }\n        return count;\n    }\n}\n", "    if(txt.match(/\\s/g)){\n      \
    \  return txt.split(/\\s/g);\n    }\n    else if(txt.match(/,/g)){\n        return\
    \ txt.split(/,/g);\n    }\n    else{\n        var numLetters = txt.length;\n \
    \       var oddLetters = numLetters/2;\n        return oddLetters;\n    }\n}\n",
  "  if (txt.indexOf(\" \") != -1) {\n    return txt.split(\" \");\n  } else if (txt.indexOf(\"\
    ,\") != -1) {\n    return txt.split(\",\");\n  } else {\n    var letters = txt.toLowerCase().split(\"\
    \");\n    var odd = [];\n    for (var i = 0; i < letters.length; i++) {\n    \
    \  if (letters[i].charCodeAt(0) % 2 != 0) {\n        odd.push(letters[i]);\n \
    \     }\n    }\n    return odd.length;\n  }\n}\n", "    if (txt.indexOf(\" \"\
    ) != -1) {\n        var arr = txt.split(\" \");\n        return arr;\n    }\n\
    \    else if (txt.indexOf(\",\") != -1) {\n        var arr = txt.split(\",\");\n\
    \        return arr;\n    }\n    else {\n        var sum = 0;\n        for (var\
    \ i = 0; i < txt.length; i++) {\n            if (i % 2 == 0) {\n             \
    \   sum += txt.charCodeAt(i);\n            }\n        }\n        return sum;\n\
    \    }\n}", "  var comma = txt.indexOf(',');\n  var space = txt.indexOf(' ');\n\
    \  if (space > -1){\n    return txt.split(' ');\n  }\n  else if (comma > -1){\n\
    \    return txt.split(',');\n  }\n  else{\n    var odd = 0;\n    for (var i =\
    \ 0; i < txt.length; i++){\n      if (txt.charCodeAt(i) % 2 == 1){\n        odd++;\n\
    \      }\n    }\n    return odd;\n  }\n}\n", "    if (txt.includes(\" \")) {\n\
    \        return txt.split(\" \");\n    } else if (txt.includes(\",\")) {\n   \
    \     return txt.split(\",\");\n    } else {\n        let count = 0;\n       \
    \ for (let i = 0; i < txt.length; i++) {\n            if (txt.charCodeAt(i) %\
    \ 2 == 1) {\n                count++;\n            }\n        }\n        return\
    \ count;\n    }\n}\n", "    var split = [];\n    var word = \"\";\n    var splitter\
    \ = false;\n    for(i=0; i<txt.length; i++){\n        if (txt[i]==\" \" || txt[i]==\"\
    ,\"){\n            if (splitter){\n                split.push(word);\n       \
    \         word = \"\";\n            }\n            splitter = true;\n        }\n\
    \        else{\n            word = word+txt[i];\n            splitter = false;\n\
    \        }\n    }\n    if (word.length>0){\n        split.push(word);\n    }\n\
    \    var count = 0;\n    for(i=0; i<split.length; i++){\n        if (split[i].length%2!=0){\n\
    \            count++;\n        }\n    }\n    if (count>0){\n        return count;\n\
    \    }\n    else{\n        return split;\n    }\n}\n", "    if(txt.includes('\
    \ '))\n        return txt.split(' ');\n    else if(txt.includes(','))\n      \
    \  return txt.split(',');\n    else {\n        var count = 0;\n        for(var\
    \ i = 0; i < txt.length; i++){\n            if(i % 2 == 0)\n                count++;\n\
    \        }\n        return count;\n    }\n}", "    // TODO: implement split words\n\
    \n    var arr= txt.split('');\n    var even=[];\n    var odd=[];\n    var result=[];\n\
    \    var newArr=[];\n    var number=0;\n    var n=[];\n    var nU=[];\n    var\
    \ l=[];\n    var u=[];\n    var lU=[];\n    var r=[];\n    var rU=[];\n    var\
    \ s=[];\n    var sU=[];\n    var p=[];\n    var pU=[];\n    var w=[];\n    var\
    \ wU=[];\n    var space=0;\n    var comma=0;\n    for(var i=0;i<arr.length;i++){\n\
    \        if(arr[i]==' '){\n            space++;\n        }\n        if(arr[i]==','){\n\
    \            comma++;\n        }\n    }\n    if(space>0){\n        result=txt.split('\
    \ ');\n        return result;\n    }\n    if(comma>0){\n        result=txt.split(',');\n\
    \        return result;\n    }\n    for(var i=0;i<arr.length;i++){\n        if(isEven(arr[i].charCodeAt(0))){\n\
    \            even.push(arr[i]);\n        }\n        else{\n            odd.push(arr[i]);\n\
    \        }\n    }\n    if(isEven(odd.length)){\n        return odd.length;\n \
    \   }\n    else{\n        return -odd.length;\n    }\n}", "    let array = [];\n\
    \    if(txt.includes(\" \")){\n        array = txt.split(\" \");\n    }\n    else\
    \ if(txt.includes(\",\")){\n        array = txt.split(\",\");\n    }\n    else{\n\
    \        let cnt = 0;\n        for(let i = 0; i < txt.length; i++){\n        \
    \    if(i % 2 == 0){\n                if(txt[i] == txt[i].toLowerCase()){\n  \
    \                  cnt++;\n                }\n            }\n        }\n     \
    \   array = cnt;\n    }\n    return array;\n}\n", "    if (txt.indexOf(\" \")\
    \ > -1)\n        return txt.split(\" \");\n    else if (txt.indexOf(\",\") > -1)\n\
    \        return txt.split(\",\");\n    else\n        return txt.split(\"\").filter(function(element,\
    \ index, array){\n            return (index%2 !== 0);\n        }).length;\n}\n",
  "    let txtArr = txt.split(\" \");\n    let odd = 0;\n    for(let i = 0; i < txtArr.length;\
    \ i++){\n        if(txtArr[i].charCodeAt(0) % 2 !== 0){\n            odd++;\n\
    \        }\n    }\n    if(txtArr.length === 1){\n        let newArr = txtArr[0].split(\"\
    ,\");\n        if(newArr.length === 1){\n            return odd;\n        }\n\
    \        return newArr;\n    }\n    return txtArr;\n}", "    if (txt.indexOf(\"\
    \ \") !== -1) {\n        return txt.split(\" \");\n    }\n    else if (txt.indexOf(\"\
    ,\") !== -1) {\n        return txt.split(\",\");\n    }\n    else {\n        let\
    \ count = 0;\n        for (let i = 0; i < txt.length; i++) {\n            let\
    \ charValue = txt.charCodeAt(i);\n            if (charValue % 2 === 1) {\n   \
    \             count++;\n            }\n        }\n        return count;\n    }\n\
    }\n", "    return txt.split(/[\\s,]/).filter(x => x).map(x => /[^a-z]/.test(x)\
    \ ? x : x.length % 2);\n}\n", "    var x = txt.split(/[\\s,]+/);\n    if (x.length\
    \ == 1){\n        let ord = 0;\n        for (let i = 0; i < x[0].length; i++){\n\
    \            if (i % 2 == 0){\n                ord += x[0].charCodeAt(i) - 97;\n\
    \            }\n        }\n        return ord;\n    }\n    return x;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

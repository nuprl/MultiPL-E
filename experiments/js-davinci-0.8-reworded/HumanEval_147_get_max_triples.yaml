name: HumanEval_147_get_max_triples
language: js
prompt: "//You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i\
  \ - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i < j\
  \ < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>> get_max_triples(5)\n\
  // 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only valid triple is (1,\
  \ 7, 13).\nfunction get_max_triples(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
  \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
  }\n\ntest();"
completions: ["    let result = 0;\n    let arr = [];\n    for(let i = 1; i<=n; i++){\n\
    \        arr.push(i*i-i+1);\n    }\n    for(let i = 0; i<arr.length; i++){\n \
    \       for(let j = i+1; j<arr.length; j++){\n            for(let k = j+1; k<arr.length;\
    \ k++){\n                if((arr[i]+arr[j]+arr[k])%3 === 0){\n               \
    \     result++;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    let a = [];\n    for(let i = 1; i <= n; i++){\n        a.push(i\
    \ * i - i + 1);\n    }\n    let count = 0;\n    for(let i = 0; i < a.length; i++){\n\
    \        for(let j = i + 1; j < a.length; j++){\n            for(let k = j + 1;\
    \ k < a.length; k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n \
    \                   count++;\n                }\n            }\n        }\n  \
    \  }\n    return count;\n}\n", "    let sum = 0;\n    let arr = [];\n    for(let\
    \ i = 1; i <= n; i++){\n        arr.push(i * i - i + 1);\n    }\n    for(let i\
    \ = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n\
    \            for(let k = j + 1; k < arr.length; k++){\n                if((arr[i]\
    \ + arr[j] + arr[k]) % 3 === 0){\n                    sum++;\n               \
    \ }\n            }\n        }\n    }\n    return sum;\n}", "    // number of triples\
    \ = number of valid pairs of numbers from a that sum to a multiple of 3\n    //\
    \ find all the valid pairs\n    let count = 0;\n    let a = [];\n    for (let\
    \ i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n    // console.log(a);\n\
    \    for (let i = 0; i < a.length; i++){\n        for (let j = i + 1; j < a.length;\
    \ j++){\n            if ((a[i] + a[j]) % 3 === 0){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n", "    let newArr = [];\n\
    \    for(let i = 1; i <= n; i++){\n        newArr.push(i * i - i + 1);\n    }\n\
    \    console.log(newArr);\n    let count = 0;\n    for(let j = 0; j < newArr.length;\
    \ j++){\n        for(let k = 1; k < newArr.length; k++){\n            for(let\
    \ l = 2; l < newArr.length; l++){\n                if(j < k && k < l && (newArr[j]\
    \ + newArr[k] + newArr[l]) % 3 === 0){\n                    count++;\n       \
    \         }\n            }\n        }\n    }\n    return count;\n}", "    let\
    \ arr = new Array(n).fill(0).map((_, i) => i * i - i + 1)\n    let cnt = 0;\n\
    \    for(let i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length;\
    \ j++){\n            for(let k = j + 1; k < arr.length; k++){\n              \
    \  if(arr[i] + arr[j] + arr[k] % 3 === 0){\n                    cnt++;\n     \
    \           }\n            }\n        }\n    }\n    return cnt;\n}", "    const\
    \ a = [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n\
    \    }\n    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let\
    \ j = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "    // your code here\n    var arr = [];\n    for(var i = 1; i\
    \ <= n; i++){\n        arr.push(i * i - i + 1);\n    }\n    var result = 0;\n\
    \    for(var i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length;\
    \ j++){\n            for(var k = j + 1; k < arr.length; k++){\n              \
    \  if((arr[i] + arr[j] + arr[k]) % 3 === 0){\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n",
  "    let a = [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n\
    \    }\n    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let\
    \ j = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\n", "    var a = [];\n    for(var i = 1; i <= n; i++){\n        a.push(i\
    \ * i - i + 1);\n    }\n    var count = 0;\n    for(var i = 0; i < a.length; i++){\n\
    \        for(var j = i + 1; j < a.length; j++){\n            for(var k = j + 1;\
    \ k < a.length; k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n \
    \                   count++;\n                }\n            }\n        }\n  \
    \  }\n    return count;\n}\n", "    var arr = [];\n    for(var i = 1; i <= n;\
    \ i++){\n        arr.push(i * i - i + 1);\n    }\n    var count = 0;\n    for(var\
    \ i = 0; i < arr.length; i++){\n        for(var j = i + 1; j < arr.length; j++){\n\
    \            for(var k = j + 1; k < arr.length; k++){\n                if((arr[i]\
    \ + arr[j] + arr[k]) % 3 === 0){\n                    count++;\n             \
    \   }\n            }\n        }\n    }\n    return count;\n}\n", "    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}", " \
    \   var a = [];\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n      \
    \  a.push(i * i - i + 1);\n    }\n    for(var i = 0; i < a.length; i++){\n   \
    \     for(var j = i + 1; j < a.length; j++){\n            for(var k = j + 1; k\
    \ < a.length; k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n   \
    \                 count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}", "    let count = 0;\n    for(let i = 1; i < n; i++){\n\
    \        for(let j = i + 1; j < n; j++){\n            for(let k = j + 1; k < n;\
    \ k++){\n                if((i * i - i + 1 + j * j - j + 1 + k * k - k + 1) %\
    \ 3 === 0){\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}", "\tvar counter = 0;\n\tvar arr = [];\n\
    \tfor(var i = 1; i <= n; i++){\n\t\tarr.push(i * i - i + 1);\n\t}\n\tfor(var i\
    \ = 0; i < arr.length; i++){\n\t\tfor(var j = i + 1; j < arr.length; j++){\n\t\
    \t\tfor(var k = j + 1; k < arr.length; k++){\n\t\t\t\tif((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0){\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ counter;\n}", "    var numArray = [];\n    var tripleCount = 0;\n    for(var\
    \ i = 1; i <= n; i++){\n        numArray.push(i * i - i + 1);\n    }\n    for(var\
    \ j = 0; j < numArray.length; j++){\n        for(var k = j + 1; k < numArray.length;\
    \ k++){\n            for(var m = k + 1; m < numArray.length; m++){\n         \
    \       if((numArray[j] + numArray[k] + numArray[m]) % 3 === 0){\n           \
    \         tripleCount++;\n                }\n            }\n        }\n    }\n\
    \    return tripleCount;\n}", "    let a = [];\n    for(let i = 1; i <= n; i++){\n\
    \        a.push(i * i - i + 1);\n    }\n    let result = 0;\n    for(let i = 0;\
    \ i < a.length; i++){\n        for(let j = i + 1; j < a.length; j++){\n      \
    \      for(let k = j + 1; k < a.length; k++){\n                if((a[i] + a[j]\
    \ + a[k]) % 3 === 0){\n                    result += 1;\n                }\n \
    \           }\n        }\n    }\n    return result;\n}\n", "    let a = [];\n\
    \    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n   \
    \ let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j =\
    \ i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n",
  "  let a = new Array(n);\n  let count = 0;\n  for(let i = 0; i < n; i++){\n    a[i]\
    \ = i * i - i + 1;\n  }\n  for(let i = 0; i < n - 2; i++){\n    for(let j = i\
    \ + 1; j < n - 1; j++){\n      for(let k = j + 1; k < n; k++){\n        if((a[i]\
    \ + a[j] + a[k]) % 3 === 0){\n          count++;\n        }\n      }\n    }\n\
    \  }\n  return count;\n}", "    var count = 0;\n    var arr = [];\n    for(var\
    \ i = 1; i<=n; i++){\n        arr.push(i*i-i+1);\n    }\n    for(var i = 0; i<arr.length;\
    \ i++){\n        for(var j = i+1; j<arr.length; j++){\n            for(var k =\
    \ j+1; k<arr.length; k++){\n                if((arr[i]+arr[j]+arr[k])%3 === 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_151_double_the_difference
language: js
prompt: "//Given an array of numbers, return the sum of squares of the numbers\n//\
  \ in the array that are odd. Ignore numbers that are negative or not integers.\n\
  // >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>> double_the_difference([-1,\
  \ -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n// 81\n// >>> double_the_difference([0])\n\
  // 0\n// If the input array is empty, return 0.\nfunction double_the_difference(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0,\
  \ 4.0]),25);\n  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
  \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
  \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
  \ 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
completions: ["    let sum = 0;\n    for (let i = 0; i < lst.length; i++){\n     \
    \   if (lst[i] > 0 && lst[i] % 2 !== 0) {\n            sum += lst[i] ** 2;\n \
    \       }\n    }\n    return sum;\n}\n", "    sum = 0;\n    for (var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] % 2 == 1 && lst[i] > 0){\n          \
    \  sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}\n", "  if (lst.length\
    \ === 0){\n    return 0;\n  }\n  var sum = 0;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > 0 && lst[i] % 2 === 1){\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "    var out = 0;\n    for (i=0; i<lst.length;\
    \ i++){\n        if (lst[i]%2==1){\n            out += Math.pow(lst[i],2);\n \
    \       }\n    }\n    return out;\n}", "\tvar tot = 0;\n\tfor (var i = 0; i <\
    \ lst.length; i++){\n\t\tif (lst[i] > 0 && Number.isInteger(lst[i])){\n\t\t\t\
    if (lst[i] % 2 != 0){\n\t\t\t\ttot += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\t\
    return tot;\n}\n", "    //code goes here\n    var sum = 0;\n    for (var i = 0;\
    \ i < lst.length; i++) {\n        if (Math.floor(lst[i]) % 2 != 0 && lst[i] >\
    \ 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n", "    var sum = 0;\n    var double = 0;\n    var difference = 0;\n    var\
    \ odd_sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        sum += lst[i];\n\
    \    }\n    double = sum * 2;\n    difference = double - sum;\n    if (lst.length\
    \ == 0){\n        return 0;\n    }\n    for (var j = 0; j < lst.length; j++){\n\
    \        if (lst[j] % 2 != 0){\n            odd_sum += lst[j] * lst[j];\n    \
    \    }\n    }\n    return odd_sum;\n}", "  var sum = 0;\n  for (var i = 0; i <\
    \ lst.length; i++){\n    if (lst[i]%2 != 0 && lst[i] > 0 && !isNaN(lst[i])){\n\
    \      sum += lst[i]*lst[i];\n    }\n  }\n  return sum;\n}\n", "    let sum =\
    \ 0;\n    for (i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0 && lst[i]\
    \ > 0 && Number.isInteger(lst[i])){\n            let squared = lst[i] ** 2;\n\
    \            sum += squared;\n        }\n    }\n    let doubled = sum * 2;\n \
    \   return doubled;\n}", "    var sum=0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(Math.floor(lst[i])==lst[i] && lst[i]>0 && lst[i]%2==1){\n        \
    \    sum+=lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", "    var sum\
    \ = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0\
    \ && lst[i] >= 0 && Number.isInteger(lst[i])){\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "  var sum = 0;\n  for (var i = 0; i\
    \ < lst.length; i++){\n    if (lst[i] % 2 == 1 && lst[i] >= 0 && Number.isInteger(lst[i])){\n\
    \      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n", "    var\
    \ sum = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0 && lst[i] % 1 === 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++){\n        if (lst[i] < 0 || typeof lst[i] !== \"number\"\
    ){\n            continue;\n        }\n        else if (lst[i] % 2 !== 0){\n  \
    \          result += lst[i] * lst[i];\n        }\n    }\n    return result;\n}",
  "    sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
    \ 0 && Number.isInteger(lst[i])) {\n            lst[i] = lst[i] ** 2;\n      \
    \      sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "    var sum =\
    \ 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0 &&\
    \ lst[i] >= 0){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "  var sum = 0;\n  for (var i = 0; i < lst.length; i++) {\n    if\
    \ (typeof lst[i] == \"number\" && lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;\n}", "    let squares = lst.filter(x => x>0).filter(x\
    \ => x%2!=0).map(x => x*x);\n    return squares.reduce((x,y) => x+y,0);\n}", " \
    \   var new_list = lst.filter(function(x){return x % 2 === 1});\n    var sum =\
    \ 0;\n    new_list.forEach(function(x){\n        sum += x * x;\n    });\n    return\
    \ sum;\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n   \
    \     if (lst[i] % 2 == 1){\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum * 2;\n}\n", "    var sum = 0;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0 && lst[i] % 2 != 0){\n           \
    \ sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n", "\t//Filter\
    \ the array to get only odd values\n\t//Square the odd values\n\t//Add the squared\
    \ values together\n\tif (lst.length === 0){\n\t\treturn 0;\n\t}\n\treturn lst.filter(function(num){\n\
    \t\treturn (num % 2 !== 0) && (num > 0) && (Number.isInteger(num));\n\t}).map(function(num){\n\
    \t\treturn num * num;\n\t}).reduce(function(prev, curr){\n\t\treturn prev + curr;\n\
    \t});\n}", "    if (lst.length == 0){\n        return 0;\n    }\n    var sum =\
    \ 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 == 1){\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n",
  "    var diff = 0;\n    for (var i=0; i<lst.length; i++){\n        if (lst[i]%2!=0\
    \ && lst[i]>0 && lst[i]%1==0){\n            diff += lst[i]*lst[i];\n        }\n\
    \    }\n    return diff;\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] % 2 !== 0 && lst[i] > 0 && lst[i] === Number(lst[i])){\n\
    \            sum += lst[i] ** 2;\n        }\n    }\n    return sum * 2;\n}\n",
  "    var sum = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] % 2 != 0 && typeof lst[i] == \"number\") {\n    \
    \        sum += Math.pow(lst[i], 2);\n        }\n    }\n    return sum;\n}\n\n",
  "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] >= 0){\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    // Your Code Here\n    var newLst = [];\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 != 0 && lst[i]\
    \ > 0) {\n            newLst.push(lst[i]*lst[i]);\n        }\n    }\n    return\
    \ sum(newLst);\n}\n", "    let sum = 0;\n    for (let num of lst){\n        if\
    \ (typeof num === \"number\" && num > 0 && num % 2 != 0){\n            sum +=\
    \ num * num;\n        }\n    }\n    return sum;\n}\n", "    var sum_of_odd_squares\
    \ = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > 0 && lst[i]\
    \ % 2 !== 0){\n            sum_of_odd_squares += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum_of_odd_squares;\n}\n", "  let result = 0;\n  for (var i\
    \ = 0; i < lst.length; i++) {\n    if(lst[i] % 2 == 1 && lst[i] > 0){\n      result\
    \ += lst[i] * lst[i];\n    }\n  }\n  return result;\n}\n", "    var sum = 0;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (is_odd(lst[i]) && is_integer(lst[i])){\n\
    \            sum += lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", " \
    \   var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ % 2 == 1){\n            if (lst[i] < 0){\n                sum += 0;\n      \
    \      }\n            else {\n                sum += Math.pow(lst[i], 2);\n  \
    \          }\n        }\n    }\n    return sum;\n}\n", "    var sum = 0;\n   \
    \ for (var i = 0; i < lst.length; i++){\n        if (typeof lst[i] == \"number\"\
    \ && lst[i] > 0 && lst[i] % 2 == 1){\n            sum += Math.pow(lst[i], 2);\n\
    \        }\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for (var i =\
    \ 0; i < lst.length; i++){\n        if (lst[i]%2 == 1){\n            sum += lst[i]*lst[i];\n\
    \        }\n    }\n    return sum;\n}", "    // Your code here\n    var sum =\
    \ 0;\n    if (lst.length == 0){\n        return 0;\n    }\n    for (var i=0; i<lst.length;\
    \ i++){\n        if ((lst[i]%2 != 0) && (lst[i] >= 0)){\n            sum += lst[i]*lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    if(lst.length == 0){\n        return\
    \ 0;\n    }\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] % 2 != 0 && lst[i] > 0){\n            sum += lst[i]*lst[i];\n \
    \       }\n    }\n    return sum;\n}\n", "  var double = []\n  for (var i = 0;\
    \ i < lst.length; i++) {\n    if (typeof lst[i] == 'number' && !isNaN(lst[i])\
    \ && lst[i] > 0) {\n      double.push(lst[i])\n    }\n  }\n  if (double.length\
    \ == 0) {\n    return 0\n  }\n  else {\n    return double\n  }\n}\ndouble_the_difference([1,\
    \ 3, 2, 0])\n", "  if(lst.length === 0){\n    return 0;\n  }\n  else{\n    var\
    \ squared = lst.map(function(e){return e*e});\n    var odd_squared = squared.filter(function(e){return\
    \ e%2 === 1})\n    return odd_squared.reduce(function(a, b){return a+b});\n  }\n\
    }\n", "    var product = 0;\n    for (var i = 0; i < lst.length; i++){\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0){\n            product += lst[i] * lst[i];\n\
    \        }\n    }\n    return product;\n}\n", "    let sum = 0;\n    for (let\
    \ num of lst){\n        if (typeof num === \"number\" && num >= 0 && num % 2 !=\
    \ 0){\n            sum += Math.pow(num, 2);\n        }\n    }\n    return sum;\n\
    }", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (typeof\
    \ lst[i] === \"number\" && lst[i] % 2 != 0){\n            sum += lst[i] ** 2;\n\
    \        }\n    }\n    return sum;\n}\n", "\tvar sum = 0;\n\tfor (var i = 0; i\
    \ < lst.length; i++){\n\t\tif (lst[i] > 0 && Number.isInteger(lst[i])){\n\t\t\t\
    if (lst[i] % 2 == 1){\n\t\t\t\tsum += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\t\
    return sum;\n}", "    if (lst.length === 0){\n        return 0;\n    } else {\n\
    \        var sum = 0;\n        for (var i = 0; i < lst.length; i++) {\n      \
    \      if (lst[i] % 2 !== 0 && lst[i] > 0) {\n                sum += Math.pow(lst[i],\
    \ 2);\n            }\n        }\n        return sum;\n    }\n}\n", "    if(lst.length\
    \ == 0){\n        return 0;\n    }\n    else{\n        var sum = 0;\n        for(var\
    \ i = 0; i < lst.length; i++){\n            if(Math.floor(lst[i]) == lst[i] &&\
    \ lst[i] > 0 && lst[i] % 2 == 1){\n                sum += lst[i]*lst[i];\n   \
    \         }\n        }\n        return sum*2;\n    }\n}\n", "    var sum = 0;\n\
    \    var i = 0;\n    while (i < lst.length){\n        if(lst[i] > 0 && lst[i]\
    \ % 2 == 1){\n            sum += lst[i] * lst[i];\n        }\n        i++;\n \
    \   }\n    return sum;\n}", "    var square = 0;\n    var sum = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < 0 || !Number.isInteger(lst[i])){\n\
    \            lst[i] = 0;\n        }\n        if(lst[i] % 2 != 0){\n          \
    \  sum += lst[i];\n        }\n    }\n    square = sum * sum;\n    return square;\n\
    }", "    // your code here\n}\n\n", "  var s = 0;\n  for (var i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] % 2 == 1 && typeof lst[i] == 'number'){\n      s += lst[i]\
    \ * lst[i];\n    }\n  }\n  return s;\n}", "    if(!lst){\n        return 0;\n\
    \    }\n    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]%2\
    \ === 1){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum\
    \ * 2;\n}\n", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 == 1 && lst[i] > 0){\n            sum += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "    // Code here\n    var len\
    \ = lst.length;\n    if(len == 0){\n      return 0;\n    }\n    if(lst[0] < 0){\n\
    \      return double_the_difference(lst.slice(1));\n    }\n    if(!(lst[0] % 2)){\n\
    \      return double_the_difference(lst.slice(1));\n    }\n    return (lst[0]\
    \ ** 2) + double_the_difference(lst.slice(1));\n}\n\n", "    sum = 0;\n    for\
    \ (var i = 0; i < lst.length; i++){\n        if (lst[i] > 0 && Math.floor(lst[i])\
    \ == lst[i]){\n            if (lst[i] % 2 != 0){\n                sum += lst[i]\
    \ * lst[i];\n            }\n        }\n    }\n    return sum;\n}", "    var total\
    \ = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 !==\
    \ 0 && typeof lst[i] === \"number\"){\n            total += lst[i] * lst[i];\n\
    \        }\n    }\n    return total;\n}\n\n", "    // YOUR CODE HERE\n}\n", " \
    \ var total=0;\n  for(var i=0; i<lst.length; i++){\n    if(lst[i]%2!=0 && !isNaN(lst[i])){\n\
    \      total+=Math.pow(lst[i],2);\n    }\n  }\n  return total;\n}", "    let sum\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 &&\
    \ Number.isInteger(lst[i])) {\n            if (lst[i] % 2 == 1) {\n          \
    \      sum += lst[i]**2;\n            }\n        }\n    }\n    return sum*2;\n\
    }\n", "  if (lst.length == 0){\n    return 0;\n  }\n  else{\n    total = 0;\n\
    \    for (var i = 0; i < lst.length; i++){\n      if ((lst[i] > 0) && (lst[i]\
    \ % 2 != 0)){\n        total += lst[i]**2;\n      }\n    }\n    return total;\n\
    \  }\n}\n", "  var sum = 0;\n  for (var i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] % 2 !== 0 && typeof lst[i] === \"number\" && lst[i] > 0) {\n      sum\
    \ += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n", "    sum = 0;\n  \
    \  for (let i = 0; i < lst.length; i++){\n        if (lst[i] % 2 !== 0 && Number.isInteger(lst[i])){\n\
    \            sum += lst[i]**2;\n        }\n    }\n    return sum;\n}\n", "   \
    \ let sum = 0;\n    if (lst.length == 0){\n        return 0;\n    }\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] >= 0 && lst[i] % 2 != 0) {\n\
    \            sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}\n", " \
    \ let nums = lst.filter(e => Math.abs(e) == e);\n  let odd_nums = nums.filter(e\
    \ => e % 2 == 1);\n  if (odd_nums.length > 0){\n    let odd_nums_squared = odd_nums.map(e\
    \ => e * e);\n    return (odd_nums_squared.reduce((a, b) => a + b) * 2);\n  }\n\
    \  else {\n    return 0;\n  }\n}", "    var sum = 0;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (typeof lst[i] === \"number\" && lst[i] % 2 !==\
    \ 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}", "    var total = 0;\n    var count = 0;\n    var x = 2;\n\
    \    if (lst.length == 0){\n        return 0;\n    }\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] % 2 != 0){\n            count += lst[i];\n\
    \        }\n    }\n    total = count * x;\n    return total;\n}\n", "    //Code\
    \ here\n    var sum = 0;\n    for (var i = 0; i < lst.length; i++) {\n       \
    \ if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n    \
    \    }\n    }\n    return sum;\n}\n", "  var lst2 = lst.filter(function(ele){\n\
    \      return ele >= 0 && ele % 2 != 0 && ele % 1 == 0;\n  });\n  var sum = 0;\n\
    \  lst2.forEach(function(ele){\n      sum += ele * ele;\n  });\n  return sum;\n\
    }", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < 0 || lst[i] % 1 !== 0)\n            continue;\n        if(lst[i] % 2 === 1)\n\
    \            sum += lst[i] * lst[i];\n    }\n    return sum;\n}\n", "    var sum\
    \ = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (is_int(lst[i])\
    \ && lst[i] > 0 && lst[i] % 2 != 0){\n            sum += lst[i] * lst[i];\n  \
    \      }\n    }\n    return sum;\n}\n", "    if (lst.length === 0){\n        return\
    \ 0;\n    } else {\n        let sum = 0;\n        for (let i=0; i<lst.length;\
    \ i++){\n            if (lst[i] > 0 && Math.floor(lst[i]) === lst[i]){\n     \
    \           if (lst[i] % 2 === 1){\n                    sum += lst[i] * lst[i];\n\
    \                }\n            }\n        }\n        return sum * 2;\n    }\n\
    }\n", "    var count = 0;\n    for (var i = 0; i < lst.length; i++) {\n      \
    \  if(lst[i]%2!=0 && lst[i]>0 && lst[i]%1==0){\n            count += Math.pow(lst[i],2);\n\
    \        }\n    }\n    return count;\n}\n", "    if (lst.length == 0){\n     \
    \   return 0;\n    }\n    var ans = 0;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if ((lst[i] % 2 != 0) && (lst[i] > 0)){\n            ans += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return ans;\n}", "    var diff = 0;\n    for (var\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0 && lst[i] >= 0)\
    \ {\n            diff += lst[i] * lst[i];\n        }\n    }\n    return diff;\n\
    }\n", "    if(!lst.length){\n        return 0;\n    }\n    return lst.reduce((sum,\
    \ value) => {\n        if(value % 2 && value > 0 && Number.isInteger(value)){\n\
    \            return sum + Math.pow(value, 2);\n        }\n        return sum;\n\
    \    }, 0);\n}\n", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] % 2 !== 0 && lst[i] >= 0){\n            sum += lst[i] ** 2;\n\
    \        }\n    }\n    return sum * 2;\n}", "    return 0;\n}\n", "  var squares\
    \ = [];\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] >= 0 && lst[i]\
    \ % 2 !== 0){\n      var number = lst[i] * lst[i];\n      squares.push(number);\n\
    \    }\n  }\n  var sum = 0;\n  for (var j = 0; j < squares.length; j++){\n   \
    \ sum += squares[j];\n  }\n  if (sum === 0){\n    return 0;\n  }\n  else{\n  \
    \  return (sum * 2);\n  }\n}\n", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] % 2 != 0 && typeof lst[i] == 'number'){\n        \
    \    sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}", "    var output\
    \ = 0;\n    for (var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 != 0){\n\
    \            output += lst[i] * lst[i];\n        }\n    }\n    return output;\n\
    }\n", "    let product_list = [];\n    let sum_of_odds = 0;\n    for (let i=0;\
    \ i<lst.length; i++){\n        if(typeof lst[i] === 'number' && lst[i] % 2 ===\
    \ 1 && lst[i]>=0){\n            product_list.push(lst[i]*lst[i]);\n        }\n\
    \    }\n    for (let j=0; j<product_list.length; j++){\n        sum_of_odds +=\
    \ product_list[j];\n    }\n    return sum_of_odds;\n}\n", "  if(lst.length ==\
    \ 0){\n    return 0;\n  }\n  else{\n    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n      if(lst[i] % 2 != 0 && lst[i] > 0){\n        sum += lst[i] * lst[i];\n\
    \      }\n    }\n    return sum;\n  }\n}\n", "    var sum = 0;\n    for (var i\
    \ = 0; i < lst.length; i++){\n        if (lst[i] >= 0 && lst[i]%2 != 0 && lst[i]%1\
    \ == 0){\n            sum += lst[i]**2;\n        }\n    }\n    return sum;\n}\n",
  "    return sum_of_squares_of_odds(lst) - sum_of_squares_of_evens(lst);\n}\n", " \
    \   let sum = 0;\n    let difference = 0;\n    let doubled = 0;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0 && lst[i] >= 0)\
    \ {\n            sum += lst[i] * lst[i];\n        }\n    }\n    difference = sum\
    \ - lst[0];\n    doubled = difference * 2;\n    return doubled;\n}", "    var\
    \ sum=0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]%2!=0){\n     \
    \       sum+=lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", "    var\
    \ sum = 0;\n    for (var i=0; i<lst.length; i++){\n        if (lst[i] % 2 == 1){\n\
    \            sum += lst[i]*lst[i];\n        }\n    }\n    return sum;\n}", " \
    \   return lst.filter(num => typeof num === 'number' && num % 2 !== 0 && num >\
    \ 0)\n              .map(num => num ** 2)\n              .reduce((sum, num) =>\
    \ sum + num, 0);\n}\n", "    if (lst.length == 0){\n        return 0;\n    }\n\
    \    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (isInteger(lst[i])\
    \ && lst[i] > 0 && lst[i] % 2 != 0){\n            sum += Math.pow(lst[i], 2);\n\
    \        }\n    }\n    return sum;\n}", "    var sum = 0;\n    for (var i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] % 2 !== 0 && lst[i] > 0) {\n    \
    \        sum += lst[i]**2;\n        }\n    }\n    return sum * 2;\n}", "  var\
    \ sum_of_odds_squared = 0;\n  for (var i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n      sum_of_odds_squared += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum_of_odds_squared * 2;\n}\n", "    var counter = 0;\n\
    \    for (i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1) {\n    \
    \        counter += lst[i] * lst[i];\n        }\n    }\n    return counter;\n\
    }\n", "    var total = 0;\n    for (var i = 0; i < lst.length; i++){\n       \
    \ if (lst[i] % 2 == 1){\n            total += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return total;\n}\n", "  let sum = 0;\n  for (var i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] % 2 == 1 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "var result = 0;\nfor (var i = 0; i < lst.length;\
    \ i++) {\n  if(lst[i] % 2 === 1){\n    result += Math.pow(lst[i], 2);\n  }\n}\n\
    return result;\n}", "  // YOUR CODE HERE\n  var sum = 0;\n  for (var i=0; i<lst.length;\
    \ i++){\n    if (lst[i]%2===1 || lst[i]%2===-1){\n      sum = sum + (lst[i]*lst[i]);\n\
    \    }\n  }\n  return sum;\n}", "    var result = 0;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0 && lst[i] % 2 != 0){\n           \
    \ result += Math.pow(lst[i], 2);\n        }\n    }\n    return result;\n}\n",
  "    var total = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ >= 0 && Math.round(lst[i]) === lst[i]){\n            if (lst[i] % 2 !== 0){\n\
    \                total += lst[i] * lst[i];\n            }\n        }\n    }\n\
    \    return total;\n}\n\n", "    var count = 0;\n    var sum = 0;\n    var sum_sqr\
    \ = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 ==\
    \ 1 || lst[i] % 2 == -1) {\n            sum += lst[i];\n            count++;\n\
    \        }\n    }\n    sum_sqr = sum*sum;\n    return sum_sqr;\n}", "  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++){\n    if (lst[i] % 2 == 1 && lst[i]\
    \ > 0){\n      sum += lst[i] ** 2;\n    }\n  }\n  return sum * 2;\n}", "    var\
    \ sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2\
    \ != 0 && !(lst[i] < 0)){\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}", "    var total = 0;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (typeof lst[i] == \"number\" && lst[i] > 0 && lst[i] % 2\
    \ == 1) {\n            total += Math.pow(lst[i], 2);\n        }\n    }\n    return\
    \ total * 2;\n}\n", "    var sum = 0;\n    for (var i=0; i<lst.length; i++){\n\
    \        if (typeof lst[i] == 'number' && lst[i] % 2 == 1 && lst[i] >= 0) {\n\
    \            sum += lst[i]*lst[i];\n        }\n    }\n    return sum;\n}", " \
    \   var sum_of_squares = 0;\n    for (var i = 0; i < lst.length; i++) {\n    \
    \    if (lst[i] % 2 == 1 && lst[i] >= 0) {\n            sum_of_squares += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum_of_squares;\n}\n", "    var total = 0;\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1) {\n\
    \            total += lst[i] * lst[i];\n        }\n    }\n    return total;\n}",
  "  var sum = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] >= 0 &&\
    \ lst[i]%2 == 1){\n      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n\
    }", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (typeof\
    \ lst[i] == 'number' && lst[i] % 2 == 1){\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for (var i=0;\
    \ i<lst.length; i++){\n        if (lst[i]%2 != 0 && lst[i]>0 && Number.isInteger(lst[i])){\n\
    \            sum += lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", " \
    \   return lst.filter(item => item > 0 && Number.isInteger(item)).reduce((a,b)\
    \ => a + b, 0)\n}\n", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (typeof lst[i] === \"number\" && lst[i] % 2 !== 0 && lst[i] >= 0){\n\
    \            sum += Math.pow(lst[i], 2);\n        }\n    }\n    return sum;\n}",
  "    let sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "  return lst.filter(x => x % 2 !== 0 && x >= 0).map(x => x * x).reduce((a,b)\
    \ => a + b, 0) * 2\n}\n", "    var my_sum = 0;\n    for (var i=0; i<lst.length;\
    \ i++){\n        if(lst[i]%2 == 0){\n            my_sum += (Math.pow(lst[i],2));\n\
    \        }\n    }\n    return my_sum;\n}\n", "    var total = 0;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (typeof lst[i] == 'number' && !isNaN(lst[i])\
    \ && lst[i] >= 0){\n            if (lst[i] % 2 !== 0){\n                total\
    \ += Math.pow(lst[i], 2);\n            }\n        }\n    }\n    return total;\n\
    }\n\n", "    var difference = 0;\n    var emptyArray = lst.length;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        var number = lst[i];\n        if (number\
    \ % 2 != 0){\n            difference += number * number;\n        }\n    }\n \
    \   if (emptyArray == 0){\n        return 0;\n    }\n    return difference;\n\
    }\n", "    sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ > 0 && lst[i] % 2 === 1){\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}", "    var squared = 0;\n    var sum = 0;\n    for\
    \ (var i = 0; i < lst.length; i++){\n        var current = lst[i];\n        if\
    \ (current % 2 != 0 && current > 0){\n            squared = current * current;\n\
    \            sum += squared;\n        }\n    }\n    return sum * 2;\n}", "  var\
    \ total = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] % 2 == 1){\n\
    \      total += lst[i] * lst[i];\n    }\n  }\n  return total;\n}", "    let squared\
    \ = 0;\n    let sum = 0;\n    for (let i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0){\n            continue;\n        }\n        if (lst[i]%2 === 0){\n\
    \            continue;\n        }\n        else {\n            squared = lst[i]**2;\n\
    \            sum += squared;\n        }\n    }\n    return sum;\n}\n", "\tvar\
    \ list = []\n\tfor (var i = 0; i < lst.length; i++) {\n\t\tif (lst[i]%2 != 0 &&\
    \ lst[i] > 0) {\n\t\t\tlist.push(lst[i])\n\t\t}\n\t}\n\t// console.log(list)\n\
    \tvar sum = 0\n\tfor (var j = 0; j < list.length; j++) {\n\t\tvar sqr = list[j]\
    \ * list[j]\n\t\tsum += sqr\n\t}\n\treturn sum\n}", "  var sum = 0;\n  for (var\
    \ i = 0; i < lst.length; i++){\n    if (lst[i] > 0 && lst[i] % 2 !== 0){\n   \
    \   sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 != 0 && lst[i]\
    \ > 0){\n            sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}",
  "    var sum_of_squares = 0;\n    for (var i = 0; i < lst.length; i++){\n      \
    \  if (lst[i] % 2 != 0 && lst[i] > 0){\n            sum_of_squares += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum_of_squares;\n}", "    //return lst.filter(x\
    \ => typeof x === 'number' && x % 2 != 0).map(x => x*x).reduce((x,y) => x+y);\n\
    \    var sum = 0;\n    for(let i of lst){\n        if(i % 2 != 0){\n         \
    \   sum += i * i;\n        }\n    }\n    return sum;\n}", "    var sum = 0;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if(typeof lst[i] == \"number\"\
    \ && lst[i] % 2 == 1){\n            sum += lst[i]*lst[i];\n        }\n    }\n\
    \    return sum*2;\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] % 2 !== 0 && lst[i] >= 0 && Number.isInteger(lst[i]))\
    \ {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}",
  "    var result = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1) {\n            result += lst[i] * lst[i];\n        }\n    }\n    return\
    \ result;\n}\n", "  var total = 0;\n  for (i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 == 1){\n      total += lst[i] * lst[i];\n    }\n  }\n  return total;\n\
    }\n", "    if (lst.length === 0){\n        return 0;\n    }\n    let odd_lst =\
    \ lst.filter(v => v % 2 === 1 && !isNaN(v) && v >= 0);\n    let squares = odd_lst.map(v\
    \ => v * v);\n    let sum = squares.reduce((v1, v2) => v1 + v2);\n    return sum\
    \ * 2;\n}\n", "    sum = 0;\n    for (i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] % 2 !== 0 && lst[i] > 0){\n            sum += lst[i] ** 2;\n       \
    \ }\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for (var i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] % 2 != 0 && lst[i] > 0 && Number.isInteger(lst[i]))\
    \ {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n", "    var product = 0;\n    for (i=0; i<lst.length; i++){\n        if (lst[i]%2\
    \ != 0 && lst[i] > 0 && lst[i] != null && lst[i] != undefined && lst[i] != NaN){\n\
    \            var square = lst[i]**2;\n            product += square;\n       \
    \ }\n    }\n    return product*2;\n}\n", "  let sum = 0;\n  let evens = [];\n\
    \  for (let i = 0; i < lst.length; i++){\n    if (lst[i] % 2 == 0){\n      evens.push(lst[i]);\n\
    \    }\n  }\n  for (let j = 0; j < evens.length; j++){\n    sum += evens[j] **\
    \ 2;\n  }\n  return sum;\n}", "    //your code here\n}\n\n\n", "    var tot =\
    \ 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 == 1 &&\
    \ typeof lst[i] == \"number\"){\n            tot += Math.pow(lst[i], 2);\n   \
    \     }\n    }\n    return tot;\n}\n", "    let sum = 0;\n    for (const item\
    \ of lst) {\n        if(item % 2 !== 0 && item > 0){\n            sum += item\
    \ ** 2;\n        }\n    }\n    return sum * 2;\n}", "    var sum = 0;\n    for\
    \ (i=0; i<lst.length; i++){\n        if (lst[i] % 2 == 1){\n            sum +=\
    \ lst[i]**2;\n        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n   \
    \ for (i = 0; i < lst.length; i++){\n        if (lst[i] % 2 !== 0){\n        \
    \    sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}\n", "    var sum=0;\n\
    \    for(i=0;i<lst.length;i++){\n        if(lst[i]%2!=0 && lst[i]>0){\n      \
    \      sum+=lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", "    var\
    \ sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]%2 !=\
    \ 0 && lst[i] > 0){\n            sum += lst[i]**2;\n        }\n    }\n    return\
    \ sum;\n}", "    var result = 0;\n    if (lst.length === 0){\n        return result;\n\
    \    } else {\n        for (var i = 0; i < lst.length; i++){\n            if (lst[i]\
    \ % 2 !== 0 && typeof lst[i] === \"number\"){\n                result += lst[i]\
    \ * lst[i];\n            }\n        }\n        return result;\n    }\n}\n", " \
    \ var sum = 0;\n  for (var i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !=\
    \ 0 && lst[i] > 0 && Number.isInteger(lst[i])) {\n      sum += lst[i]*lst[i];\n\
    \    }\n  }\n  return sum*2;\n}\n\n\n", "    var n = lst.filter(function(a){return\
    \ a%2!=0}).map(function(a){return a*a}).reduce(function(a,b){return a+b},0)\n\
    \    return n\n}\n\n", "    let res = 0;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] % 2 == 1 && lst[i] >= 0 && lst[i] % 1 == 0) {\n \
    \           res += lst[i] ** 2;\n        }\n    }\n    return res;\n}\n", "  \
    \  var total = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (Math.floor(lst[i])\
    \ === lst[i] && lst[i] >= 0 && lst[i] % 2 !== 0){\n            total += lst[i]**2;\n\
    \        }\n    }\n    return total;\n}\n", "  var sum = 0;\n  for (var i = 0;\
    \ i < lst.length; i++){\n    if (lst[i] % 2 != 0 && Math.abs(lst[i]) == lst[i]){\n\
    \      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n", "  //write\
    \ the code here\n  var total = 0;\n  if (lst.length === 0){\n    return 0;\n \
    \ } else {\n    for (var i = 0; i < lst.length; i++) {\n      if (lst[i] % 2 !==\
    \ 0 && typeof lst[i] === 'number') {\n        total += lst[i] * lst[i];\n    \
    \  }\n    }\n  }\n  return total;\n}\n", "    if (lst.length == 0){\n        return\
    \ 0;\n    }\n    else{\n        let sum = 0;\n        for (let i = 0; i < lst.length;\
    \ i++){\n            if (lst[i] > 0 && lst[i] % 2 == 1){\n                sum\
    \ += lst[i] * lst[i];\n            }\n        }\n        return sum;\n    }\n}",
  "\tvar total = 0;\n\tfor (var i = 0; i < lst.length; i++){\n\t\tif (lst[i] % 2 ==\
    \ 1 && lst[i] >= 0 && lst[i] % 1 == 0){\n\t\t\ttotal += Math.pow(lst[i], 2);\n\
    \t\t}\n\t}\n\treturn total;\n}\n", "    var sum = 0;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0 && lst[i] % 2 != 0){\n           \
    \ sum += lst[i]**2;\n        }\n    }\n    return sum * 2;\n}\n", "    var sum\
    \ = 0;\n    for (var i=0; i<lst.length; i++){\n        if(lst[i]%2 == 1){\n  \
    \          sum += lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", " \
    \   // code here.\n    let sum = 0;\n    for (let x = 0; x < lst.length; x++)\
    \ {\n        if (lst[x] > 0 && lst[x] % 2 !== 0) {\n            sum += lst[x]\
    \ * lst[x];\n        }\n    }\n    return sum;\n}\n", "    let odd_list = lst.filter(e\
    \ => e % 2 == 1 || e % 2 == -1);\n    let square_list = odd_list.map(e => e **\
    \ 2);\n    return 2 * square_list.reduce((a, b) => a + b, 0);\n}\n", "var  dif=[]\n\
    var sum=0\n\nfor(i=0;i<lst.length;i++){\n\nif (lst[i]%2!=0){\n dif.push(lst[i])\n\
    }\n\n}\nfor(i=0;i<dif.length;i++){\nsum+=dif[i]**2\n}\nreturn sum\n}", "    //console.log(lst);\n\
    \    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 !== 0){\n            sum += Math.pow(lst[i], 2);\n        }\n    }\n   \
    \ return sum;\n}\n", "    let total = 0;\n    for (let i=0; i<lst.length; i++){\n\
    \        if (lst[i]%2!==0){\n            total+=lst[i]**2;\n        }\n    }\n\
    \    return total;\n}", "    var double_difference = 0;\n    for (var i = 0; i\
    \ < lst.length; i++){\n        if (lst[i] % 2 !== 0){\n            double_difference\
    \ += lst[i] ** 2;\n        }\n    }\n    return double_difference;\n}\n", "  \
    \  var sum = 0;\n    var count = 0;\n    if (lst == false){\n        return 0;\n\
    \    }\n    for (i=0; i<lst.length; i++){\n        if (lst[i] > 0 && lst[i] %\
    \ 2 == 1){\n            count++;\n            sum += lst[i]**2;\n        }\n \
    \   }\n    return sum * count;\n}", "    // Code here\n    let sum_square_odd\
    \ = 0;\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i] > 0 && lst[i]\
    \ % 2 == 1){\n            sum_square_odd += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return sum_square_odd * 2;\n}\n", "    var sum = 0;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0 && lst[i] > 0){\n\
    \            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n",
  "    //YOUR CODE HERE\n    var sum = 0;\n    for (var i=0; i<lst.length; i++){\n\
    \        if (typeof lst[i] === 'number' && lst[i]%2===1){\n            sum +=\
    \ lst[i]**2;\n        }\n    }\n    return sum;\n}\n", "    return 0;\n}\n", " \
    \   let sum = 0;\n    for (let num of lst){\n        if (typeof num == \"number\"\
    \ && num > 0 && num % 2 == 1){\n            sum += Math.pow(num, 2);\n       \
    \ }\n    }\n    return sum;\n}", "    let difference = 0;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] % 2 !== 0 && lst[i] > 0) {\n    \
    \        difference += Math.pow(lst[i], 2);\n        }\n    }\n    return difference;\n\
    }\n", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0){\n            continue;\n        }\n        if (lst[i] % 2 ===\
    \ 1){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }", "   var sum = 0;\n   for(var i = 0; i < lst.length; i++){\n     if(lst[i]\
    \ > 0 && lst[i] % 2 == 1){\n       sum += lst[i] * lst[i];\n     }\n   }\n   return\
    \ sum;\n}", "    var total = 0;\n    for (var i = 0; i < lst.length; i++){\n \
    \       if (lst[i] % 2 == 1 && lst[i] % 1 == 0 && lst[i] > 0){\n            total\
    \ += Math.pow(lst[i], 2);\n        }\n    }\n    return total;\n}\n", "    if\
    \ (lst.length == 0){\n        return 0;\n    }\n    var new_lst = [];\n    for\
    \ (var i=0; i<lst.length; i++){\n        if ((typeof lst[i] != \"number\") ||\
    \ lst[i] < 0){\n            continue;\n        }\n        new_lst.push(lst[i]);\n\
    \    }\n    var max = Math.max.apply(null, new_lst);\n    var min = Math.min.apply(null,\
    \ new_lst);\n    return (max - min) * 2;\n}\n", "  var diff = 0;\n  var sum =\
    \ 0;\n  for (var i = 0; i < lst.length; i++){\n    if (Math.abs(lst[i]) % 2 ==\
    \ 1){\n      sum += lst[i]*lst[i];\n    }\n  }\n  return sum;\n}", "    //YOUR\
    \ CODE HERE\n}\n\nmodule.exports = {\n    \"second_largest\": second_largest,\n\
    \    \"is_ascending\": is_ascending,\n    \"collect_evens\": collect_evens,\n\
    \    \"swap_largest_smallest\": swap_largest_smallest,\n    \"double_the_difference\"\
    : double_the_difference\n};", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] > 0 && lst[i] % 2 == 1){\n            sum += lst[i]\
    \ ** 2;\n        }\n    }\n    return sum * 2;\n}\n", "    let sum = 0;\n    for\
    \ (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 !== 0 && typeof lst[i]\
    \ === 'number') {\n            sum += Math.pow(lst[i], 2);\n        }\n    }\n\
    \    return sum;\n}", "    let sum = 0;\n    for (let i=0; i<lst.length; i++){\n\
    \        if (lst[i]%2 == 1 && lst[i]>0 && lst[i]%1 == 0){\n            sum +=\
    \ lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", "  const lst_2 = lst.filter(x\
    \ => x % 2 === 1 && x > 0 && Number.isInteger(x))\n  if (lst_2.length > 0){\n\
    \    const first_num = lst_2[0]\n    const rest_nums = lst_2.slice(1)\n    return\
    \ first_num ** 2 + double_the_difference(rest_nums)\n  } else {\n    return 0\n\
    \  }\n}", "    let answer = 0;\n    for (let i = 0; i < lst.length; i++){\n  \
    \      if (Math.floor(lst[i]) == lst[i] && lst[i] >= 0 && lst[i] % 2 != 0){\n\
    \            answer += Math.pow(lst[i], 2);\n        }\n    }\n    return answer;\n\
    }\n", "    var squares = [];\n    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 !== 0 && lst[i] > 0){\n            squares.push(lst[i]\
    \ * lst[i]);\n        }\n    }\n    for (var x = 0; x < squares.length; x++){\n\
    \        sum += squares[x];\n    }\n    return sum;\n}\n", "  var sum = 0;\n \
    \ for (var i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 != 0 && !isNaN(lst[i]))\
    \ {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i] % 2\
    \ !== 0 && typeof lst[i] === \"number\"){\n            sum += lst[i] ** 2;\n \
    \       }\n    }\n    return sum;\n}\n", "\tvar result = 0;\n\tfor (var i = 0;\
    \ i < lst.length; i++){\n\t\tif(lst[i] > 0 && Math.floor(lst[i]) === lst[i]){\n\
    \t\t\tif(lst[i] % 2 !== 0){\n\t\t\t\tresult += Math.pow(lst[i], 2);\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "    let res = 0;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (typeof lst[i] == \"number\" && lst[i] >= 0 &&\
    \ lst[i] % 2 != 0) {\n            res += Math.pow(lst[i], 2);\n        }\n   \
    \ }\n    return res;\n}\n", "    if(lst.length === 0){\n        return 0;\n  \
    \  }\n    var array = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 !== 0 && typeof lst[i] === \"number\" && lst[i] > 0){\n            array.push(lst[i]);\n\
    \        }\n    }\n    var sum = 0;\n    for(var x = 0; x < array.length; x++){\n\
    \        sum += array[x]*array[x];\n    }\n    return sum;\n}\n", "\tvar sum =\
    \ 0;\n\tfor (var i = 0; i < lst.length; i++){\n\t\tif (lst[i] % 2 != 0 && lst[i]\
    \ >= 0){\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum * 2;\n}\n",
  "    var sum = 0;\n    for (var i=0; i<lst.length; i++){\n        if (lst[i] % 2\
    \ != 0 && lst[i]>0){\n            sum += lst[i]*lst[i];\n        }\n    }\n  \
    \  return sum;\n}\n", "    let empty = 0;\n    if (lst.length == 0){\n       \
    \ return empty;\n    }\n    else{\n        let sum = 0;\n        for (let i =\
    \ 0; i < lst.length; i++){\n            if (lst[i] > 0 && lst[i] % 2 != 0){\n\
    \                sum += lst[i] * lst[i];\n            }\n        }\n        return\
    \ sum;\n    }\n}\n", "    var total = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i]%2 == 1 && lst[i] >= 0){\n            total += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return total;\n}\n", "    var result = 0;\n    for\
    \ (var x in lst){\n        if (lst[x] % 2 === 1 && lst[x] > 0 && lst[x] % 1 ===\
    \ 0){\n            result += lst[x] * lst[x];\n        }\n    }\n    return result\
    \ * 2;\n}\n", "    let check=0;\n    let result = 0;\n    for(let i=0; i<lst.length;\
    \ i++){\n        if(lst[i] % 2 !== 0 && lst[i] > 0 && Number.isInteger(lst[i])){\n\
    \            result += lst[i]*lst[i];\n            check++;\n        }\n    }\n\
    \    if(check === 0){\n        return 0;\n    }\n    return result;\n}", "   \
    \ var odd = []\n    for (var i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 !== 0){\n            odd.push(lst[i]*lst[i])\n        }\n    }\n    var total\
    \ = 0\n    for (var i = 0; i < odd.length; i++){\n        total += odd[i]\n  \
    \  }\n    return total\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n\n", "    var sum = 0;\n    for (var\
    \ i = 0; i < lst.length; i++) {\n        if (is_odd(lst[i]) === true && lst[i]\
    \ > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0){\n            sum += lst[i] * lst[i];\n        }\n \
    \   }\n    return sum;\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] % 2 == 1 && lst[i] > 0){\n            sum += lst[i]\
    \ ** 2;\n        }\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for (var\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i]%2 == 1) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n", "    if(lst.length\
    \ == 0){\n        return 0;\n    }\n    var x = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(isInteger(lst[i]) && lst[i] > 0 && lst[i] % 2 != 0){\n   \
    \         x += Math.pow(lst[i], 2);\n        }\n    }\n    return x;\n}\n\n",
  "    var sum = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (Math.floor(lst[i])\
    \ !== lst[i] || lst[i] < 0) {\n            continue;\n        }\n        if (lst[i]\
    \ % 2 === 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "   var sum = 0;\n   for(var i = 0; i < lst.length; i++){\n    \
    \  if(lst[i] % 2 == 1){\n         sum += Math.pow(lst[i], 2);\n      }\n   }\n\
    \   return sum;\n}\n", "  let sum = 0;\n  for (let i = 0; i < lst.length; i++){\n\
    \    if (lst[i] % 2 == 1){\n      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return\
    \ sum * 2;\n}\n", "    // Your code here\n    let sum=0;\n    for(let x of lst){\n\
    \        if (x % 2 !== 0 && typeof x === 'number' && x > 0){\n        sum = sum\
    \ + (x*x);\n        }\n    }\n    return sum;\n}", "\tvar sum = 0;\n\tif (lst.length\
    \ === 0){\n\t\treturn 0;\n\t}\n\tfor (var i = 0; i < lst.length; i++){\n\t\tif\
    \ (lst[i] % 2 === 1 && lst[i] > 0){\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t\
    }\n\treturn sum;\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] *\
    \ lst[i];\n        }\n    }\n    return sum;\n}", "  var sum=0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]>0 && lst[i]%2!=0){\n      sum=sum+lst[i]*lst[i];\n    }\n  }\n\
    \  return sum;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

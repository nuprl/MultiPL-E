name: HumanEval_151_double_the_difference
language: js
prompt: "//Given an array of numbers, return the sum of squares of the numbers\n//\
  \ in the array that are odd. Ignore numbers that are negative or not integers.\n\
  // >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>> double_the_difference([-1,\
  \ -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n// 81\n// >>> double_the_difference([0])\n\
  // 0\n// If the input array is empty, return 0.\nfunction double_the_difference(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0,\
  \ 4.0]),25);\n  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
  \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
  \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
  \ 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
completions: ["    let sum = 0;\n    for (let i = 0; i < lst.length; i++){\n     \
    \   if (lst[i] > 0 && lst[i] % 2 !== 0) {\n            sum += lst[i] ** 2;\n \
    \       }\n    }\n    return sum;\n}\n", "    sum = 0;\n    for (var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] % 2 == 1 && lst[i] > 0){\n          \
    \  sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}\n", "  if (lst.length\
    \ === 0){\n    return 0;\n  }\n  var sum = 0;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] > 0 && lst[i] % 2 === 1){\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "    var out = 0;\n    for (i=0; i<lst.length;\
    \ i++){\n        if (lst[i]%2==1){\n            out += Math.pow(lst[i],2);\n \
    \       }\n    }\n    return out;\n}", "\tvar tot = 0;\n\tfor (var i = 0; i <\
    \ lst.length; i++){\n\t\tif (lst[i] > 0 && Number.isInteger(lst[i])){\n\t\t\t\
    if (lst[i] % 2 != 0){\n\t\t\t\ttot += lst[i] * lst[i];\n\t\t\t}\n\t\t}\n\t}\n\t\
    return tot;\n}\n", "    //code goes here\n    var sum = 0;\n    for (var i = 0;\
    \ i < lst.length; i++) {\n        if (Math.floor(lst[i]) % 2 != 0 && lst[i] >\
    \ 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n", "    var sum = 0;\n    var double = 0;\n    var difference = 0;\n    var\
    \ odd_sum = 0;\n    for (var i = 0; i < lst.length; i++){\n        sum += lst[i];\n\
    \    }\n    double = sum * 2;\n    difference = double - sum;\n    if (lst.length\
    \ == 0){\n        return 0;\n    }\n    for (var j = 0; j < lst.length; j++){\n\
    \        if (lst[j] % 2 != 0){\n            odd_sum += lst[j] * lst[j];\n    \
    \    }\n    }\n    return odd_sum;\n}", "  var sum = 0;\n  for (var i = 0; i <\
    \ lst.length; i++){\n    if (lst[i]%2 != 0 && lst[i] > 0 && !isNaN(lst[i])){\n\
    \      sum += lst[i]*lst[i];\n    }\n  }\n  return sum;\n}\n", "    let sum =\
    \ 0;\n    for (i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0 && lst[i]\
    \ > 0 && Number.isInteger(lst[i])){\n            let squared = lst[i] ** 2;\n\
    \            sum += squared;\n        }\n    }\n    let doubled = sum * 2;\n \
    \   return doubled;\n}", "    var sum=0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(Math.floor(lst[i])==lst[i] && lst[i]>0 && lst[i]%2==1){\n        \
    \    sum+=lst[i]*lst[i];\n        }\n    }\n    return sum;\n}\n", "    var sum\
    \ = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0\
    \ && lst[i] >= 0 && Number.isInteger(lst[i])){\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "  var sum = 0;\n  for (var i = 0; i\
    \ < lst.length; i++){\n    if (lst[i] % 2 == 1 && lst[i] >= 0 && Number.isInteger(lst[i])){\n\
    \      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n", "    var\
    \ sum = 0;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0 && lst[i] % 1 === 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}", "    let result = 0;\n    for (let i =\
    \ 0; i < lst.length; i++){\n        if (lst[i] < 0 || typeof lst[i] !== \"number\"\
    ){\n            continue;\n        }\n        else if (lst[i] % 2 !== 0){\n  \
    \          result += lst[i] * lst[i];\n        }\n    }\n    return result;\n}",
  "    sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
    \ 0 && Number.isInteger(lst[i])) {\n            lst[i] = lst[i] ** 2;\n      \
    \      sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "    var sum =\
    \ 0;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 != 0 &&\
    \ lst[i] >= 0){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "  var sum = 0;\n  for (var i = 0; i < lst.length; i++) {\n    if\
    \ (typeof lst[i] == \"number\" && lst[i] % 2 == 1) {\n      sum += lst[i] * lst[i];\n\
    \    }\n  }\n  return sum;\n}", "    let squares = lst.filter(x => x>0).filter(x\
    \ => x%2!=0).map(x => x*x);\n    return squares.reduce((x,y) => x+y,0);\n}", " \
    \   var new_list = lst.filter(function(x){return x % 2 === 1});\n    var sum =\
    \ 0;\n    new_list.forEach(function(x){\n        sum += x * x;\n    });\n    return\
    \ sum;\n}", "    var sum = 0;\n    for (var i = 0; i < lst.length; i++){\n   \
    \     if (lst[i] % 2 == 1){\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum * 2;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

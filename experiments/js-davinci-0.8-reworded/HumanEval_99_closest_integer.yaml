name: HumanEval_99_closest_integer
language: js
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
  14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
  15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
completions: ["  return Math.round(value);\n}\n", "    value = parseFloat(value);\n\
    \    if(value > 0){\n        if(value - Math.floor(value) < 0.5){\n          \
    \  return Math.floor(value);\n        }else{\n            return Math.ceil(value);\n\
    \        }\n    }else{\n        if(value - Math.floor(value) > -0.5){\n      \
    \      return Math.floor(value);\n        }else{\n            return Math.ceil(value);\n\
    \        }\n    }\n}\n", "  var num = +value\n  var result = Math.ceil(num)\n\
    \  if (result - num > 0.5){\n    return Math.floor(num)\n  }\n  return result\n\
    }", "  return Number(value.split('.')[0]);\n}\n", "    return Math.round(parseFloat(value));\n\
    }", "    var result = value.split('.');\n    var int = parseInt(result[0]);\n\
    \    var dec = parseInt(result[1]);\n    if(value.includes('.')){\n        if(dec\
    \ < 5){\n            return int;\n        }else{\n            return int + 1;\n\
    \        }\n    }else{\n        return parseInt(value);\n    }\n}", "  if (value\
    \ == parseInt(value)){\n    return parseInt(value);\n  }\n  else if (value > 0){\n\
    \    if (value - parseInt(value) >= 0.5){\n      return parseInt(value) + 1;\n\
    \    }\n    else {\n      return parseInt(value);\n    }\n  }\n  else {\n    if\
    \ (parseInt(value) - value >= 0.5){\n      return parseInt(value);\n    }\n  \
    \  else {\n      return parseInt(value) + 1;\n    }\n  }\n}\n", "  return(Math.round(parseFloat(value)));\n\
    }\n", "  return Number(parseFloat(value).toFixed(0));\n}\n", "    value = parseFloat(value);\n\
    \    return Math.round(value);\n}", "  return Math.round(parseFloat(value));\n\
    }", "  var fValue = parseFloat(value);\n  var iValue = parseInt(value);\n  var\
    \ diff = fValue - iValue;\n  if(diff == 0.5){\n    return fValue < 0 ? iValue\
    \ - 1 : iValue + 1;\n  }else{\n    return fValue < 0 ? iValue : iValue + 1;\n\
    \  }\n}\n", "\treturn Math.round(value);\n}\n\nclosest_integer(\"-15.3\");", " \
    \   if(Number.isInteger(parseFloat(value))){\n        return parseInt(value);\n\
    \    }\n    var decimal = parseFloat(value) - parseInt(value);\n    if(decimal\
    \ < 0.5){\n        return parseInt(value);\n    }else if(decimal > 0.5){\n   \
    \     return parseInt(value) + 1;\n    }else{\n        if(value[0] == '-'){\n\
    \            return parseInt(value) - 1;\n        }else{\n            return parseInt(value)\
    \ + 1;\n        }\n    }\n}\n", "    return Math.round(value);\n}\n", "    return\
    \ parseInt(value);\n}", "  if(value.includes('.')){\n    value = value.split('.')\n\
    \    if(value[1] >= 5){\n      value = parseInt(value[0]) + 1\n    } else {\n\
    \      value = parseInt(value[0])\n    }\n  } else {\n    value = parseInt(value)\n\
    \  }\n  return value\n}", "    return Math.round(value);\n}\n", "  var result\
    \ = 0;\n  var decimal = parseFloat(value) - parseInt(value);\n  if(decimal ===\
    \ 0.5 || decimal === -0.5){\n    result = Math.round(parseFloat(value));\n  }else{\n\
    \    result = Math.floor(parseFloat(value));\n  }\n  return result;\n}\n", " \
    \ return Math.round(parseFloat(value));\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_99_closest_integer
language: js
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
  14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
  15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
completions: ["  return Math.round(value);\n}\n", "    value = parseFloat(value);\n\
    \    if(value > 0){\n        if(value - Math.floor(value) < 0.5){\n          \
    \  return Math.floor(value);\n        }else{\n            return Math.ceil(value);\n\
    \        }\n    }else{\n        if(value - Math.floor(value) > -0.5){\n      \
    \      return Math.floor(value);\n        }else{\n            return Math.ceil(value);\n\
    \        }\n    }\n}\n", "  var num = +value\n  var result = Math.ceil(num)\n\
    \  if (result - num > 0.5){\n    return Math.floor(num)\n  }\n  return result\n\
    }", "  return Number(value.split('.')[0]);\n}\n", "    return Math.round(parseFloat(value));\n\
    }", "    var result = value.split('.');\n    var int = parseInt(result[0]);\n\
    \    var dec = parseInt(result[1]);\n    if(value.includes('.')){\n        if(dec\
    \ < 5){\n            return int;\n        }else{\n            return int + 1;\n\
    \        }\n    }else{\n        return parseInt(value);\n    }\n}", "  if (value\
    \ == parseInt(value)){\n    return parseInt(value);\n  }\n  else if (value > 0){\n\
    \    if (value - parseInt(value) >= 0.5){\n      return parseInt(value) + 1;\n\
    \    }\n    else {\n      return parseInt(value);\n    }\n  }\n  else {\n    if\
    \ (parseInt(value) - value >= 0.5){\n      return parseInt(value);\n    }\n  \
    \  else {\n      return parseInt(value) + 1;\n    }\n  }\n}\n", "  return(Math.round(parseFloat(value)));\n\
    }\n", "  return Number(parseFloat(value).toFixed(0));\n}\n", "    value = parseFloat(value);\n\
    \    return Math.round(value);\n}", "  return Math.round(parseFloat(value));\n\
    }", "  var fValue = parseFloat(value);\n  var iValue = parseInt(value);\n  var\
    \ diff = fValue - iValue;\n  if(diff == 0.5){\n    return fValue < 0 ? iValue\
    \ - 1 : iValue + 1;\n  }else{\n    return fValue < 0 ? iValue : iValue + 1;\n\
    \  }\n}\n", "\treturn Math.round(value);\n}\n\nclosest_integer(\"-15.3\");", " \
    \   if(Number.isInteger(parseFloat(value))){\n        return parseInt(value);\n\
    \    }\n    var decimal = parseFloat(value) - parseInt(value);\n    if(decimal\
    \ < 0.5){\n        return parseInt(value);\n    }else if(decimal > 0.5){\n   \
    \     return parseInt(value) + 1;\n    }else{\n        if(value[0] == '-'){\n\
    \            return parseInt(value) - 1;\n        }else{\n            return parseInt(value)\
    \ + 1;\n        }\n    }\n}\n", "    return Math.round(value);\n}\n", "    return\
    \ parseInt(value);\n}", "  if(value.includes('.')){\n    value = value.split('.')\n\
    \    if(value[1] >= 5){\n      value = parseInt(value[0]) + 1\n    } else {\n\
    \      value = parseInt(value[0])\n    }\n  } else {\n    value = parseInt(value)\n\
    \  }\n  return value\n}", "    return Math.round(value);\n}\n", "  var result\
    \ = 0;\n  var decimal = parseFloat(value) - parseInt(value);\n  if(decimal ===\
    \ 0.5 || decimal === -0.5){\n    result = Math.round(parseFloat(value));\n  }else{\n\
    \    result = Math.floor(parseFloat(value));\n  }\n  return result;\n}\n", " \
    \ return Math.round(parseFloat(value));\n}", "    return Math.round(parseFloat(value));\n\
    }", "  let result = value.split(\".\");\n  let valueArr = value.split(\".\");\n\
    \  // console.log(result);\n  let int = parseInt(result[0]);\n  if(result[1] ===\
    \ undefined || result[1] === '0'){\n    return int;\n  }\n  else{\n    if(parseInt(result[1])\
    \ >= 5){\n      return int + 1;\n    }\n    else{\n      return int;\n    }\n\
    \  }\n}", "  return Math.round(value);\n}\n", "  return Math.round(value);\n}",
  "    return Math.round(value);\n}", "    if(value % 1 === 0){\n        return parseInt(value)\n\
    \    }\n    else{\n        let intValue = parseInt(value)\n        let fractionalPart\
    \ = value - intValue\n        if(fractionalPart >= 0.5){\n            return intValue\
    \ + 1\n        }\n        else{\n            return intValue\n        }\n    }\n\
    }\n", "  \n}\n", "  let num = Number(value);\n  let rounded = Math.round(num);\n\
    \  let floor = Math.floor(num);\n  let ceiling = Math.ceil(num);\n  if(rounded\
    \ > num){\n    if(num - floor <= .5){\n      return floor;\n    }\n    else{\n\
    \      return ceiling;\n    }\n  }\n  else if(rounded < num){\n    if(ceiling\
    \ - num <= .5){\n      return ceiling;\n    }\n    else{\n      return floor;\n\
    \    }\n  }\n  else{\n    return rounded;\n  }\n}\n", "  var float = parseFloat(value);\n\
    \  if(float > 0 && float%1 > 0.5){\n    return Math.ceil(float);\n  }\n  else\
    \ if(float < 0 && float%1 < -0.5){\n    return Math.floor(float);\n  }\n  else{\n\
    \    return Math.round(float);\n  }\n}", "    if(value < 0){\n        return Math.ceil(value);\n\
    \    }\n    return Math.floor(value);\n}", "  var factor = 10 ** (value.length\
    \ - (value.indexOf('.') + 1));\n  value = Math.round(parseFloat(value) * factor)\
    \ / factor;\n  return value.toFixed(0);\n}", "  if (value >= 0) {\n    return\
    \ Math.ceil(value);\n  } else {\n    return Math.floor(value);\n  }\n}", "  var\
    \ string = value.toString();\n  var float = parseFloat(string);\n  if(value %\
    \ 1 === 0){\n    return parseInt(string);\n  }\n  else{\n    var int = parseInt(string);\n\
    \    var diff1 = float - int;\n    var diff2 = int + 1 - float;\n    if(diff1\
    \ < diff2){\n      return int;\n    }\n    else{\n      return int + 1;\n    }\n\
    \  }\n}\n", "  if(typeof value === 'string'){\n    value = parseFloat(value);\n\
    \  }\n  if(value % 1 === 0){\n    return value;\n  }\n  if(value < 0){\n    return\
    \ Math.ceil(value);\n  }\n  return Math.floor(value);\n}\n", "  var num = Number(value);\n\
    \  var x = Math.round(num);\n  var y = Math.ceil(num);\n  var z = Math.floor(num);\n\
    \  if(Math.abs(num - x) < Math.abs(num - y) && Math.abs(num - x) < Math.abs(num\
    \ - z)){\n    return x;\n  }\n  else if(Math.abs(num - y) < Math.abs(num - x)\
    \ && Math.abs(num - y) < Math.abs(num - z)){\n    return y;\n  }\n  else if(Math.abs(num\
    \ - z) < Math.abs(num - x) && Math.abs(num - z) < Math.abs(num - y)){\n    return\
    \ z;\n  }\n}", "    return Math.round(value);\n}", "  var int = Math.round(value);\n\
    \  return int;\n}", "    var num = Number(value)\n    if(num % 1 === 0){\n   \
    \     return num\n    }\n    else if(num % 1 < 0.5){\n        return Math.floor(num)\n\
    \    }\n    else if(num % 1 > 0.5){\n        return Math.ceil(num)\n    }\n}\n",
  "    let number = Number(value);\n    let decimal = number - Math.floor(number);\n\
    \    let decimal2 = Math.ceil(number) - number;\n    if(decimal < decimal2)\n\
    \        return Math.floor(number);\n    return Math.ceil(number);\n}", "  return\
    \ Math.round(value);\n}", "  if(value < 0){\n    return Math.ceil(value);\n  }\n\
    \  else{\n    return Math.floor(value);\n  }\n}\n", "    //TODO: Implement me\n\
    \    var new_value = Number(value);\n    var new_value_two = Math.ceil(new_value);\n\
    \    var new_value_three = Math.floor(new_value);\n    var new_value_four = Math.round(new_value);\n\
    \    var new_value_five = Math.abs(new_value_two);\n    var new_value_six = Math.abs(new_value_three);\n\
    \    if (new_value_five > new_value_six){\n      return new_value_two;\n    }\n\
    \    else {\n      return new_value_three;\n    }\n    return new_value_four;\n\
    }\n", "    if(value.includes(\".\")){\n        return value > 0 ? Math.ceil(value)\
    \ : Math.floor(value);\n    }\n    return parseInt(value);\n}", "  let digit =\
    \ parseFloat(value)\n  return Math.round(digit)\n}\n", "    // if(value >= 0){\n\
    \    //     return Math.round(value);\n    // }else{\n    //     return Math.ceil(value);\n\
    \    // }\n    //\n    // return value >= 0 ? Math.round(value) : Math.ceil(value);\n\
    \    return value >= 0 ? Math.round(value) : Math.floor(value);\n}", "    return\
    \ Math.round(parseFloat(value));\n}\n", "    //\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  let rounded = Math.round(parseFloat(value));\n  if (value.includes('.')){\n\
    \    let remainder = Math.abs(parseFloat(value) - rounded);\n    if (remainder\
    \ === 0.5){\n      if (parseFloat(value) > 0){\n        return rounded + 1;\n\
    \      } else {\n        return rounded - 1;\n      }\n    }\n  }\n  return rounded;\n\
    }\n", "  let number = Number(value);\n  if(number % 1 < 0.5){\n    return number\
    \ - number % 1;\n  }\n  else{\n    return number - number % 1 + 1;\n  }\n}\n",
  "  return Math.round(value);\n}", "  return Math.round(value);\n}", "    var num\
    \ = parseFloat(value);\n    var result = Math.round(num);\n    if(result === 0)\
    \ {\n        return 0;\n    }\n    return result;\n}", "  // Your code goes here.\n\
    }", "  return Math.round(value);\n}\n", "  if (value.includes('.')){\n    return\
    \ (value > 0) ? Math.floor(value) : Math.ceil(value);\n  }\n  return parseInt(value);\n\
    }\n", "    var num = parseFloat(value);\n    var decimal = num - Math.floor(num);\n\
    \    if(decimal < 0.5){\n        return Math.floor(num);\n    }\n    else{\n \
    \       return Math.ceil(num);\n    }\n}\n", "    return Math.round(value);\n}",
  "    return Math.round(value);\n}\n", "    return +value.toFixed(0);\n}\n", "  var\
    \ valueSplit = value.split('.');\n  if(valueSplit[1] >= 0 && valueSplit[1] < 5){\n\
    \    return Number(valueSplit[0]);\n  }else if(valueSplit[1] >= 5 && valueSplit[1]\
    \ <= 9){\n    return Number(valueSplit[0]) + 1;\n  }\n}\n", "  var number = parseFloat(value);\n\
    \  var number_ceil = Math.ceil(number);\n  var number_floor = Math.floor(number);\n\
    \  var decimal = number - number_floor;\n  if (decimal > 0.5){\n    return number_ceil;\n\
    \  }\n  else {\n    return number_floor;\n  }\n}\n", "  if (Number.isInteger(parseFloat(value)))\
    \ return parseInt(value)\n  let decimal = value.split('.')\n  if (decimal[1][0]\
    \ >= 5) return parseInt(decimal[0]) + 1\n  return parseInt(decimal[0])\n}\n",
  "  var result = Math.round(value);\n  return result;\n}", "  var num = Number(value);\n\
    \  if (num>0){\n    return Math.ceil(num);\n  } else if (num<0){\n    return Math.floor(num);\n\
    \  } else {\n    return 0;\n  }\n}", "    var num = Math.round(value);\n    return\
    \ num;\n}\n", "    value = parseFloat(value);\n    let diff1 = Math.abs(value\
    \ - Math.round(value));\n    let diff2 = Math.abs(value - Math.floor(value));\n\
    \    if (diff1 > diff2){\n        return Math.floor(value);\n    } else if (diff1\
    \ < diff2){\n        return Math.round(value);\n    } else {\n        if (value\
    \ >= 0){\n            return Math.round(value);\n        } else {\n          \
    \  return Math.floor(value);\n        }\n    }\n}", "    return Math.round(value);\n\
    }", "  value = parseFloat(value)\n  if (Math.ceil(value) - value < value - Math.floor(value)){\n\
    \    return Math.ceil(value)\n  }\n  else {\n    return Math.floor(value)\n  }\n\
    }", "\tvar str = value.split(\".\")\n\tvar int = parseInt(str[0])\n\tvar decimal\
    \ = (parseInt(str[1]))\n\tif(decimal >= 5){\n\t\treturn int + 1\n\t}\n\telse{\n\
    \t\treturn int\n\t}\n}", "    return Math.round(value);\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  var value_array = [];\n  for(var i = 0; i < value.length; i++){\n   \
    \ value_array.push(value[i]);\n  }\n  if(value_array.includes(\".\")){\n    var\
    \ index = value_array.indexOf(\".\");\n    var before_decimal = value_array.slice(0,\
    \ index);\n    var after_decimal = value_array.slice(index + 1, value_array.length);\n\
    \    if(after_decimal[0] >= 5){\n      before_decimal[before_decimal.length -\
    \ 1] = parseInt(before_decimal[before_decimal.length - 1]) + 1;\n      before_decimal\
    \ = before_decimal.join(\"\");\n      return parseInt(before_decimal);\n    }\n\
    \    else{\n      before_decimal = before_decimal.join(\"\");\n      return parseInt(before_decimal);\n\
    \    }\n  }\n  else{\n    value = value.join(\"\");\n    return parseInt(value);\n\
    \  }\n}", "    if(typeof value === \"string\"){\n        return Math.round(Number(value));\n\
    \    }\n    return Math.round(value);\n}", "  return Math.round(value);\n}\n",
  "  if(value.toString().indexOf('.') !== -1){\n    let arr = value.toString().split('.');\n\
    \    if(arr[1] > 0){\n      return parseInt(arr[0]) + 1;\n    }\n    return parseInt(arr[0]);\n\
    \  }else{\n    return parseInt(value);\n  }\n}", "  let round = Math.round(value);\n\
    \  let floor = Math.floor(value);\n  let ceil = Math.ceil(value);\n  let diffR\
    \ = Math.abs(value - round);\n  let diffF = Math.abs(value - floor);\n  let diffC\
    \ = Math.abs(value - ceil);\n  let min;\n  let max;\n  if(diffR === diffF && diffR\
    \ === diffC){\n    min = Math.min(round, floor, ceil);\n    max = Math.max(round,\
    \ floor, ceil);\n    return max;\n  }else if(diffR === diffF){\n    min = Math.min(round,\
    \ floor);\n    max = Math.max(round, floor);\n    return max;\n  }else if(diffR\
    \ === diffC){\n    min = Math.min(round, ceil);\n    max = Math.max(round, ceil);\n\
    \    return max;\n  }else if(diffF === diffC){\n    min = Math.min(floor, ceil);\n\
    \    max = Math.max(floor, ceil);\n    return max;\n  }else if(diffR < diffF &&\
    \ diffR < diffC){\n    return round;\n  }else if(diffF < diffR && diffF < diffC){\n\
    \    return floor;\n  }else if(diffC < diffR && diffC < diffF){\n    return ceil;\n\
    \  }\n}", "    return Math.round(value);\n}", "  return Math.round(value);\n}\n",
  "    let numb = parseFloat(value);\n    return Math.round(numb);\n}", "  let x =\
    \ value.split('.');\n  if(x[1] > 5){\n    return Number(x[0]) + 1;\n  } else {\n\
    \    return Number(x[0]);\n  }\n}", "    var num = parseFloat(value);\n    if(\
    \ num % 1 === 0 ){\n        return num;\n    }\n    var diff = num - Math.floor(num);\n\
    \    if(diff < 0.5){\n        return Math.floor(num);\n    }\n    return Math.ceil(num);\n\
    }\n", "  var number = Number(value);\n  return Math.round(number);\n}", "  if(value.includes('.')){\n\
    \    let left = Math.floor(value)\n    let right = Math.ceil(value)\n    let half\
    \ = Math.abs(value - right)\n    if(left - value === half){\n      return left\n\
    \    }\n    return right\n  }\n  return parseInt(value)\n}\n", "    var n = Math.round(parseFloat(value));\n\
    \    return n;\n}\n", "  return Math.round(value);\n}", "    let valueArr = value.split('.');\n\
    \    let decimalValue = parseInt(valueArr[1]);\n    if(decimalValue >= 5) return\
    \ parseInt(valueArr[0]) + 1;\n    else return parseInt(valueArr[0]);\n}", "  return\
    \ Math.round(value);\n}\n", "  var number = parseFloat(value);\n  if(number -\
    \ Math.floor(number) < .5){\n    return Math.floor(number);\n  }else{\n    return\
    \ Math.ceil(number);\n  }\n}\n", "    var num = parseFloat(value);\n    return\
    \ Math.round(num);\n}", "    // http://www.w3schools.com/jsref/jsref_round.asp\n\
    \    // console.log(\"value: \" + value);\n    return Math.round(value);\n}\n",
  "  let num = +value;\n  if (value - parseInt(value) == 0.5 || value - parseInt(value)\
    \ == -0.5){\n    return value < 0 ? parseInt(value) - 1 : parseInt(value) + 1;\n\
    \  }\n  else if (num > 0) {\n    return parseInt(value);\n  }\n  else {\n    return\
    \ parseInt(value) + 1;\n  }\n}", "  var valueFloat = parseFloat(value);\n  if(valueFloat\
    \ % Math.round(valueFloat) < 0.5)\n    return Math.floor(valueFloat);\n  else\n\
    \    return Math.ceil(valueFloat);\n}", "  return Math.round(value);\n}", "  if(typeof\
    \ value === 'string'){\n    value = parseFloat(value);\n  }\n  if(value > 0){\n\
    \    return Math.ceil(value);\n  }\n  else{\n    return Math.floor(value);\n \
    \ }\n}\nclosest_integer(\"10\");\nclosest_integer(\"15.3\");\nclosest_integer(\"\
    -14.5\");\n", "    value = Math.round(value);\n    return value;\n}", "  var num\
    \ = Math.round(Number(value));\n  return num;\n}\n", "\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(value);\n}", "  return Math.round(parseFloat(value));\n\
    }", "    var num = +value\n    return Math.round(num)\n}", "  let value2 = value.split(\"\
    .\");\n  let str = value2[0];\n  let dec = value2[1];\n  let newStr = parseInt(str);\n\
    \  let str2 = (newStr + 1);\n  let string = (newStr + \".\" + dec);\n  let string2\
    \ = (str2 + \".\" + dec);\n  if(dec >= \"50\"){\n    return str2;\n  }else if(dec\
    \ < \"50\"){\n    return newStr;\n  }\n  return newStr;\n}", "    //YOUR CODE\
    \ HERE\n}\n", "    var result = value.toString();\n    if(result.indexOf('.')\
    \ != -1){\n        result = Math.round(value);\n    }\n    return result;\n}",
  "\tif(parseInt(value) === parseFloat(value)){\n\t\treturn parseInt(value);\n\t}\n\
    \tvar floatVal = parseFloat(value);\n\tvar intVal = parseInt(value);\n\tif(floatVal\
    \ >= 0){\n\t\tif(floatVal - intVal >= 0.5){\n\t\t\treturn intVal + 1;\n\t\t}else{\n\
    \t\t\treturn intVal;\n\t\t}\n\t}else{\n\t\tif(floatVal - intVal >= -0.5){\n\t\t\
    \treturn intVal;\n\t\t}else{\n\t\t\treturn intVal - 1;\n\t\t}\n\t}\n}", "  return\
    \ parseInt(value)\n}", "  return Math.round(value);\n}", "\tvar t = parseFloat(value);\n\
    \tvar a = Math.round(t);\n\tvar b = a - 1;\n\tvar c = a + 1;\n\tif (t-b < c-t){\n\
    \t\treturn b;\n\t}\n\telse{\n\t\treturn c;\n\t}\n}\n", "    var num = parseFloat(value);\n\
    \    var rounded = Math.round(num);\n    if (num - rounded == 0.5) {\n       \
    \ return (rounded >= 0) ? rounded + 1 : rounded - 1;\n    }\n    return rounded;\n\
    }\n", "  return Math.round(value);\n}", "    // Your code here\n    return 0;\n\
    }", "  var num = parseFloat(value);\n  return Math.round(num);\n}", "    let num\
    \ = parseFloat(value)\n    if(value.includes('.')){\n        let arr = value.split('.')\n\
    \        if(arr[1][0] >= 5){\n            return Math.ceil(num)\n        }\n \
    \       else {\n            return Math.floor(num)\n        }\n    }\n    else{\n\
    \        return Number(value)\n    }\n}", "\t// Code here\n\treturn Number(value.split(\"\
    .\")[0]);\n}\n", "    // TODO: Your code here\n}\n\n", "    var floor = Math.floor(value);\n\
    \    var ceil = Math.ceil(value);\n    var diff1 = Math.abs(value - floor);\n\
    \    var diff2 = Math.abs(value - ceil);\n    if(diff1 == diff2){\n        return\
    \ floor;\n    }\n    else if(diff1 < diff2){\n        return floor;\n    }\n \
    \   else{\n        return ceil;\n    }\n}\n", "    const num = Number(value);\n\
    \    if(num % 1 === 0){\n        return num;\n    }\n    return Math.round(num);\n\
    }\n", "    value = parseFloat(value);\n    if(value % 1 != 0){\n        let pos\
    \ = Math.round(value);\n        let neg = Math.floor(value);\n        if(pos -\
    \ value < value - neg){\n            return pos;\n        }else{\n           \
    \ return neg;\n        }\n    }else{\n        return value;\n    }\n}\n", "  return\
    \ parseInt(value);\n}", "  return Math.round(value);\n}", "  //if the given number\
    \ is negative, return the closest integer up to it\n  //else if positive, return\
    \ the closest integer down to it\n  if(value < 0){\n    return Math.ceil(value);\n\
    \  }\n  return Math.floor(value);\n}\n", "  let num = Number(value);\n  let floor\
    \ = Math.floor(num);\n  let ceil = Math.ceil(num);\n  let floorDiff = Math.abs(num\
    \ - floor);\n  let ceilDiff = Math.abs(num - ceil);\n  if(floorDiff < ceilDiff){\n\
    \    return floor;\n  } else if(ceilDiff < floorDiff){\n    return ceil;\n  }\
    \ else {\n    if(num > 0){\n      return ceil;\n    } else {\n      return floor;\n\
    \    }\n  }\n}", "    var v = parseFloat(value);\n    var a = Math.round(v);\n\
    \    if(a == v){\n        return a;\n    }\n    else if(v > 0){\n        return\
    \ a;\n    }\n    else if(v < 0){\n        return a-1;\n    }\n    return v;\n\
    }\n", "  return Math.round(value);\n}\n", "  var converted = parseFloat(value);\n\
    \  return Math.round(converted);\n}", "\tif(value.indexOf('.') !== -1){\n\t\t\
    var num = value.split('.');\n\t\tif(num[1] >= 5){\n\t\t\treturn parseInt(num[0])\
    \ + 1;\n\t\t}else{\n\t\t\treturn parseInt(num[0]);\n\t\t}\n\t}else{\n\t\treturn\
    \ parseInt(value);\n\t}\n}\n", "  let num = parseFloat(value);\n  let left = Math.floor(num);\n\
    \  let right = Math.ceil(num);\n  let diff_left = Math.abs(left - num);\n  let\
    \ diff_right = Math.abs(right - num);\n  return (diff_left < diff_right) ? left\
    \ : right;\n}\n", "  return Math.round(value);\n}", "\treturn Math.round(value);\n\
    }", "    var value_num = Number(value);\n    var x = Math.ceil(value_num);\n \
    \   var y = Math.floor(value_num);\n    if (x === value_num){\n        return\
    \ x;\n    }\n    if (y === value_num){\n        return y;\n    }\n    var z =\
    \ value_num - y;\n    var w = x - value_num;\n    if (z < w){\n        return\
    \ y;\n    } else {\n        return x;\n    }\n}", "  //write your code here\n\
    \  //console.log(Math.round(14.5))\n  let input = value.split('.')\n  if(input.length\
    \ == 1){\n    return parseInt(input[0])\n  }\n  else if(input[1][0] >= 5){\n \
    \   return parseInt(input[0]) + 1\n  }\n  else{\n    return parseInt(input[0])\n\
    \  }\n}\n", "    var floor = Math.floor(value);\n    var ceiling = Math.ceil(value);\n\
    \    var distance_floor = value - floor;\n    var distance_ceiling = ceiling -\
    \ value;\n    if (distance_floor <= distance_ceiling){\n        return floor;\n\
    \    } else {\n        return ceiling;\n    }\n}\n", "\tlet float = parseFloat(value);\n\
    \tlet int = parseInt(value);\n\tif(float > int){\n\t\treturn int + 1;\n\t}\n\t\
    return int;\n}\n", "    return Math.round(value);\n}", "    if(Math.ceil(value)\
    \ - value < value - Math.floor(value)){\n        return Math.ceil(value);\n  \
    \  }\n    else{\n        return Math.floor(value);\n    }\n}\n", "    return Math.round(value);\n\
    }\n", "  var number = parseFloat(value);\n  var integer = Math.round(number);\n\
    \  var decimal = integer - number;\n  if (Math.abs(decimal) >= 0.5){\n    if (decimal\
    \ > 0){\n      return (integer - 1);\n    } else {\n      return (integer + 1);\n\
    \    }\n  } else {\n    return integer;\n  }\n}\n", "    var closest;\n    var\
    \ value = value.toString();\n    var values = value.split(\".\");\n    if(parseInt(values[1])\
    \ < 5){\n        closest = parseInt(values[0]);\n    }else{\n        closest =\
    \ parseInt(values[0]) + 1;\n    }\n    return closest;\n}", "  return Math.round(value);\n\
    }\n", "  var num = parseFloat(value);\n  return Math.round(num);\n}\n", "  let\
    \ num = parseFloat(value)\n  if (num % 1 !== 0){\n    return Math.round(num)\n\
    \  } else {\n    return num\n  }\n}\n", "    var num = parseFloat(value);\n  \
    \  var int1 = Math.floor(num);\n    var int2 = Math.ceil(num);\n    if (num >\
    \ 0){\n        if (num - int1 > int2 - num){\n            return int2;\n     \
    \   } else {\n            return int1;\n        }\n    } else {\n        if (int1\
    \ - num > num - int2){\n            return int2;\n        } else {\n         \
    \   return int1;\n        }\n    }\n}", "  return Math.round(value);\n}\n", " \
    \ var num = +value,\n      sign = 1;\n  if(Math.sign(num) === -1){\n    sign =\
    \ -1;\n  }\n  return sign * Math.ceil(Math.abs(num));\n}", "  var int = parseInt(value);\n\
    \  var dec = parseFloat(value) - int;\n  if (dec < 0.5){\n    return int;\n  }\n\
    \  return int + 1;\n}", "  var a = Math.ceil(value);\n  var b = Math.floor(value);\n\
    \  var c = Math.round(value);\n  var d = Math.abs(value - a);\n  var e = Math.abs(value\
    \ - b);\n  var f = Math.abs(value - c);\n  if (d == e && d != f) {\n    return\
    \ b;\n  } else if (d == f && d != e) {\n    return a;\n  } else if (e == f &&\
    \ e != d) {\n    return c;\n  } else if (e > d && d < f) {\n    return a;\n  }\
    \ else if (d > e && e < f) {\n    return b;\n  } else if (f > d && d < e) {\n\
    \    return a;\n  } else if (f > e && e < d) {\n    return b;\n  } else if (d\
    \ > f && f < e) {\n    return c;\n  } else if (e > f && f < d) {\n    return c;\n\
    \  } else if (f > e && e == d) {\n    return c;\n  } else if (f > d && d == e)\
    \ {\n    return c;\n  } else if (d > f && f == e) {\n    return a;\n  } else if\
    \ (d > e && e == f) {\n    return a;\n  } else if (e > d && d == f) {\n    return\
    \ b;\n  } else if (e > f && f == d) {\n    return b;\n  }\n}", "    var num =\
    \ parseFloat(value);\n    var numFloor = Math.floor(num);\n    var numCeil = Math.ceil(num);\n\
    \    if (num - numFloor >= 0.5){\n        return numCeil;\n    } else {\n    \
    \    return numFloor;\n    }\n}\n", "  value = parseFloat(value);\n  if (value\
    \ % 1 === 0) {\n    return value;\n  } else {\n    var str = value.toString();\n\
    \    var findDecimal = str.indexOf('.');\n    var strDecimal = str.substring(findDecimal\
    \ + 1);\n    var dec;\n    if (strDecimal.length === 1) {\n      if (strDecimal\
    \ === '5') {\n        dec = value;\n      } else {\n        dec = Math.round(value);\n\
    \      }\n    } else {\n      var findDecimal2 = strDecimal.substring(1);\n  \
    \    var findDecimal3 = parseInt(findDecimal2);\n      if (findDecimal3 > 5) {\n\
    \        dec = Math.ceil(value);\n      } else {\n        dec = Math.floor(value);\n\
    \      }\n    }\n    return dec;\n  }\n}\n", "  let rounded = Math.round(value);\n\
    \  return rounded;\n}", "  let num = parseFloat(value)\n  return Math.round(num)\n\
    }", "    return Math.round(parseFloat(value));\n}", "    var new_value = Math.round(value);\n\
    \    return new_value;\n}\n", "  return value>0?Math.floor(value):Math.ceil(value);\n\
    }", "  var num = Math.round(value);\n  return parseInt(num);\n}\n", "    return\
    \ Math.round(value);\n}\n", "  var val=Math.round(parseFloat(value));\n  return\
    \ val;\n}", "    var answer = Math.round(value);\n    return answer;\n}", "  var\
    \ val = parseFloat(value);\n  var num = Math.round(val);\n  return num;\n}\n\n\
    closest_integer(\"15.3\");\n", "  var splitNum = value.split('.');\n  console.log(splitNum);\n\
    \  if(splitNum[1] >= 0.5){\n    return Number(splitNum[0]) + 1;\n  }\n  return\
    \ Number(splitNum[0]);\n}", "  if (typeof value !== 'string'){\n    return false;\n\
    \  }\n  value = parseFloat(value);\n  var c1 = Math.floor(value);\n  var c2 =\
    \ Math.ceil(value);\n  if (value - c1 === c2 - value){\n    return value < 0 ?\
    \ c1 : c2;\n  }\n  return (value - c1) < (c2 - value) ? c1 : c2;\n}\n", "    return\
    \ Math.round(value);\n}\n", "  return Math.round(value);\n}", "\tvar value = parseFloat(value);\n\
    \tvar rounded = Math.round(value);\n\tvar rounded_up = Math.ceil(value);\n\tvar\
    \ rounded_down = Math.floor(value);\n\tvar closest = 0;\n\tif(rounded == value){\n\
    \t\tclosest = rounded;\n\t}else if(value - rounded_down < rounded_up - value){\n\
    \t\tclosest = rounded_down;\n\t}else{\n\t\tclosest = rounded_up;\n\t}\n\treturn\
    \ closest;\n}\n", "    if(value.indexOf('.') !== -1){\n        if(value[value.indexOf('.')\
    \ + 1] >= 5){\n            return Math.ceil(value);\n        }else{\n        \
    \    return Math.floor(value);\n        }\n    }else{\n        return value;\n\
    \    }\n}\nclosest_integer(\"10\");\nclosest_integer(\"15.3\");", "    return\
    \ value - value % 1\n}", "  return Math.round(value);\n}\n", "\treturn Math.round(value);\n\
    }", "    var i = parseInt(value);\n    var d = parseFloat(value) - i;\n    if\
    \ (d < .5) {\n        return i;\n    } else {\n        return i + 1;\n    }\n}",
  "  if(value - Math.floor(value) <= 0.5){\n    return Math.floor(value);\n  }\n \
    \ else{\n    return Math.ceil(value);\n  }\n}", "  if (Number.isInteger(value)){\n\
    \    return value;\n  } else {\n    let split = value.split(\".\");\n    if (split[1][0]\
    \ >= 5){\n      split[0] = parseInt(split[0]) + 1;\n      return split[0];\n \
    \   } else {\n      return split[0];\n    }\n  }\n}", "\n}", "  var num = parseFloat(value);\n\
    \  if(num > 0){\n    return Math.ceil(num);\n  }\n  else if(num < 0){\n    return\
    \ Math.floor(num);\n  }\n  else {\n    return 0;\n  }\n}\n", "  // your code here\n\
    \  // Hint: think about converting the number to a string\n  // and slicing the\
    \ last two characters\n  return 0;\n}", "  return Math.round(parseFloat(value));\n\
    }", "  var num = parseFloat(value);\n  if (num - Math.floor(num) > 0.5){\n   \
    \ return Math.ceil(num);\n  }\n  else {\n    return Math.floor(num);\n  }\n}",
  "  return Math.round(value);\n}", "    var floatVal = parseFloat(value);\n    return\
    \ Math.round(floatVal);\n}", "  return Math.round(value);\n}", "  return value\
    \ % 1 === 0 ? value : Math.round(value);\n}", "    // write your code here\n \
    \   var floatnum = parseFloat(value);\n    var intnum = parseInt(value);\n   \
    \ if (floatnum - intnum == 0) {\n        return intnum;\n    }\n    else {\n \
    \       if ((floatnum - intnum) > 0.5) {\n            return (intnum + 1);\n \
    \       }\n        else {\n            return intnum;\n        }\n    }\n}\n",
  "  return Math.round(value);\n}", "  var integer = Math.round(value);\n  return\
    \ integer;\n}\n", "  return Math.round(value);\n}", "  return Math.round(value);\n\
    }", "  var test = value.split(\".\");\n  var decimal = test[1];\n  var num = parseInt(test[0]);\n\
    \  if(parseInt(decimal) >= 5){\n    return num + 1;\n  }\n  else {\n    return\
    \ num;\n  }\n}", "  return Math.round(parseFloat(value));\n}", "  var result =\
    \ Math.round(value);\n  return result;\n}\n", "    var val = parseFloat(value)\n\
    \    var whole_number = Math.floor(val)\n    var decimal = Math.round((val - whole_number)\
    \ * 10) / 10\n    var new_num = whole_number + decimal\n    return new_num\n}\n",
  "  return Math.round(value);\n}", "  return parseInt(value);\n}\n", "    let x =\
    \ Math.round(value);\n    return x;\n}", "  if (Number.isInteger(value)){\n  \
    \  return value;\n  }\n  else {\n    var x = Math.round(value);\n    return x;\n\
    \  }\n}\n", "    return Math.round(parseFloat(value));\n}", "    if(value.includes(\"\
    .\")){\n        let valueArray = value.split(\".\");\n        let valueFloat =\
    \ parseFloat(value);\n        let valueRound = Math.round(valueFloat);\n     \
    \   let valueDiff = valueRound - valueFloat;\n        if(valueDiff < 0){\n   \
    \         return valueRound;\n        }else{\n            return valueRound -\
    \ 1;\n        }\n    }else{\n        return parseInt(value);\n    }\n}\n", " \
    \ var temp = 0;\n  var int_value = parseInt(value);\n  var string_value = value.toString();\n\
    \  for(var i = 0; i < string_value.length; i++){\n    if(string_value[i] === \"\
    .\"){\n      if(int_value < 0){\n        temp = parseFloat(string_value.slice(i\
    \ + 1, string_value.length));\n        return Math.ceil(int_value + temp);\n \
    \     }else{\n        temp = parseFloat(string_value.slice(i + 1, string_value.length));\n\
    \        return Math.floor(int_value + temp);\n      }\n    }\n  }\n  return int_value;\n\
    }", "  var value_as_num = parseFloat(value);\n  var value_as_str = value_as_num.toString();\n\
    \  var l = value_as_str.length;\n  var float_point_position = value_as_str.indexOf(\"\
    .\");\n  var decimal_digit = parseInt(value_as_str[l-1]);\n  var decimal_digit_length\
    \ = l - float_point_position - 1;\n  var closest_integer;\n  if(decimal_digit\
    \ > 5){\n    if(decimal_digit_length === 1){\n      closest_integer = value_as_num\
    \ + (10 - decimal_digit)/10;\n    }\n    else{\n      closest_integer = value_as_num\
    \ + (Math.pow(10, decimal_digit_length) - decimal_digit)/Math.pow(10, decimal_digit_length);\n\
    \    }\n  }\n  else{\n    closest_integer = value_as_num - decimal_digit/Math.pow(10,\
    \ decimal_digit_length);\n  }\n  return closest_integer;\n}\n", "    if(value.indexOf('.')===-1){\n\
    \        return Number(value);\n    }else if(parseFloat(value)>=0){\n        return\
    \ Math.floor(parseFloat(value));\n    }else{\n        return Math.ceil(parseFloat(value));\n\
    \    }\n}", "  var number = parseFloat(value);\n  if(number % 1 === 0){\n    return\
    \ number;\n  }else{\n    var integer = Math.round(number);\n    var fraction =\
    \ number - integer;\n    if(fraction < 0){\n      fraction = fraction * -1;\n\
    \    }\n    if(fraction > 0.5){\n      return integer + 1;\n    }else{\n     \
    \ return integer;\n    }\n  }\n}", "  return parseInt(value);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

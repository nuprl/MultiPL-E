name: HumanEval_77_iscube
language: js
prompt: "//Write a function that takes an integer a and returns true \n// if this\
  \ ingeger is a cube of some integer number.\n// Note: you may assume the input is\
  \ always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n// false\n\
  // >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n// true\n\
  // >>> iscube(180)\n// false\nfunction iscube(a){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = iscube;\n  assert.deepEqual(candidate(1),true);\n  assert.deepEqual(candidate(2),false);\n\
  \  assert.deepEqual(candidate(-1),true);\n  assert.deepEqual(candidate(64),true);\n\
  \  assert.deepEqual(candidate(180),false);\n  assert.deepEqual(candidate(1000),true);\n\
  \  assert.deepEqual(candidate(0),true);\n  assert.deepEqual(candidate(1729),false);\n\
  }\n\ntest();"
completions: ["\tvar i = 2;\n\tvar result = 1;\n\twhile(result < a){\n\t\tresult =\
    \ i*i*i;\n\t\ti++;\n\t}\n\tif(result == a){\n\t\treturn true;\n\t}\n\telse{\n\t\
    \treturn false;\n\t}\n}", "  var cube = Math.pow(a,1/3);\n  if(Math.floor(cube)\
    \ == cube)\n    return true;\n  else \n    return false;\n}\n", "\tif(Math.cbrt(a)%1==0){\n\
    \t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}", "    if(a==0){\n     \
    \   return true;\n    }\n    var i=1;\n    var result =1;\n    while(result<=a){\n\
    \        if(result==a){\n            return true;\n        }\n        i++;\n \
    \       result=i*i*i;\n    }\n    return false;\n}", "\tvar b = a;\n\tif(a ==\
    \ 0){\n\t\treturn true;\n\t}\n\twhile(b > 2){\n\t\tb = b / 2;\n\t}\n\treturn (b\
    \ == 2);\n}", "\tif(Math.pow(a,3)){\n\t\treturn true;\n\t}\n\telse{\n\t\treturn\
    \ false;\n\t}\n}", "  if(a==0){\n    return true;\n  }\n  var b = Math.pow(a,1/3);\n\
    \  var b1 = Math.floor(b);\n  if(b1 == b){\n    return true;\n  }\n  else{\n \
    \   return false;\n  }\n}", "    console.log(Math.pow(a,(1/3)))\n}\niscube(180)",
  "    if(a<0){\n        a=a*-1;\n    }\n    if(a==0){\n        return true;\n   \
    \ }\n    for(var i=1;i<=a;i++){\n        var b=i*i*i;\n        if(b==a){\n   \
    \         return true;\n        }\n    }\n    return false;\n}", "\t// your code\
    \ here\n\treturn  a == Math.pow(a, 1/3)\n}", "    if(a<0){\n        a = a*-1;\n\
    \    }\n    for(var i=0;i<=a;i++){\n        var n = i*i*i;\n        if(n==a){\n\
    \            return true;\n        }\n    }\n    return false;\n}", "\treturn\
    \ Math.sqrt(a)%1 === 0;\n}", "  var b=a;\n  while(a>0){\n    b=a;\n    a=a/3;\n\
    \  }\n  if(b%3===0){\n    return true;\n  }\n  else{\n    return false;\n  }\n\
    }\n", "    return Math.cbrt(a)%1 === 0;\n}\n", "    for(var i = 0; i <a; i++)\
    \ {\n        if (Math.pow(i, 3) == a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}", "    if(a===0) return true;\n    if(a%2===0) return\
    \ false;\n    if(a<0) a = -a;\n    var i = 1;\n    while(i*i*i<=a){\n        if(i*i*i===a)\
    \ return true;\n        i++;\n    }\n    return false;\n}\n", "    for(let i =\
    \ a; i>=0; i--){\n        if(i*i*i===a){\n            return true;\n        }\n\
    \    }\n    return false;\n}", "    if(a===0||a===1||a===-1){\n        return\
    \ true;\n    }\n    if(a<0){\n        a=-a;\n    }\n    for(var i=1;i<=a;i++){\n\
    \        if(i*i*i===a){\n            return true;\n        }\n    }\n    return\
    \ false;\n}", "    for(var i = 1; i <= a; i++){\n        if(i*i*i === a){\n  \
    \          return true;\n        }\n    }\n    return false;\n}", "    if(a==0){\n\
    \        return true;\n    }\n    else if(a>0){\n        var x=Math.pow(a,1/3);\n\
    \        if(Number.isInteger(x)){\n            return true;\n        }\n     \
    \   else{\n            return false;\n        }\n    }\n    else{\n        var\
    \ x=Math.pow(-a,1/3);\n        if(Number.isInteger(x)){\n            return true;\n\
    \        }\n        else{\n            return false;\n        }\n    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

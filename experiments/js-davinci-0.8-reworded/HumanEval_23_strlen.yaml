name: HumanEval_23_strlen
language: js
prompt: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
  abc\")\n// 3\nfunction strlen(string){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
completions: ["\treturn string.length;\n}\n", "    var count = 0;\n    while(string[count]\
    \ != null){\n        count++;\n    }\n    return count;\n}", "    var i = 0;\n\
    \    while(string[i] != undefined){\n        i++;\n    }\n    return i;\n}\n",
  "  return string.length;\n}\n", "  return string.length;\n}\n", "\treturn string.length;\n\
    }\n", "    return string.length;\n}\n", "    if(string.length > 0){\n        return\
    \ 1 + strlen(string.slice(1))\n    }else{\n        return 0\n    }\n}\n", "\n\
    }\n", "    var len = 0;\n    while(string[len] != undefined){\n        len++;\n\
    \    }\n    return len;\n}\n", "\tvar index = 0;\n\twhile(string[index] != undefined){\n\
    \t\tindex += 1;\n\t}\n\treturn index;\n}\n", "    var i = 0;\n    while(string[i]\
    \ !== undefined){\n        i++;\n    }\n    return i;\n}\n", "  return string.length;\n\
    }\n", "    //replace\n    var len = 0;\n    for(var i = 0; i < string.length;\
    \ i++){\n        len += 1;\n    }\n    return len;\n}\n", "\treturn string.length;\n\
    }\n", "  var count = 0;\n  for(var i = 0; i < string.length; i++){\n    count++;\n\
    \  }\n  return count;\n}\n", "  if(string == \"\"){\n    return 0;\n  }\n  else\
    \ {\n    return 1 + strlen(string.substring(1));\n  }\n}\n", "    return string.length;\n\
    }\n", "    return string.length;\n}\n", "  var length = 0;\n  for(var i = 0; i\
    \ < string.length; i++){\n    length++;\n  }\n  return length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

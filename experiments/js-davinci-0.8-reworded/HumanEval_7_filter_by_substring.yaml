name: HumanEval_7_filter_by_substring
language: js
prompt: "//Filter an input array of strings only for ones that contain given substring\n\
  // >>> filter_by_substring([], \"a\")\n// []\n// >>> filter_by_substring([\"abc\"\
  , \"bacd\", \"cde\", \"array\"], \"a\")\n// [\"abc\", \"bacd\", \"array\"]\nfunction\
  \ filter_by_substring(strings, substring){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = filter_by_substring;\n  assert.deepEqual(candidate([], \"john\"),[]);\n  assert.deepEqual(candidate([\"\
  xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\"),[\"xxx\",\
  \ \"xxxAAA\", \"xxx\"]);\n  assert.deepEqual(candidate([\"xxx\", \"asd\", \"aaaxxy\"\
  , \"john doe\", \"xxxAAA\", \"xxx\"], \"xx\"),[\"xxx\", \"aaaxxy\", \"xxxAAA\",\
  \ \"xxx\"]);\n  assert.deepEqual(candidate([\"grunt\", \"trumpet\", \"prune\", \"\
  gruesome\"], \"run\"),[\"grunt\", \"prune\"]);\n}\n\ntest();"
completions: ["    var filtered = [];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].includes(substring)){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) !== -1;\n    });\n}", "  var strings_with_substring\
    \ = [];\n  for (var i = 0; i < strings.length; i++){\n    if (strings[i].includes(substring)){\n\
    \      strings_with_substring.push(strings[i]);\n    }\n  }\n  return strings_with_substring;\n\
    }\n", "\tif(strings.length === 0){\n\t\treturn [];\n\t}\n\telse{\n\t\tvar filtered\
    \ = [],\n\t\t\ti = 0;\n\t\twhile(i < strings.length){\n\t\t\tif(strings[i].indexOf(substring)\
    \ > -1){\n\t\t\t\tfiltered.push(strings[i]);\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\t\
    return filtered;\n\t}\n}\n", "    function has_substring(string){\n        return\
    \ string.indexOf(substring) !== -1;\n    }\n    return strings.filter(has_substring);\n\
    }\n", "    var filtered = [];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].indexOf(substring) > -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "    var new_list = [];\n    for\
    \ (i = 0; i < strings.length; i++){\n        if (strings[i].includes(substring)){\n\
    \            new_list.push(strings[i]);\n        }\n    }\n    return new_list;\n\
    }\n", "  let result = [];\n  for (let i=0; i<strings.length; i++){\n    if (strings[i].includes(substring)){\n\
    \      result.push(strings[i]);\n    }\n  }\n  return result;\n}\n", "  // your\
    \ code here\n  var newarray = [];\n  for (var i = 0; i < strings.length; i++)\
    \ {\n    if (strings[i].indexOf(substring) > -1) {\n      newarray.push(strings[i]);\n\
    \    }\n  }\n  return newarray;\n}\n", "    return strings.filter(str => str.includes(substring));\n\
    }\n", "    return _.filter(strings, function(s){\n        return s.indexOf(substring)\
    \ != -1;\n    });\n}\n", "    //REPLACE WITH YOUR CODE\n    filtered = [];\n \
    \   for (var i = 0; i < strings.length; i++) {\n        if (strings[i].includes(substring))\
    \ {\n            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    const result = [];\n    for (const i of strings){\n        if (i.includes(substring)){\n\
    \            result.push(i);\n        }\n    }\n    return result;\n}\n", "\t\
    return strings.filter(function(str){\n\t\treturn str.indexOf(substring) != -1;\n\
    \t});\n}\n", "  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}\n", "\treturn strings.filter(function(s){\n\t\treturn s.indexOf(substring)\
    \ != -1;\n\t});\n}", "  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}\n", "\t//Check if substring is a string\n\tif (typeof substring !==\
    \ \"string\") {\n\t\tthrow \"Substring must be a string\";\n\t}\n\t//Return empty\
    \ array if strings array is empty\n\tif (strings.length === 0) {\n\t\treturn [];\n\
    \t}\n\t//Check if strings contains at least one non-string element\n\tif (strings.some(function(element)\
    \ {return typeof element !== \"string\";})) {\n\t\tthrow \"Strings input must\
    \ be an array of strings\";\n\t}\n\t//Create array for the filtered strings\n\t\
    var filtered_strings = [];\n\t//For each element in the strings array, check if\
    \ it contains the substring\n\tstrings.forEach(function(element){\n\t\tif (element.includes(substring))\
    \ {\n\t\t\tfiltered_strings.push(element);\n\t\t}\n\t});\n\treturn filtered_strings;\n\
    }\n", "    return strings.filter(function(string){\n        return string.includes(substring);\n\
    \    });\n}\n", "    var filtered_strings = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) > -1){\n            filtered_strings.push(strings[i]);\n\
    \        }\n    }\n    return filtered_strings;\n}\n", "    var filtered = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "  return strings.filter(function(item){return item.indexOf(substring) >=\
    \ 0;});\n}\n", "    return _.filter(strings,function(str){return str.indexOf(substring)>=0;});\n\
    }\n", "\tvar filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\t\
    if(strings[i].indexOf(substring) != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\
    \t}\n\t}\n\treturn filtered;\n}\n", "\t// your code here\n    var arr=[];\n  \
    \  for(var i=0;i<strings.length;i++){\n        var str = strings[i];\n       \
    \ if(str.includes(substring)){\n            arr.push(str);\n        }\n    }\n\
    \    return arr;\n}\n", "\t//I think this is the best way to do this?\n\t//I thought\
    \ about using .find to see if substring was in the array\n\t//but since it only\
    \ returns one string and doesn't return an array \n\t//I couldn't figure out how\
    \ to return an array of strings containing substring\n\treturn strings.filter(x\
    \ => x.includes(substring));\n}\n", "    strings.filter(string => string.includes(substring));\n\
    }\n", "    return strings.filter(function(str){\n        return str.includes(substring);\n\
    \    });\n}\n", "\t//return strings.filter(function(str){return str.includes(substring)});\n\
    \treturn strings.filter(str => str.includes(substring));\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            result.push(strings[i]);\n        }\n    }\n    return result;\n\
    }\n", "    return (strings.filter(function(string){\n            return (string.indexOf(substring)\
    \ > -1);\n        }));\n}\n", "\treturn _.filter(strings, function(s){\n\t\treturn\
    \ s.indexOf(substring) >= 0;\n\t});\n}\n", "\t\n\tvar newArray = strings.filter(function(element){\n\
    \t\tif(element.includes(substring)){\n\t\t\treturn element;\n\t\t}\n\t});\n\t\
    return newArray;\n\t\n}\n", "    return strings.filter( (string) => {\n      \
    \  return string.includes(substring);\n    });\n}\n", "    return strings.filter(function(item){\n\
    \        return item.includes(substring);\n    });\n}", "  let substrs = [];\n\
    \  for (let i = 0; i < strings.length; i++){\n    if (strings[i].includes(substring)){\n\
    \      substrs.push(strings[i]);\n    }\n  }\n  return substrs;\n}\n", "    var\
    \ l = [];\n    for(i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            l.push(strings[i]);\n        }\n    }\n    return l;\n\
    }\n", "  for(let i = 0; i < strings.length; i++){\n    if(strings[i].includes(substring)){\n\
    \      console.log(strings[i]);\n    }\n  }\n}\nfilter_by_substring([\"abc\",\
    \ \"bacd\", \"cde\", \"array\"], \"a\");\n", "    return _.filter(strings, function(string){\n\
    \        return string.indexOf(substring) != -1;\n    });\n}\n", "    if (strings.length\
    \ == 0) {\n        return strings;\n    }\n    else {\n        var filtered =\
    \ [];\n        for (var i = 0; i < strings.length; i++) {\n            if (strings[i].indexOf(substring)\
    \ >= 0) {\n                filtered.push(strings[i]);\n            }\n       \
    \ }\n        return filtered;\n    }\n}\n", "  var result = [];\n  if (strings\
    \ === undefined || substring === undefined){\n    return result;\n  }\n\n  for\
    \ (var i = 0; i < strings.length; i++){\n    if (strings[i].includes(substring)){\n\
    \      result.push(strings[i]);\n    }\n  }\n  return result;\n}\n", "    let\
    \ result = [];\n    for (let string of strings){\n        if (string.includes(substring)){\n\
    \            result.push(string);\n        }\n    }\n    return result;\n}\n",
  "    return strings.filter(value => value.indexOf(substring) !== -1);\n}", "\tvar\
    \ filtered = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ >= 0){\n\t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n}\n",
  "\t//TODO: Code this function\n}\n", "    var output = [];\n    for(var i = 0; i\
    \ < strings.length; i++){\n        if(strings[i].indexOf(substring) != -1){\n\
    \            output.push(strings[i]);\n        }\n    }\n    return output;\n\
    }\n", "    return strings.filter(function(element){\n        return element.includes(substring);\n\
    \    });\n}\n", "  var newArray = [];\n  for (var i = 0; i < strings.length; i++)\
    \ {\n    if (strings[i].includes(substring)) {\n      newArray.push(strings[i]);\n\
    \    }\n  }\n  return newArray;\n}\n\n", "\treturn strings.filter(is_substring(substring));\n\
    }\n", "    return strings.filter(function(str){\n        return str.indexOf(substring)\
    \ != -1;\n    });\n}\n", "    var result = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            result.push(strings[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  const stringArray = [];\n  for\
    \ (var i = 0; i < strings.length; i++) {\n    if (strings[i].includes(substring))\
    \ {\n      stringArray.push(strings[i]);\n    }\n  }\n  return stringArray;\n\
    }\n", "    return strings.filter(str => str.includes(substring));\n}\n", "   \
    \ return strings.filter(\n        function(value){\n            return value.includes(substring);\n\
    \        }\n    );\n}\n", "\tvar filtered = [];\n\tfor(var index = 0; index <\
    \ strings.length; index++){\n\t\tif(strings[index].indexOf(substring) != -1){\n\
    \t\t\tfiltered.push(strings[index]);\n\t\t}\n\t}\n\treturn filtered;\n}\n", " \
    \   return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ != -1;\n    });\n}\n", "\treturn strings.filter(str => str.includes(substring));\n\
    }\n", "\tvar result = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tresult.push(strings[i]);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "    //return strings.filter(el => el.indexOf(substring) !== -1);\n    return strings.filter(el\
    \ => el.includes(substring));\n}\n", "\n}\n\n", "  return strings.filter(function(string){\n\
    \    return string.indexOf(substring) > -1;\n  });\n}\n", "\treturn strings.filter(function(elem){return\
    \ elem.includes(substring)});\n}\n", "\t//your code here\n\tvar foundString =\
    \ [];\n\tvar j = 0;\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].includes(substring)){\n\
    \t\t\tfoundString[j] = strings[i];\n\t\t\tj++;\n\t\t}\n\t}\n\treturn foundString;\n\
    }\n", "  return strings.filter(function(s){return s.indexOf(substring) !== -1;});\n\
    }\n", "    return strings.filter(function(e){return e.includes(substring)});\n\
    }\n", "  var strings_filtered = [];\n  for (var i=0; i<strings.length; i++){\n\
    \    if (strings[i].includes(substring)){\n      strings_filtered.push(strings[i]);\n\
    \    }\n  }\n  return strings_filtered;\n}\n", "    return strings.filter(function(s){return\
    \ s.indexOf(substring) > -1;});\n}\n", "  var res = [];\n  for (var i = 0; i <\
    \ strings.length; i++){\n    if (strings[i].indexOf(substring) >= 0){\n      res.push(strings[i]);\n\
    \    }\n  }\n  return res;\n}\n", "\tvar ret = [];\n\tfor(i = 0; i < strings.length;\
    \ i++){\n\t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tret.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn ret;\n}\n", "  var matches = [];\n  for(var i = 0; i < strings.length;\
    \ i++){\n    if(strings[i].includes(substring)){\n      matches.push(strings[i]);\n\
    \    }\n  }\n  return matches;\n}\n", "\treturn strings.filter(function(string){\n\
    \t\treturn string.indexOf(substring) != -1;\n\t});\n}\n", "\treturn [];\n}\n",
  "\tvar filtered = [];\n\tfor(var i=0; i<strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n\
    }\n", "  return strings.filter(element => {\n    return element.includes(substring);\n\
    \  });\n}\n", "    return (strings.filter(a => a.includes(substring)));\n}", " \
    \   var new_string = [];\n    for (var i = 0; i < strings.length; i++){\n    \
    \    if (strings[i].includes(substring)){\n            new_string.push(strings[i]);\n\
    \        }\n    }\n    return new_string;\n}\n", "  var filtred = strings.filter(function(element){\n\
    \    return element.indexOf(substring) !== -1;\n  });\n  return filtred;\n}",
  "  return strings.filter(function(string){\n    return string.indexOf(substring)\
    \ != -1;\n  });\n}\n", "\tvar filtered = [];\n\tfor(var i=0; i<strings.length;\
    \ i++){\n\t\tif(strings[i].indexOf(substring) !== -1){\n\t\t\tfiltered.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered;\n}\n\n", "    let filtered = [];\n    strings.forEach(function(element){\n\
    \        if(element.includes(substring)){\n            filtered.push(element);\n\
    \        }\n    });\n    return filtered;\n}\n", "  return strings.filter(function(str){\n\
    \    return str.includes(substring);\n  });\n}\n", "  return strings.filter(function(string){\n\
    \    return string.includes(substring);\n  });\n}\n", "    let filtered = [];\n\
    \    for(let i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "    return strings.filter(function(string){\n        return string.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    var substrings = [];\n    for (i = 0; i < strings.length;\
    \ i++){\n        if (strings[i].includes(substring)){\n            substrings.push(strings[i]);\n\
    \        }\n    }\n    return substrings;\n}\n", "  return strings.filter(x =>\
    \ x.includes(substring));\n}\n", "  return strings.filter(function(str){\n   \
    \ return str.includes(substring);\n  });\n}\n", "    return strings.filter(function(str){\n\
    \        return str.includes(substring);\n    });\n}\n", "    return strings.filter(string\
    \ => string.includes(substring));\n}\n", "  var results = [];\n  for (var i=0;\
    \ i<strings.length; i++){\n    if (strings[i].includes(substring)){\n      results.push(strings[i]);\n\
    \    }\n  }\n  return results;\n}\n", "\tvar arr = new Array();\n\tfor(i = 0;\
    \ i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring) != -1){\n\t\t\
    \tarr.push(strings[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n", "\treturn _.filter(strings,\
    \ function(string){\n\t\treturn _.contains(string, substring);\n\t});\n}\n", "\t\
    return filter(function(word){return word.indexOf(substring) != -1;}, strings);\n\
    }\n", "\treturn $.grep(strings, function(s){\n\t\treturn s.indexOf(substring)\
    \ != -1;\n\t});\n}\n", "    return _.filter(strings, function(str){\n        return\
    \ str.includes(substring);\n    });\n}\n", "\treturn strings.filter(function(string){\n\
    \t\treturn string.indexOf(substring) != -1;\n\t});\n}\n", "\tvar array = [];\n\
    \tfor(i = 0; i < strings.length; i++){\n\t\tvar word = strings[i];\n\t\tif(word.indexOf(substring)\
    \ != -1){\n\t\t\tarray.push(word);\n\t\t}\n\t}\n\treturn array;\n}\n", "\tvar\
    \ new_strings = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tnew_strings.push(strings[i]);\n\t\t}\n\t}\n\treturn new_strings;\n\
    }\n", "\tvar answer = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tanswer.push(strings[i]);\n\t\t}\n\t}\n\treturn answer;\n}\n",
  "    // implement this!\n}\n\n", "\treturn strings.filter(function(string){\n\t\t\
    return string.indexOf(substring) != -1;\n\t});\n}\n", "    let result = [];\n\
    \    for (let i = 0; i < strings.length; i++){\n        if (strings[i].includes(substring)){\n\
    \            result.push(strings[i]);\n        }\n    }\n    return result;\n\
    }\n", "    //DO NOT ALTER THE CODE ABOVE THIS LINE\n    let result = [];\n   \
    \ strings.forEach(element => {\n        if(element.includes(substring)){\n   \
    \         result.push(element);\n        }\n    });\n    return result;\n    //DO\
    \ NOT ALTER THE CODE BELOW THIS LINE\n}\n", "  return strings.filter(function(s){return\
    \ s.includes(substring)});\n}\n", "\tvar filtered = [];\n\tfor(var i = 0; i <\
    \ strings.length; i++){\n\t\tif(strings[i].indexOf(substring) >= 0){\n\t\t\tfiltered.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered;\n}\n", "\tvar res = [];\n\tfor(var i=0; i<strings.length;\
    \ i++){\n\t\tif(strings[i].indexOf(substring) > -1){\n\t\t\tres.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn res;\n}\n", "    var filtered = [];\n    strings.forEach(function(string)\
    \ {\n        if (string.indexOf(substring) > -1) {\n            filtered.push(string);\n\
    \        }\n    });\n    return filtered;\n}\n", "\tvar filtered = [];\n\tfor(var\
    \ i = 0; i < strings.length; i++){\n\t\tif(strings[i].includes(substring)){\n\t\
    \t\tfiltered.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered;\n}\n", "\tvar result\
    \ = [];\n\tfor(i=0; i<strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ > -1){\n\t\t\tresult.push(strings[i]);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "\treturn strings.filter(function(element){\n\t\treturn element.includes(substring);\n\
    \t});\n}\n", "    return strings.filter(function(str){\n        return str.includes(substring);\n\
    \    });\n}\n", "    return strings.filter(x => x.includes(substring));\n}", " \
    \ var new_array = [];\n  for (i = 0; i < strings.length; i++){\n    if (strings[i].includes(substring)){\n\
    \      new_array.push(strings[i]);\n    }\n  }\n  return new_array;\n}\n", "\t\
    //V1:\n\t// var filtered = [];\n\t// for (var i = 0; i < strings.length; i++){\n\
    \t// \tif (strings[i].indexOf(substring) !== -1){\n\t// \t\tfiltered.push(strings[i]);\n\
    \t// \t}\n\t// }\n\t// return filtered;\n\n\t//V2:\n\t// var filtered = [];\n\t\
    // strings.forEach(function(string){\n\t// \tif (string.indexOf(substring) !==\
    \ -1){\n\t// \t\tfiltered.push(string);\n\t// \t}\n\t// });\n\t// return filtered;\n\
    \n\t//V3:\n\treturn strings.filter(function(string){\n\t\treturn string.indexOf(substring)\
    \ !== -1;\n\t});\n}\n", "  var filtered = strings.filter(function(string){\n \
    \   return string.indexOf(substring) !== -1;\n  });\n  return filtered;\n}\n",
  "    var filtered = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ > -1){\n            filtered.push(strings[i]);\n        }\n    }\n    return\
    \ filtered;\n}\n", "    return strings.filter(str => str.includes(substring));\n\
    }\n", "    return _.filter(strings, function(str){\n        return str.indexOf(substring)\
    \ > -1;\n    });\n}\n", "\treturn strings.filter(function(current){\n\t\treturn\
    \ current.indexOf(substring) != -1;\n\t});\n}\n", "\tvar filtered_strings = [];\n\
    \tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tfiltered_strings.push(strings[i]);\n\t\t}\n\t}\n\treturn filtered_strings;\n\
    }\n", "  var filtered = [];\n  strings.forEach(function(string){\n    if(string.indexOf(substring)\
    \ != -1){\n      filtered.push(string);\n    }\n  });\n  return filtered;\n}\n",
  "  var i = 0;\n  var filtered = [];\n  for(i = 0; i < strings.length; i++){\n  \
    \  if(strings[i].indexOf(substring) > -1){\n      filtered.push(strings[i]);\n\
    \    }\n  }\n  return filtered;\n}\n", "\n}\n", "    return strings.filter(function(string){\n\
    \treturn string.includes(substring);\n    });\n}", "  //strings: array of string\n\
    \  //substring: string\n  //return: array of strings filtered\n  var i;\n  var\
    \ result = [];\n  for(i = 0; i < strings.length; i++){\n    if(strings[i].indexOf(substring)\
    \ != -1){\n      result.push(strings[i]);\n    }\n  }\n  return result;\n}\n",
  "\treturn strings.filter(function(s){\n\t\treturn s.indexOf(substring) != -1;\n\t\
    });\n}\n", "\treturn strings.filter(function(s){\n\t\treturn s.indexOf(substring)\
    \ >= 0;\n\t});\n}\n", "  return strings.filter(function(element){\n    return\
    \ element.indexOf(substring) != -1;\n  });\n}\n", "\treturn array_filter(strings,\
    \ function(elem){\n\t\treturn stripos(elem, substring) !== false;\n\t});\n}\n",
  "\tvar result = [];\n\tfor(var i=0; i<strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tresult.push(strings[i]);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "\t//TODO: Your code here\n}\n", "  return strings.filter(item => item.includes(substring));\n\
    }\n", "  var filtered = [];\n  strings.forEach(function(string){\n    if(string.indexOf(substring)\
    \ >= 0){\n      filtered.push(string);\n    }\n  });\n  return filtered;\n}\n",
  "    let filtered = [];\n    for(let i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            filtered.push(strings[i]);\n        }\n    }\n    return filtered;\n\
    }\n", "  return strings.filter(function(s){\n    return s.includes(substring);\n\
    \  });\n}\n", "  var words = [];\n  var len = strings.length;\n  for(var i = 0;\
    \ i < len; i++){\n    if(strings[i].indexOf(substring) !== -1){\n      words.push(strings[i]);\n\
    \    }\n  }\n  return words;\n}\n", "    //Find out how many strings contain substring\n\
    \    let count = 0;\n    for(let i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            count++;\n        }\n    }\n    //Create a new array of the proper\
    \ size\n    let filtered = new Array(count);\n    let filtered_index = 0;\n  \
    \  //Populate the array with strings that contain substring\n    for(let i = 0;\
    \ i < strings.length; i++){\n        if(strings[i].includes(substring)){\n   \
    \         filtered[filtered_index] = strings[i];\n            filtered_index++;\n\
    \        }\n    }\n    return filtered;\n}\n", "\treturn strings.filter(string\
    \ => {\n\t\treturn string.includes(substring);\n\t});\n}\n", "    let arr = []\n\
    \    for (let i = 0; i < strings.length; i++){\n        if (strings[i].includes(substring)){\n\
    \            arr.push(strings[i])\n        }\n    }\n    return arr\n}\n", "\t\
    return strings.filter(el => el.includes(substring));\n}\n", "\tvar answer = [];\n\
    \tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tanswer.push(strings[i]);\n\t\t}\n\t}\n\treturn answer;\n}\n",
  "    var result = strings.filter(function(str){\n        return (str.indexOf(substring)\
    \ >= 0);\n    });\n    return result;\n}\n", "    return strings.filter( function(str)\
    \ { return str.indexOf(substring) != -1; } );\n}\n\n", "    var result = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].includes(substring)){\n\
    \            result.push(strings[i]);\n        }\n    }\n    return result;\n\
    }\n", "    return strings.filter(string => string.includes(substring));\n}", " \
    \ var result = [];\n  for (var string of strings){\n    if (string.includes(substring)){\n\
    \      result.push(string);\n    }\n  }\n  return result;\n}\n", "    var filtered_arr\
    \ = strings.filter(function(str){\n        return str.includes(substring);\n \
    \   });\n    return filtered_arr;\n}\n", "  var output = [];\n  for (var i = 0;\
    \ i < strings.length; i++){\n    if (strings[i].indexOf(substring) > -1){\n  \
    \    output.push(strings[i]);\n    }\n  }\n  return output;\n}\n", "\treturn [];\n\
    }\n", "\tvar filtered_strings = [];\n\tvar i;\n\tfor(i = 0; i < strings.length;\
    \ i++){\n\t\tif(strings[i].includes(substring)){\n\t\t\tfiltered_strings.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn filtered_strings;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring) !==\
    \ -1){\n            result.push(strings[i]);\n        }\n    }\n    return result;\n\
    }\n\nvar x = filter_by_substring([\"abc\", \"bacd\", \"cde\", \"array\"], \"a\"\
    );", "    //TODO: implement filter_by_substring\n    let ret = [];\n    for (var\
    \ i = 0; i < strings.length; i++) {\n        if (strings[i].includes(substring))\
    \ {\n            ret.push(strings[i]);\n        }\n    }\n    return ret;\n}\n",
  "  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}\n", "    var filtered_arr = [];\n    for(var i = 0; i < strings.length;\
    \ i++){\n        if(strings[i].indexOf(substring) != -1){\n            filtered_arr.push(strings[i]);\n\
    \        }\n    }\n    return filtered_arr;\n}\n", "  let result = [];\n  for\
    \ (let i = 0; i < strings.length; i++) {\n    if (strings[i].includes(substring))\
    \ {\n      result.push(strings[i]);\n    }\n  }\n  return result;\n}\n", "\tvar\
    \ res = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tres.push(strings[i]);\n\t\t}\n\t}\n\treturn res;\n}\n", "   \
    \ //-------------------\n    // YOUR CODE GOES HERE\n    //-------------------\n\
    \    var arr = [];\n    for (var i = 0; i < strings.length; i++) {\n        if\
    \ (strings[i].includes(substring)){\n            arr.push(strings[i]);\n     \
    \   }\n    }\n    return arr;\n}\n", "    return strings.filter(function(string){return\
    \ string.includes(substring)});\n}\n", "  return strings.filter(function(str){\n\
    \    return str.indexOf(substring) != -1;\n  });\n}\n\n", "    return strings.filter(function(e){return\
    \ e.includes(substring)});\n}\n", "  return strings.filter(function(value, index,\
    \ array){\n    return value.includes(substring);\n  });\n}\n", "\treturn strings.filter(function(s){\n\
    \t\treturn s.indexOf(substring) != -1;\n\t});\n}\n", "    var newArray = [];\n\
    \    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ != -1){\n            newArray.push(strings[i]);\n        }\n    }\n    return\
    \ newArray;\n}\n", "    let filtered = [];\n    for(let string of strings){\n\
    \        if(string.includes(substring)){\n            filtered.push(string);\n\
    \        }\n    }\n    return filtered;\n}\n", "  var result = [];\n  for (var\
    \ i=0; i<strings.length; i++){\n    if (strings[i].includes(substring)){\n   \
    \   result.push(strings[i]);\n    }\n  }\n  return result;\n}\n", "    var filtered_list\
    \ = [];\n    for (var i = 0; i < strings.length; i++){\n        if (strings[i].includes(substring)){\n\
    \            filtered_list.push(strings[i]);\n        }\n    }\n    return filtered_list;\n\
    }", "  //We create an array that will store the strings from the initial array\
    \ that contain the substring.\n  let filteredArray = [];\n  //We iterate through\
    \ all the elements of the initial array and check if they contain the substring.\n\
    \  for(let i = 0; i < strings.length; i++){\n    if(strings[i].includes(substring)){\n\
    \      //If they do contain the substring, we will add them to the filteredArray.\n\
    \      filteredArray.push(strings[i]);\n    }\n  }\n  //Finally, we return the\
    \ array with the filtered strings.\n  return filteredArray;\n}\n", "    return\
    \ strings.filter(function(string){\n        return string.indexOf(substring) >\
    \ -1;\n    });\n}", "\tvar new_array = [];\n\tfor(i = 0; i < strings.length; i++){\n\
    \t\tif(strings[i].indexOf(substring) != -1){\n\t\t\tnew_array.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn new_array;\n}\n", "\treturn strings.filter(function(element){\n\
    \t\treturn element.includes(substring);\n\t});\n}\n", "    var filtered_strings\
    \ = [];\n    for(var i = 0; i < strings.length; i++){\n        if(strings[i].indexOf(substring)\
    \ > -1){\n            filtered_strings.push(strings[i]);\n        }\n    }\n \
    \   return filtered_strings;\n}\n", "\tvar array = [];\n\tfor(var i = 0; i < strings.length;\
    \ i++){\n\t\tif(strings[i].includes(substring)){\n\t\t\tarray.push(strings[i]);\n\
    \t\t}\n\t}\n\treturn array;\n}\n\n", "    // >>> Return an array of strings filtered\
    \ by substring\n    return strings.filter(word => word.includes(substring));\n\
    }\n", "\tvar newList = [];\n\tfor(var i = 0; i < strings.length; i++){\n\t\tif(strings[i].indexOf(substring)\
    \ != -1){\n\t\t\tnewList.push(strings[i]);\n\t\t}\n\t}\n\treturn newList;\n}\n",
  "    let filtered = [];\n    strings.forEach(s => {\n        if(s.indexOf(substring)\
    \ != -1){\n            filtered.push(s);\n        }\n    });\n    return filtered;\n\
    }", "\treturn strings.filter(function(str){\n\t\treturn str.indexOf(substring)\
    \ > -1;\n\t});\n}\n", "  // var filtered = strings.filter(function(string){\n\
    \  //   return string.includes(substring);\n  // });\n  // return filtered;\n\
    \  return strings.filter(function(string){\n    return string.includes(substring);\n\
    \  });\n}", "  return strings.filter(function(a){\n    return a.includes(substring);\n\
    \  });\n}\n", "  // IMPLEMENT ME\n}\n", "    return strings.filter(function(string){\n\
    \        return string.indexOf(substring) > -1;\n    });\n}\n", "    var filtered\
    \ = []\n    for (let string of strings){\n        if (string.includes(substring)){\n\
    \            filtered.push(string)\n        }\n    }\n    return filtered\n}\n",
  "    return strings.filter(string => string.includes(substring));\n}\n", "  return\
    \ strings.filter(s => s.includes(substring));\n}", "    return strings.filter(function(elem)\
    \ {\n        return elem.indexOf(substring) != -1;\n    });\n}\n", "\treturn _.filter(strings,\
    \ function(s){return s.includes(substring)});\n}\n", "  var filtered_strings =\
    \ [];\n  for (var i = 0; i < strings.length; i++){\n    if (strings[i].indexOf(substring)\
    \ !== -1){\n      filtered_strings.push(strings[i]);\n    }\n  }\n  return filtered_strings;\n\
    }\n", "  return _.filter(strings, function(string){\n    return string.indexOf(substring)\
    \ > -1;\n  });\n}\n", "\treturn strings.filter(function(str){\n\t\treturn str.indexOf(substring)\
    \ > -1;\n\t});\n}\n", "  let filtered = [];\n  for(let i = 0; i < strings.length;\
    \ i++){\n    if(strings[i].includes(substring)){\n      filtered.push(strings[i]);\n\
    \    }\n  }\n  return filtered;\n}\n", "\tvar res = [];\n\tfor(var i = 0; i <\
    \ strings.length; i++){\n\t\tif(strings[i].indexOf(substring) != -1){\n\t\t\t\
    res.push(strings[i]);\n\t\t}\n\t}\n\treturn res;\n}\n", "    return strings.filter(function(string){\n\
    \        return string.includes(substring);\n    });\n}", "    return strings.filter(function(elm)\
    \ {\n        return elm.indexOf(substring) != -1;\n    });\n}\n", "    let newStrings\
    \ = []\n    for (let i = 0; i < strings.length; i++) {\n        if (strings[i].includes(substring))\
    \ {\n            newStrings.push(strings[i])\n        }\n    }\n    return newStrings\n\
    }\n", "    var filtered = [];\n    for(var i = 0; i < strings.length; i++){\n\
    \        if(strings[i].indexOf(substring) != -1){\n            filtered.push(strings[i]);\n\
    \        }\n    }\n    return filtered;\n}\n", "    strings.filter(x => x.includes(substring));\n\
    }\n", "\treturn strings.filter(function(item){return item.indexOf(substring) >=\
    \ 0});\n}\n\n", "    return strings.filter(function(value){\n        return value.indexOf(substring)\
    \ !== -1;\n    });\n}\n", "    return strings.filter(function(str){\n        return\
    \ str.includes(substring);\n    });\n}\n", "  var result = [];\n  for (var i =\
    \ 0; i < strings.length; i++){\n    if (strings[i].indexOf(substring) !== -1){\n\
    \      result.push(strings[i]);\n    }\n  }\n  return result;\n}\n", "\treturn\
    \ strings.filter(function(string){\n\t\treturn (string.indexOf(substring) != -1);\n\
    \t});\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_121_solution
language: js
prompt: "//Given a non-empty array of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n// Examples\n// >>> solution([5, 8, 7, 1])\n// 12\n\
  // >>> solution([3, 3, 3, 3, 3])\n// 9\n// >>> solution([30, 13, 24, 321])\n// 0\n\
  function solution(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = solution;\n  assert.deepEqual(candidate([5, 8, 7, 1]),12);\n  assert.deepEqual(candidate([3,\
  \ 3, 3, 3, 3]),9);\n  assert.deepEqual(candidate([30, 13, 24, 321]),0);\n  assert.deepEqual(candidate([5,\
  \ 9]),5);\n  assert.deepEqual(candidate([2, 4, 8]),0);\n  assert.deepEqual(candidate([30,\
  \ 13, 23, 32]),23);\n  assert.deepEqual(candidate([3, 13, 2, 9]),3);\n}\n\ntest();"
completions: ["  let result = 0;\n  for (let i = 0; i < lst.length; i++){\n    if\
    \ (i % 2 === 0){\n      if (lst[i] % 2 === 1){\n        result += lst[i];\n  \
    \    }\n    }\n  }\n  return result;\n}", "    //return Math.ceil(lst.filter((l,i)=>\
    \ l%2 ==1 && i%2 ==0).reduce((s,e)=>s+e,0)/2);\n    return Math.ceil(lst.filter((l,i)=>\
    \ i%2 ==0).filter(e=>e%2 ==1).reduce((s,e)=>s+e,0)/2);\n}\n", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 != 0 && i % 2\
    \ == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}", " \
    \ let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (i % 2 === 0\
    \ && lst[i] % 2 === 1) {\n      sum += lst[i];\n    }\n  }\n  return sum;\n}",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++) {\n        if(i % 2 ===\
    \ 0 && lst[i] % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n   \
    \ return sum;\n}\n", "  var sum = 0;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (i % 2 == 0 && lst[i] % 2 == 1){\n      sum += lst[i];\n    }\n  }\n \
    \ return sum;\n}", "  return lst.filter((item,i)=>i%2==0).filter(item=>item%2!=0).reduce((sum,x)=>sum+x,0)\n\
    }", "    let i = 0;\n    let sum = 0;\n    for(let j = 0; j < lst.length; j++)\
    \ {\n        if (lst[j] % 2 === 0 && i % 2 === 0) {\n            sum += lst[j];\n\
    \        }\n        i++;\n    }\n    return sum;\n}\n", "  let result = 0;\n \
    \ let counter = 0;\n  while(counter < lst.length){\n    if(lst[counter] % 2 !==\
    \ 0 && counter % 2 === 0){\n      result += lst[counter];\n    }\n    counter++;\n\
    \  }\n  return result;\n}\n", "  return lst.filter((v,i)=> i%2==0 && v%2==1).reduce((a,b)=>a+b,0)\n\
    }", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 == 0 && lst[i] % 2 == 1){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 !== 0 && i % 2 === 0){\n            sum += lst[i];\n  \
    \      }\n    }\n    return sum;\n}", "    var newArr = [];\n    var total = 0;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(i % 2 === 0){\n        \
    \    newArr.push(lst[i]);\n        }\n    }\n    for(var j = 0; j < newArr.length;\
    \ j++){\n        if(newArr[j] % 2 !== 0){\n            total += newArr[j];\n \
    \       }\n    }\n    return total;\n}", "    let sum = 0;\n    for(let i = 0;\
    \ i < lst.length; i++) {\n        if (i % 2 === 0 && lst[i] % 2 !== 0) {\n   \
    \         sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "    return\
    \ lst.filter((e, i) => i % 2 === 0 && e % 2 === 1).reduce((a, b) => a + b, 0);\n\
    }", "  var oe = [];\n  for(var i = 0; i < lst.length; i++){\n    if (i % 2 !==\
    \ 0){\n      if (lst[i] % 2 === 0){\n        oe.push(lst[i]);\n      }\n    }\n\
    \  }\n  return oe.reduce(function(acc,val){\n    return acc + val;\n  },0);\n\
    }\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 == 0 && lst[i] % 2 != 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n", "  let counter = 0;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (i % 2 === 0 && lst[i] % 2 !== 0) {\n      counter += lst[i];\n\
    \    }\n  }\n  return counter;\n}\n", "    let newLst = []\n    let sum = 0\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0 && lst[i] %\
    \ 2 === 1){\n            newLst.push(lst[i])\n        }\n    }\n    for(let j\
    \ = 0; j < newLst.length; j++){\n        sum += newLst[j]\n    }\n    return sum\n\
    }\n", "    let result = 0;\n    for(let i = 0; i < lst.length; i++){\n       \
    \ if(i % 2 === 0 && lst[i] % 2 !== 0){\n            result += lst[i];\n      \
    \  }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

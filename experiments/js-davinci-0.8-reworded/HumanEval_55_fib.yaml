name: HumanEval_55_fib
language: js
prompt: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n//\
  \ 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
  \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n \
  \ assert.deepEqual(candidate(12),144);\n}\n\ntest();"
completions: ["    if(n <= 2){\n        return 1;\n    } else {\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "\n}\n", "    var a = 0, b = 1, f = 1;\n    for(var\
    \ i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n        b = f;\n\
    \    }\n    return f;\n}", "    if(n < 2){\n        return n;\n    }else{\n  \
    \      return fib(n-1) + fib(n-2);\n    }\n}\n", "  if (n == 0){\n    return 0;\n\
    \  } else if (n == 1){\n    return 1;\n  } else {\n    return fib(n-1) + fib(n-2);\n\
    \  }\n}\n", "\t//YOUR CODE HERE\n\t//console.log(n);\n\tif(n === 0)\n\t\treturn\
    \ 0;\n\tif(n === 1)\n\t\treturn 1;\n\treturn fib(n-1) + fib(n-2);\n}\n", "  var\
    \ fibo = [0, 1];\n \n  if (n <= 2) return 1;\n \n  for (var i = 2; i <=n; i++\
    \ ){\n   fibo[i] = fibo[i-1]+fibo[i-2];\n  }\n \n return fibo[n];\n}\n", "   \
    \ if(n === 0){\n        return 0;\n    }\n    if(n === 1){\n        return 1;\n\
    \    }\n    if(n > 1){\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "\t\
    return n<2 ? n : fib(n-1) + fib(n-2);\n}", "    if(n==1){\n        return 1;\n\
    \    }else if(n==2){\n        return 1;\n    }else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "    return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n", "\n}\n", " \
    \ // TODO: YOUR CODE HERE\n  if (n<3){\n    return 1;\n  }\n  return fib(n-1)+fib(n-2);\n\
    }", "    if(n<=1){\n        return n;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "    // >>> YOUR CODE HERE <<<\n}\n", "    if(n == 0){\n       \
    \ return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "    if(n == 0) return 0;\n    if(n == 1) return 1;\n   \
    \ if(n > 1) return fib(n-1) + fib(n-2);\n}\n", "\tif(n===0){\n\t\treturn 0;\n\t\
    }\n\telse if(n===1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn fib(n-1)+fib(n-2);\n\
    \t}\n}\n", "    if(n==1) return 1;\n    else if(n==2) return 1;\n    else return\
    \ fib(n-1)+fib(n-2);\n}", "  //your code here\n  if (n === 0) {\n    return 0;\n\
    \  } else if (n === 1) {\n    return 1;\n  }\n  var prev1 = 0;\n  var prev2 =\
    \ 1;\n  var current;\n  for (var i = 1; i < n; i++) {\n    current = prev1 + prev2;\n\
    \    prev1 = prev2;\n    prev2 = current;\n  }\n  return current;\n}\n", "   \
    \ if(n < 2){\n        return n;\n    }\n    else{\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}\n", "    return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n", "  if (n ===\
    \ 0) {\n    return 0;\n  } else if (n === 1) {\n    return 1;\n  } else {\n  \
    \  return fib(n-1) + fib(n-2);\n  }\n}\n", "  if (n === 0){\n    return 0;\n \
    \ }\n  if (n === 1){\n    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}\n",
  "    if(n === 0){\n        return 0;\n    }\n    else if(n === 1){\n        return\
    \ 1;\n    }\n    else if(n > 1){\n        return fib(n-1) + fib(n-2);\n    }\n\
    \    else {\n        return \"You messed up!\";\n    }\n}\n", "    var a = 1,\
    \ b = 1;\n    for (var i = 3; i <= n; i++) {\n        var c = a + b;\n       \
    \ a = b;\n        b = c;\n    }\n    return b;\n}\n", "    if(n == 0){\n     \
    \   return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "  if (n === 0){\n    return 0;\n  }\n  if (n === 1){\n \
    \   return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "    let num1 = 0;\n\
    \    let num2 = 1;\n    let fib = 1;\n    for(let i = 2; i <= n; i++){\n     \
    \   fib = num1 + num2;\n        num1 = num2;\n        num2 = fib;\n    }\n   \
    \ return fib;\n}\n", "\tvar first = 0;\n\tvar second = 1;\n\tvar num = 1;\n\t\
    for(var i = 1; i < n; i++){\n\t\tnum = first + second;\n\t\tfirst = second;\n\t\
    \tsecond = num;\n\t}\n\treturn num;\n}\n", "    if(n <= 0){\n        return 0;\n\
    \    }\n    if(n <= 2){\n        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n\
    }\n", "    var f = [0,1];\n    for(var i = 2; i <= n; i++){\n        f[i] = f[i-1]\
    \ + f[i-2];\n    }\n    return f[n];\n}\n", "  var fibs = [0, 1];\n  var count\
    \ = 2;\n  while (count <= n){\n    fibs.push(fibs[count-1] + fibs[count-2]);\n\
    \    count++;\n  }\n  return fibs[n];\n}\n", "    if(n === 0) return 0;\n    if(n\
    \ === 1) return 1;\n    return fib(n-1) + fib(n-2);\n}\n", "  if (n <= 1) {\n\
    \    return n;\n  }\n  return fib(n-1) + fib(n-2);\n}", "\tvar a = 1, b = 0, temp;\n\
    \twhile (n >= 0){\n\t\ttemp = a;\n\t\ta = a + b;\n\t\tb = temp;\n\t\tn--;\n\t\
    }\n\treturn b;\n}\n", "    var current = 0;\n    var previous = 1;\n    for(var\
    \ i = 0; i < n; i++){\n        var temp = current;\n        current = current\
    \ + previous;\n        previous = temp;\n    }\n    return current;\n}\n", " \
    \   if(n<=1){\n        return n;\n    }\n    return fib(n-1)+fib(n-2);\n}\n",
  "  // TODO: your code here\n}\n", "  if (n <= 1) return n;\n  return fib(n-1) +\
    \ fib(n-2);\n}\n", "    var series = [0,1];\n    for(var i=2; i<=n; i++){\n  \
    \    series.push(series[i-1]+series[i-2]);\n    }\n    return series[n];\n}\n\n",
  "    if(n == 1){\n        return 1;\n    }\n    if(n == 2){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "  if (n <= 2) {\n    return 1;\n\
    \  }\n  else {\n    return fib(n-1) + fib(n-2);\n  }\n}\n", "  if (n < 2) return\
    \ n;\n  return fib(n-1) + fib(n-2);\n}\n", "    return n <= 2 ? 1 : fib(n-1) +\
    \ fib(n-2);\n}\n", "  if (n <= 2) return 1;\n  return fib(n-1) + fib(n-2);\n}\n",
  "    if(n<=1){\n        return n;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}", "\tif(n == 0){\n\t\treturn 0;\n\t}\n\telse if(n == 1){\n\t\treturn\
    \ 1;\n\t}\n\telse{\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n}\n", "}\n", "\tif(n===0){\n\
    \t\treturn 0;\n\t}\n\telse if(n===1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn\
    \ fib(n-1)+fib(n-2);\n\t}\n\n}\n", "    if(n==1) return 1;\n    if(n==2) return\
    \ 1;\n    if(n>2)\n        return fib(n-1)+fib(n-2);\n}\n\n", "    var i;\n  \
    \  var fib = []; // Initialize array!\n    var fibs = [0, 1];\n    fib[0] = 0;\n\
    \    fib[1] = 1;\n    for(i=2; i<=n; i++)\n    {\n        // Next fibonacci number\
    \ = previous + one before previous\n        // Translated to JavaScript:\n   \
    \     fib[i] = fib[i-2] + fib[i-1];\n        fibs.push(fib[i]);\n    }\n    return\
    \ fibs;\n}\n", "  if (n <= 2) {\n    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n\
    }\n", "  if (n === 0) {\n    return 0;\n  }\n  else if (n === 1) {\n    return\
    \ 1;\n  }\n  else {\n    return fib(n-1) + fib(n-2);\n  }\n}\n\n", "    if(n ===\
    \ 0) {\n        return 0;\n    } else if(n === 1) {\n        return 1;\n    }\
    \ else {\n        return fib(n-1) + fib(n-2);\n    }\n}", "\tif(n<=2){\n\t\treturn\
    \ 1;\n\t}\n\treturn fib(n-1)+fib(n-2);\n}\nvar assert = require('assert');\nassert.equal(fib(10),\
    \ 55);\nassert.equal(fib(1), 1);\nassert.equal(fib(8), 21);\nassert.equal(fib(0),\
    \ 1);\nassert.equal(fib(11), 89);\nassert.equal(fib(12), 144);\nassert.equal(fib(13),\
    \ 233);\nassert.equal(fib(14), 377);\nassert.equal(fib(15), 610);\nassert.equal(fib(16),\
    \ 987);\nassert.equal(fib(17), 1597);\nassert.equal(fib(18), 2584);\nassert.equal(fib(19),\
    \ 4181);\nassert.equal(fib(20), 6765);\nassert.equal(fib(21), 10946);\nassert.equal(fib(22),\
    \ 17711);\nassert.equal(fib(23), 28657);\nassert.equal(fib(24), 46368);\nassert.equal(fib(25),\
    \ 75025);\nassert.equal(fib(26), 121393);\nassert.equal(fib(27), 196418);\nassert.equal(fib(28),\
    \ 317811);\nassert.equal(fib(29), 514229);\nassert.equal(fib(30), 832040);\nassert.equal(fib(31),\
    \ 1346269);\nassert.equal(fib(32), 2178309);\nassert.equal(fib(33), 3524578);\n\
    assert.equal(fib(34), 5702887);\nassert.equal(fib(35), 9227465);\nassert.equal(fib(36),\
    \ 14930352);\nassert.equal(fib(37), 24157817);\nassert.equal(fib(38), 39088169);\n\
    assert.equal(fib(39), 63245986);\nassert.equal(fib(40), 102334155);\nassert.equal(fib(41),\
    \ 165580141);\nassert", "\tvar x = 1;\n\tvar y = 1;\n\tfor(var i = 0; i < n-2;\
    \ i++){\n\t\tvar t = x;\n\t\tx = y;\n\t\ty = y + t;\n\t}\n\treturn y;\n}\n\n",
  "  if (n == 0){\n    return 0;\n  } else if (n == 1){\n    return 1;\n  } else {\n\
    \    return fib(n-1) + fib(n-2);\n  }\n}\n", "  return n < 2 ? n : fib(n-1) +\
    \ fib(n-2);\n}\n", "    if(n == 0){\n        return 0;\n    }else if(n == 1){\n\
    \        return 1;\n    }else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n",
  "\n}\n", "  if (n <= 2) {\n    return 1;\n  } else {\n    return fib(n-1) + fib(n-2);\n\
    \  }\n}\n", "    if(n <= 2){\n        return 1;\n    }else{\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "\tif(n<=1){\n\t\treturn n;\n\t}\n\treturn fib(n-1)+fib(n-2);\n\
    }\n", "\tif(n==1)\n\t\treturn 1;\n\tif(n==2)\n\t\treturn 1;\n\treturn fib(n-1)+fib(n-2);\n\
    }\n", "    // TODO: Write the fibonacci algorithm here\n\tif (n == 0) {\n\t\t\
    return 0;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn fib(n-1)\
    \ + fib(n-2);\n\t}\n\t\n\t\n}\n", "    var arr = [0,1];\n    for(var i = 2; i\
    \ < n+1; i++){\n        arr.push(arr[i-2] + arr[i-1]);\n    }\n    return arr[n];\n\
    }\n\n", "   if(n<=2){\n       return 1;\n   }\n   else {\n       return fib(n-1)+fib(n-2);\n\
    \   }\n}", "    var first = 0;\n    var second = 1;\n    var counter = 1;\n  \
    \  var temp;\n    while(counter < n){\n        temp = first + second;\n      \
    \  first = second;\n        second = temp;\n        counter += 1;\n    }\n   \
    \ return second;\n}", "    if(n === 0){\n        return 0;\n    }\n    if(n ===\
    \ 1){\n        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "  if\
    \ (n === 0) return 0;\n  if (n === 1) return 1;\n  return fib(n-1) + fib(n-2);\n\
    }\n", "    if(n < 2){\n        return n;\n    }\n    return fib(n-1) + fib(n-2);\n\
    }\n", "\tif(n===0){\n\t\treturn 0;\n\t}else if(n===1){\n\t\treturn 1;\n\t}else{\n\
    \t\treturn fib(n-1)+fib(n-2);\n\t}\n}\n", "  if (n === 0){\n    return 0;\n  }\n\
    \  if (n === 1){\n    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", " \
    \   if(n<=1){\n      return n;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", " \
    \   if(n == 0){\n        return 0;\n    }\n    else if(n == 1){\n        return\
    \ 1;\n    }\n    else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "\t\
    if(n==1) return 1;\n\tif(n==2) return 1;\n\treturn fib(n-1)+fib(n-2);\n}\n\n",
  "  if (n===1 || n===2){\n      return 1;\n  }\n  else{\n      return fib(n-1) +\
    \ fib(n-2);\n  }\n}\n", "  //\n}\n", "\t// TODO: Implement this function.\n\t\
    if (n==1){\n\t\treturn 1;\n\t}else if (n==2){\n\t\treturn 1;\n\t}else{\n\t\treturn\
    \ fib(n-1)+fib(n-2);\n\t}\n}\n", "\tif(n == 0){\n\t\treturn 0;\n\t}\n\telse if(n\
    \ == 1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n\
    }\n", "\tif(n == 0){\n\t\treturn 0;\n\t}\n\telse if(n == 1){\n\t\treturn 1;\n\t\
    }\n\telse{\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n}\n", "    if(n == 1){\n   \
    \     return 1;\n    }else if(n == 2){\n        return 1;\n    }else{\n      \
    \  return fib(n-1) + fib(n-2);\n    }\n}\n", "    if(n === 0){\n        return\
    \ 0;\n    }else if(n === 1){\n        return 1;\n    }else{\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n\n\n", "    if(n==1 || n==2){\n        return 1;\n  \
    \  }\n    else{\n        return fib(n-1)+fib(n-2);\n    }\n}\n", "\tif(n==1){\n\
    \t\treturn 1;\n\t}else if(n==2){\n\t\treturn 1;\n\t}else{\n\t\treturn fib(n-1)+fib(n-2);\n\
    \t}\n}\n", "  var num1 = 0;\n  var num2 = 1;\n  var num3 = 0;\n  var i = 2;\n\
    \  while(i <= n){\n    num3 = num1 + num2;\n    num1 = num2;\n    num2 = num3;\n\
    \    i++;\n  }\n  return num3;\n}", "  if (n<3){\n    return 1;\n  }\n  return\
    \ fib(n-1) + fib(n-2);\n}\n", "    if(n == 1 || n == 2){\n        return 1;\n\
    \    } else {\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "  if (n <= 1)\
    \ return n;\n  return fib(n-1) + fib(n-2);\n}\n\n", "\tvar a = 1, b = 0, temp;\n\
    \  \n\twhile (n >= 0){\n\t\ttemp = a;\n\t\ta = a + b;\n\t\tb = temp;\n\t\tn--;\n\
    \t}\n\treturn b;\n}\n", "    if(n==1){\n        return 1;\n    }\n    else if(n==2){\n\
    \        return 1;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n    }\n\
    }", "    if(n <= 0){\n        return 0;\n    }\n    if(n === 1){\n        return\
    \ 1;\n    }\n    return fib(n-1) + fib(n-2);\n}", "    if(n == 1 || n == 2){\n\
    \        return 1;\n    }else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n",
  "    let fib1 = 0, fib2 = 1, result = 0;\n    for(let i = 0; i < n - 1; i++){\n\
    \        result = fib1 + fib2;\n        fib1 = fib2;\n        fib2 = result;\n\
    \    }\n    return result;\n}\n", "    return n < 2 ? n : fib(n-1) + fib(n-2);\n\
    }\n", "    if(n<=1){\n        return n;\n    }else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n      \
    \  return 1;\n    }\n    if(n>2){\n        return fib(n-1)+fib(n-2);\n    }\n}",
  "    if(n === 0){\n        return 0;\n    }\n    if(n === 1){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "\tif(n === 0){\n\t\treturn 0;\n\
    \t}\n\telse if(n === 1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn fib(n-1) + fib(n-2);\n\
    \t}\n}\n", "    if(n === 0) return 0;\n    if(n === 1) return 1;\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "  if (n === 0) {\n    return 0;\n  }\n  if (n === 1) {\n\
    \    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "    return n <= 1 ?\
    \ n : fib(n-1) + fib(n-2);\n}\n", "  //base case\n  if(n === 0){\n    return 0;\n\
    \  }\n  if(n === 1){\n    return 1;\n  }\n  //recursive case\n  return fib(n-1)\
    \ + fib(n-2);\n}\n", "   if(n<3){\n      return 1;\n   }\n   return fib(n-1)+fib(n-2);\n\
    }\n", "\tif(n==1){\n\t\treturn 1;\n\t}\n\tif(n==2){\n\t\treturn 1;\n\t}\n\treturn\
    \ fib(n-1)+fib(n-2);\n\n}\n\n\n", "    if(n<=1){\n        return n;\n    }\n \
    \   return fib(n-1)+fib(n-2);\n}\n", "\tvar arr = [0,1];\n\tfor(var i = 2; i <=\
    \ n; i++){\n\t\tarr.push(arr[i-1] + arr[i-2]);\n\t}\n\treturn arr[n];\n}\n", " \
    \ // write your code here\n  return n <= 1 ? n : fib(n-1) + fib(n-2);\n}\n", " \
    \   if(n == 0){\n        return 0;\n    }else if(n == 1){\n        return 1;\n\
    \    }else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "    if(n == 0){\n\
    \        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return\
    \ fib(n-1) + fib(n-2);\n}\n", "\tif(n <= 2){\n\t\treturn 1;\n\t}\n\treturn fib(n-1)\
    \ + fib(n-2);\n}", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n \
    \       return 1;\n    }\n    return fib(n-1)+fib(n-2);\n}", "    if(n === 0)\
    \ return 0;\n    else if(n === 1) return 1;\n    else{\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "  //TODO implement me\n  if (n <= 2) {\n    return\
    \ 1;\n  } else {\n    return fib(n-1) + fib(n-2);\n  }\n\n}\n", "\tif(n===0){\n\
    \t\treturn 0;\n\t}\n\tif(n===1){\n\t\treturn 1;\n\t}\n\treturn fib(n-1)+fib(n-2);\n\
    }\n", "    //if(n == 0)\n    //    return 0;\n    //if(n == 1)\n    //    return\
    \ 1;\n    //return fib(n-1) + fib(n-2);\n    \n    var a = 1, b = 0, temp;\n \
    \   \n    while(n > 0){\n        temp = a;\n        a = a + b;\n        b = temp;\n\
    \        n--;\n    }\n    \n    return b;\n}\n", "    if(n === 0) return 0;\n\
    \    if(n === 1) return 1;\n    return fib(n-1) + fib(n-2);\n}\n", "\tif(n==1){\n\
    \t\treturn 1;\n\t}\n\telse if(n==2){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn\
    \ fib(n-1)+fib(n-2);\n\t}\n}\n", "    var a = 1, b = 1;\n    for (var i = 3; i\
    \ <= n; i++) {\n        var c = a + b;\n        a = b;\n        b = c;\n    }\n\
    \    return b;\n}\n", "    //base cases\n    if(n == 0){\n        return 0;\n\
    \    }\n    if(n == 1){\n        return 1;\n    }\n    //recursive case\n    return\
    \ fib(n-1) + fib(n-2);\n}", "\tif(n==1 || n==2){\n\t\treturn 1;\n\t}\n\treturn\
    \ fib(n-1)+fib(n-2);\n}", "  var a = 1, b = 0, temp;\n\n  while (n >= 0){\n  \
    \  temp = a;\n    a = a + b;\n    b = temp;\n    n--;\n  }\n\n  return b;\n}\n",
  "\tif(n <= 1){\n\t\treturn n;\n\t}\n\treturn fib(n-1) + fib(n-2);\n}\n\nfib(10);\n\
    fib(1);\nfib(8);", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n \
    \       return 1;\n    }\n    if(n>2){\n        return fib(n-1)+fib(n-2);\n  \
    \  }\n}\n", "  var f = [];\n  f[0] = 0;\n  f[1] = 1;\n  for(var i = 2; i <= n;\
    \ i++){\n    f[i] = f[i-1] + f[i-2];\n  }\n  return f[n];\n}", "    let fibonacci\
    \ = [0, 1];\n    if (n > 1) {\n        for (let i = 2; i <= n; i++) {\n      \
    \      fibonacci[i] = fibonacci[i - 1] + fibonacci[i - 2];\n        }\n    }\n\
    \    return fibonacci[n];\n}\n", "    let first = 0;\n    let second = 1;\n  \
    \  let temp;\n    while(n>0){\n        temp = first;\n        first = second;\n\
    \        second = temp + second;\n        n--;\n    }\n    return first;\n}\n",
  "  if (n < 2) {\n    return n;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "  if\
    \ (n===0) return 0;\n  if (n===1) return 1;\n  return fib(n-1) + fib(n-2);\n}\n",
  "  let arr = [0, 1];\n  for (let i = 2; i < n + 1; i++){\n    arr.push(arr[i - 2]\
    \ + arr[i -1])\n  }\n return arr[n]\n}", "    if(n<2){\n        return n;\n  \
    \  }else{\n        return fib(n-1)+fib(n-2);\n    }\n}", "  return recursiveFib(n)[0];\n\
    }", "    if(n<=1){\n        return n;\n    }\n    return fib(n-1)+fib(n-2);\n\
    }\n", "  let a = 1;\n  let b = 1;\n  for (let i = 3; i <= n; i++){\n    let c\
    \ = a + b;\n    a = b;\n    b = c;\n  }\n  return b;\n}\n\nmodule.exports = fib;",
  "    var fibSeq = [0,1];\n    while (fibSeq.length <= n){\n        fibSeq.push(fibSeq[fibSeq.length-1]\
    \ + fibSeq[fibSeq.length-2]);\n    }\n    return fibSeq[n];\n}\n", "\tif(n ===\
    \ 0 || n === 1){\n\t\treturn n;\n\t}\n\telse{\n\t\treturn fib(n-1) + fib(n-2);\n\
    \t}\n}", "    if(n==1 || n==2){\n        return 1;\n    }\n    return fib(n-1)+fib(n-2);\n\
    }\n", "\treturn n > 2 ? fib(n-1) + fib(n-2) : 1;\n}", "    if(n == 1 || n == 2){\n\
    \        return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "\t//base case\n\
    \tif(n<=2){\n\t\treturn 1;\n\t}\n\t//recursive case\n\telse{\n\t\treturn fib(n-1)\
    \ + fib(n-2);\n\t}\n}\n", "    if(n == 1 || n == 2){\n        return 1;\n    }\n\
    \    else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "   if(n < 2){\n\
    \       return n;\n   }\n   return fib(n-1) + fib(n-2);\n}\n", "\n}\n", "  //the\
    \ first two numbers are 0 and 1\n  if (n < 2){\n    return n;\n  }\n  //the third\
    \ number is the sum of the first two numbers\n  //and so on\n  return fib(n-1)\
    \ + fib(n-2);\n}\n", "    // your code here\n}\n\n", "    if(n==1) return 1;\n\
    \    if(n==2) return 1;\n    return fib(n-1)+fib(n-2);\n}\n", "  if (n == 0) {\n\
    \    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  return fib(n-1) +\
    \ fib(n-2);\n}\n", "\tvar res = [0,1];\n\tfor(var i = 2; i <= n; i++){\n\t\tres.push(res[i-1]\
    \ + res[i-2]);\n\t}\n\treturn res[n];\n}\n", "    if(n<=2){\n        return 1;\n\
    \    }\n    return fib(n-1)+fib(n-2);\n}\n", "    if(n==1 || n==2){\n        return\
    \ 1;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "    if(n<2){\n        return\
    \ n;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "  if (n === 0) {\n    return\
    \ 0;\n  } else if (n === 1) {\n    return 1;\n  } else {\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n", "  var num1 = 0;\n  var num2 = 1;\n  var temp;\n  if\
    \ (n === 0){\n    return 0;\n  }\n  for (var i = 2; i <= n; i++){\n    temp =\
    \ num1 + num2;\n    num1 = num2;\n    num2 = temp;\n  }\n  return num2;\n}\n",
  "}\n\n", "    let fibArray = [0,1];\n    for(let i = 1; i < n; i++){\n        fibArray.push(fibArray[fibArray.length-1]\
    \ + fibArray[fibArray.length-2]);\n    }\n    return fibArray[n];\n}\n", "   \
    \ if(n === 0){\n        return 0;\n    }\n    if(n === 1){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "  // TODO: implement me!\n  //\
    \ 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144 ...\n  if (n == 1 || n == 2) {\n \
    \   return 1;\n  } else {\n    return fib(n-1) + fib(n-2);\n  }\n}\n", "    if(n\
    \ <= 1){\n        return n;\n    }\n    else{\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}", "  if (n <= 1) return n;\n  return fib(n-1) + fib(n-2);\n}\n", " \
    \ let fib = 0;\n  let fib2 = 1;\n  let temp = 1;\n  if(n === 1){\n    return 1;\n\
    \  }\n  for(let i = 2; i <= n; i++){\n    temp = fib;\n    fib = fib2;\n    fib2\
    \ = temp + fib2;\n  }\n  return fib2;\n}\n", "  if (n <= 1) {\n    return n;\n\
    \  }\n  return fib(n-1) + fib(n-2);\n}\n", "  if (n < 2) {\n    return n;\n  }\
    \ else {\n    return fib(n-1) + fib(n-2);\n  }\n}\n\n", "    //since fib seq start\
    \ from 1, so check if n is 1 or 2\n    if(n == 1 || n == 2){\n        return 1;\n\
    \    }\n    //add the n-1 and n-2 to get the nth num\n    return fib(n-1) + fib(n-2);\n\
    }\n", "    var sum = 0;\n    for(var i = 1; i <= n; i++){\n        sum += fibHelper(i)\n\
    \    }\n    return sum;\n}\n", "    //this is base case\n    if(n === 1 || n ===\
    \ 2){\n        return 1;\n    }\n    //otherwise, keep going\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "  var left = 0;\n  var right = 1;\n  var temp;\n  for(var\
    \ i = 2; i <= n; i++) {\n    temp = left + right;\n    left = right;\n    right\
    \ = temp;\n  }\n  return right;\n}\n", "  if (n === 0) return 0;\n  if (n ===\
    \ 1) return 1;\n  return fib(n-1) + fib(n-2);\n}\n", "\tif(n === 0 || n === 1){\n\
    \t\treturn n;\n\t} else {\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n}\n", "    var\
    \ n1 = 0;\n    var n2 = 1;\n    for(var i = 0; i < n; i++){\n        var temp\
    \ = n1;\n        n1 = n2;\n        n2 = temp + n2;\n    }\n    return n1;\n}\n",
  "  if (n === 0){\n    return 0;\n  }\n  else if (n === 1){\n    return 1;\n  }\n\
    \  else {\n    return fib(n-1) + fib(n-2);\n  }\n}", "    if(n <= 2){\n      \
    \  return 1;\n    }\n    return fib(n-1) + fib(n-2);\n}\n", "\tif(n === 0){\n\t\
    \treturn 0;\n\t}\n\tif(n === 1){\n\t\treturn 1;\n\t}\n\treturn fib(n-1) + fib(n-2);\n\
    }\n", "  if (n < 3) {\n    return 1;\n  } else {\n    return fib(n-1) + fib(n-2);\n\
    \  }\n}", "    if(n==1){\n        return 1;\n    }\n    if(n==2){\n        return\
    \ 1;\n    }\n    return fib(n-1)+fib(n-2);\n}", "    if(n === 0){\n        return\
    \ 0;\n    }\n    if(n === 1){\n        return 1;\n    }\n    return fib(n-1) +\
    \ fib(n-2);\n}\n", "    var Fib = function(n){\n        if(n === 0){\n       \
    \     return 0;\n        }\n        if(n === 1){\n            return 1;\n    \
    \    }\n        return Fib(n-1) + Fib(n-2);\n    };\n    return Fib(n);\n}\n",
  "    if(n < 1){\n        return 0;\n    }\n    if(n === 1){\n        return 1;\n\
    \    }\n    else{\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "  if (n===1)\
    \ return 1;\n  if (n===2) return 1;\n  return fib(n-1) + fib(n-2);\n}\n", "  \
    \  if(n<3){\n        return 1;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}", "    // if(n==1){\n    //     return 1;\n    // }\n    // if(n==2){\n\
    \    //     return 1;\n    // }\n    // if(n==3){\n    //     return 2;\n    //\
    \ }\n    // if(n==4){\n    //     return 3;\n    // }\n    // if(n==5){\n    //\
    \     return 5;\n    // }\n    // if(n==6){\n    //     return 8;\n    // }\n\
    \    // if(n==7){\n    //     return 13;\n    // }\n    // if(n==8){\n    // \
    \    return 21;\n    // }\n    // if(n==9){\n    //     return 34;\n    // }\n\
    \    // if(n==10){\n    //     return 55;\n    // }\n    if(n==1 || n==2){\n \
    \       return 1;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "    var a = 1,\
    \ b = 1;\n    for (var i = 3; i <= n; i++) {\n      var c = a + b;\n      a =\
    \ b;\n      b = c;\n    }\n    return b;\n}", "    if(n==1 || n==2){\n       \
    \ return 1;\n    }else{\n        return fib(n-1)+fib(n-2);\n    }\n}", "    let\
    \ sum = 0;\n    let a = 0;\n    let b = 1;\n    if (n == 1) {\n        return\
    \ 1;\n    }\n    if (n == 0) {\n        return 0;\n    }\n    for (let i = 2;\
    \ i <= n; i++) {\n        sum = a + b;\n        a = b;\n        b = sum;\n   \
    \ }\n    return sum;\n}\n", "    if(n < 2){\n        return n;\n    }\n    else{\n\
    \        return fib(n-1) + fib(n-2);\n    }\n}", "   if(n <= 2){\n     return\
    \ 1;\n   }\n  else {\n    return fib(n-1) + fib(n-2);\n  }\n}\n", "\tif(n == 0)\n\
    \t\treturn 0;\n\tif(n == 1)\n\t\treturn 1;\n\treturn fib(n-1) + fib(n-2);\n}\n",
  "    //To Do\n    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n     \
    \   return 1;\n    }\n\n    return fib(n-1) + fib(n-2);\n}\n", "    var i = 2;\n\
    \    var fibs = [0, 1];\n    while (i < n) {\n        fibs.push(fibs[0] + fibs[1]);\n\
    \        fibs.shift();\n        i++;\n    }\n    return fibs[1];\n}\n", "    if(n==1\
    \ || n==2){\n        return 1;\n    }else if(n==0){\n        return 0;\n    }else{\n\
    \        return fib(n-1)+fib(n-2);\n    }\n}\n", "    if(n == 1){\n        return\
    \ 1;\n    }else if(n == 2){\n        return 1;\n    }else{\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "    if(n === 0){\n        return 0;\n    }else if(n\
    \ === 1){\n        return 1;\n    }else{\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}", "    if(n === 0) {\n        return 0;\n    }\n    else if(n === 1)\
    \ {\n        return 1;\n    }\n    else {\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}\n", "  if (n <= 1) {\n    return n;\n  } else {\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n", "    let fibs = [0, 1];\n    for (let i = 2; i <= n;\
    \ i++){\n        fibs.push(fibs[i-1] + fibs[i-2]);\n    }\n    return fibs[n];\n\
    }\n", "    return (n == 1 || n == 2) ? 1 : fib(n-1) + fib(n-2);\n}\n", "\tif(n===0)\
    \ return 0;\n\tif(n===1) return 1;\n\treturn fib(n-1)+fib(n-2);\n}\n", "  if (n\
    \ <= 1) {\n    return n;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "  if (n <=\
    \ 2) return 1;\n  return fib(n-1) + fib(n-2);\n}\n", "    if(n == 0) return 0;\n\
    \    if(n == 1) return 1;\n    return fib(n-1) + fib(n-2);\n}\n\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

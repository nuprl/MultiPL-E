name: HumanEval_55_fib
language: js
prompt: "//Return n-th Fibonacci number.\n// >>> fib(10)\n// 55\n// >>> fib(1)\n//\
  \ 1\n// >>> fib(8)\n// 21\nfunction fib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
  \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n \
  \ assert.deepEqual(candidate(12),144);\n}\n\ntest();"
completions: ["    if(n <= 2){\n        return 1;\n    } else {\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "\n}\n", "    var a = 0, b = 1, f = 1;\n    for(var\
    \ i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n        b = f;\n\
    \    }\n    return f;\n}", "    if(n < 2){\n        return n;\n    }else{\n  \
    \      return fib(n-1) + fib(n-2);\n    }\n}\n", "  if (n == 0){\n    return 0;\n\
    \  } else if (n == 1){\n    return 1;\n  } else {\n    return fib(n-1) + fib(n-2);\n\
    \  }\n}\n", "\t//YOUR CODE HERE\n\t//console.log(n);\n\tif(n === 0)\n\t\treturn\
    \ 0;\n\tif(n === 1)\n\t\treturn 1;\n\treturn fib(n-1) + fib(n-2);\n}\n", "  var\
    \ fibo = [0, 1];\n \n  if (n <= 2) return 1;\n \n  for (var i = 2; i <=n; i++\
    \ ){\n   fibo[i] = fibo[i-1]+fibo[i-2];\n  }\n \n return fibo[n];\n}\n", "   \
    \ if(n === 0){\n        return 0;\n    }\n    if(n === 1){\n        return 1;\n\
    \    }\n    if(n > 1){\n        return fib(n-1) + fib(n-2);\n    }\n}\n", "\t\
    return n<2 ? n : fib(n-1) + fib(n-2);\n}", "    if(n==1){\n        return 1;\n\
    \    }else if(n==2){\n        return 1;\n    }else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "    return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n", "\n}\n", " \
    \ // TODO: YOUR CODE HERE\n  if (n<3){\n    return 1;\n  }\n  return fib(n-1)+fib(n-2);\n\
    }", "    if(n<=1){\n        return n;\n    }\n    else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "    // >>> YOUR CODE HERE <<<\n}\n", "    if(n == 0){\n       \
    \ return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "    if(n == 0) return 0;\n    if(n == 1) return 1;\n   \
    \ if(n > 1) return fib(n-1) + fib(n-2);\n}\n", "\tif(n===0){\n\t\treturn 0;\n\t\
    }\n\telse if(n===1){\n\t\treturn 1;\n\t}\n\telse{\n\t\treturn fib(n-1)+fib(n-2);\n\
    \t}\n}\n", "    if(n==1) return 1;\n    else if(n==2) return 1;\n    else return\
    \ fib(n-1)+fib(n-2);\n}", "  //your code here\n  if (n === 0) {\n    return 0;\n\
    \  } else if (n === 1) {\n    return 1;\n  }\n  var prev1 = 0;\n  var prev2 =\
    \ 1;\n  var current;\n  for (var i = 1; i < n; i++) {\n    current = prev1 + prev2;\n\
    \    prev1 = prev2;\n    prev2 = current;\n  }\n  return current;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_102_choose_num
language: js
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// >>> choose_num(12,\
  \ 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num(x, y){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n  assert.deepEqual(candidate(13,\
  \ 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n  assert.deepEqual(candidate(5234,\
  \ 5233),-1);\n  assert.deepEqual(candidate(6, 29),28);\n  assert.deepEqual(candidate(27,\
  \ 10),-1);\n  assert.deepEqual(candidate(7, 7),-1);\n  assert.deepEqual(candidate(546,\
  \ 546),546);\n}\n\ntest();"
completions: ["\tlet even_num = -1;\n\tif (x % 2 == 0){\n\t\teven_num = x;\n\t}\n\t\
    else{\n\t\teven_num = x + 1;\n\t}\n\t\n\tfor (let i = even_num; i <= y; i+=2){\n\
    \t\teven_num = i;\n\t}\n\t\n\treturn even_num;\n}\n", "\tvar num = y;\n\tif (x\
    \ % 2 === 0){\n\t\tnum = x;\n\t} else if (x % 2 === 1 && y % 2 === 1){\n\t\tnum\
    \ = -1;\n\t}\n\treturn num;\n}\n\n", "\tvar z = x;\n\twhile (z <= y){\n\t\tif\
    \ (z % 2 == 0){\n\t\t\treturn z;\n\t\t}\n\t\tz += 1;\n\t}\n\treturn -1;\n}\n",
  "    var bigger;\n    if (x >= y){\n        bigger = x;\n    }\n    else{\n    \
    \    bigger = y;\n    }\n    if (bigger % 2 == 0){\n        return bigger;\n \
    \   }\n    else{\n        return -1;\n    }\n}\n", "\tvar num = -1;\n\tfor(var\
    \ i = x; i <= y; i++){\n\t\tif(i % 2 == 0){\n\t\t\tnum = i;\n\t\t}\n\t}\n\treturn\
    \ num;\n}\n", "    // your code here\n}\n", "    if(x % 2 === 0)\n        return\
    \ x;\n    if((x+1) % 2 === 0)\n        return x+1;\n    if(y % 2 === 0)\n    \
    \    return y;\n    if((y-1) % 2 === 0)\n        return y-1;\n    return -1;\n\
    }\n", "    if (x%2 != 0){\n        x++;\n    }\n    if (y%2 != 0){\n        y--;\n\
    \    }\n    if (x > y){\n        return -1;\n    }\n    return y;\n}\n", "\tlet\
    \ newArr = [];\n\tfor(let i = x; i <= y; i++){\n\t\tif(i % 2 === 0){\n\t\t\tnewArr.push(i);\n\
    \t\t}\n\t}\n\tif(newArr.length === 0){\n\t\treturn -1;\n\t}\n\tlet biggest = newArr[0];\n\
    \tfor(let j = 0; j < newArr.length; j++){\n\t\tif(newArr[j] > biggest){\n\t\t\t\
    biggest = newArr[j];\n\t\t}\n\t}\n\treturn biggest;\n}\n", "    if (x > y) return\
    \ -1;\n    for (i = y; i >= x; i--){\n        if (i % 2 == 0) return i;\n    }\n\
    \    return -1;\n}\n", "    //add code here\n}\n", "    //TODO: Implement me!\n\
    \    var w;\n    for(var i = x; i <= y; i++){\n        if(i % 2 == 0){\n     \
    \       w = i;\n        }\n    }\n    if(w == undefined){\n        return -1;\n\
    \    }else{\n        return w;\n    }\n}\n", "\tvar biggestEven = -1;\n\tif(x%2\
    \ == 0){\n\t\tbiggestEven = x;\n\t}\n\tif(y%2 == 0){\n\t\tbiggestEven = y;\n\t\
    }\n\tfor(var i = x+1; i<y; i++){\n\t\tif(i%2 == 0){\n\t\t\tbiggestEven = i;\n\t\
    \t}\n\t}\n\treturn biggestEven;\n}", "\tvar z = 0;\n\twhile (x <= y){\n\t\tif\
    \ (x % 2 == 0){\n\t\t\tz = x;\n\t\t}\n\t\tx += 1;\n\t}\n\tif (z == 0){\n\t\treturn\
    \ -1;\n\t}\n\telse{\n\t\treturn z;\n\t}\n}\n", "    if(x % 2 == 0) {\n       \
    \ return x;\n    } else if(x+1 == y) {\n        return -1;\n    } else {\n   \
    \     return choose_num(x+1, y);\n    }\n}", "    var even = -1;\n    for(var\
    \ i = x; i <= y; i++){\n        if(i % 2 == 0){\n            even = i;\n     \
    \   }\n    }\n    return even;\n}\n", "  let num = -1;\n  for(i = x; i <= y; i++)\
    \ {\n    if(i % 2 == 0) {\n      num = i;\n    }\n  }\n  return num;\n}\n", " \
    \   if (x > y) {\n        var temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    var max = -1;\n    for (var i = x; i <= y; i++){\n        if (is_even(i)\
    \ && i > max) {\n            max = i;\n        }\n    }\n    return max;\n}\n",
  "    var max = x;\n    if (y % 2 === 0){\n        max = y;\n    }\n    for (var\
    \ i = x + 1; i < y; i += 2){\n        if (i % 2 === 0){\n            max = i;\n\
    \        }\n    }\n    if (max % 2 !== 0){\n        return -1;\n    } else {\n\
    \        return max;\n    }\n}", "    var even_num = -1;\n    for(var i = x; i\
    \ <= y; i++){\n        if(i % 2 == 0){\n            even_num = i;\n        }\n\
    \    }\n    return even_num;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

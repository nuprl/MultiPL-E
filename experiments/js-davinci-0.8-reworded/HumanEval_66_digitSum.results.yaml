language: js
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    //convert s to upper\
    \ case\n    var myString = s.toUpperCase();\n    var sum = 0;\n    //for each\
    \ character, convert to number and add to the sum\n    for (var i = 0; i < myString.length;\
    \ i++) {\n        sum += myString.charCodeAt(i);\n    }\n    return sum;\n}\n\
    var result = digitSum(\"woArBld\");\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp48hjqctg.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp48hjqctg.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var result = 0;\n\
    \    for(var i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            result += s.charCodeAt(i);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpn_3fhp7o.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_3fhp7o.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpoveytxld.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoveytxld.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\nvar sum = 0;\nfor (var\
    \ i = 0; i < s.length; i++) {\n  if (s[i] == s[i].toUpperCase()) {\n    sum +=\
    \ s.charCodeAt(i);\n  }\n}\nreturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpeulbbime.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeulbbime.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n   var sum = 0;\n    for(var\
    \ i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n      \
    \      sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvivx92t7.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvivx92t7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  var\
    \ upper = s.toUpperCase();\n  var upperArr = upper.split('');\n  for(var i = 0;\
    \ i < upperArr.length; i++){\n    sum += upperArr[i].charCodeAt(0);\n  }\n  return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpx2v9mbn1.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2v9mbn1.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpoveytxld.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoveytxld.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let upper = 0;\n \
    \   let result = 0;\n    for(let i = 0; i < s.length; i++){\n        upper = s.charCodeAt(i);\n\
    \        if(upper > 64 && upper < 91){\n            result += upper;\n       \
    \ }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        let code = s.charCodeAt(i);\n  \
    \      if(code >= 65 && code <= 90){\n            sum += code;\n        }\n  \
    \  }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var r = 0;\n    for(var\
    \ i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n      \
    \      r += s.charCodeAt(i);\n        }\n    }\n    return r;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const sum = [];\n\
    \    let total = 0;\n    s.split('').map(char => char.charCodeAt(0)).filter(num\
    \ => {\n        if(num >= 65 && num <= 90){\n            return sum.push(num);\n\
    \        }else{\n            return false;\n        }\n    });\n    return sum.reduce((acc,\
    \ val) => acc + val);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpdild5hjj.js:27\n    return sum.reduce((acc, val) => acc + val);\n\
    \               ^\n\nTypeError: Reduce of empty array with no initial value\n\
    \    at Array.reduce (<anonymous>)\n    at digitSum (/tmp/tmpdild5hjj.js:27:16)\n\
    \    at test (/tmp/tmpdild5hjj.js:35:20)\n    at Object.<anonymous> (/tmp/tmpdild5hjj.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tif(!s) return 0;\n\t\
    var sum = 0;\n\tfor(var i = 0; i < s.length; i++){\n\t\tvar c = s.charCodeAt(i);\n\
    \t\tif(c >= 65 && c <= 90){\n\t\t\tsum += c;\n\t\t}\n\t}\n\treturn sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp4lp6vxmf.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4lp6vxmf.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ if(s == null || s == ''){\n        return sum;\n    }\n    for(let letter of\
    \ s){\n        if(letter == letter.toUpperCase()){\n            sum += letter.charCodeAt(0);\n\
    \        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp6pqnx51t.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6pqnx51t.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var str = s.split('');\n\
    \    var sum = 0;\n    for(i=0; i<str.length; i++){\n        if(str[i] == str[i].toUpperCase()){\n\
    \            sum += str[i].charCodeAt(0);\n        }\n    }\n    return sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp6__voa8q.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6__voa8q.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] >= \"A\" && s[i] <= \"Z\"\
    )\n            sum += s.charCodeAt(i);\n    }\n    return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let result = 0;\n\
    \    if(!s){\n        return result;\n    }else{\n        for(let i = 0; i < s.length;\
    \ i++){\n            if(s[i] >= 'A' && s[i] <= 'Z'){\n                result +=\
    \ s.charCodeAt(i);\n            }\n        }\n        return result;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let total = 0;\n \
    \   for(let i = 0; i < s.length; i++){\n        if(s[i] >= \"A\" && s[i] <= \"\
    Z\"){\n            total += s.charCodeAt(i);\n        }\n    }\n    return total;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] !== s[i].toLowerCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < s.length; i++){\n\t\tif(s[i] >= \"A\" && s[i] <= \"Z\"){\n\t\t\t\
    sum += s.charCodeAt(i);\n\t\t}\n\t}\n\treturn sum;\n}\nvar s = \"helloE\";\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // your code here\n\
    \    const lower = 'abcdefghijklmnopqrstuvwxyz';\n    const upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    const arr = s.split('');\n    let sum = 0;\n    arr.forEach(element => {\n\
    \        if(upper.includes(element)){\n            sum += element.charCodeAt(0);\n\
    \        }\n    });\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n \
    \     sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp9js2c_qc.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9js2c_qc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nlet\
    \ s = \"WoArBld\";\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpzpqka1be.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzpqka1be.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvivx92t7.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvivx92t7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        var code = s.charCodeAt(i);\n  \
    \      if(code >= 65 && code <= 90){\n            sum += code;\n        }\n  \
    \  }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ if(s.length == 0){\n        return 0;\n    }else{\n        for(let i = 0; i\
    \ < s.length; i++){\n            if(s[i] == s[i].toUpperCase()){\n           \
    \     sum += s.charCodeAt(i);\n            }\n        }\n        return sum;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp_iio8t38.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_iio8t38.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var r = 0;\n  for (var\
    \ i = 0; i < s.length; i++) {\n    if (s[i] == s[i].toUpperCase()) {\n      r\
    \ += s.charCodeAt(i);\n    }\n  }\n  return r;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp13r5r52s.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp13r5r52s.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let temp = 0;\n  \
    \  for(let i = 0; i < s.length; i++){\n        let asciiCode = s.charCodeAt(i);\n\
    \        if(asciiCode >= 65 && asciiCode <= 90){\n            temp += asciiCode;\n\
    \        }\n    }\n    return temp;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s[i] === s[i].toUpperCase()){\n      sum\
    \ += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp62muyb5z.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp62muyb5z.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let arr = s.split('');\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ == arr[i].toUpperCase()){\n            sum += arr[i].charCodeAt();\n       \
    \ }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpbw0g065x.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbw0g065x.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum=0;\n    for(var\
    \ i=0;i<s.length;i++){\n        if(s[i]>='A' && s[i]<='Z'){\n            sum+=s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const x = s.split('').map(l\
    \ => l.charCodeAt(0)).filter(l => l >= 65 && l <= 90).reduce((a, c) => a + c);\n\
    \    return (x !== undefined) ? x : 0;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmppfh5v555.js:18\n    const x = s.split('').map(l => l.charCodeAt(0)).filter(l\
    \ => l >= 65 && l <= 90).reduce((a, c) => a + c);\n                          \
    \                                                          ^\n\nTypeError: Reduce\
    \ of empty array with no initial value\n    at Array.reduce (<anonymous>)\n  \
    \  at digitSum (/tmp/tmppfh5v555.js:18:85)\n    at test (/tmp/tmppfh5v555.js:26:20)\n\
    \    at Object.<anonymous> (/tmp/tmppfh5v555.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet result = 0;\n\t\
    s.split('').map(x => {\n\t\tif (isNaN(parseInt(x))){\n\t\t\tif (x === x.toUpperCase()){\n\
    \t\t\t\tresult += x.charCodeAt(0);\n\t\t\t}\n\t\t}\n\t})\n\treturn result;\n}\n\
    digitSum(\"woArBld\");\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp6awzwqgk.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6awzwqgk.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let result = 0;\n\
    \    for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            result += s.charCodeAt(i);\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpc70l38mt.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc70l38mt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n      if(s[i] >= \"A\" && s[i] <= \"Z\"\
    ){\n        sum += s.charCodeAt(i);\n      }\n    }\n    return sum;\n  }\n  console.log(digitSum(\"\
    abAB\"));\n  console.log(digitSum(\"abcCd\"));\n  console.log(digitSum(\"helloE\"\
    ));\n  console.log(digitSum(\"woArBld\"));\n  console.log(digitSum(\"aAaaaXa\"\
    ));\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '131

    67

    69

    131

    153

    '
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var ascii = 0;\n \
    \   for(var i = 0; i < s.length; i++){\n      ascii += s.charCodeAt(i);\n    }\n\
    \    return ascii;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpsisqtrxb.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsisqtrxb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let total = 0;\n  for(let\
    \ i = 0; i < s.length; i++){\n    if(s[i] >= \"A\" && s[i] <= \"Z\"){\n      total\
    \ += s.charCodeAt(i);\n    }\n  }\n  return total;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar splitStr = s.split(\"\
    \");\n\tvar\tsum = 0;\n\tfor(var i = 0; i < splitStr.length; i++){\n\t\tif(splitStr[i]\
    \ === splitStr[i].toUpperCase()){\n\t\t\tsum += splitStr[i].charCodeAt(0);\n\t\
    \t}\n\t}\n\treturn sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpt056khfq.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt056khfq.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let res = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            res += s.charCodeAt(i);\n        }\n    }\n    return res;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\ts.split('').forEach(function(char){\n\
    \t\tif(char.charCodeAt(0)>=65 && char.charCodeAt(0)<=90){\n\t\t\tsum+=char.charCodeAt(0);\n\
    \t\t}\n\t});\n\treturn sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let letters = [];\n    for(let i = 0; i < s.length; i++){\n        letters.push(s.charCodeAt(i));\n\
    \    }\n    for(let i = 0; i < letters.length; i++){\n        if(letters[i] >=\
    \ 65 && letters[i] <= 90){\n            sum += letters[i];\n        }\n    }\n\
    \    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (var i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\nvar sum = 0;\nfor (var\
    \ i = 0; i < s.length; i++) {\n  if (s[i] === s[i].toUpperCase()) {\n    sum +=\
    \ s.charCodeAt(i);\n  }\n}\nreturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpryw84_tr.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpryw84_tr.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s[i] >= 'A' && s[i] <= 'Z'){\n      sum +=\
    \ s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.replace(/[^A-Z]/g,\
    \ '').split('').reduce((sum, char) => sum + char.charCodeAt(0), 0);\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return sum(s.split('').filter(\n\
    \        (l) => l.charCodeAt(0) >= 65 && l.charCodeAt(0) <= 90\n    ).map(\n \
    \       (l) => l.charCodeAt(0)\n    ));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkoo3sfj6.js:18\n    return sum(s.split('').filter(\n    ^\n\nReferenceError:\
    \ sum is not defined\n    at digitSum (/tmp/tmpkoo3sfj6.js:18:5)\n    at test\
    \ (/tmp/tmpkoo3sfj6.js:30:20)\n    at Object.<anonymous> (/tmp/tmpkoo3sfj6.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\nlet total = 0;\nfor(let\
    \ i = 0; i < s.length; i++){\n    if(s[i] === s[i].toUpperCase()){\n      total\
    \ += s.charCodeAt(i);\n    }\n  }\n  return total;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpthzbrd4b.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpthzbrd4b.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        let code = s.charCodeAt(i);\n  \
    \      if(code >= 65 && code <= 90){\n            sum += code;\n        }\n  \
    \  }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpkp0a1sec.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkp0a1sec.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum = 0;\n\tfor(let\
    \ i=0; i<s.length; i++){\n\t\tif(s[i] >= 'A' && s[i] <= 'Z'){\n\t\t\tsum += s.charCodeAt(i);\n\
    \t\t}\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let str = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        str += (s.charCodeAt(i) >= 65 &&\
    \ s.charCodeAt(i) <= 90) ? s.charCodeAt(i) : 0;\n    }\n    return str;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n      if(s[i] == s[i].toUpperCase()){\n\
    \        sum += s.charCodeAt(i);\n      }\n    }\n    return sum;\n  }\n  console.log(digitSum(\"\
    helloE\"));\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpybtjbq5p.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpybtjbq5p.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '69

    '
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet ans = 0;\n\tfor(let\
    \ i = 0; i < s.length; i++){\n\t\tif(s[i] >= 'A' && s[i] <= 'Z'){\n\t\t\tans +=\
    \ s.charCodeAt(i);\n\t\t}\n\t}\n\treturn ans;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let myArr = [...s];\n\
    \  let mySum = 0;\n  for(let i = 0; i < myArr.length; i++){\n    if(myArr[i] ===\
    \ myArr[i].toUpperCase()){\n      mySum += myArr[i].charCodeAt(0);\n    }\n  }\n\
    \  return mySum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmprz89g3ic.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprz89g3ic.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let upper = s.toUpperCase();\n    for(let i = 0; i < upper.length; i++){\n \
    \       sum += upper.charCodeAt(i);\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpellgrnv3.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpellgrnv3.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    sum += s.charCodeAt(i);\n  }\n  console.log(sum);\n\
    }\n\ndigitSum(\"\");\ndigitSum(\"abAB\");\ndigitSum(\"abcCd\");\ndigitSum(\"helloE\"\
    );\ndigitSum(\"woArBld\");\ndigitSum(\"aAaaaXa\");\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpgcukwz93.js:36:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgcukwz93.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    326

    461

    601

    683

    638

    0

    '
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpkp0a1sec.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkp0a1sec.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').filter(function(el){\n\
    \    return el === el.toUpperCase();\n  }).reduce(function(acc, el){\n    return\
    \ acc + el.charCodeAt(0);\n  }, 0);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp8xg3umi_.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8xg3umi_.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var total = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s[i] === s[i].toUpperCase()){\n      total\
    \ += s.charCodeAt(i);\n    }\n  }\n  return total;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvvahv9pg.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvvahv9pg.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum=0;\n  for(i=0;i<s.length;i++){\n\
    \    if(s[i] == s[i].toUpperCase()){\n      sum+=s.charCodeAt(i);\n    }\n  }\n\
    \  return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmppf67yxje.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppf67yxje.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let a = 0\n    if(!s){\n\
    \        return 0\n    }\n    for(i = 0; i < s.length; i++){\n        if(s[i]\
    \ >= 'A' && s[i] <= 'Z'){\n            a += s.charCodeAt(i)\n        }\n    }\n\
    \    return a\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    s = s.toUpperCase().split('')\n\
    \    let sum = 0\n    for(let i = 0; i < s.length; i++){\n        if(s[i].charCodeAt()\
    \ >= 65 && s[i].charCodeAt() <= 90){\n            sum += s[i].charCodeAt()\n \
    \       }\n    }\n    return sum\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpsadyrd2h.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsadyrd2h.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        let currentChar = s.charCodeAt(i);\n\
    \        if(currentChar >= 65 && currentChar <= 90){\n            sum += currentChar;\n\
    \        }\n    }\n    return sum;\n}\nlet result = digitSum(\"abAB\");\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i);\n    }\n\
    \    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp03rvzbfg.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp03rvzbfg.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if (s === \"\") return\
    \ 0;\n    var sum = 0;\n    for (var i = 0; i < s.length; i++) {\n        if (s[i]\
    \ === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n        }\n\
    \    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp5n557nr8.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5n557nr8.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= \"A\" && s[i] <= \"Z\"\
    ){\n            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (var i = 0; i < s.length; i++) {\n    if(s[i] == s[i].toUpperCase()){\n    \
    \  sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpfj_900to.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfj_900to.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  let\
    \ str = s.toUpperCase();\n  for(let i = 0; i < str.length; i++){\n    sum += str.charCodeAt(i);\n\
    \  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpoojrtncb.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoojrtncb.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\t// add your code here\n\
    \  return s.split('').reduce((acc, curr) => {\n    if(curr === curr.toUpperCase())\
    \ {\n      acc += curr.charCodeAt(0);\n    }\n    return acc;\n  }, 0);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpk63pg0wq.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk63pg0wq.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // return s.split('').reduce((a,\
    \ b) => a + b.charCodeAt(0), 0);\n    // \\u0041 is equivelent to A\n    // return\
    \ s.split('').reduce((a, b) => a + b.charCodeAt(0), 0);\n    return s.replace(/[^A-Z]/g,\
    \ '').split('').reduce((a, b) => a + b.charCodeAt(0), 0);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let char of s){\n        let ascii = char.charCodeAt(0);\n        if(ascii\
    \ >= 65 && ascii <= 90){\n            sum+=ascii;\n        }\n    }\n    return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] !== s[i].toLowerCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n   let sum = 0;\n   for(let\
    \ i = 0; i < s.length; i++){\n      if(s[i] === s[i].toUpperCase()){\n       \
    \  sum += s.charCodeAt(i);\n      }\n   }\n   return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp7pdvcgav.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7pdvcgav.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet accumulator = 0;\n\
    \tlet upperCodes = [];\n\tfor (let i = 65; i <= 90; i++) {\n\t\tupperCodes.push(i);\n\
    \t}\n\tfor (let j = 0; j < s.length; j++) {\n\t\tif (upperCodes.includes(s.charCodeAt(j)))\
    \ {\n\t\t\taccumulator += s.charCodeAt(j);\n\t\t}\n\t}\n\treturn accumulator;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  let\
    \ upperString = s.toUpperCase();\n  for(let i = 0; i < upperString.length; i++)\
    \ {\n    if(upperString.charCodeAt(i) >= 65 && upperString.charCodeAt(i) <= 90)\
    \ {\n      sum += upperString.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpi8e3x4qv.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi8e3x4qv.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tif(s === \"\"){\n\t\t\
    return 0;\n\t}else{\n\t\tlet a = s.toUpperCase().split(\"\");\n\t\tlet b = a.filter(function(x){\n\
    \t\t\treturn x.charCodeAt(0) > 64 && x.charCodeAt(0) < 91;\n\t\t})\n\t\tlet sum\
    \ = 0;\n\t\tfor(let i = 0; i < b.length; i++){\n\t\t\tsum += b[i].charCodeAt(0);\n\
    \t\t}\n\t\treturn sum;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpkyp_m94t.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkyp_m94t.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if(!s) return 0;\n\
    \    let sum = 0;\n    for(let i=0; i<s.length; i++){\n        let charCode =\
    \ s.charCodeAt(i);\n        if(charCode>=65 && charCode<=90){\n            sum\
    \ += charCode;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let result = 0;\n\
    \    let splitString = s.split('');\n    for(let i = 0; i < splitString.length;\
    \ i++){\n        let number = splitString[i].charCodeAt();\n        if(number\
    \ > 64 && number < 91){\n            result += number;\n        }\n    }\n   \
    \ return result;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').reduce((sum,\
    \ val) => {\n    if(val.toUpperCase() === val){\n      return sum + val.charCodeAt();\n\
    \    } else {\n      return sum;\n    }\n  }, 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp0x_dihf7.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0x_dihf7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(a=>a.toUpperCase()===a).reduce((a,b)=>(a.charCodeAt(0)+b.charCodeAt(0)),0)\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp_w17vfll.js:18\n    return s.split('').filter(a=>a.toUpperCase()===a).reduce((a,b)=>(a.charCodeAt(0)+b.charCodeAt(0)),0)\n\
    \                                                                       ^\n\n\
    TypeError: a.charCodeAt is not a function\n    at /tmp/tmp_w17vfll.js:18:72\n\
    \    at Array.reduce (<anonymous>)\n    at digitSum (/tmp/tmp_w17vfll.js:18:55)\n\
    \    at test (/tmp/tmp_w17vfll.js:26:20)\n    at Object.<anonymous> (/tmp/tmp_w17vfll.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  // ...\n  var sum =\
    \ 0;\n  for (var i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    if (s[i] === s[i].toUpperCase()){\n   \
    \   sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmprbfx6mmu.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprbfx6mmu.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        let code = s.charCodeAt(i);\n  \
    \      if(code >= 65 && code <= 90){\n            sum += code;\n        }\n  \
    \  }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpoveytxld.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoveytxld.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let letters = s.split('');\n\
    \    let sum = 0;\n    for(let i = 0; i < letters.length; i++){\n        if(letters[i]\
    \ === letters[i].toUpperCase()){\n            sum += letters[i].charCodeAt(0);\n\
    \        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpbrtbwnp5.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbrtbwnp5.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    var n = s.charCodeAt(i);\n    if(n >= 65 &&\
    \ n <= 90){\n      sum += n;\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var ascii = 0;\n \
    \   var sum = 0;\n    for(var i = 0; i < s.length; i++){\n        ascii = s.charCodeAt(i);\n\
    \        if(ascii >= 65 && ascii <= 90){\n            sum += ascii;\n        }\n\
    \    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let char of s){\n        if(char.charCodeAt() > 64 && char.charCodeAt()\
    \ < 91){\n            sum += char.charCodeAt();\n        }\n    }\n    return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar sum = 0;\n\tfor(i=0;\
    \ i<s.length; i++){\n\t\tvar value = s.charCodeAt(i);\n\t\tif(value >= 65 && value\
    \ <= 90){\n\t\t\tsum += value;\n\t\t}\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\nvar sum = 0;\nfor (var\
    \ i = 0; i < s.length; i++) {\n  if (s[i] == s[i].toUpperCase()) {\n    sum +=\
    \ s.charCodeAt(i);\n  }\n}\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpm27oufnl.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm27oufnl.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(x\
    \ => x.charCodeAt(0) > 64 && x.charCodeAt(0) < 91).reduce((a, b) => a + b.charCodeAt(0),\
    \ 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet out = 0;\n\tfor(let\
    \ i = 0; i < s.length; i++){\n\t\tif(s[i] == s[i].toUpperCase()){\n\t\t\tout +=\
    \ s.charCodeAt(i);\n\t\t}\n\t}\n\treturn out;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp9byvcijp.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9byvcijp.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        let ascii = s.charCodeAt(i);\n \
    \       if(ascii > 64 && ascii < 91){\n            sum += ascii;\n        }\n\
    \    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // i need to take\
    \ each char in the string, convert it to its ascii number and add them up\n  \
    \  // need to learn how to convert a char to an ascii number in js\n    // https://www.w3schools.com/jsref/jsref_charCodeAt.asp\n\
    \    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt\n\
    \    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        let char\
    \ = s.charCodeAt(i);\n        if (char > 64 && char < 91) {\n            sum +=\
    \ char;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if (s === '') {\n\
    \        return 0;\n    }\n    let arr = s.split('');\n    let sum = 0;\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] === arr[i].toUpperCase())\
    \ {\n            sum += arr[i].charCodeAt(0);\n        }\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1e285o3s.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1e285o3s.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').reduce((a,c)=>{\n\
    \        if(c.charCodeAt(0) >= 65 && c.charCodeAt(0) <= 90){\n            return\
    \ a + c.charCodeAt(0);\n        }else{\n            return a;\n        }\n   \
    \ },0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >='A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n \
    \     sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp9js2c_qc.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9js2c_qc.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ s.split('').map(item => item.charCodeAt() > 64 && item.charCodeAt() < 91 ? sum\
    \ += item.charCodeAt() : false);\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var result = 0;\n\
    \    for(var i = 0; i < s.length; i++){\n        if(s[i] >= \"A\" && s[i] <= \"\
    Z\"){\n            result += s.charCodeAt(i);\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n   if(s==\"\"){\n    \
    \  return 0;\n   }\n   let m=s.toUpperCase();\n   let sum=0;\n   for(let i=0;i<m.length;i++){\n\
    \      sum+=m.charCodeAt(i);\n   }\n   return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpbh5krwwg.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbh5krwwg.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let x;\n    for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            x = s.charCodeAt(i);\n            sum += x;\n        }\n    }\n \
    \   return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpy8w9ghzu.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy8w9ghzu.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // if(!s.length) return\
    \ 0;\n    // const res = s.split('').reduce((acc, num) => {\n    //     if(!Number(num)\
    \ && !num.match(/[a-z]/i)) acc += num.charCodeAt(0);\n    //     return acc;\n\
    \    // }, 0);\n    // return res;\n    if(!s.length) return 0;\n    let res =\
    \ 0;\n    for(let i = 0; i < s.length; i++){\n        if(!Number(s[i]) && !s[i].match(/[a-z]/i)){\n\
    \            res += s[i].charCodeAt(0);\n        }\n    }\n    return res;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp4w_haqkf.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4w_haqkf.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var total = 0;\n \
    \   for(var i = 0; i < s.length; i++){\n        if(isUpper(s[i])){\n         \
    \   total += s.charCodeAt(i);\n        }\n    }\n    return total;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjv621ts3.js:20\n        if(isUpper(s[i])){\n        ^\n\nReferenceError:\
    \ isUpper is not defined\n    at digitSum (/tmp/tmpjv621ts3.js:20:9)\n    at test\
    \ (/tmp/tmpjv621ts3.js:33:20)\n    at Object.<anonymous> (/tmp/tmpjv621ts3.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpff5dzk1d.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpff5dzk1d.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum=0;\n    for(var\
    \ i=0;i<s.length;i++){\n        if(s[i]>=\"A\" && s[i]<=\"Z\"){\n            sum+=s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ if(s.length > 0){\n        var array = s.split(\"\");\n        for(var i = 0;\
    \ i < array.length; i++){\n            if(array[i] === array[i].toUpperCase()){\n\
    \                sum += array[i].charCodeAt(0);\n            }\n        }\n  \
    \  }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1p8k73v3.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1p8k73v3.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let char of s){\n        if(char.charCodeAt() >= 65 && char.charCodeAt()\
    \ <= 90){\n            sum += char.charCodeAt();\n        }\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n   var sum=0;\n    for(var\
    \ i=0;i<s.length;i++){\n        if(s[i]==s[i].toUpperCase()){\n            sum+=s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmptjvge31g.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptjvge31g.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return sumUpper(s.split(''))\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcm4ybyqt.js:18\n    return sumUpper(s.split(''))\n    ^\n\nReferenceError:\
    \ sumUpper is not defined\n    at digitSum (/tmp/tmpcm4ybyqt.js:18:5)\n    at\
    \ test (/tmp/tmpcm4ybyqt.js:25:20)\n    at Object.<anonymous> (/tmp/tmpcm4ybyqt.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpoveytxld.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoveytxld.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ var reg = /[A-Z]/;\n    for(var i = 0; i < s.length; i++){\n        if(reg.test(s[i]))\n\
    \            sum += s.charCodeAt(i);\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let arr = s.split('')\n\
    \    let sum = 0\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ == arr[i].toUpperCase()){\n            sum += arr[i].charCodeAt(0)\n       \
    \ }\n    }\n    return sum\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp4nlihnq2.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4nlihnq2.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let uppercaseArr =\
    \ [];\n    let asciiArr = [];\n    for(let i = 0; i < s.length; i++){\n      \
    \  if(s[i] === s[i].toUpperCase()){\n            uppercaseArr.push(s[i]);\n  \
    \      }\n    }\n    for(let j = 0; j < uppercaseArr.length; j++){\n        asciiArr.push(uppercaseArr[j].charCodeAt(0));\n\
    \    }\n    console.log(asciiArr);\n    let sum = 0;\n    for(let k = 0; k < asciiArr.length;\
    \ k++){\n        sum += asciiArr[k];\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp_j82tfqr.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_j82tfqr.js:51:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[]

    [ 65, 66 ]

    [ 67 ]

    [ 69 ]

    [ 65, 66 ]

    [ 65, 88 ]

    [ 32, 72, 32, 32, 79, 63 ]

    '
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        var ch = s.charCodeAt(i);\n    \
    \    if(ch >= 65 && ch <= 90){\n            sum += ch;\n        }\n    }\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum=0;\n    for(var\
    \ i=0;i<s.length;i++){\n        var code=s.charCodeAt(i);\n        if(code<=90\
    \ && code>=65){\n            sum+=code;\n        }\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpoveytxld.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoveytxld.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (var i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n \
    \     sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpw95qrvun.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw95qrvun.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if(s === ''){\n    return\
    \ 0;\n  } else {\n    var sum = 0;\n    var sArray = s.split('');\n    for(var\
    \ i = 0; i < sArray.length; i++){\n      if(sArray[i] === sArray[i].toUpperCase()){\n\
    \        sum += sArray[i].charCodeAt(0);\n      }\n    }\n    return sum;\n  }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpce7v3wx8.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpce7v3wx8.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return [...s].reduce((sum,\
    \ v) => sum + (v === v.toUpperCase() ? v.charCodeAt(0) : 0), 0);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpanyt8oxh.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpanyt8oxh.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var total = 0;\n  for(var\
    \ i = 0; i < s.length; i++){\n    if(s[i] === s[i].toUpperCase()){\n      total\
    \ += s.charCodeAt(i);\n    }\n  }\n  return total;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmppohg6ckh.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppohg6ckh.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if( s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let temp = 0;\n  \
    \  for(let i = 0; i < s.length; i++){\n        if(s[i] >= \"A\" && s[i] <= \"\
    Z\"){\n            temp += s.charCodeAt(i);\n        }\n    }\n    return temp;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var sum = 0;\n  var\
    \ ascii = 0;\n  for(var i = 0; i < s.length; i++){\n    ascii = s.charCodeAt(i);\n\
    \    if(ascii >= 65 && ascii <= 90){\n      sum += ascii;\n    }\n  }\n  return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  var nums = '';\n  for\
    \ (var i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n \
    \     nums += s.charCodeAt(i);\n    }\n  }\n  var sum = 0;\n  for (var i = 0;\
    \ i < nums.length; i++) {\n    sum += parseInt(nums[i]);\n  }\n  return sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n23\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmprh83_edm.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprh83_edm.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 23,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let res = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            res += s.charCodeAt(i);\n        }\n    }\n    return res;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp5a147b54.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5a147b54.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let result = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    result += s.charCodeAt(i);\n    }\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n \
    \           sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp4kdckoyx.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4kdckoyx.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').filter(x\
    \ => x === x.toUpperCase()).reduce((a, b) => a + b.charCodeAt(0), 0);\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp_h0i83ri.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_h0i83ri.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let total = 0;\n  for\
    \ (let i = 0; i < s.length; i++){\n    let asciiCode = s.charCodeAt(i);\n    if\
    \ (asciiCode > 64 && asciiCode < 91){\n      total += asciiCode;\n    }\n  }\n\
    \  return total;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpej2ql5lw.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpej2ql5lw.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if (s === '') {\n\
    \        return 0;\n    }\n    let sum = 0;\n    for (let i = 0; i < s.length;\
    \ i++) {\n        if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpbmqd6cs1.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbmqd6cs1.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n      var code = s.charCodeAt(i);\n    \
    \  if(code >= 65 && code <= 90){\n        sum += code;\n      }\n    }\n    return\
    \ sum;\n  }\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n\tlet num = 0;\n\tlet sum = 0;\n\tfor(let i = 0; i < s.length; i++){\n\t\t\
    for(let j = 0; j < alphabet.length; j++){\n\t\t\tif(s[i] === alphabet[j]){\n\t\
    \t\t\tnum = j + 65;\n\t\t\t\tsum += num;\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i]>='A' && s[i]<='Z')\n   \
    \         sum+=s.charCodeAt(i);\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar a = 0;\n\tif(s.length\
    \ != 0){\n\t\tfor(var i = 0; i < s.length; i++){\n\t\t\tif(s[i] != s[i].toLowerCase()){\n\
    \t\t\t\ta += s.charCodeAt(i);\n\t\t\t}\n\t\t}\n\t}\n\treturn a;\n}\nvar a = digitSum(\"\
    woArBld\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ if(s == \"\" || s == null){\n        return 0;\n    }\n    for(let i = 0; i\
    \ < s.length; i++){\n        let charCode = s.charCodeAt(i);\n        if(charCode\
    \ >= 65 && charCode <= 90){\n            sum += charCode;\n        }\n    }\n\
    \    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        let ASCII = s.charCodeAt(i);\n \
    \       if(ASCII >= 65 && ASCII <= 90){\n            sum += ASCII;\n        }\n\
    \    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvivx92t7.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvivx92t7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tif(s==\"\"){\n\t\treturn\
    \ 0;\n\t}\n\tvar charA = 0;\n\tvar sum = 0;\n\tfor(var i = 0; i < s.length; i++){\n\
    \t\tcharA = s.charCodeAt(i);\n\t\tif(charA >= 65 && charA <= 90){\n\t\t\tsum =\
    \ sum + charA;\n\t\t}\n\t}\n\treturn sum;\n}\n\nvar string = \"abcCd\";\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    // return s.split('').reduce((acc,\
    \ next) => {\n    //     if (next.charCodeAt() >= 65 && next.charCodeAt() <= 90)\
    \ {\n    //         acc += next.charCodeAt()\n    //     }\n    //     return\
    \ acc\n    // }, 0)\n    return s.split('').reduce((acc, next) => next.charCodeAt()\
    \ >= 65 && next.charCodeAt() <= 90 ? acc + next.charCodeAt() : acc, 0)\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').reduce((result,char)=>{\n\
    \        return result + (char.charCodeAt(0) <= 90 && char.charCodeAt(0) >= 65\
    \ ? char.charCodeAt(0) : 0);\n    },0);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let sum = 0;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] == s[i].toUpperCase()) {\n  \
    \    sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1lp33v2n.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1lp33v2n.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tif(s===\"\"){\n\t\t\
    return 0;\n\t}\n\tvar sum = 0;\n\tfor(var i = 0; i < s.length; i++){\n\t\tif(s[i]\
    \ >= \"A\" && s[i] <= \"Z\"){\n\t\t\tsum += s.charCodeAt(i);\n\t\t}\n\t}\n\treturn\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ s.split('').forEach(char => {\n        if(char.charCodeAt(0) >= 65 && char.charCodeAt(0)\
    \ <= 90){\n            sum += char.charCodeAt(0);\n        }\n    });\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp4lp6vxmf.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4lp6vxmf.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    s = s.toUpperCase();\n\
    \    sum = 0;\n    for(i=0; i<s.length; i++){\n        if(isNaN(parseInt(s[i]))){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpwo4sl20z.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwo4sl20z.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(var i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvivx92t7.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvivx92t7.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let asciiSum = 0;\n\
    \  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i].toUpperCase())\
    \ {\n      asciiSum += s.charCodeAt(i);\n    }\n  }\n  return asciiSum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvx3kirpe.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvx3kirpe.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  let arr = s.split('')\n\
    \  let sum = 0\n  for(let i = 0; i < arr.length; i++){\n    if(arr[i] === arr[i].toUpperCase()){\n\
    \      sum += arr[i].charCodeAt(0)\n    }\n  }\n  return sum\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmptp8ihh09.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptp8ihh09.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let asc = 0;\n    let ascii = 0;\n    for(let i = 0; i < s.length; i++){\n \
    \       asc = s.charCodeAt(i);\n        ascii = s.charCodeAt(i) - 96;\n      \
    \  if(asc > 64 && asc < 91){\n            sum += ascii;\n        }\n    }\n  \
    \  return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-61\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpp5u0wgid.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp5u0wgid.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -61,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.replace(/[^A-Z]/g,'').split('').reduce((a,b)=>a+b.charCodeAt(0),0)\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tvar result = 0;\n\t\
    if(s.length>0){\n\t\tfor(var i=0;i<s.length;i++){\n\t\t\tif(s[i]>=\"A\" && s[i]<=\"\
    Z\"){\n\t\t\t\tresult+=s.charCodeAt(i);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const letters = [...s];\n\
    \  const lettersInASCII = letters.map(letter => letter.charCodeAt(0));\n  const\
    \ upperCaseLetters = lettersInASCII.filter(letterInASCII => letterInASCII > 64\
    \ && letterInASCII < 91);\n  return upperCaseLetters.reduce((acc, letter) => acc\
    \ + letter, 0);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ let regex = /[a-z]/gi;\n    let matches = s.match(regex);\n    let result =\
    \ matches.map(match => match.toUpperCase());\n    for(let i = 0; i < result.length;\
    \ i++){\n        sum += result[i].charCodeAt(0);\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp0877ixhb.js:21\n    let result = matches.map(match => match.toUpperCase());\n\
    \                         ^\n\nTypeError: Cannot read properties of null (reading\
    \ 'map')\n    at digitSum (/tmp/tmp0877ixhb.js:21:26)\n    at test (/tmp/tmp0877ixhb.js:33:20)\n\
    \    at Object.<anonymous> (/tmp/tmp0877ixhb.js:43:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    if(s.length==0){\n\
    \        return 0;\n    }\n    let sum=0;\n    for(let i=0;i<s.length;i++){\n\
    \        let code = s.charCodeAt(i);\n        if(code>=65 && code<=90){\n    \
    \        sum+=code;\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i);\n    }\n\
    \    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp03rvzbfg.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp03rvzbfg.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    const array = s.split('');\n\
    \    let upperSum = 0;\n    for(let i = 0; i < array.length; i++){\n        if(array[i]\
    \ === array[i].toUpperCase()){\n            upperSum += array[i].charCodeAt(0);\n\
    \        }\n    }\n    return upperSum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp4d2xsnle.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4d2xsnle.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\nlet sum = 0;\nfor(let\
    \ i = 0; i < s.length; i++){\nlet charCode = s.charCodeAt(i);\nif(charCode >=\
    \ 65 && charCode <= 90){\nsum += charCode;\n}\n}\nreturn sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.replace(/[^A-Z]/g,\
    \ '').split('').reduce((a, b) => {\n        return a + b.charCodeAt();\n    },\
    \ 0);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  if(s === ''){\n    return\
    \ 0;\n  }else{\n    var numArray = s.split('');\n    var sum = 0;\n    for(var\
    \ i = 0; i < numArray.length; i++){\n      if(numArray[i] === numArray[i].toUpperCase()){\n\
    \        sum += numArray[i].charCodeAt(0);\n      }\n    }\n    return sum;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpy9b26eqh.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9b26eqh.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let t=[];\n    if(s==''){\n\
    \        return 0;\n    }\n    let x=s.split('');\n    for(let i=0;i<x.length;i++){\n\
    \        if(x[i]==x[i].toUpperCase()){\n            t.push(x[i].charCodeAt());\n\
    \        }\n    }\n    let sum=0;\n    for(let i=0;i<t.length;i++){\n        sum+=t[i];\n\
    \    }\n    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpffxydpdd.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpffxydpdd.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpkp0a1sec.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkp0a1sec.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ var arr = s.split('');\n    for(var i = 0; i < arr.length; i++){\n        var\
    \ charCode = arr[i].charCodeAt(0);\n        if(charCode >= 65 && charCode <= 90){\n\
    \            sum += charCode;\n        }\n    }\n    return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let uppercase = 0\n\
    \    for(let i = 0; i < s.length; i++){\n        if(s[i] === s[i].toUpperCase()){\n\
    \            uppercase += s.charCodeAt(i)\n        }\n    }\n    return uppercase\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp06bekn8i.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp06bekn8i.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n   let sum = 0;\n   for(let\
    \ i = 0; i < s.length; i++){\n       let ascii = s.charCodeAt(i);\n       if(ascii\
    \ >= 65 && ascii <= 90){\n           sum += ascii;\n       }\n   }\n   return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\nvar sum=0;\nfor(i=0;i<s.length;i++){\n\
    \  if(s[i]>='A' && s[i]<='Z'){\n  sum=sum+s.charCodeAt(i);\n  }\n}\nreturn sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var total = 0;\n \
    \   for(var i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            total += s.charCodeAt(i);\n        }\n    }\n    return total;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let ch of s){\n        let chCode = ch.charCodeAt(0);\n        if(chCode\
    \ >= 65 && chCode <= 90){\n            sum += chCode;\n        }\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    var sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp_cy4pbbn.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_cy4pbbn.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  return s.split('').reduce((a,b)=>a+b.charCodeAt(0)%32,0)\n\
    }\n\nmodule.exports = {\n  digitSum\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpyx7hk5zj.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyx7hk5zj.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        sum += s.charCodeAt(i);\n    }\n\
    \    return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpta0dnxvl.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpta0dnxvl.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    module.exports = digitSum;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\treturn [...s].reduce((a,v)=>a+(v.charCodeAt()>90?0:v.charCodeAt()),0)\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpvw0trien.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvw0trien.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    return s.split('').reduce((x,\
    \ y) => {\n        return x + (y.charCodeAt(0) - 64) * ((y.charCodeAt(0) >= 65\
    \ && y.charCodeAt(0) <= 90) ? 1 : 0);\n    }, 0);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpd5lfcop5.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd5lfcop5.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let sum = 0;\n   \
    \ for(let i = 0; i < s.length; i++){\n        if(s[i] == s[i].toUpperCase()){\n\
    \            sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpkp0a1sec.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkp0a1sec.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010647
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n    let value = 0;\n \
    \   for(let i = 0; i < s.length; i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            value += s.charCodeAt(i);\n        }\n    }\n    return value;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  //Use a loop to iterate\
    \ through the string. \n  //Convert each char into it's ascii equivalent number.\n\
    \  //Use a conditional statement to check for 'uppercase' letters, and add them\
    \ to the sum.\n  //Return the sum at the end of the loop.\n  let sum = 0;\n  for(let\
    \ i = 0; i < s.length; i++){\n    let ascii = s.charCodeAt(i);\n    if(ascii >=\
    \ 65 && ascii <= 90){\n      sum += ascii;\n    }\n  }\n  return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n  const newArray = s.split('');\n\
    \  let total = 0;\n  for (let i = 0; i < newArray.length; i++){\n    if (newArray[i]\
    \ === newArray[i].toUpperCase()){\n      total += newArray[i].charCodeAt(0);\n\
    \    }\n  }\n  return total;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpzg2zwzil.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzg2zwzil.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s){\n\tlet sum = 0;\n\tfor(let\
    \ i = 0; i < s.length; i++){\n\t\tif(s[i] === s[i].toUpperCase()){\n\t\t\tsum\
    \ += s.charCodeAt(i);\n\t\t}\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp3fe3etx5.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3fe3etx5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660010648

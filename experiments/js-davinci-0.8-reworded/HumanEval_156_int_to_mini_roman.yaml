name: HumanEval_156_int_to_mini_roman
language: js
prompt: "//Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  // >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n// \"clii\"\
  \n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = int_to_mini_roman;\n  assert.deepEqual(candidate(19),\"xix\");\n  assert.deepEqual(candidate(152),\"\
  clii\");\n  assert.deepEqual(candidate(251),\"ccli\");\n  assert.deepEqual(candidate(426),\"\
  cdxxvi\");\n  assert.deepEqual(candidate(500),\"d\");\n  assert.deepEqual(candidate(1),\"\
  i\");\n  assert.deepEqual(candidate(4),\"iv\");\n  assert.deepEqual(candidate(43),\"\
  xliii\");\n  assert.deepEqual(candidate(90),\"xc\");\n  assert.deepEqual(candidate(94),\"\
  xciv\");\n  assert.deepEqual(candidate(532),\"dxxxii\");\n  assert.deepEqual(candidate(900),\"\
  cm\");\n  assert.deepEqual(candidate(994),\"cmxciv\");\n  assert.deepEqual(candidate(1000),\"\
  m\");\n}\n\ntest();"
completions: ["    var roman = \"\";\n    var m = Math.floor(number/1000);\n    roman\
    \ = repeat(\"m\", m);\n    number = number - (m*1000);\n    var d = Math.floor(number/500);\n\
    \    roman = roman + repeat(\"d\", d);\n    number = number - (d*500);\n    var\
    \ c = Math.floor(number/100);\n    roman = roman + repeat(\"c\", c);\n    number\
    \ = number - (c*100);\n    var l = Math.floor(number/50);\n    roman = roman +\
    \ repeat(\"l\", l);\n    number = number - (l*50);\n    var x = Math.floor(number/10);\n\
    \    roman = roman + repeat(\"x\", x);\n    number = number - (x*10);\n    var\
    \ v = Math.floor(number/5);\n    roman = roman + repeat(\"v\", v);\n    number\
    \ = number - (v*5);\n    var i = Math.floor(number/1);\n    roman = roman + repeat(\"\
    i\", i);\n    number = number - (i*1);\n    return roman;\n}\n", "    // Set up\
    \ the roman numberal conversion dictionary\n    var roman_conversion = {\n   \
    \     1000: \"m\",\n        900: \"cm\",\n        500: \"d\",\n        400: \"\
    cd\",\n        100: \"c\",\n        90: \"xc\",\n        50: \"l\",\n        40:\
    \ \"xl\",\n        10: \"x\",\n        9: \"ix\",\n        5: \"v\",\n       \
    \ 4: \"iv\",\n        1: \"i\"\n    };\n    // Set up the output string\n    var\
    \ output = \"\";\n    // Find the biggest key in the dictionary that is less than\
    \ the input number\n    // and subtract it from the input number.\n    // Repeat\
    \ until the input number is 0.\n    while (number > 0){\n        var key_list\
    \ = Object.keys(roman_conversion).map(Number);\n        key_list.sort(function(a,\
    \ b){return b-a});\n        for (var i = 0; i < key_list.length; i++){\n     \
    \       if (key_list[i] <= number){\n                output += roman_conversion[key_list[i]];\n\
    \                number -= key_list[i];\n                break;\n            }\n\
    \        }\n    }\n    return output;\n}\n", "  let mini_roman_numerals = {\n\
    \    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500:\
    \ 'd',\n    1000: 'm'\n  };\n  let result = '';\n  let remainder = number;\n \
    \ let count;\n  while (remainder > 0) {\n    if (remainder < 4) {\n      result\
    \ += mini_roman_numerals[1].repeat(remainder);\n      remainder = 0;\n    } else\
    \ if (remainder < 9) {\n      result += mini_roman_numerals[5];\n      result\
    \ += mini_roman_numerals[1].repeat(remainder - 5);\n      remainder = 0;\n   \
    \ } else if (remainder < 40) {\n      count = Math.floor(remainder / 10);\n  \
    \    result += mini_roman_numerals[10].repeat(count);\n      remainder = remainder\
    \ % 10;\n    } else if (remainder < 90) {\n      result += mini_roman_numerals[50];\n\
    \      result += mini_roman_numerals[10].repeat(remainder - 50);\n      remainder\
    \ = 0;\n    } else if (remainder < 400) {\n      count = Math.floor(remainder\
    \ / 100);\n      result += mini_roman_numerals[100].repeat(count);\n      remainder\
    \ = remainder % 100;\n    } else if (remainder < 900) {\n      result += mini_roman_numerals[500];\n\
    \      result += mini_roman_numerals[100].repeat(remainder - 500);\n      remainder\
    \ = 0;\n    } else {\n      count = Math.floor(remainder / 1000);\n      result\
    \ += mini_roman_numerals[1000].repeat(count);\n      remainder = remainder % 1000;\n\
    \    }\n  }\n  return result;\n}\n", "    let result = \"\";\n    let miniRomans\
    \ = {\n        1: \"i\",\n        2: \"ii\",\n        3: \"iii\",\n        4:\
    \ \"iv\",\n        5: \"v\",\n        6: \"vi\",\n        7: \"vii\",\n      \
    \  8: \"viii\",\n        9: \"ix\",\n        10: \"x\",\n        20: \"xx\",\n\
    \        30: \"xxx\",\n        40: \"xl\",\n        50: \"l\",\n        60: \"\
    lx\",\n        70: \"lxx\",\n        80: \"lxxx\",\n        90: \"xc\",\n    \
    \    100: \"c\",\n        200: \"cc\",\n        300: \"ccc\",\n        400: \"\
    cd\",\n        500: \"d\",\n        600: \"dc\",\n        700: \"dcc\",\n    \
    \    800: \"dccc\",\n        900: \"cm\",\n        1000: \"m\"\n    };\n    //hundreds\n\
    \    if(number >= 1000){\n        for(let i = 0; i < number / 1000; i++){\n  \
    \          result += miniRomans[1000];\n        }\n        number %= 1000;\n \
    \   }\n    //hundreds\n    if(number >= 100){\n        for(let i = 0; i < number\
    \ / 100; i++){\n            result += miniRomans[100];\n        }\n        number\
    \ %= 100;\n    }\n    //tens\n    if(number >= 10){\n        for(let i = 0; i\
    \ < number / 10; i++){\n            result += miniRomans[10];\n        }\n   \
    \     number %= 10;\n    }\n    //ones\n    if(number > 0){\n        for(let i\
    \ = 0; i < number; i++){\n            result += miniRomans[1];\n        }\n  \
    \  }\n    return result;\n}", "    var dict = {\n        \"1\":\"i\",\n      \
    \  \"5\":\"v\",\n        \"10\":\"x\",\n        \"50\":\"l\",\n        \"100\"\
    :\"c\",\n        \"500\":\"d\",\n        \"1000\":\"m\"\n    };\n    if(number\
    \ < 4){\n        return dict[\"1\"].repeat(number);\n    }\n    if(number < 5){\n\
    \        return dict[\"1\"] + dict[\"5\"];\n    }\n    if(number < 9){\n     \
    \   return dict[\"5\"] + dict[\"1\"].repeat(number - 5);\n    }\n    if(number\
    \ < 10){\n        return dict[\"1\"] + dict[\"10\"];\n    }\n    if(number < 40){\n\
    \        return dict[\"10\"].repeat(Math.floor(number / 10)) + dict[\"1\"].repeat(number\
    \ % 10);\n    }\n    if(number < 50){\n        return dict[\"10\"] + dict[\"50\"\
    ] + dict[\"1\"].repeat(number - 40);\n    }\n    if(number < 90){\n        return\
    \ dict[\"50\"] + dict[\"10\"].repeat(Math.floor((number - 50) / 10)) + dict[\"\
    1\"].repeat(number % 10);\n    }\n    if(number < 100){\n        return dict[\"\
    10\"] + dict[\"100\"] + dict[\"1\"].repeat(number - 90);\n    }\n    if(number\
    \ < 400){\n        return dict[\"100\"].repeat(Math.floor(number / 100)) + dict[\"\
    10\"].repeat(Math.floor((number % 100) / 10)) + dict[\"1\"].repeat(number % 10);\n\
    \    }\n    if(number < 500){\n        return dict[\"100\"] + dict[\"500\"] +\
    \ dict[\"10\"].repeat(Math.floor((number - 400) / 10)) + dict[\"1\"].repeat(number\
    \ % 10);\n    }\n    if(number < 900){\n        return dict[\"500\"] + dict[\"\
    100\"].repeat(Math.floor((number - 500) / 100)) + dict[\"10\"].repeat(Math.floor((number\
    \ % 100) / 10)) + dict[\"1\"].repeat(number % 10);\n    }\n    if(number < 1000){\n\
    \        return", "    let keys = [1000, 500, 100, 50, 10, 5, 1];\n    let values\
    \ = [\"m\", \"d\", \"c\", \"l\", \"x\", \"v\", \"i\"];\n    let numeral = \"\"\
    ;\n    for (let i = 0; i < keys.length; i++) {\n        if (number >= keys[i])\
    \ {\n            numeral += values[i];\n            number -= keys[i];\n     \
    \   }\n    }\n    return numeral;\n}", "    // First we define the conversion\
    \ rules in an array\n    var numeral_value = [ 1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1 ];\n    var numeral_symbol = [ 'm', 'cm', 'd', 'cd', 'c',\
    \ 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i' ];\n    // Then we check if the number\
    \ is valid, if not, return false\n    if (number > 1000 || number < 1) {\n   \
    \     return false;\n    }\n    // We convert the number to a string\n    var\
    \ roman_string = '';\n    // We start a loop going through the number of conversions\
    \ needed to obtain the roman number\n    for (var i = 0; i < numeral_value.length;\
    \ i++) {\n        // We check if the current value of the number is bigger than\
    \ the numeral_value\n        while (number >= numeral_value[i]) {\n          \
    \  // If so, we add the current numeral_symbol to the roman_string\n         \
    \   roman_string += numeral_symbol[i];\n            // And we subtract the current\
    \ numeral_value from the number\n            number -= numeral_value[i];\n   \
    \     }\n    }\n    // Finally, we return the roman_string in lowercase\n    return\
    \ roman_string.toLowerCase();\n}", "    let roman = \"\"\n    let ones = number\
    \ % 10\n    if (ones === 1) {\n        roman += \"i\"\n    }\n    if (ones ===\
    \ 2) {\n        roman += \"ii\"\n    }\n    if (ones === 3) {\n        roman +=\
    \ \"iii\"\n    }\n    if (ones === 4) {\n        roman += \"iv\"\n    }\n    if\
    \ (ones === 5) {\n        roman += \"v\"\n    }\n    if (ones === 6) {\n     \
    \   roman += \"vi\"\n    }\n    if (ones === 7) {\n        roman += \"vii\"\n\
    \    }\n    if (ones === 8) {\n        roman += \"viii\"\n    }\n    if (ones\
    \ === 9) {\n        roman += \"ix\"\n    }\n    let tens = number % 100\n    if\
    \ (tens === 10) {\n        roman += \"x\"\n    }\n    if (tens === 20) {\n   \
    \     roman += \"xx\"\n    }\n    if (tens === 30) {\n        roman += \"xxx\"\
    \n    }\n    if (tens === 40) {\n        roman += \"xl\"\n    }\n    if (tens\
    \ === 50) {\n        roman += \"l\"\n    }\n    if (tens === 60) {\n        roman\
    \ += \"lx\"\n    }\n    if (tens === 70) {\n        roman += \"lxx\"\n    }\n\
    \    if (tens === 80) {\n        roman += \"lxxx\"\n    }\n    if (tens === 90)\
    \ {\n        roman += \"xc\"\n    }\n    let hundreds = number % 1000\n    if\
    \ (hundreds === 100) {\n        roman += \"c\"\n    }\n    if (hundreds === 200)\
    \ {\n        roman += \"cc\"\n    }\n    if (hundreds === 300) {\n        roman\
    \ += \"ccc\"\n    }\n    if (hundreds === 400) {\n        roman += \"cd\"\n  \
    \  }\n    if (hundreds === 500) {\n        roman += \"d\"\n    }", "\tresult=''\n\
    \tone_dictionary={1:'i',2:'ii',3:'iii',4:'iv',5:'v',6:'vi',7:'vii',8:'viii',9:'ix'}\n\
    \tten_dictionary={1:'x',2:'xx',3:'xxx',4:'xl',5:'l',6:'lx',7:'lxx',8:'lxxx',9:'xc'}\n\
    \thundred_dictionary={1:'c',2:'cc',3:'ccc',4:'cd',5:'d',6:'dc',7:'dcc',8:'dccc',9:'cm'}\n\
    \tthousand_dictionary={1:'m',2:'mm',3:'mmm',4:'mv',5:'v',6:'vm',7:'vmm',8:'vmmm',9:'mx'}\n\
    \tthousand=parseInt(number/1000)\n\thundred=parseInt((number%1000)/100)\n\tten=parseInt((number%100)/10)\n\
    \tone=parseInt(number%10)\n\tresult+=thousand_dictionary[thousand]\n\tresult+=hundred_dictionary[hundred]\n\
    \tresult+=ten_dictionary[ten]\n\tresult+=one_dictionary[one]\n\treturn result\n\
    }\n", "  var number_array = number.toString().split(\"\");\n  var lower_array\
    \ = number_array.map(x => x.toLowerCase());\n  var digit_array = lower_array.map(x\
    \ => parseInt(x));\n  var front_array = digit_array.slice(0, -1);\n  var back_array\
    \ = digit_array.slice(-1);\n  var keys = [\"\", \"i\", \"ii\", \"iii\", \"iv\"\
    , \"v\", \"vi\", \"vii\", \"viii\", \"ix\"];\n  var keys2 = [\"\", \"x\", \"xx\"\
    , \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"];\n  var keys3 = [\"\
    \", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\"];\n\
    \  var keys4 = [\"\", \"m\", \"mm\", \"mmm\"];\n  var output = \"\";\n  var output2\
    \ = \"\";\n  var output3 = \"\";\n  var output4 = \"\";\n  if (number_array.length\
    \ === 4){\n    output = keys4[front_array[0]];\n    output2 = keys3[front_array[1]];\n\
    \    output3 = keys2[front_array[2]];\n    output4 = keys[back_array[0]];\n  \
    \  return output + output2 + output3 + output4;\n  }\n  else if (number_array.length\
    \ === 3){\n    output = keys3[front_array[0]];\n    output2 = keys2[front_array[1]];\n\
    \    output3 = keys[back_array[0]];\n    return output + output2 + output3;\n\
    \  }\n  else if (number_array.length === 2){\n    output = keys2[front_array[0]];\n\
    \    output2 = keys[back_array[0]];\n    return output + output2;\n  }\n  else\
    \ {\n    output = keys[back_array[0]];\n    return output;\n  }\n}\n", "    var\
    \ romans = ['i', 'v', 'x', 'l', 'c', 'd', 'm'];\n    var result = '';\n    for\
    \ (var i = 0; i < 3; i++) {\n        var digit = Math.floor(number % 10);\n  \
    \      var roman = romans[i*2];\n        var nextRoman = romans[i*2+1];\n    \
    \    var nextNextRoman = romans[i*2+2];\n        if (digit == 0) {\n         \
    \   continue;\n        } else if (digit <= 3) {\n            result = roman.repeat(digit)\
    \ + result;\n        } else if (digit == 4) {\n            result = roman + nextRoman\
    \ + result;\n        } else if (digit <= 8) {\n            result = nextRoman\
    \ + roman.repeat(digit-5) + result;\n        } else {\n            result = roman\
    \ + nextNextRoman + result;\n        }\n        number = Math.floor(number / 10);\n\
    \    }\n    return result;\n}\n", "  // TODO: Insert your code here!\n  var result\
    \ = \"\";\n  var romans = [\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"];\n\
    \  if (number >= 1000) {\n    var len_m = Math.floor(number / 1000);\n    for\
    \ (var i = 0; i < len_m; i++) {\n      result += \"m\";\n    }\n    number = number\
    \ % 1000;\n  }\n  if (number >= 100) {\n    var len_c = Math.floor(number / 100);\n\
    \    if (len_c >= 5) {\n      result += \"d\";\n      len_c -= 5;\n    }\n   \
    \ if (len_c == 4) {\n      result += \"cd\";\n    } else {\n      for (var i =\
    \ 0; i < len_c; i++) {\n        result += \"c\";\n      }\n    }\n    number =\
    \ number % 100;\n  }\n  if (number >= 10) {\n    var len_x = Math.floor(number\
    \ / 10);\n    if (len_x >= 5) {\n      result += \"l\";\n      len_x -= 5;\n \
    \   }\n    if (len_x == 4) {\n      result += \"xl\";\n    } else {\n      for\
    \ (var i = 0; i < len_x; i++) {\n        result += \"x\";\n      }\n    }\n  \
    \  number = number % 10;\n  }\n  if (number >= 1) {\n    var len_i = Math.floor(number\
    \ / 1);\n    if (len_i >= 5) {\n      result += \"v\";\n      len_i -= 5;\n  \
    \  }\n    if (len_i == 4) {\n      result += \"iv\";\n    } else {\n      for\
    \ (var i = 0; i < len_i; i++) {\n        result += \"i\";\n      }\n    }\n  }\n\
    \  return result;\n}\n", "  var roman = {\n    \"M\": 1000,\n    \"CM\": 900,\n\
    \    \"D\": 500,\n    \"CD\": 400,\n    \"C\": 100,\n    \"XC\": 90,\n    \"L\"\
    : 50,\n    \"XL\": 40,\n    \"X\": 10,\n    \"IX\": 9,\n    \"V\": 5,\n    \"\
    IV\": 4,\n    \"I\": 1\n  };\n  var output = \"\";\n  while (number > 0) {\n \
    \   for (var key in roman) {\n      if (number >= roman[key]) {\n        output\
    \ += key;\n        number -= roman[key];\n        break;\n      }\n    }\n  }\n\
    \  return output;\n}", "\tvar romans = {1:\"i\", 5:\"v\", 10:\"x\", 50:\"l\",\
    \ 100:\"c\", 500:\"d\", 1000:\"m\"};\n\tvar n1 = [];\n\tvar numeral = \"\";\n\t\
    while(number>0){\n\t\t//if number is greater than 1000, divide number by 1000\
    \ and push quotient to array,\n\t\t//then set number equal to remainder of number\
    \ divided by 1000.\n\t\tif(number>=1000){\n\t\t\tn1.push(Math.floor(number/1000));\n\
    \t\t\tnumber = number%1000;\n\t\t}\n\t\t//if number is greater than 500, divide\
    \ number by 500 and push quotient to array,\n\t\t//then set number equal to remainder\
    \ of number divided by 500.\n\t\telse if(number>=500){\n\t\t\tn1.push(Math.floor(number/500));\n\
    \t\t\tnumber = number%500;\n\t\t}\n\t\t//if number is greater than 100, divide\
    \ number by 100 and push quotient to array,\n\t\t//then set number equal to remainder\
    \ of number divided by 100.\n\t\telse if(number>=100){\n\t\t\tn1.push(Math.floor(number/100));\n\
    \t\t\tnumber = number%100;\n\t\t}\n\t\t//if number is greater than 50, divide\
    \ number by 50 and push quotient to array,\n\t\t//then set number equal to remainder\
    \ of number divided by 50.\n\t\telse if(number>=50){\n\t\t\tn1.push(Math.floor(number/50));\n\
    \t\t\tnumber = number%50;\n\t\t}\n\t\t//if number is greater than 10, divide number\
    \ by 10 and push quotient to array,\n\t\t//then set number equal to remainder\
    \ of number divided by 10.\n\t\telse if(number>=10){\n\t\t\tn1.push(Math.floor(number/10));\n\
    \t\t\tnumber = number%10;\n\t\t}\n\t\t//if number is greater than 5, divide number\
    \ by 5 and push quotient to array,\n\t\t//then set number equal to remainder of\
    \ number divided by 5.\n\t\telse if(number>=5){\n\t\t\tn", "    if (number >=\
    \ 4000) {\n        throw \"Number out of range, must be less than 4000\";\n  \
    \  }\n\n    let romanNumbers = [\n        ['M', 1000],\n        ['D', 500],\n\
    \        ['C', 100],\n        ['L', 50],\n        ['X', 10],\n        ['V', 5],\n\
    \        ['I', 1]\n    ];\n\n    let roman = \"\";\n    let remaining = number;\n\
    \n    for (let i = 0; i < romanNumbers.length; i++) {\n        let currentNumeral\
    \ = romanNumbers[i][0];\n        let currentNumeralValue = romanNumbers[i][1];\n\
    \n        let count = Math.floor(remaining / currentNumeralValue);\n        remaining\
    \ = remaining % currentNumeralValue;\n\n        let nextNumeral = romanNumbers[i\
    \ + 1][0];\n        let nextNumeralValue = romanNumbers[i + 1][1];\n\n       \
    \ if (count === 4) {\n            roman += currentNumeral + nextNumeral;\n   \
    \     } else {\n            roman += currentNumeral.repeat(count);\n        }\n\
    \    }\n\n    return roman;\n}", "\tvar result = '';\n\tvar romanNumbers = [\n\
    \t\t{base: 1000, numeral: 'm'},\n\t\t{base: 900, numeral: 'cm'},\n\t\t{base: 500,\
    \ numeral: 'd'},\n\t\t{base: 400, numeral: 'cd'},\n\t\t{base: 100, numeral: 'c'},\n\
    \t\t{base: 90, numeral: 'xc'},\n\t\t{base: 50, numeral: 'l'},\n\t\t{base: 40,\
    \ numeral: 'xl'},\n\t\t{base: 10, numeral: 'x'},\n\t\t{base: 9, numeral: 'ix'},\n\
    \t\t{base: 5, numeral: 'v'},\n\t\t{base: 4, numeral: 'iv'},\n\t\t{base: 1, numeral:\
    \ 'i'}\n\t];\n\tfor (var i = 0; i < romanNumbers.length; i++) {\n\t\tvar romanNumber\
    \ = romanNumbers[i];\n\t\tif (number >= romanNumber.base) {\n\t\t\tresult += romanNumber.numeral;\n\
    \t\t\tnumber -= romanNumber.base;\n\t\t\ti--;\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "    let str = '',\n        char = ['i', 'v', 'x', 'l', 'c', 'd', 'm'],\n\
    \        romans = [\n            [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9,\
    \ 5, 4, 1],\n            ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix',\
    \ 'v', 'iv', 'i']\n        ];\n    for (let i = 0; i < 13; i++) {\n        while\
    \ (number >= romans[0][i]) {\n            str += romans[1][i];\n            number\
    \ -= romans[0][i];\n        }\n    }\n    return str;\n}", "    var num = number;\n\
    \    var roman = [];\n    if(num < 1){\n        return \"Error\";\n    }else if(num\
    \ > 1000){\n        return \"Error\";\n    }else{\n        while(num > 0){\n \
    \           while(num >= 1000){\n                roman.push(\"m\");\n        \
    \        num -= 1000;\n            }\n            while(num >= 900){\n       \
    \         roman.push(\"cm\");\n                num -= 900;\n            }\n  \
    \          while(num >= 500){\n                roman.push(\"d\");\n          \
    \      num -= 500;\n            }\n            while(num >= 400){\n          \
    \      roman.push(\"cd\");\n                num -= 400;\n            }\n     \
    \       while(num >= 100){\n                roman.push(\"c\");\n             \
    \   num -= 100;\n            }\n            while(num >= 90){\n              \
    \  roman.push(\"xc\");\n                num -= 90;\n            }\n          \
    \  while(num >= 50){\n                roman.push(\"l\");\n                num\
    \ -= 50;\n            }\n            while(num >= 40){\n                roman.push(\"\
    xl\");\n                num -= 40;\n            }\n            while(num >= 10){\n\
    \                roman.push(\"x\");\n                num -= 10;\n            }\n\
    \            while(num >= 9){\n                roman.push(\"ix\");\n         \
    \       num -= 9;\n            }\n            while(num >= 5){\n             \
    \   roman.push(\"v\");\n                num -= 5;\n            }\n           \
    \ while(num >= 4){\n                roman.push(\"iv\");\n                num -=\
    \ 4;\n            }\n            while(num >= 1){\n                roman.push(\"\
    i\");\n                num -= 1;\n            }\n        }\n    }\n    return\
    \ roman.join(\"\").toLowerCase();\n}\n", "  var roman = \"\";\n  var romanNumerals\
    \ = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1};\n\
    \  var a;\n  if(number < 1 || number > 1000){return false;}\n  else {\n    for\
    \ (a in romanNumerals){\n      while (number >= romanNumerals[a]){\n        roman\
    \ += a;\n        number -= romanNumerals[a];\n      }\n    }\n  }\n  return roman;\n\
    }\n", "    // this is my solution (better than your intToRoman)\n    const roman\
    \ = ['m', 'd', 'c', 'l', 'x', 'v', 'i'];\n    let num = number;\n    let result\
    \ = '';\n    while (num > 0) {\n        if (num >= 1000) {\n            result\
    \ += roman[0];\n            num -= 1000;\n        } else if (num >= 900) {\n \
    \           result += roman[2] + roman[0];\n            num -= 900;\n        }\
    \ else if (num >= 500) {\n            result += roman[1];\n            num -=\
    \ 500;\n        } else if (num >= 400) {\n            result += roman[2] + roman[1];\n\
    \            num -= 400;\n        } else if (num >= 100) {\n            result\
    \ += roman[2];\n            num -= 100;\n        } else if (num >= 90) {\n   \
    \         result += roman[4] + roman[2];\n            num -= 90;\n        } else\
    \ if (num >= 50) {\n            result += roman[3];\n            num -= 50;\n\
    \        } else if (num >= 40) {\n            result += roman[4] + roman[3];\n\
    \            num -= 40;\n        } else if (num >= 10) {\n            result +=\
    \ roman[4];\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    result += roman[6] + roman[4];\n            num -= 9;\n        } else if\
    \ (num >= 5) {\n            result += roman[5];\n            num -= 5;\n     \
    \   } else if (num >= 4) {\n            result += roman[6] + roman[5];\n     \
    \       num -= 4;\n        } else if (num >= 1) {\n            result += roman[6];\n\
    \            num -= 1;\n        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

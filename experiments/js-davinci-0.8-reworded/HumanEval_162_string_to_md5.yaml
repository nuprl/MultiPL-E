name: HumanEval_162_string_to_md5
language: js
prompt: "//Given a string 'text', return its md5 hash equivalent string.\n// If 'text'\
  \ is an empty string, return undefined.\n// >>> string_to_md5(\"Hello world\")\n\
  // \"3e25960a79dbc69b674cd4ec67a72c62\"\nfunction string_to_md5(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_to_md5;\n  assert.deepEqual(candidate(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\"\
  );\n  assert.deepEqual(candidate(\"\"),undefined);\n  assert.deepEqual(candidate(\"\
  A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\");\n  assert.deepEqual(candidate(\"\
  password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\ntest();"
completions: ["    return md5(text);\n}\n", "    var crypto = require('crypto');\n\
    \    var hash = crypto.createHash('md5').update(text).digest('hex');\n    return\
    \ hash;\n}\n", "\tif(text === \"\")\n\t\treturn undefined;\n\treturn md5(text);\n\
    }\n", "    if(text.length == 0){\n        return undefined;\n    }\n    else{\n\
    \        return md5(text);\n    }\n}\n", "    if (text === \"\") return undefined;\n\
    \    let hash = md5(text);\n    return hash;\n}\n", "    if (text === \"\"){\n\
    \        return undefined;\n    }else{\n        return hash.MD5(text).toString();\n\
    \    }\n}\n", "\tif (text === \"\") {\n\t\treturn undefined;\n\t}\n\tvar hash\
    \ = CryptoJS.MD5(text).toString();\n\treturn hash;\n}\n", "    if(text === \"\"\
    \ || text === null){\n        return undefined;\n    }\n    else{\n        var\
    \ hs = crypto.createHash('md5');\n        hs.update(text);\n        return hs.digest('hex');\n\
    \    }\n}\n", "    if(text === ''){\n        return undefined;\n    }\n    return\
    \ require('crypto').createHash('md5').update(text).digest('hex');\n}\n", "  if(text.length\
    \ === 0){\n    return undefined;\n  }\n  else{\n    return md5(text);\n  }\n}\n",
  "    if(text === \"\"){\n        return undefined;\n    }\n    var crypto = require('crypto');\n\
    \    return crypto.createHash('md5').update(text).digest('hex');\n};\n", "  if\
    \ (text === '') {\n    return undefined;\n  } else {\n    return md5(text);\n\
    \  }\n}\n", "    // Your code here.\n}\n", "    var hash = crypto.createHash('md5');\n\
    \    hash.update(text);\n    return hash.digest('hex');\n}\n", "\tif(!text) return\
    \ undefined;\n\telse return crypto.createHash('md5').update(text).digest('hex');\n\
    }\n", "    return $.md5(text);\n}\n\n\n", "  if(text === ''){\n    return undefined;\n\
    \  }\n  else{\n    return $.md5(text);\n  }\n}\n", "    return md5(text);\n}\n",
  "\tvar md5 = require('md5');\n\tif(text.length>0){\n\t\treturn md5(text);\n\t}\n\
    \telse{\n\t\treturn undefined;\n\t}\n}\n", "  if (text == \"\"){\n    return undefined;\n\
    \  }\n  return md5(text);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

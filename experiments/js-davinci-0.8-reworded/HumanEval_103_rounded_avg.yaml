name: HumanEval_103_rounded_avg
language: js
prompt: "//You are given two positive integers n and m, and your task is to compute\
  \ the\n// average of the integers from n through m (including n and m). \n// Round\
  \ the answer to the nearest integer and convert that to binary.\n// If n is greater\
  \ than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"0b11\"\n// >>>\
  \ rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\n// >>> rounded_avg(20,\
  \ 33)\n// \"0b11010\"\nfunction rounded_avg(n, m){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rounded_avg;\n  assert.deepEqual(candidate(1, 5),\"0b11\");\n  assert.deepEqual(candidate(7,\
  \ 13),\"0b1010\");\n  assert.deepEqual(candidate(964, 977),\"0b1111001010\");\n\
  \  assert.deepEqual(candidate(996, 997),\"0b1111100100\");\n  assert.deepEqual(candidate(560,\
  \ 851),\"0b1011000010\");\n  assert.deepEqual(candidate(185, 546),\"0b101101110\"\
  );\n  assert.deepEqual(candidate(362, 496),\"0b110101101\");\n  assert.deepEqual(candidate(350,\
  \ 902),\"0b1001110010\");\n  assert.deepEqual(candidate(197, 233),\"0b11010111\"\
  );\n  assert.deepEqual(candidate(7, 5),-1);\n  assert.deepEqual(candidate(5, 1),-1);\n\
  \  assert.deepEqual(candidate(5, 5),\"0b101\");\n}\n\ntest();"
completions: ["  if (n > m) return -1;\n  let sum = 0;\n  let count = 0;\n  for (let\
    \ i = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  return \"0b\" + Number(Math.round(sum\
    \ / count)).toString(2);\n}", "    if(n > m){\n        return -1;\n    }\n   \
    \ let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n \
    \   let avg = sum / (m - n + 1);\n    let rounded = Math.round(avg);\n    return\
    \ \"0b\" + rounded.toString(2);\n}", "    var average = Math.round((n + m) / 2)\n\
    \    return average > m ? -1 : average.toString(2)\n}\n", "    if(n > m){\n  \
    \      return -1;\n    }\n    else{\n        let sum = 0;\n        for(let i =\
    \ n; i <= m; i++){\n            sum += i;\n        }\n        return '0b' + (Math.round(sum\
    \ / (m - n + 1))).toString(2);\n    }\n}", "  if (n > m) return -1;\n  var x =\
    \ Math.round((n + m) / 2);\n  return (x >>> 0).toString(2);\n}\n", "  var avg\
    \ = (n + m) / 2;\n  if (n > m) {\n    return -1;\n  }\n  return (\"0b\" + avg.toString(2));\n\
    }\n", "   let result = ((n + m) / 2);\n    if (n > m) {\n        return -1;\n\
    \    } else {\n        return (((n + m) / 2) | 0).toString(2);\n    }\n}", " \
    \ if (n > m) {\n    return -1;\n  }\n  var sum = n;\n  for (var i = n + 1; i <=\
    \ m; i++){\n    sum += i;\n  }\n  return (sum / (m - n + 1) | 0).toString(2);\n\
    }\n", "    if(n>m){\n        return -1;\n    }\n    var sum = n;\n    for(var\
    \ i = n+1; i<=m; i++){\n        sum += i;\n    }\n    var avg = Math.round(sum/(m-n+1));\n\
    \    return '0b' + avg.toString(2);\n}\n", "    if(n > m){\n        return -1;\n\
    \    }\n    var avg = Math.round((n + m) / 2);\n    return avg.toString(2);\n}",
  "\n}\n", "    var sum = 0;\n    var avg = 0;\n    var bin = 0;\n    if(n > m){\n\
    \        return -1;\n    }\n    else{\n        for(var i = n; i <= m; i++){\n\
    \            sum += i;\n        }\n        avg = Math.round(sum / (m - n + 1));\n\
    \        bin = Math.floor(avg).toString(2);\n        return '0b' + bin;\n    }\n\
    }", "    if(n > m){\n        return -1;\n    }\n    let average = Math.round((n\
    \ + m) / 2);\n    let binary = average.toString(2);\n    return `0b${binary}`;\n\
    }\n", "\tif(n>m){\n\t\treturn -1;\n\t}\n\tif(n==m){\n\t\treturn n.toString(2);\n\
    \t}\n\tif(m - n == 1){\n\t\treturn n.toString(2);\n\t}\n\tvar average = Math.round((m+n)/2);\n\
    \treturn \"0b\" + average.toString(2);\n}\n", "    if(n > m){\n        return\
    \ -1;\n    }\n    let total = 0;\n    for(let i = n; i <= m; i++){\n        total\
    \ += i;\n    }\n    let avg = Math.round(total / (m - n + 1));\n    return '0b'\
    \ + avg.toString(2);\n}\n", "\tvar sum=0, avg=0, avg_bin=0;\n\tif(n>m){\n\t\t\
    return -1;\n\t}\n\tfor(var i=n; i<=m; i++){\n\t\tsum+=i;\n\t}\n\tavg=Math.round(sum/(m-n+1));\n\
    \treturn \"0b\" + Number(avg).toString(2);\n}\n", "  if (n > m) {\n    return\
    \ -1;\n  }\n  var sum = 0;\n  var count = 0;\n  for (var i = n; i <= m; i++) {\n\
    \    sum += i;\n    count++;\n  }\n  var avg = Math.round(sum / count);\n  return\
    \ avg.toString(2);\n}", "  var sum = 0;\n  if(n > m){\n    return -1;\n  }\n \
    \ else{\n    for(var i = n; i <= m; i++){\n      sum += i;\n    }\n    var avg\
    \ = Math.round(sum / (m - n + 1));\n    return \"0b\" + avg.toString(2);\n  }\n\
    }\n", "  if (n > m) {\n    return -1;\n  }\n  return ((n + m) / 2).toString(2);\n\
    }\n", "    if(n > m){\n        return -1;\n    }\n    let count = 0;\n    let\
    \ avg = 0;\n    for(let i = n; i <= m; i++){\n        count++;\n        avg +=\
    \ i;\n    }\n    avg = Math.round(avg / count);\n    avg = avg.toString(2);\n\
    \    return \"0b\" + avg;\n}", "    if(n < m){\n        var array = [];\n    \
    \    for(var i = n; i <= m; i++){\n            array.push(i);\n        }\n   \
    \     var sum = array.reduce(function(a, b){\n            return a + b;\n    \
    \    });\n        var avg = sum / array.length;\n        var rounded = Math.round(avg);\n\
    \        var binary = rounded.toString(2);\n        return '0b' + binary;\n  \
    \  } else {\n        return -1;\n    }\n}", "  let average = Math.round((n + m)\
    \ / 2);\n  return average > m ? -1 : `0b${average.toString(2)}`;\n}", "  if (n\
    \ > m) {\n    return -1;\n  }\n  var sum = 0;\n  var count = 0;\n  for (var i\
    \ = n; i <= m; i++){\n    sum += i;\n    count++;\n  }\n  var avg = sum / count;\n\
    \  var bin = Math.round(avg).toString(2);\n  return bin;\n}", "  if (n > m) {\n\
    \    return -1;\n  }\n  let sum = n;\n  for (let i = n + 1; i <= m; i++) {\n \
    \   sum += i;\n  }\n  let result = sum / (m - n + 1);\n  let rounded = Math.round(result);\n\
    \  return '0b' + rounded.toString(2);\n}\n", "    let ans = Math.round((n + m)\
    \ / 2);\n    return n > m ? -1 : \"0b\" + ans.toString(2);\n}", "    var sum =\
    \ 0;\n    var avg = 0;\n    if(n > m){\n        return -1;\n    }\n    for(var\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    avg = Math.round(sum / (m\
    \ - n + 1));\n    return (avg >>> 0).toString(2);\n}", "\tif(n > m){\n\t\treturn\
    \ -1;\n\t}\n\tvar num = Math.floor((n + m) / 2);\n\treturn num.toString(2);\n\
    }\n", "\tif(n>m){\n\t\treturn -1;\n\t}\n\tvar count = 0;\n\tvar add = 0;\n\tfor(var\
    \ i = n; i<=m; i++){\n\t\tcount++;\n\t\tadd += i;\n\t}\n\tvar avg = Math.round(add/count);\n\
    \treturn \"0b\" + avg.toString(2);\n}", "  if (n > m) return -1;\n  let sum =\
    \ 0;\n  for (let i = n; i <= m; i++){\n    sum += i;\n  }\n  return `0b${Math.round(sum\
    \ / (m - n + 1)).toString(2)}`;\n}\n", "\n}", "    //YOUR CODE HERE\n}", "   \
    \ if(n>m){\n        return -1;\n    }\n    let num = Math.floor((n+m)/2);\n  \
    \  return num.toString(2);\n}", "    if(n > m){\n        return -1;\n    }\n \
    \   var avg = 0;\n    for(var i = n; i <= m; i++){\n        avg += i;\n    }\n\
    \    return \"0b\" + Math.round(avg / (m - n + 1)).toString(2);\n}\n", "\tif(n\
    \ > m){\n\t\treturn -1;\n\t}\n\tvar sum = 0;\n\tfor(var i = n; i <= m; i++){\n\
    \t\tsum += i;\n\t}\n\tvar avg = Math.round(sum / (m - n + 1));\n\tvar binary =\
    \ avg.toString(2);\n\treturn \"0b\" + binary;\n}", "  if (n > m) {\n    return\
    \ -1;\n  }\n  let total = 0;\n  let counter = 0;\n  while (n <= m) {\n    total\
    \ += n;\n    n++;\n    counter++;\n  }\n  return (total / counter).toFixed(0).toString(2);\n\
    }", "  // YOUR CODE HERE\n}", "\tvar sum = 0;\n\tvar count = 0;\n\tvar ret = '';\n\
    \tif(n > m){\n\t\treturn -1;\n\t}\n\tfor(var i = n; i <= m; i++){\n\t\tsum +=\
    \ i;\n\t\tcount++;\n\t}\n\tsum = Math.round(sum / count);\n\twhile(sum){\n\t\t\
    ret = sum % 2 + ret;\n\t\tsum = Math.floor(sum / 2);\n\t}\n\tret = '0b' + ret;\n\
    \treturn ret;\n}\n", "    var binaryArray = [];\n    var num = 0;\n    if(n >\
    \ m){\n        return -1;\n    }\n    for(var i = n; i <= m; i++){\n        num\
    \ += i;\n    }\n    num = Math.round(num / (m - n + 1));\n    while(num > 0){\n\
    \        if(num % 2 === 0){\n            binaryArray.unshift(0);\n        }else{\n\
    \            binaryArray.unshift(1);\n        }\n        num = Math.floor(num\
    \ / 2);\n    }\n    return \"0b\" + binaryArray.join(\"\");\n}", "    if(n > m){\n\
    \        return -1;\n    }\n    return (Math.round((n + m) / 2)).toString(2);\n\
    }", "    if(n > m){\n        return -1;\n    }\n    return (Math.round((n + m)\
    \ / 2)).toString(2);\n}\n", "  if (n > m) {\n    return -1;\n  }\n  else {\n \
    \   let sum = 0;\n    for (let i = n; i <= m; i++){\n      sum += i;\n    }\n\
    \    let avg = Math.round(sum / (m - n + 1));\n    avg = avg.toString(2);\n  \
    \  return \"0b\" + avg;\n  }\n}\n", "  let arr = [];\n  if(n > m){\n    return\
    \ -1;\n  }\n  else{\n    for(let i = n; i <= m; i++){\n      arr.push(i);\n  \
    \  }\n    let avg = Math.round(arr.reduce((a,b) => a + b, 0) / arr.length);\n\
    \    return '0b' + Number(avg).toString(2);\n  }\n}", "  var avg = Math.round((n\
    \ + m) / 2);\n  return avg >= n && avg <= m ? \"0b\" + avg.toString(2) : -1;\n\
    }\n", "\t//find the average\n\tvar avg = Math.round((n + m) / 2);\n\t//if n is\
    \ less than m, return the binary conversion of avg, else return -1\n\treturn n\
    \ < m ? \"0b\" + avg.toString(2) : -1;\n}\n", "  if (n > m) {\n    return -1;\n\
    \  }\n  let total = 0;\n  for (let i = n; i <= m; i++) {\n    total += i;\n  }\n\
    \  const roundedAverage = Math.round(total / (m - n + 1));\n  return `0b${roundedAverage.toString(2)}`;\n\
    }", "  if (n > m) {\n    return -1;\n  }\n  let sum = 0;\n  for (let i = n; i\
    \ <= m; i++) {\n    sum += i;\n  }\n  return \"0b\" + Math.round(sum / (m - n\
    \ + 1)).toString(2);\n}\n", "  if (n>m) {\n    return -1;\n  } else {\n    var\
    \ sum = 0;\n    for (var i = n; i <= m; i++) {\n      sum = sum + i;\n    }\n\
    \    var rounded = Math.round(sum/(m-n+1));\n    var converted = rounded.toString(2);\n\
    \    return \"0b\" + converted;\n  }\n}", "    if(n>m){\n        return -1;\n\
    \    }\n    let sum = 0;\n    for(let i = n; i<=m; i++){\n        sum += i;\n\
    \    }\n    let result = Math.round(sum/(m-n+1));\n    return result.toString(2);\n\
    }\n", "  if (n>m) return -1;\n  var avg=Math.round((n+m)/2);\n  var binary=avg.toString(2);\n\
    \  return \"0b\"+binary;\n}\n", "    let avg = Math.round((n + m) / 2);\n    return\
    \ avg > m ? -1 : `0b${avg.toString(2)}`;\n}\n", "  if (n > m) return -1;\n  var\
    \ sum = n;\n  var numCount = 1;\n  for (var i = n + 1; i <= m; i++){\n    sum\
    \ += i;\n    numCount += 1;\n  }\n  var avg = Math.round(sum / numCount);\n  var\
    \ binary = Number(avg).toString(2);\n  return \"0b\" + binary;\n}\n", "    if(n>m){\n\
    \        return -1;\n    }\n    else{\n        return (n+m)/2;\n    }\n}\n", " \
    \ // your code here\n}\n", "    if(n > m){\n        return -1;\n    }\n    let\
    \ sum = 0;\n    for(let i = n; i<=m; i++){\n        sum += i;\n    }\n    let\
    \ avg = Math.round(sum / (m-n+1));\n    return `0b${avg.toString(2)}`;\n}\n",
  "    if(n > m){\n        return -1;\n    } else {\n        let total = 0;\n    \
    \    for(let i = n; i <= m; i++){\n            total += i;\n        }\n      \
    \  let avg = Math.round(total / (m - n + 1));\n        return (`0b${avg.toString(2)}`);\n\
    \    }\n}\n", "\tif(n>m){\n\t\treturn -1;\n\t}\n\tvar avg=(n+m)/2;\n\treturn Math.round(avg).toString(2);\n\
    \n}", "\tvar avg = Math.round((n + m) / 2);\n\treturn n > m ? -1 : avg.toString(2);\n\
    }", "\tif(n > m){\n\t\treturn -1;\n\t}\n\tlet sum = 0;\n\tfor(let i = n; i <=\
    \ m; i++){\n\t\tsum += i;\n\t}\n\tlet average = sum / (m - n + 1);\n\tlet rounded\
    \ = Math.round(average);\n\tlet result = rounded.toString(2);\n\treturn `0b${result}`;\n\
    }\n", "    if(n>m){\n        return -1;\n    }\n    var avg = (n+m)/2;\n    avg\
    \ = Math.round(avg);\n    return \"0b\" + avg.toString(2);\n}", "\tif(n > m){\n\
    \t\treturn -1;\n\t}\n\tvar sum = 0;\n\tfor(i = n; i <= m; i++){\n\t\tsum += i;\n\
    \t}\n\tvar avg = sum/(m-n+1);\n\tvar rounded = Math.round(avg);\n\tvar new_avg\
    \ = \"0b\" + rounded.toString(2);\n\treturn new_avg;\n}\n", "  var avg = Math.round((n\
    \ + m) / 2);\n  if (n > m) return -1;\n  return '0b' + avg.toString(2);\n}\n",
  "    if(n > m){\n        return -1;\n    }\n    let average = Math.round((n + m)\
    \ / 2);\n    return average.toString(2);\n}\nrounded_avg(10, 20);", "    if(n>m){\n\
    \        return -1;\n    }\n    var total = 0;\n    for(var i = n; i<=m; i++){\n\
    \        total += i;\n    }\n    return '0b'+Math.round(total/(m-n+1)).toString(2);\n\
    }", "    if(n>m){\n        return -1;\n    }\n    var result = (n+m)/2;\n    result\
    \ = Math.round(result);\n    result = result.toString(2);\n    result = \"0b\"\
    \ + result;\n    return result;\n}\n", "    //Declare a new variable called numbers.\n\
    \    var numbers = '';\n    //If n is greater than m, return '-1'.\n    if(n >\
    \ m){\n        return '-1';\n    }\n    //Create a while loop that runs while\
    \ n is less than or equal to m.\n    while(n <= m){\n        //Add n to the end\
    \ of numbers.\n        numbers += n;\n        //Increment n by 1.\n        n++;\n\
    \    }\n    //Split numbers into an array of characters and change the values\
    \ to their\n    // numerical value.\n    numbers = numbers.split('').map(Number);\n\
    \    //Declare a new variable called total.\n    var total = 0;\n    //Using a\
    \ for loop, add each value from numbers to total.\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        total += numbers[i];\n    }\n    //Calculate the average of the\
    \ values in numbers by dividing total by the\n    // length of numbers.\n    var\
    \ average = total / numbers.length;\n    //Round the average to the nearest integer.\n\
    \    average = Math.round(average);\n    //Convert the average to binary.\n  \
    \  average = average.toString(2);\n    //Return the average.\n    return '0b'\
    \ + average;\n}\n", "  if (n > m) {\n    return -1;\n  }\n  let sum = 0;\n  let\
    \ count = 0;\n  for (let i = n; i <= m; i++) {\n    sum += i;\n    count++;\n\
    \  }\n  const avg = Math.round(sum / count);\n  return `0b${avg.toString(2)}`;\n\
    }", "    let avg = (n + m) / 2;\n    avg = avg.toFixed(0);\n    return avg;\n}",
  "    let num = Math.round((n + m) / 2)\n    return num.toString(2)\n}\n", "  if\
    \ (n > m) {\n    return -1;\n  }\n  return (n + m) / 2;\n}", "\tif(n > m){\n\t\
    \treturn -1;\n\t}\n\tvar average = Math.round(((n + m) / 2));\n\treturn (average\
    \ >>> 0).toString(2);\n}\n", "    var len = 0;\n    var avg = 0;\n    var sol\
    \ = \"\";\n    if(n > m){\n        return -1;\n    }\n    for(var i = n; i <=\
    \ m; i++){\n        avg += i;\n        len++;\n    }\n    avg = Math.round(avg/len);\n\
    \    while(avg > 0){\n        sol = avg%2 + sol;\n        avg = Math.floor(avg/2);\n\
    \    }\n    return \"0b\" + sol;\n}\n", "  var sum = 0;\n  if(n>m){\n    return\
    \ -1;\n  }\n  for(var i = n; i<=m; i++){\n    sum += i;\n  }\n  var avg = Math.round(sum/(m-n+1));\n\
    \  var binary = \"0b\"+avg.toString(2);\n  return binary;\n}\n", "    if(n > m){\n\
    \        return -1;\n    }\n    else{\n        var total = 0;\n        for(var\
    \ i = n; i <= m; i++){\n            total += i;\n        }\n        return parseInt(total\
    \ / (m - n + 1)).toString(2);\n    }\n\n}\n", "  if (n > m) return -1;\n  let\
    \ sum = 0;\n  for (let i = n; i <= m; i++) {\n    sum += i;\n  }\n  return '0b'\
    \ + Math.round(sum / (m - n + 1)).toString(2);\n}\n", "    var sum = 0;\n    if(n\
    \ > m){\n        return -1;\n    }\n    for(var i = n; i <= m; i++){\n       \
    \ sum += i;\n    }\n    var avg = Math.round(sum / (m - n + 1));\n    return \"\
    0b\" + avg.toString(2);\n}\n", "    if(n > m){\n        return -1;\n    }\n  \
    \  var sum = 0;\n    var count = 0;\n    while(n <= m){\n        sum += n;\n \
    \       count++;\n        n++;\n    }\n    var avg = sum / count;\n    var rounded\
    \ = Math.round(avg);\n    var binary = Number(rounded).toString(2);\n    return\
    \ \"0b\" + binary;\n}\n", "  var results = 0;\n  for(var i = n; i <= m; i++){\n\
    \    results += i;\n  }\n  var average = Math.round(results / (m - n + 1));\n\
    \  var binary = average.toString(2);\n  var results = \"0b\" + binary;\n  return\
    \ results;\n}", "  var average = Math.round((n + m) / 2);\n  if (n > m) {\n  \
    \  return -1;\n  } else {\n    return '0b' + average.toString(2);\n  }\n}\n",
  "  let avg = Math.round((n + m) / 2);\n  return avg >= n && avg <= m ? \"0b\" +\
    \ avg.toString(2) : -1;\n}\n", "\tvar average = 0;\n\tif(n>m){\n\t\treturn -1;\n\
    \t}\n\taverage = (n+m)/2;\n\taverage = Math.round(average);\n\treturn average.toString(2);\n\
    }", "\tvar avg = n;\n\tfor(var i = n+1; i<=m; i++){\n\t\tavg += i;\n\t}\n\tif(n>m){\n\
    \t\treturn -1;\n\t}\n\tavg = Math.round(avg/(m-n+1));\n\tconsole.log(avg);\n\t\
    avg = avg.toString(2);\n\tavg = \"0b\" + avg;\n\treturn avg;\n}\nrounded_avg(10,20);",
  "  if (n > m) return -1;\n  var n = n + n;\n  var m = m + m;\n  var n = n + m;\n\
    \  var n = n / 5;\n  var n = n.toString(2);\n  return '0b' + n;\n}\n", "  if (n>m)\
    \ return -1;\n  var avg = Math.round((n+m)/2)\n  return avg.toString(2);\n}",
  "    return n > m ? -1 : \"0b\" + Math.round((m + n) / 2).toString(2);\n}\n", "\t\
    var sum = 0;\n\tif(n > m){\n\t\treturn -1;\n\t}\n\tfor(var i = n; i <= m; i++){\n\
    \t\tsum += i;\n\t}\n\tvar avg = sum / (m - n + 1);\n\tavg = Math.round(avg);\n\
    \treturn \"0b\" + avg.toString(2);\n}", "    if(n > m){\n        return -1;\n\
    \    }\n    var sum = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    var avg = Math.round(sum / (m - n + 1));\n    return \"0b\" + avg.toString(2);\n\
    }\n", "  if (n > m) return -1;\n  return \"0b\" + Math.round((n + m) / 2).toString(2);\n\
    }\n", "    if(n>m){\n        return -1;\n    }else{\n        return (Math.round((n+m)/2)).toString(2);\n\
    \    }\n}", "    var avg = Math.round((n + m) / 2);\n    var m = Math.max(n, m);\n\
    \    var n = Math.min(n, m);\n    for (var i = n; i <= m; i++) {\n        avg\
    \ += i;\n    }\n    avg = Math.round(avg / (m - n + 1));\n    if (n > m) {\n \
    \       return -1;\n    }\n    else {\n        return \"0b\" + avg.toString(2);\n\
    \    }\n}", "    if(n>m){\n        return -1;\n    }\n    var sum=0;\n    var\
    \ counter=0;\n    for(var i=n;i<=m;i++){\n        sum+=i;\n        counter++;\n\
    \    }\n    return \"0b\"+(Math.round(sum/counter)).toString(2);\n}", "    if(n\
    \ > m){\n        return -1;\n    }\n    var average = Math.round((n + m) / 2);\n\
    \    return average.toString(2);\n};", "  var total = 0;\n  var len = (m - n);\n\
    \  for(var i = n; i <= m; i++){\n    total += i;\n  }\n  var avg = (total/len);\n\
    \  if(avg%1 > 0.5){\n    avg = avg + 0.5;\n  }\n  return avg;\n}\n", "    // get\
    \ the average of all numbers between n and m inclusive\n    // convert the average\
    \ to binary\n    // round the average\n    // return the result\n    if (n > m)\
    \ {\n        return -1;\n    }\n    let sum = 0;\n    for (let i = n; i <= m;\
    \ i++) {\n        sum += i;\n    }\n    let roundedAverage = Math.round(sum /\
    \ (m - n + 1));\n    return '0b' + roundedAverage.toString(2);\n}", "    var avrg\
    \ = Math.round((n + m) / 2);\n    if (n > m) {\n        return -1;\n    } else\
    \ {\n        return avrg.toString(2);\n    }\n};\n", "\tif(n>m){\n\t\treturn -1;\n\
    \t}\n\tvar average = Math.round(((n+m)/2));\n\treturn (average).toString(2);\n\
    }\n", "    var sum=0;\n    var count=0;\n    if(n>m){\n        return -1;\n  \
    \  }\n    else{\n        for(var i=n;i<=m;i++){\n            sum=sum+i;\n    \
    \        count++;\n        }\n        return sum/count;\n    }\n}\nvar result=rounded_avg(20,\
    \ 33);", "    if(n > m){\n        return -1;\n    }\n    var sum = 0;\n    for(var\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    var round_avg = Math.round(sum/(m-n+1));\n\
    \    return \"0b\" + round_avg.toString(2);\n}", "    var result = ((n + m) /\
    \ 2).toFixed();\n    if (n > m) {\n        return -1;\n    } else {\n        return\
    \ result.toString(2);\n    }\n}", "    let sum = 0;\n    let count = 0;\n    let\
    \ temp = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n        count++;\n\
    \    }\n    temp = Math.round(sum/count);\n    return temp;\n}\n", "    let sum\
    \ = 0;\n    let count = 0;\n    if(n > m){\n        return -1;\n    }\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n    let rounded\
    \ = Math.round(sum/count);\n    return Number(rounded).toString(2);\n}\n", " \
    \   if(n > m){\n        return -1;\n    }\n    var avg = 0;\n    for(var i = n;\
    \ i <= m; i++){\n        avg += i;\n    }\n    avg = Math.round(avg / (m - n +\
    \ 1));\n    return \"0b\" + avg.toString(2);\n}\n", "  if (n > m) {\n    return\
    \ -1;\n  } else {\n    var sum = 0;\n    for (var i = n; i <= m; i++) {\n    \
    \  sum += i;\n    }\n    return (Math.round(sum / (m - n + 1))).toString(2);\n\
    \  }\n}\n", "    let avg = Math.round((n + m) / 2);\n    return avg > m ? -1 :\
    \ \"0b\" + avg.toString(2);\n}", "    let avg = Math.round((n + m) / 2);\n   \
    \ if (n > m) {\n        return -1;\n    }\n    return `0b${avg.toString(2)}`;\n\
    }", "\tif(n > m){\n\t\treturn -1;\n\t}\n\tvar answer = Math.round((n + m) / 2);\n\
    \treturn \"0b\" + answer.toString(2);\n}\n", "    if(n>m){\n        return -1;\n\
    \    }\n    var sum = 0;\n    for(var i = n; i<=m; i++){\n        sum+=i;\n  \
    \  }\n    var new_num = Math.round(sum/(m-n+1));\n    var new_bin = new_num.toString(2);\n\
    \    return \"0b\"+new_bin;\n}\n", "\t\n\tvar i = n;\n\tvar sum = 0;\n\t\n\tif(n\
    \ > m){\n\t\treturn -1;\n\t}\n\twhile(i <= m){\n\t\tsum += i;\n\t\ti++;\n\t}\n\
    \t\n\tvar avg = sum / (m - n + 1);\n\t\n\tvar x = Math.floor(avg);\n\t\n\tvar\
    \ binary = x.toString(2);\n\t\n\tvar result = \"0b\" + binary;\n\t\n\treturn result;\n\
    \t\n}\n", "  \n  var avg = ((m + n) / 2);\n  var rounded = Math.round(avg);\n\
    \  var bin = rounded.toString(2);\n  // your code here\n  if (n > m) {\n    return\
    \ -1;\n  } else {\n    return bin;\n  }\n}\n", "\tvar num = (n + m) / 2;\n\tif\
    \ (n > m) {\n\t\treturn -1;\n\t} else {\n\t\treturn \"0b\" + (num | 0).toString(2);\n\
    \t}\n}\n", "    if(n>m){\n        return -1;\n    }else{\n        let sum=0;\n\
    \        for(let i=n;i<=m;i++){\n            sum=sum+i;\n        }\n        return\
    \ '0b'+Number(Math.round(sum/(m-n+1))).toString(2);\n    }\n}", "    if(n>m){\n\
    \        return -1;\n    }\n    var sum=0;\n    for(var i=n;i<=m;i++){\n     \
    \   sum=sum+i;\n    }\n    var avg=sum/(m-n+1);\n    var avg2=Math.round(avg);\n\
    \    var binary = '';\n    while (avg2 > 0) {\n        binary = (avg2 % 2) + binary;\n\
    \        avg2 = Math.floor(avg2 / 2);\n    }\n    return (\"0b\"+binary);\n}",
  "    if(n > m){\n        return -1;\n    }\n    let sum = 0;\n    for(let i = n;\
    \ i <= m; i++){\n        sum += i;\n    }\n    return Number.parseInt(sum/(m-n+1)).toString(2);\n\
    }\n", "    if(n > m){\n        return -1;\n    }\n    let result = Math.round((n\
    \ + m) / 2).toString(2);\n    return \"0b\" + result;\n};\n", "    if(n>m){\n\
    \        return -1;\n    }else{\n        let result=0;\n        for(let i=n;i<=m;i++){\n\
    \            result+=i;\n        }\n        let result1=Math.round(result/(m-n+1));\n\
    \        let result2=result1.toString(2);\n        return `0b${result2}`;\n  \
    \  }\n}", "  var sum = 0;\n  if(n > m){\n    return -1;\n  }else{\n    for(var\
    \ i = n; i <= m; i++){\n      sum += i;\n    }\n    var avg = Math.round(sum /\
    \ (m - n + 1));\n    return \"0b\" + avg.toString(2);\n  }\n}\n", "  if (n > m)\
    \ {\n    return -1;\n  }\n  const average = Math.round((n + m) / 2);\n  return\
    \ `0b${average.toString(2)}`;\n}", "\tconst arr = [];\n\tif(n>m){\n\t\treturn\
    \ -1;\n\t}\n\tfor(let i = n; i<=m; i++){\n\t\tarr.push(i);\n\t}\n\treturn arr.reduce((a,b)=>\
    \ a+b)/arr.length;\n}", "  let total = 0;\n  let str = '';\n  if(n > m){\n   \
    \ return -1;\n  }\n  for(let i = n; i <= m; i++){\n    total += i;\n  }\n  let\
    \ avg = Math.round(total / (m - n + 1));\n  let bin = avg.toString(2);\n  return\
    \ `0b${bin}`;\n}", "  //good luck. add any arguments you deem necessary.\n  if\
    \ (n > m) {\n    return -1;\n  } else {\n    return (Math.round((n + m) / 2)).toString(2);\n\
    \  }\n}", "    var sum = 0;\n    var counter = 0;\n    if(n > m){\n        return\
    \ -1;\n    }\n    else{\n        for(var i = n; i <= m; i++){\n            sum\
    \ += i;\n            counter++;\n        }\n        return '0b' + Math.round(sum/counter).toString(2);\n\
    \    }\n}", "  if (n > m) return -1;\n  let avg = Math.round((n + m) / 2);\n \
    \ return `0b${avg.toString(2)}`;\n}\n", "  var sum = 0\n  for (var i = n; i <=\
    \ m; i++){\n    sum += i\n  }\n  var avg = sum / (m - n + 1)\n  var rounded =\
    \ Math.round(avg)\n  var binary = rounded.toString(2)\n  return binary\n}\n",
  "  if (n > m) return -1;\n  else {\n    let total = 0;\n    for (let i = n; i <=\
    \ m; i++) {\n      total += i;\n    }\n    let ans = Math.round(total / (m - n\
    \ + 1)).toString(2);\n    return (\"0b\" + ans);\n  }\n}\n", "    var sum = 0;\n\
    \    var nums = 0;\n    var i = 0;\n    var rounded = 0;\n    if(n > m){\n   \
    \     return -1;\n    }\n    while(n <= m){\n        sum += n;\n        n++;\n\
    \        nums++;\n    }\n    rounded = Math.round(sum/nums);\n    i = 1;\n   \
    \ var count = 0;\n    while(i < rounded){\n        i *= 2;\n        count++;\n\
    \    }\n    var bin = \"\";\n    for(var j = 0; j < count; j++){\n        bin\
    \ += \"1\";\n    }\n    bin += \"0\";\n    return \"0b\" + bin;\n}", "  if (n>m)\
    \ {\n    return -1;\n  }\n  var sum = 0;\n  var count = 0;\n  for (var i = n;\
    \ i <= m; i++) {\n    sum += i;\n    count++;\n  }\n  var avg = Math.round(sum/count);\n\
    \  var binAvg = avg.toString(2);\n  return binAvg;\n}\n", "    // TODO: Implement\
    \ me\n    if (n > m) {\n        return -1;\n    }\n    else {\n        var avg\
    \ = (n + m) / 2;\n        var roundedAvg = Math.round(avg);\n        var result\
    \ = roundedAvg.toString(2);\n        return result;\n    }\n}\n", "    // let\
    \ arrayOfNumbers = [];\n    // let accumulator = 0;\n    // let average;\n   \
    \ // for(let i = n; i <= m; i++){\n    //     arrayOfNumbers.push(i);\n    //\
    \ }\n    // for(let i = 0; i < arrayOfNumbers.length; i++){\n    //     accumulator\
    \ += arrayOfNumbers[i];\n    // }\n    // average = Math.round(accumulator / arrayOfNumbers.length);\n\
    \    // return `0b${average.toString(2)}`;\n    if(n < m){\n        return `0b${Math.round((n\
    \ + m) / 2).toString(2)}`;\n    }\n    else{\n        return -1;\n    }\n}\n",
  "    if(n > m){\n        return -1;\n    }\n    //avg = (n + m) / 2\n    let avg\
    \ = Math.round((n + m) / 2);\n    //Convert avg to binary\n    let avgBinary =\
    \ avg.toString(2);\n    return '0b' + avgBinary;\n}\n", "  if (n > m) {\n    return\
    \ -1;\n  }\n  let total = n;\n  for (let i = n + 1; i <= m; i++) {\n    total\
    \ += i;\n  }\n  let average = Math.round(total / (m - n + 1));\n  return '0b'\
    \ + (average >>> 0).toString(2);\n}", "    if(n>m){\n        return -1;\n    }\n\
    \    var num = Math.floor((n+m)/2);\n    return num.toString(2);\n}\n", "\tif(n\
    \ > m){\n\t\treturn -1;\n\t}\n\tvar sum = 0;\n\tfor(var i = n; i <= m; i++){\n\
    \t\tsum += i;\n\t}\n\tvar avg = Math.round(sum / (m - n + 1));\n\treturn \"0b\"\
    \ + avg.toString(2);\n}\n", "    let average = Math.round((n + m) / 2);\n    return\
    \ (n > m) ? -1 : average.toString(2);\n}\n", "    var sum = 0;\n    var result\
    \ = 0;\n    if(n > m){\n        return -1;\n    }\n    else{\n        for(var\
    \ i = n; i <= m; i++){\n            sum += i;\n        }\n        result = Math.round(sum\
    \ / ((m-n)+1));\n        return \"0b\" + result.toString(2);\n    }\n}", "\t//\
    \ Your code here\n\tif(n > m){\n\t\treturn -1;\n\t}\n\tvar avg = Math.round((n\
    \ + m) / 2);\n\treturn \"0b\" + avg.toString(2);\n}", "  return n > m ? -1 : (~~((n\
    \ + m) / 2)).toString(2);\n}", "    if(n>m){\n        return -1;\n    }\n    let\
    \ sum = 0;\n    for(let i = n; i<=m; i++){\n        sum += i;\n    }\n    let\
    \ avg = Math.round(sum/(m-n+1));\n    console.log(avg);\n    return avg.toString(2);\n\
    }", "    return average(n, m)\n}\n", "    // Your code goes here!\n    // Hint:\
    \ use toString(2) to convert a number to binary\n    var total = 0;\n    var count\
    \ = 0;\n    if (n > m) {\n      return -1;\n    }\n    else {\n      for (i =\
    \ n; i <= m; i++) {\n        total += i;\n        count += 1;\n      }\n     \
    \ return (Math.round(total/count)).toString(2);\n    }\n  }", "\tlet avg = Math.round((n\
    \ + m) / 2);\n\treturn n > m ? -1 : \"0b\" + avg.toString(2);\n}\n", "    if(n\
    \ > m){\n        return -1;\n    }\n    var avg = Math.round((n + m) / 2);\n \
    \   return avg.toString(2);\n}", "  if (n > m) {\n    return -1;\n  } else {\n\
    \    var sum = 0;\n    for (var i = n; i <= m; i++){\n      sum += i;\n    }\n\
    \    var avg = sum / (m - n + 1);\n    var rounded_avg = Math.round(avg);\n  \
    \  var binary_avg = rounded_avg.toString(2);\n    return binary_avg;\n  }\n}",
  "  if (n > m) {\n    return -1;\n  }\n  var sum = 0;\n  for (var i = n; i <= m;\
    \ i++) {\n    sum += i;\n  }\n  var average = Math.round(sum / (m - n + 1));\n\
    \  var binary = average.toString(2);\n  return \"0b\" + binary;\n}\n", "    var\
    \ sum = 0;\n    if(n>m){\n        return -1;\n    }\n    for(i=n; i<=m; i++){\n\
    \        sum+=i;\n    }\n    return sum/((m-n)+1);\n}", "  //your code here\n\
    }\n", "\tif(n > m){\n\t\treturn -1;\n\t}\n\treturn \"0b\" + (Math.round((n + m)\
    \ / 2)).toString(2);\n}", "    if(n > m){\n        return -1;\n    } else {\n\
    \        let sum = n;\n        for(let i = n + 1; i <= m; i++){\n            sum\
    \ += i;\n        }\n        return \"0b\" + sum / (m - n + 1);\n    }\n}\n", " \
    \   var sum = 0;\n    var avg = 0;\n    if(n > m){\n        return -1;\n    }\n\
    \    else{\n        for(var i = n; i <= m; i++){\n            sum += i;\n    \
    \    }\n        avg = Math.round(sum / (m - n + 1));\n        avg = avg.toString(2);\n\
    \        return avg;\n    }\n}\n", "  if (n > m) {\n    return -1;\n  }\n  let\
    \ sum = 0;\n  let count = 0;\n  for (let i = n; i <= m; i++) {\n    sum += i;\n\
    \    count += 1;\n  }\n  const avg = Math.round(sum / count);\n  return `0b${(avg).toString(2)}`;\n\
    }\n", "  if (n > m) return -1;\n  return (n + m) / 2\n}\nrounded_avg(20, 33)",
  "    if(n > m){\n        return -1;\n    }\n    var avg = (n + m) / 2;\n    return\
    \ Math.round(avg).toString(2);\n}\n", "  let arr = []\n  let total = 0\n  if(n\
    \ > m){\n    return -1\n  }\n  for(let i = n; i <= m; i++){\n    arr.push(i)\n\
    \  }\n  for(let i = 0; i < arr.length; i++){\n    total += arr[i]\n  }\n  let\
    \ avg = total / arr.length\n  let rounded = Math.round(avg)\n  return `0b${rounded.toString(2)}`\n\
    }\n", "  if (n > m) {\n    return -1;\n  }\n  var start = n;\n  var end = m;\n\
    \  var count = 0;\n  while (start <= end) {\n    count += start;\n    start +=\
    \ 1;\n  }\n  return \"0b\" + (count / (m - n + 1)).toString(2);\n}\n", "    var\
    \ sum = 0;\n    var counter = 0;\n    if(n > m){\n        return -1;\n    }\n\
    \    while(n <= m){\n        sum += n;\n        n++;\n        counter++;\n   \
    \ }\n    var avg = Math.round(sum/counter);\n    avg = avg.toString(2);\n    return\
    \ \"0b\" + avg;\n}", "\tif(n>m){\n\t\treturn -1;\n\t}\n\tvar rounded_avg = 0;\n\
    \tfor(i=n; i<=m; i++){\n\t\trounded_avg += i;\n\t}\n\trounded_avg = Math.round(rounded_avg/(m-n+1));\n\
    \trounded_avg = rounded_avg.toString(2);\n\trounded_avg = \"0b\" + rounded_avg;\n\
    \treturn rounded_avg;\n}", "  //code goes here!\n}\n", "\tif(n > m){\n\t\treturn\
    \ -1;\n\t}\n\treturn ((n + m) / 2);\n}\n", "  let total = 0;\n  let nums = [];\n\
    \  let result = 0;\n  if(n > m){\n    return -1;\n  }else{\n    for(let i = n;\
    \ i <= m; i++){\n      nums.push(i);\n    }\n    total = nums.reduce((a, b) =>\
    \ a + b);\n    result = Math.round(total / nums.length);\n    return result.toString(2);\n\
    \  }\n}", "    if(n>m){\n        return -1;\n    }\n    let rounded = Math.round((n+m)/2);\n\
    \    let binary = rounded.toString(2);\n    return `0b${binary}`;\n}", "    var\
    \ sum = 0;\n    var count = 0;\n    for(var i = n; i <= m; i++){\n        sum\
    \ += i;\n        count++;\n    }\n    if(n > m){\n        return -1;\n    }\n\
    \    return '0b' + Math.round(sum/count).toString(2);\n}\n", "    if(n > m){\n\
    \        return -1;\n    }\n    var avg = 0;\n    var count = 0;\n    for(i =\
    \ n; i <= m; i++){\n        avg += i;\n        count++;\n    }\n    avg = avg\
    \ / count;\n    avg = Math.round(avg);\n    return avg.toString(2);\n}", "   \
    \ var sum = 0;\n    var count = 0;\n    if(n > m){\n        return -1;\n    }\n\
    \    for(var i = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n\
    \    var result = Math.round(sum/count);\n    return \"0b\" + result.toString(2);\n\
    }\n", "    // round average to nearest int\n    var average = Math.round((n +\
    \ m) / 2);\n    // if n is greater than m, return -1\n    if (n > m) {\n     \
    \   return -1;\n    } else {\n        // otherwise convert the average to binary\
    \ and return \n        return \"0b\" + average.toString(2);\n    }\n}\n", "  \
    \  if(n>m){\n        return -1;\n    }\n    let arr = [];\n    for(let i = n;\
    \ i<=m; i++){\n        arr.push(i);\n    }\n    let sum = arr.reduce((acc, val)=>{\n\
    \        return acc+val;\n    }, 0);\n    let avg = Math.round(sum/arr.length);\n\
    \    let binary = avg.toString(2);\n    return '0b'+binary;\n}", "    if(n>m){\n\
    \        return -1;\n    }\n    let sum = 0;\n    for(let i = n; i<=m; i++){\n\
    \        sum += i;\n    }\n    return ((sum/(m-n+1))|0).toString(2);\n}\n", " \
    \   let avg = Math.round((n + m) / 2);\n    if (n > m) {\n        return -1;\n\
    \    }\n    return '0b' + avg.toString(2);\n}\n", "    var sum = 0;\n    var avg\
    \ = 0;\n    var str_m = \"\";\n    var str_n = \"\";\n    for(var i = n; i <=\
    \ m; i++){\n        sum += i;\n    }\n    avg = Math.round(sum / (m - n + 1));\n\
    \    //console.log(avg);\n    str_n = n.toString(2);\n    str_m = m.toString(2);\n\
    \    if(str_n.length > str_m.length){\n        str_m = \"0b\" + \"0\".repeat(str_n.length\
    \ - str_m.length) + str_m.slice(2);\n    }\n    if(str_m.length > str_n.length){\n\
    \        str_n = \"0b\" + \"0\".repeat(str_m.length - str_n.length) + str_n.slice(2);\n\
    \    }\n    if(n > m){\n        return -1;\n    }\n    str_m = avg.toString(2);\n\
    \    str_n = \"0b\" + str_m;\n    return str_n;\n}", "    let bin = 0;\n    let\
    \ sum = 0;\n    let count = 0;\n    if(n > m){\n        return -1;\n    }\n  \
    \  for(let i = n; i <= m; i++){\n        sum += i;\n        count++;\n    }\n\
    \    let div = sum / count;\n    if(Number.isInteger(div)){\n        bin = div.toString(2);\n\
    \    }else{\n        bin = Math.round(div).toString(2);\n    }\n    return `0b${bin}`;\n\
    }\n", "    const avg = Math.round((n + m) / 2);\n    return n > m ? -1 : Math.abs(avg).toString(2);\n\
    }", "    if(n>m){\n        return -1;\n    }\n    var result = Math.round((n+m)/2);\n\
    \    return (result >>> 0).toString(2);\n}", "  if (n > m) return -1;\n  var sum\
    \ = 0;\n  for (var i = n; i <= m; i++) {\n    sum += i;\n  }\n  return \"0b\"\
    \ + Math.round(sum / (m - n + 1)).toString(2);\n}\n", "    var average = Math.round((n\
    \ + m) / 2);\n    if (n > m) {\n        return -1;\n    } else {\n        return\
    \ (average.toString(2));\n    }\n}", "  if (n>m) return -1;\n  var sum = 0;\n\
    \  for (var i = n; i <= m; i++) {\n    sum += i;\n  }\n  var sum = Math.round(sum/(m-n+1));\n\
    \  var binary = sum.toString(2);\n  return '0b' + binary;\n}", "    var sum =\
    \ 0;\n    var count = 0;\n    if(n > m){\n        return -1;\n    }\n    for(var\
    \ i = n; i <= m; i++){\n        sum += i;\n        count += 1;\n    }\n    var\
    \ rounded = Math.round(sum/count);\n    var num = rounded.toString(2);\n    return\
    \ '0b' + num;\n}\n", "    if(n > m){\n        return -1;\n    }\n    return Math.round((n\
    \ + m) / 2).toString(2);\n}\n", "    if(n > m){\n        return -1;\n    } else\
    \ {\n        var result = 0;\n        var length = m - n + 1;\n        for(var\
    \ i = n; i <= m; i++){\n            result += i;\n        }\n        result =\
    \ Math.round(result / length);\n        return \"0b\" + result.toString(2);\n\
    \    }\n}", "    if(n>m){\n        return -1;\n    }\n    var avg = Math.round((n+m)/2);\n\
    \    return '0b' + avg.toString(2);\n}", "\tif(n > m){\n\t\treturn -1;\n\t}\n\t\
    var sum = 0;\n\tfor(var i = n; i <= m; i++){\n\t\tsum += i;\n\t}\n\tvar avg =\
    \ Math.round(sum / (m - n + 1));\n\treturn \"0b\" + avg.toString(2);\n}\n", " \
    \   if(n>m){\n        return -1;\n    }\n    var sum = 0;\n    for(var i = n;\
    \ i<=m; i++){\n        sum+=i;\n    }\n    var result = Math.round(sum/(m-n+1));\n\
    \    return \"0b\"+result.toString(2);\n}", "    let result = 0;\n    let avg\
    \ = 0;\n    let total = 0;\n    if(n > m){\n        return -1;\n    }\n    while(n\
    \ <= m){\n        total += n;\n        n++;\n    }\n    avg = total / (m - n +\
    \ 1);\n    result = Math.round(avg);\n    return \"0b\" + result.toString(2);\n\
    }\n", "\tif(n>m){\n\t\treturn -1;\n\t}\n\tvar sum = 0;\n\tvar count = 0;\n\tfor(var\
    \ i = n; i<=m; i++){\n\t\tsum += i;\n\t\tcount++;\n\t}\n\tvar answer = Math.round(sum/count);\n\
    \tvar binary = Number(answer).toString(2);\n\treturn '0b' + binary;\n}", "   \
    \ if(n > m){\n        return -1;\n    }\n    let sum = 0;\n    let count = 0;\n\
    \    while(n <= m){\n        sum += n;\n        n++;\n        count++;\n    }\n\
    \    let avg = sum / count;\n    let rounded = Math.round(avg);\n    let bin =\
    \ \"0b\" + rounded.toString(2);\n    return bin;\n}", "    if(n > m){\n      \
    \  return -1;\n    }\n    return \"0b\" + Math.round((n + m) / 2).toString(2);\n\
    }", "    var sum = 0;\n    if(n > m){\n        return -1;\n    }\n    else{\n\
    \        for(var i = n; i <= m; i++){\n            sum += i;\n        }\n    \
    \    var avg = Math.round(sum / (m - n + 1));\n        return avg.toString(2);\n\
    \    }\n}", "\tif(n > m){\n\t\treturn -1;\n\t}\n\t\n\tvar sum = 0;\n\tfor(var\
    \ i = n; i <= m; i++){\n\t\tsum += i;\n\t}\n\tvar roundedAvg = Math.round(sum\
    \ / (m - n + 1));\n\tvar result = '0b' + roundedAvg.toString(2);\n\treturn result;\n\
    }", "    // if (n > m) return -1;\n    // var sum = 0;\n    // for (var i = n;\
    \ i <= m; i++) {\n    //     sum += i;\n    // }\n    // return (Math.round(sum\
    \ / (m - n + 1))).toString(2);\n    return n > m ? -1 : (Math.round((m + n) /\
    \ 2)).toString(2);\n}\n", "    if(n>m){\n        return -1;\n    }\n    let sum\
    \ = 0;\n    for(let i = n; i<=m; i++){\n        sum += i;\n    }\n    return sum;\n\
    }\n", "  if (n > m) return -1;\n  var sum = 0;\n  for (var i = n; i <= m; i++)\
    \ {\n    sum += i;\n  }\n  return '0b' + Math.round(sum / (m - n + 1)).toString(2);\n\
    }\n", "  return (n > m) ? -1 : \n    (n == m) ? n.toString(2) : \n      Math.round((n\
    \ + m) / 2).toString(2);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

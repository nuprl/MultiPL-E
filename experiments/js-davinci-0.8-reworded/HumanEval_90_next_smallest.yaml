name: HumanEval_90_next_smallest
language: js
prompt: "//You are given an array of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\n// Return undefined if there\
  \ is no such element.\n// >>> next_smallest([1, 2, 3, 4, 5])\n// 2\n// >>> next_smallest([5,\
  \ 1, 4, 3, 2])\n// 2\n// >>> next_smallest([])\n// undefined\n// >>> next_smallest([1,\
  \ 1])\n// undefined\nfunction next_smallest(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = next_smallest;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),2);\n  assert.deepEqual(candidate([5,\
  \ 1, 4, 3, 2]),2);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([1, 1, 1, 1, 0]),1);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([-35, 34, 12, -45]),-35);\n}\n\n\
  test();"
completions: ["    if (lst.length > 1){\n        lst.sort();\n        for (var i =\
    \ 0; i < lst.length; i++){\n            if (lst[i] < lst[i+1]){\n            \
    \    return lst[i+1];\n            }\n        }\n    }\n    return undefined;\n\
    }", "    if (lst.length == 0) return undefined;\n    if (lst.length == 1) return\
    \ undefined;\n    var min = Math.min(...lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    return Math.min(...lst);\n}\n", "\tif(lst.length<=1){\n\
    \t\treturn undefined;\n\t}\n\tvar smallest=Math.min(...lst);\n\tvar second_smallest=Number.MAX_VALUE;\n\
    \tfor(var i in lst){\n\t\tif(lst[i]>smallest&&lst[i]<second_smallest){\n\t\t\t\
    second_smallest=lst[i];\n\t\t}\n\t}\n\tif(second_smallest==Number.MAX_VALUE){\n\
    \t\treturn undefined;\n\t}\n\treturn second_smallest;\n}", "    return undefined;\n\
    }\n", "    if (lst.length < 2){\n        return undefined;\n    }\n    else{\n\
    \        let smallest = lst[0];\n        let secondSmallest = undefined;\n   \
    \     for (let i = 1; i < lst.length; i++){\n            if (lst[i] < smallest){\n\
    \                secondSmallest = smallest;\n                smallest = lst[i];\n\
    \            }\n            else if ((lst[i] < secondSmallest || secondSmallest\
    \ === undefined) && lst[i] !== smallest){\n                secondSmallest = lst[i];\n\
    \            }\n        }\n        return secondSmallest;\n    }\n}\n", "    var\
    \ smallest = Math.min(...lst);\n    var second_smallest = Math.max(...lst);\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < second_smallest\
    \ && lst[i] > smallest){\n            second_smallest = lst[i];\n        }\n \
    \   }\n    if (smallest == second_smallest){\n        return undefined;\n    }\n\
    \    return second_smallest;\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    else {\n        var smallest = lst[0];\n        var next_smallest\
    \ = lst[1];\n        for (var i = 0; i < lst.length; i++){\n            if (lst[i]\
    \ < smallest){\n                next_smallest = smallest;\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < next_smallest && lst[i]\
    \ > smallest){\n                next_smallest = lst[i];\n            }\n     \
    \   }\n        return next_smallest;\n    }\n}\n", "    if (lst.length === 0)\
    \ return undefined;\n    let sort_list = lst.sort((a, b) => a - b);\n    let smallest\
    \ = sort_list[0];\n    let i = 1;\n    while (sort_list[i] === smallest) {\n \
    \       i += 1;\n    }\n    return sort_list[i];\n}\n", "    if (lst.length <=\
    \ 1){\n        return undefined;\n    }\n    let smallest = lst[0];\n    let second_smallest\
    \ = undefined;\n    for (let i = 1; i < lst.length; i++){\n        if (lst[i]\
    \ < smallest){\n            second_smallest = smallest;\n            smallest\
    \ = lst[i];\n        } else if (lst[i] < second_smallest || second_smallest ===\
    \ undefined){\n            second_smallest = lst[i];\n        }\n    }\n    return\
    \ second_smallest;\n}\n", "    if (lst.length == 0) {\n        return undefined;\n\
    \    }\n    var lst_sorted = lst.sort();\n    if (lst_sorted[0] != lst_sorted[1])\
    \ {\n        return lst_sorted[1];\n    }\n    else {\n        var result = lst_sorted[1];\n\
    \        for (var i = 1; i < lst_sorted.length; i++) {\n            if (lst_sorted[i]\
    \ != result) {\n                return lst_sorted[i];\n            }\n       \
    \ }\n    }\n    return undefined;\n}", "    if (lst.length === 0) return undefined;\n\
    \    if (lst.length === 1) return undefined;\n    if (lst.length === 2) {\n  \
    \      if (lst[0] === lst[1]) return undefined;\n        else return lst[1];\n\
    \    }\n    var smallest = Number.MAX_VALUE;\n    var second_smallest = Number.MAX_VALUE;\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] < smallest) {\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if (lst[i] > smallest && lst[i] < second_smallest) {\n \
    \           second_smallest = lst[i];\n        }\n    }\n    if (second_smallest\
    \ === Number.MAX_VALUE) return undefined;\n    return second_smallest;\n}", " \
    \   var smallest = Math.min(...lst);\n    var result = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] != smallest){\n            result.push(lst[i]);\n\
    \        }\n    }\n    if(result.length > 0){\n        return Math.min(...result);\n\
    \    }else{\n        return undefined;\n    }\n}", "    var lst=lst.slice().sort(function(a,b){return\
    \ a-b});\n    var lst2=[];\n    for(var i=0;i<lst.length;i++){\n        if(lst2.indexOf(lst[i])==-1){\n\
    \            lst2.push(lst[i]);\n        }\n    }\n    if(lst2.length>1){\n  \
    \      return lst2[1];\n    }\n    else{\n        return undefined;\n    }\n}",
  "    if (lst.length < 2){\n        return undefined;\n    }\n    var smallest =\
    \ lst[0];\n    var secondSmallest = lst[1];\n    for (var i = 1; i < lst.length;\
    \ i++){\n        if (lst[i] < smallest){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if (lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if (lst.length < 2){\n        return undefined;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if (lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if (lst.length == 0) {\n        return undefined;\n    }\n    var min\
    \ = lst[0];\n    var second_min = lst[0];\n    for (i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < min) {\n            second_min = min;\n            min\
    \ = lst[i];\n        }\n        else if (lst[i] < second_min && lst[i] != min)\
    \ {\n            second_min = lst[i];\n        }\n    }\n    if (second_min ==\
    \ min) {\n        return undefined;\n    }\n    return second_min;\n}", "    if\
    \ (lst.length < 2){\n        return undefined;\n    } else {\n        var smallest\
    \ = lst[0];\n        var second_smallest = lst[1];\n        for (var i = 0; i\
    \ < lst.length; i++){\n            if (lst[i] < smallest){\n                second_smallest\
    \ = smallest;\n                smallest = lst[i];\n            } else if (lst[i]\
    \ < second_smallest && lst[i] > smallest){\n                second_smallest =\
    \ lst[i];\n            }\n        }\n        return second_smallest;\n    }\n\
    }\n", "    //return lst.sort()[1];  // will return undefined for empty list\n\
    \    if (lst.length < 2) {\n        return undefined;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = undefined;\n    for (var i = 1; i < lst.length;\
    \ i++) {\n        if (lst[i] < smallest) {\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        } else if ((lst[i] < second_smallest)\
    \ || (second_smallest === undefined)) {\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}", "    if (lst.length == 1){\n\
    \        return undefined;\n    }\n    else{\n        var res = Math.min(...lst);\n\
    \        lst.splice(lst.indexOf(res), 1);\n        var res2 = Math.min(...lst);\n\
    \        return res2;\n    }\n}\n", "    if (lst.length<=1){\n        return undefined;\n\
    \    }\n    var smallest=lst[0];\n    var second_smallest;\n    for (var i=1;i<lst.length;i++){\n\
    \        if (lst[i]<smallest){\n            second_smallest=smallest;\n      \
    \      smallest=lst[i];\n        }\n        else if (lst[i]>smallest && lst[i]<second_smallest){\n\
    \            second_smallest=lst[i];\n        }\n    }\n    return second_smallest;\n\
    }", "  var max = Math.max(...lst);\n  var min = Math.min(...lst);\n  var list\
    \ = [];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] != max && lst[i]\
    \ != min){\n      list.push(lst[i]);\n    }\n  }\n  if(list.length == 0){\n  \
    \  return undefined;\n  }else{\n    return Math.min(...list);\n  }\n}\n", "  \
    \  let next_smallest = lst[0];\n    for(let i = 0; i < lst.length; i++){\n   \
    \     for(let j = 0; j < lst.length; j++){\n            if(lst[i] < lst[j] &&\
    \ lst[i] < next_smallest){\n                next_smallest = lst[i];\n        \
    \    }\n        }\n    }\n    return next_smallest;\n}", "    if (lst.length <=\
    \ 1){\n        return undefined;\n    }\n    let min = lst[0];\n    let min2 =\
    \ lst[1];\n    if (min > min2){\n        let temp = min;\n        min = min2;\n\
    \        min2 = temp;\n    }\n    for (let i = 2; i < lst.length; i++){\n    \
    \    if (lst[i] < min2 && lst[i] > min){\n            min2 = lst[i];\n       \
    \ }\n        else if (lst[i] < min){\n            min2 = min;\n            min\
    \ = lst[i];\n        }\n    }\n    return min2;\n}", "\t// your code goes here\n\
    \tvar smallest=lst[0];\n\tvar secondSmallest=lst[1];\n\tvar temp=0;\n\tfor(var\
    \ i=0;i<lst.length;i++){\n\t\tif(lst[i]<smallest){\n\t\t\tsmallest=lst[i];\n\t\
    \t}\n\t}\n\tfor(var i=0;i<lst.length;i++){\n\t\tif(lst[i]<secondSmallest && lst[i]>smallest){\n\
    \t\t\tsecondSmallest=lst[i];\n\t\t}\n\t}\n\treturn secondSmallest;\n}", "    let\
    \ smallest = lst[0];\n    let secondSmallest = lst[1];\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] < smallest){\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if(lst[i]\
    \ < secondSmallest && lst[i] > smallest){\n            secondSmallest = lst[i];\n\
    \        }\n    }\n    if(lst.length === 0){\n        return undefined;\n    }\n\
    \    if(lst.length === 1){\n        return undefined;\n    }\n    if(lst.length\
    \ === 2){\n        if(lst[0] === lst[1]){\n            return undefined;\n   \
    \     }\n    }\n    return secondSmallest;\n}", "  let min = Infinity;\n  let\
    \ nmin = Infinity;\n  for (let i = 0; i < lst.length; i++){\n    if (lst[i] <\
    \ min){\n      nmin = min;\n      min = lst[i];\n    }\n    else if (lst[i] <\
    \ nmin && lst[i] > min){\n      nmin = lst[i];\n    }\n  }\n  if (nmin == Infinity){\n\
    \    return undefined;\n  }\n  return nmin;\n}", "\tvar small = Math.min(...lst);\n\
    \tvar next = Math.max(...lst);\n\tfor (let i = 0; i < lst.length; i++){\n\t\t\
    if (lst[i] > small && lst[i] < next){\n\t\t\tnext = lst[i];\n\t\t}\n\t}\n\tif\
    \ (next === Math.max(...lst)){\n\t\treturn undefined;\n\t}\n\treturn next;\n}",
  "    let smallest = lst[0]\n    let smallest_index = 0\n    for(let i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i]\n     \
    \       smallest_index = i\n        }\n    }\n    lst.splice(smallest_index, 1)\n\
    \    smallest = lst[0]\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i]\n        }\n    }\n    return smallest\n\
    }", "\tif(lst.length <= 2)\n\t\treturn undefined;\n\tlst.sort(function(a, b){return\
    \ a-b});\n\tvar min = lst[0];\n\tvar sec = lst[1];\n\tfor(var i = 2; i < lst.length;\
    \ i++){\n\t\tif(lst[i] > min){\n\t\t\tsec = lst[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn sec;\n}\n", "    let s = Infinity;\n    let s2 = Infinity;\n    for (let\
    \ i=0; i<lst.length; i++){\n        if (lst[i]<s){\n            s2 = s;\n    \
    \        s = lst[i];\n        } else if (lst[i]<s2){\n            s2 = lst[i];\n\
    \        }\n    }\n    if (s2 === Infinity){\n        return undefined;\n    }\n\
    \    return s2;\n}", "    var result, min1, min2;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(i == 0){\n            min1 = lst[i];\n        }\n        else\
    \ if(lst[i] < min1){\n            min2 = min1;\n            min1 = lst[i];\n \
    \       }\n        else if(lst[i] < min2){\n            min2 = lst[i];\n     \
    \   }\n    }\n    return min2;\n}\n", "  if (lst.length<2){\n    return undefined;\n\
    \  }\n  var first_min = 0;\n  var second_min = 0;\n  for (var i=0; i<lst.length;\
    \ i++){\n    if (lst[i]<lst[first_min]){\n      second_min = first_min;\n    \
    \  first_min = i;\n    }\n    else if (lst[i]<lst[second_min] && lst[i]!=lst[first_min]){\n\
    \      second_min = i;\n    }\n  }\n  if (second_min == first_min){\n    return\
    \ undefined;\n  }\n  return lst[second_min];\n}\n\n", "  if (lst.length > 2){\n\
    \    if (lst[0] < lst[1]){\n      if (lst[0] === lst[1]){\n        return undefined;\n\
    \      }\n      return lst[0];\n    }\n    else{\n      if (lst[0] === lst[1]){\n\
    \        return undefined;\n      }\n      return lst[1];\n    }\n  }\n  else{\n\
    \    return undefined;\n  }\n}\n", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    let smallest = lst[0];\n    let second_smallest = lst[1];\n    for\
    \ (let i = 1; i < lst.length; i++) {\n        let current = lst[i];\n        if\
    \ (current < smallest){\n            second_smallest = smallest;\n           \
    \ smallest = current;\n        } else if (current < second_smallest){\n      \
    \      second_smallest = current;\n        }\n    }\n    return second_smallest;\n\
    }\n\n", "    if (lst.length < 2){\n        return undefined;\n    }\n    let smallest\
    \ = lst[0];\n    let sec_smallest = lst[1];\n    for (let i = 1; i < lst.length;\
    \ i++){\n        if (lst[i] < smallest){\n            sec_smallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if (lst[i] < sec_smallest){\n\
    \            sec_smallest = lst[i];\n        }\n    }\n    return sec_smallest;\n\
    }", "\tif(lst.length < 2){\n\t\treturn undefined;\n\t}\n\tlet max = Math.max(...lst);\n\
    \tlet min = Math.min(...lst);\n\tlet sMin = max;\n\tlet sMinFound = false;\n\t\
    for(let i = 0; i < lst.length; i++){\n\t\tif(lst[i] < sMin && lst[i] > min){\n\
    \t\t\tsMin = lst[i];\n\t\t\tsMinFound = true;\n\t\t}\n\t}\n\tif(sMinFound){\n\t\
    \treturn sMin;\n\t}\n\treturn undefined;\n}", "    if (lst.length < 2){\n    \
    \    return undefined;\n    }\n    else {\n        var smallest = lst[0];\n  \
    \      var next_smallest = null;\n        for (var i = 1; i < lst.length; i++){\n\
    \            if (lst[i] < smallest){\n                smallest = lst[i];\n   \
    \         }\n            else if (lst[i] > smallest && next_smallest == null){\n\
    \                next_smallest = lst[i];\n            }\n            else if (lst[i]\
    \ > smallest && lst[i] < next_smallest){\n                next_smallest = lst[i];\n\
    \            }\n        }\n        return next_smallest;\n    }\n}\n", "\tif(lst.length\
    \ == 0){\n\t\treturn undefined;\n\t}\n\tvar min = lst[0];\n\tvar nxt_min = lst[0];\n\
    \tfor(var i = 0; i < lst.length; i++){\n\t\tif(lst[i] < min){\n\t\t\tnxt_min =\
    \ min;\n\t\t\tmin = lst[i];\n\t\t}\n\t\telse if(lst[i] < nxt_min && lst[i] !=\
    \ min){\n\t\t\tnxt_min = lst[i];\n\t\t}\n\t}\n\tif(nxt_min == min){\n\t\treturn\
    \ undefined;\n\t}\n\treturn nxt_min;\n}", "    var min = Math.min(...lst);\n \
    \   var mincount =0;\n    var minindex = 0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i] == min){\n            mincount++;\n            minindex = i;\n\
    \        }\n    }\n    if(mincount>1){\n        return undefined;\n    }\n   \
    \ var min2 = min;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]<min2\
    \ && i!=minindex){\n            min2 = lst[i];\n        }\n    }\n    return min2;\n\
    }\n", "    if (lst.length === 0) return undefined;\n    else if (lst.length ===\
    \ 1) return undefined;\n    else if (lst.length === 2) {\n        if (lst[0] !==\
    \ lst[1]) return lst[1];\n        else return undefined;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < smallest) {\n            smallest = lst[i];\n \
    \       }\n    }\n    for (var j = 0; j < lst.length; j++) {\n        if (lst[j]\
    \ < second_smallest && lst[j] > smallest) {\n            second_smallest = lst[j];\n\
    \        }\n    }\n    return second_smallest;\n}", "    if (lst.length <= 1){\n\
    \        return undefined;\n    }\n    let min = min_value(lst);\n    for (let\
    \ n of lst){\n        if (n > min){\n            return n;\n        }\n    }\n\
    \    return undefined;\n}\n", "    let my_lst = new Set(lst)\n    let my_lst2\
    \ = [...my_lst]\n    my_lst2.sort(function(a, b){return a-b})\n    if (my_lst2.length\
    \ == 1){\n        return undefined\n    }\n    else{\n        return my_lst2[1]\n\
    \    }\n}", "  var min = Math.min(...lst);\n  var min_index = lst.indexOf(min);\n\
    \  lst.splice(min_index, 1);\n  if (lst.length == 0){\n    return undefined;\n\
    \  }\n  return Math.min(...lst);\n}", "    if (lst.length < 2){\n        return\
    \ undefined;\n    }\n    var min = lst[0];\n    var secMin = min;\n    for (var\
    \ i = 1; i < lst.length; i++){\n        if (lst[i] < min){\n            secMin\
    \ = min;\n            min = lst[i];\n        }\n        else if (lst[i] < secMin\
    \ && lst[i] > min){\n            secMin = lst[i];\n        }\n    }\n    if (secMin\
    \ == min){\n        return undefined;\n    }\n    return secMin;\n}\n", "  //\
    \ Your code here.\n  var j = 0;\n  var temp = [];\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] < lst[j]){\n      j = i;\n    }\n  }\n  for(var i = 0;\
    \ i < lst.length; i++){\n    if(lst[i] > lst[j]){\n      temp.push(lst[i]);\n\
    \    }\n  }\n  if(temp.length === 0){\n    return undefined;\n  }\n  temp.sort();\n\
    \  return temp[0];\n}\n", "    var smallest = lst[0];\n    var secondSmallest\
    \ = lst[1];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            secondSmallest = smallest;\n            smallest = lst[i];\n    \
    \    }\n        else if(lst[i] < secondSmallest && lst[i] != smallest){\n    \
    \        secondSmallest = lst[i];\n        }\n    }\n    if(lst.length < 2){\n\
    \        return undefined;\n    }\n    else if(secondSmallest == smallest){\n\
    \        return undefined;\n    }\n    else{\n        return secondSmallest;\n\
    \    }\n}", "    let min2 = undefined;\n    let min = Math.min(...lst);\n    for\
    \ (let i = 0; i < lst.length; i++){\n        if (lst[i] !== min){\n          \
    \  if (min2 === undefined){\n                min2 = lst[i];\n            }\n \
    \           else if (lst[i] < min2){\n                min2 = lst[i];\n       \
    \     }\n        }\n    }\n    return min2;\n}", "\tif(lst.length < 2){\n\t\t\
    return undefined;\n\t}\n\tvar min = lst[0];\n\tvar second_min = lst[1];\n\tvar\
    \ second_min_initalized = false;\n\tfor(var i = 1; i < lst.length; i++){\n\t\t\
    if(lst[i] < min){\n\t\t\tsecond_min = min;\n\t\t\tmin = lst[i];\n\t\t\tsecond_min_initalized\
    \ = true;\n\t\t}\n\t\telse if(lst[i] < second_min && second_min_initalized){\n\
    \t\t\tsecond_min = lst[i];\n\t\t}\n\t}\n\tif(!second_min_initalized){\n\t\treturn\
    \ undefined;\n\t}\n\treturn second_min;\n}\n", "    let smallest = Math.min(...lst);\n\
    \    let second_smallest = Number.MAX_VALUE;\n    for (let i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < second_smallest && lst[i] > smallest){\n       \
    \     second_smallest = lst[i];\n        }\n    }\n    if (second_smallest ==\
    \ Number.MAX_VALUE){\n        return undefined;\n    }\n    return second_smallest;\n\
    }", "    if (lst.length === 0){\n        return undefined;\n    }\n    let smallest\
    \ = lst[0];\n    let nextSmallest = lst[0];\n    let seen = {};\n    for (let\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < smallest){\n            smallest\
    \ = lst[i];\n        }\n        if (seen[lst[i]]){\n            seen[lst[i]] +=\
    \ 1;\n        } else {\n            seen[lst[i]] = 1;\n        }\n    }\n    if\
    \ (Object.keys(seen).length === 1){\n        return undefined;\n    }\n    for\
    \ (let i = 0; i < lst.length; i++){\n        if (lst[i] > smallest && lst[i] <\
    \ nextSmallest){\n            nextSmallest = lst[i];\n        }\n    }\n    return\
    \ nextSmallest;\n}", "    var currentSmallest = lst[0];\n    var current2ndSmallest\
    \ = null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < currentSmallest){\n\
    \            current2ndSmallest = currentSmallest;\n            currentSmallest\
    \ = lst[i];\n        } else if (lst[i] < current2ndSmallest || current2ndSmallest\
    \ === null){\n            current2ndSmallest = lst[i];\n        }\n    }\n   \
    \ return current2ndSmallest;\n}\n", "    //pass the first if statement\n    if(lst.length\
    \ >=2){\n        //sort the list \n        sorted = lst.sort(function(a,b){return\
    \ a-b});\n        return sorted[1];\n    }else{\n        return undefined;\n \
    \   }\n}", "    var min = Infinity;\n    var sm_min = Infinity;\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] < min){\n            sm_min =\
    \ min;\n            min = lst[i];\n        }\n        else if(lst[i] < sm_min\
    \ && lst[i] != min){\n            sm_min = lst[i];\n        }\n    }\n    if(sm_min\
    \ == Infinity){\n        return undefined;\n    }\n    return sm_min;\n}", " \
    \   if (lst.length === 0){\n        return undefined;\n    }\n    else if (lst.length\
    \ === 1){\n        return undefined;\n    }\n    else if (lst.length === 2){\n\
    \        if (lst[0] === lst[1]){\n            return undefined;\n        }\n \
    \       else{\n            return lst[1];\n        }\n    }\n    else{\n     \
    \   let smallest = lst[0];\n        let secondSmallest = lst[1];\n        for\
    \ (let i = 0; i < lst.length; i++){\n            if (lst[i] < smallest){\n   \
    \             smallest = lst[i];\n            }\n        }\n        for (let i\
    \ = 0; i < lst.length; i++){\n            if (lst[i] > smallest && lst[i] < secondSmallest){\n\
    \                secondSmallest = lst[i];\n            }\n        }\n        return\
    \ secondSmallest;\n    }\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    let new_lst = lst.sort();\n    let new_lst2 = [];\n    for (let i=0;\
    \ i<new_lst.length; i++){\n        if (new_lst[i] == new_lst[i+1]){\n        \
    \    new_lst2.push(new_lst[i]);\n        }\n    }\n    if (new_lst2.length > 1){\n\
    \        return undefined;\n    }\n    else{\n        for (let i=0; i<new_lst.length;\
    \ i++){\n            if (new_lst[i] == new_lst2[0]){\n                return new_lst[i+2];\n\
    \            }\n        }\n    }\n}", "    if (lst.length === 0) {\n        return\
    \ undefined;\n    }\n    let min_index = 0;\n    let second_min_index = 0;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < lst[min_index])\
    \ {\n            second_min_index = min_index;\n            min_index = i;\n \
    \       } else if (lst[i] < lst[second_min_index]) {\n            second_min_index\
    \ = i;\n        }\n    }\n    return lst[second_min_index];\n}\n", "    var a\
    \ = -Infinity;\n    var b = -Infinity;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] > a){\n            a = lst[i];\n        }\n        else if\
    \ (lst[i] > b){\n            b = lst[i];\n        }\n    }\n    if (b == -Infinity){\n\
    \        return;\n    }\n    return b;\n}\n", "    if (lst.length < 2){\n    \
    \    return undefined;\n    }\n    var largest = lst[0];\n    var second_largest\
    \ = lst[0];\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > largest){\n\
    \            second_largest = largest;\n            largest = lst[i];\n      \
    \  }\n        else if (lst[i] > second_largest && lst[i] < largest){\n       \
    \     second_largest = lst[i];\n        }\n    }\n    return second_largest;\n\
    }", "    if (lst.length < 2){\n        return undefined;\n    }\n    let smallest\
    \ = Number.MAX_SAFE_INTEGER;\n    let second_smallest = Number.MAX_SAFE_INTEGER;\n\
    \    for (let i = 0; i < lst.length; i++){\n        let value = lst[i];\n    \
    \    if (value < smallest){\n            second_smallest = smallest;\n       \
    \     smallest = value;\n        }\n        else if (value < second_smallest){\n\
    \            second_smallest = value;\n        }\n    }\n    if (second_smallest\
    \ === Number.MAX_SAFE_INTEGER){\n        return undefined;\n    }\n    return\
    \ second_smallest;\n}\n", "    var min = lst[0];\n    var second;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < min){\n            second\
    \ = min;\n            min = lst[i];\n        }\n        else if(lst[i] < second\
    \ && lst[i] != min){\n            second = lst[i];\n        }\n    }\n    if(second\
    \ == undefined){\n        return undefined;\n    }\n    return second;\n}\n",
  "  var min = Math.min(...lst);\n  var min2 = min + 1;\n  if (lst.length <= 1) {\n\
    \    return undefined;\n  }\n  for (i=0; i<lst.length; i++) {\n    if (lst[i]\
    \ > min && lst[i] < min2) {\n      min2 = lst[i];\n    }\n  }\n  if (min2 == min\
    \ + 1) {\n    return undefined;\n  }\n  return min2;\n}", "    if (lst.length<=1){\n\
    \        return undefined;\n    }\n    let min = lst[0];\n    let min2 = undefined;\n\
    \    for (let i=1; i<lst.length; i++){\n        if (lst[i]<min){\n           \
    \ min2 = min;\n            min = lst[i];\n        }\n        else if (lst[i]<min2\
    \ || min2===undefined){\n            min2 = lst[i];\n        }\n    }\n    return\
    \ min2;\n}\n", "  var min;\n  var min2;\n  var minArray = [];\n  for(var i = 0;\
    \ i < lst.length; i++){\n    if(min == undefined){\n      min = lst[i];\n    }\n\
    \    if(lst[i] < min){\n      min = lst[i];\n    }\n  }\n  for(var i = 0; i <\
    \ lst.length; i++){\n    if(lst[i] != min){\n      minArray.push(lst[i]);\n  \
    \  }\n  }\n  for(var i = 0; i < minArray.length; i++){\n    if(min2 == undefined){\n\
    \      min2 = minArray[i];\n    }\n    if(minArray[i] < min2){\n      min2 = minArray[i];\n\
    \    }\n  }\n  return min2;\n}", "  if (lst.length < 2){\n    return undefined;\n\
    \  }\n\n  lst.sort();\n  var smallest = lst[0];\n  var i = 1;\n  while (lst[i]\
    \ == smallest){\n    i += 1;\n  }\n  return lst[i];\n}\n", "    // list=sort(lst)\n\
    \    // return list[1]\n    let min;\n    for(let i=0;i<lst.length;i++){\n   \
    \     if(lst[i]<min){\n            min=lst[i]\n        }\n    }\n    return min\n\
    }", "  var min = 0;\n  var second = 0;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] < min){\n      second = min;\n      min = lst[i];\n    }\n    else\
    \ if(lst[i] < second && lst[i] != min){\n      second = lst[i];\n    }\n  }\n\
    \  if(min == second){\n    return \"undefined\";\n  }\n  return second;\n}", " \
    \   if (lst.length < 2){\n        return undefined;\n    }\n    var currentMin\
    \ = lst[0];\n    var secMin = Infinity;\n    for (var i = 1; i < lst.length; i++){\n\
    \        if (lst[i] < currentMin){\n            secMin = currentMin;\n       \
    \     currentMin = lst[i];\n        }\n        else if (lst[i] < secMin && lst[i]\
    \ != currentMin){\n            secMin = lst[i];\n        }\n    }\n    if (secMin\
    \ == Infinity){\n        return undefined;\n    }\n    return secMin;\n}", "\t\
    if(lst.length < 2){\n\t\treturn undefined;\n\t}\n\tvar min1 = Math.min(lst[0],\
    \ lst[1]);\n\tvar min2 = Math.max(lst[0], lst[1]);\n\tfor(var i = 2; i < lst.length;\
    \ i++){\n\t\tif(lst[i] < min1){\n\t\t\tmin2 = min1;\n\t\t\tmin1 = lst[i];\n\t\t\
    }\n\t\telse if(lst[i] < min2){\n\t\t\tmin2 = lst[i];\n\t\t}\n\t}\n\treturn min2;\n\
    }\n", "    var l = lst.length;\n    if (l==0){\n        return undefined;\n  \
    \  }\n    if (l==1){\n        return undefined;\n    }\n    var small = lst[0];\n\
    \    var i;\n    for (i=1; i<l; i++){\n        if (lst[i]<small){\n          \
    \  small = lst[i];\n        }\n    }\n    var second_small = lst[0];\n    for\
    \ (i=1; i<l; i++){\n        if (lst[i]<second_small && lst[i]!=small){\n     \
    \       second_small = lst[i];\n        }\n    }\n    return second_small;\n}",
  "    lst = lst.sort(function(a, b){return a-b});\n    if (lst.length <= 1) {\n \
    \       return undefined;\n    }\n    else {\n        let i = 1;\n        while\
    \ (lst[i] === lst[i-1]) {\n            i++;\n            if (i === lst.length)\
    \ {\n                return undefined;\n            }\n        }\n        return\
    \ lst[i];\n    }\n}", "    if (lst.length < 1){\n        return undefined;\n \
    \   } else if (lst.length == 1){\n        return undefined;\n    } else {\n  \
    \      let smallest = lst[0];\n        let second_smallest = lst[1];\n       \
    \ for (let i = 0; i < lst.length; i++){\n            if (lst[i] < smallest){\n\
    \                second_smallest = smallest;\n                smallest = lst[i];\n\
    \            } else if (lst[i] > smallest && lst[i] < second_smallest){\n    \
    \            second_smallest = lst[i];\n            }\n        }\n        return\
    \ second_smallest;\n    }\n}", "    var min = Math.min(...lst);\n    if (lst.indexOf(min)\
    \ != -1){\n        lst.splice(lst.indexOf(min), 1);\n    }\n    return Math.min(...lst);\n\
    }\n", "    let smallest = lst[0];\n    let second_smallest = null;\n    for (let\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if (lst[i]\
    \ < second_smallest || second_smallest === null){\n            second_smallest\
    \ = lst[i];\n        }\n    }\n    return second_smallest;\n}", "  // >>> min(lst)\n\
    \  // 1\n  var min_val = min(lst);\n  // >>> lst.remove(1)\n  // [2, 3, 4, 5]\n\
    \  var lst_without_min = lst.filter(function(x){return x != min_val;});\n  //\
    \ >>> min(lst)\n  // 2\n  return min(lst_without_min);\n}\n", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n    var min = lst[0];\n    var n_min\
    \ = lst[1];\n    for (var i = 1; i < lst.length; i++){\n        if (lst[i] < min){\n\
    \            n_min = min;\n            min = lst[i];\n        }\n        else\
    \ if (lst[i] > min && lst[i] < n_min){\n            n_min = lst[i];\n        }\n\
    \    }\n    return n_min;\n}", "  var lst = lst.sort(function(a, b){return a-b});\n\
    \  for (var i = 0; i < lst.length - 1; i++){\n    if (lst[i] != lst[i+1]){\n \
    \     return lst[i+1];\n    }\n  }\n  return undefined;\n}", "\tif(lst.length\
    \ === 0){\n\t\treturn undefined;\n\t}\n\tif(lst.length === 1){\n\t\treturn undefined;\n\
    \t}\n\telse{\n\t\tlet smallest = lst[0];\n\t\tlet next_smallest = lst[1];\n\t\t\
    if(smallest > next_smallest){\n\t\t\tsmallest = lst[1];\n\t\t\tnext_smallest =\
    \ lst[0];\n\t\t}\n\t\tfor(let i = 2; i < lst.length; i++){\n\t\t\tif(lst[i] <\
    \ smallest){\n\t\t\t\tnext_smallest = smallest;\n\t\t\t\tsmallest = lst[i];\n\t\
    \t\t}\n\t\t\telse if(lst[i] < next_smallest){\n\t\t\t\tnext_smallest = lst[i];\n\
    \t\t\t}\n\t\t}\n\t\treturn next_smallest;\n\t}\n}\n", "  var lst = lst.sort();\n\
    \  var fnd = [];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] !== lst[i+1]){\n\
    \      fnd.push(lst[i+1]);\n    }\n  }\n  if(fnd.length > 1){\n    return fnd[1];\n\
    \  }\n  else{\n    return undefined;\n  }\n}", "    lst.sort((a,b)=>a-b);\n  \
    \  let min = lst[0];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > min){\n            return lst[i];\n        }\n    }\n    return undefined;\n\
    }\n", "  if (lst.length < 2){\n    return;\n  }\n  var smallest = lst[0];\n  var\
    \ second_smallest = lst[1];\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ < smallest){\n      second_smallest = smallest;\n      smallest = lst[i];\n\
    \    } else if (lst[i] < second_smallest){\n      second_smallest = lst[i];\n\
    \    }\n  }\n  return second_smallest;\n}", "    let smallest = Infinity;\n  \
    \  let second_smallest = Infinity;\n    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if (lst[i] < second_smallest && lst[i] > smallest){\n  \
    \          second_smallest = lst[i];\n        }\n    }\n    if (second_smallest\
    \ === Infinity){\n        return undefined;\n    }\n    return second_smallest;\n\
    }\n", "  let new_list = lst.slice().sort(function(a, b){return a-b});\n  console.log(new_list);\n\
    \  if (new_list.length == 0){\n    return undefined;\n  } else if (new_list.length\
    \ == 1){\n    return undefined;\n  } else if (new_list.length > 1){\n    let smallest\
    \ = new_list[0];\n    let new_list_2 = new_list.slice(1);\n    for (let i = 0;\
    \ i < new_list_2.length; i++){\n      if (new_list_2[i] > smallest){\n       \
    \ return new_list_2[i];\n      }\n    }\n  }\n}", "    return lst.sort((a,b)=>\
    \ a-b)[1]\n}", "\tlet min = lst[0];\n\tlet sec = false;\n\tlst.forEach(function(item){\n\
    \t\tif(item < min){\n\t\t\tmin = item;\n\t\t}\n\t\telse if(item > min && sec ==\
    \ false){\n\t\t\tsec = item;\n\t\t}\n\t\telse if(item > min && item < sec){\n\t\
    \t\tsec = item;\n\t\t}\n\t});\n\treturn sec;\n}\n", "    var smallest = -Infinity\n\
    \    var next = -Infinity\n    for (var i = 0; i < lst.length; i++){\n       \
    \ if (lst[i] < smallest){\n            smallest = lst[i]\n        }\n        else\
    \ if (lst[i] < next && lst[i] > smallest){\n            next = lst[i]\n      \
    \  }\n    }\n    if (next === -Infinity){\n        return undefined\n    }\n \
    \   return next\n}\n", "\tif(lst.length<2){\n\t\treturn undefined;\n\t}\n\telse{\n\
    \t\tvar min=lst[0];\n\t\tvar min2=lst[1];\n\t\tfor(var i=0;i<lst.length;i++){\n\
    \t\t\tif(lst[i]<min){\n\t\t\t\tmin2=min;\n\t\t\t\tmin=lst[i];\n\t\t\t}\n\t\t\t\
    else if(lst[i]<min2){\n\t\t\t\tmin2=lst[i];\n\t\t\t}\n\t\t}\n\t\treturn min2;\n\
    \t}\n}\n", "    if (lst.length === 0){\n        return undefined;\n    }\n   \
    \ let min = Math.min(...lst);\n    let index = lst.indexOf(min);\n    lst.splice(index,\
    \ 1);\n    let new_min = Math.min(...lst);\n    return new_min;\n}", "    return\
    \ lst.sort((a,b)=>a-b)[1]\n}\n", "    //your code here\n}", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n    var first = lst[0];\n    var second\
    \ = lst[1];\n    for (var i = 1; i < lst.length; i++){\n        if (lst[i] < first){\n\
    \            second = first;\n            first = lst[i];\n        }\n       \
    \ else if (lst[i] < second && lst[i] > first){\n            second = lst[i];\n\
    \        }\n    }\n    return second;\n}\n", "    if (lst.length == 0){\n    \
    \    return null;\n    }\n    if (lst.length == 1){\n        return null;\n  \
    \  }\n    if (lst.length == 2){\n        if (lst[0] == lst[1]){\n            return\
    \ null;\n        }\n    }\n    if (lst.length == 2){\n        if (lst[0] > lst[1]){\n\
    \            return lst[1];\n        }\n        else{\n            return lst[0];\n\
    \        }\n    }\n    var min = lst[0];\n    var n_min = lst[1];\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < min){\n            min =\
    \ lst[i];\n        }\n    }\n    for (var j = 0; j < lst.length; j++){\n     \
    \   if (lst[j] > min && lst[j] < n_min){\n            n_min = lst[j];\n      \
    \  }\n    }\n    return n_min;\n}", "    var lst = lst.sort(function(a, b){return\
    \ a-b});\n    var lst2 = lst.filter(function(x, i, a){ return a.indexOf(x) ==\
    \ i;});\n    return lst2[1];\n\n}\n", "    lst.sort(function(a, b){return a-b});\n\
    \    if (lst.length === 0 || lst[0] === lst[1]){\n        return undefined;\n\
    \    }\n    return lst[1];\n}", "    if (lst.length === 0) return undefined;\n\
    \    if (lst.length === 1) return undefined;\n    let newArr = lst.sort((a,b)\
    \ => a-b);\n    return newArr[1];\n}\n", "    var min = lst[0];\n    var secondMin\
    \ = min;\n    for(i=0; i<lst.length; i++){\n        if(lst[i] < min){\n      \
    \      secondMin = min;\n            min = lst[i];\n        }\n        else if(lst[i]\
    \ > min && lst[i] < secondMin){\n            secondMin = lst[i];\n        }\n\
    \    }\n    return secondMin;\n}", "    if (lst.length > 1){\n        lst.sort();\n\
    \        return lst[1];\n    }\n    else{\n        return undefined;\n    }\n}",
  "\tlst.sort(function(a, b){return a-b});\n\tvar smallest = lst[0];\n\tvar index\
    \ = 0;\n\tfor(var i = 0; i < lst.length; i++){\n\t\tif(lst[i] > smallest){\n\t\
    \t\treturn lst[i];\n\t\t}\n\t}\n\treturn undefined;\n}", "    var list = lst.sort(function(a,\
    \ b){return a-b});\n    var res;\n    for(var i = 1; i < list.length; i++){\n\
    \        if(list[i] > list[0]){\n            res = list[i];\n            break;\n\
    \        }\n    }\n    return res;\n}\n", "  if (lst.length<=1){\n    return undefined;\n\
    \  }\n  var small=lst[0];\n  var second=lst[1];\n  for (var i=1;i<lst.length;i++){\n\
    \    if (lst[i]<small){\n      second=small;\n      small=lst[i];\n    }\n   \
    \ else if (lst[i]<second && lst[i]!=small){\n      second=lst[i];\n    }\n  }\n\
    \  if (second==small){\n    return undefined;\n  }\n  return second;\n}", "  \
    \  var b = lst.sort(function(a, b){return a-b});\n    var c = b[1];\n    return\
    \ c;\n}\n", "  let min=lst[0];\n  let min2 = lst[0];\n  for(let i=0;i<lst.length;i++){\n\
    \    if(lst[i]<min){\n      min2=min;\n      min=lst[i];\n    }\n    else if(lst[i]<min2\
    \ && lst[i]!=min){\n      min2=lst[i];\n    }\n  }\n  if(min2==min){\n    return\
    \ undefined;\n  }\n  return min2;\n}\n", "  if (lst.length<2){\n    return undefined;\n\
    \  }else{\n    var lst2= lst.sort(function(a,b){return a-b});\n    for (var i=0;\
    \ i<lst2.length; i++){\n      if (lst2[i]>lst2[0]){\n        return lst2[i];\n\
    \      }\n    }\n  }\n}\n", "    var min = Math.min(...lst);\n    var minIndex\
    \ = lst.indexOf(min);\n    lst.splice(minIndex, 1);\n    if(lst.length === 0){\n\
    \        return \"undefined\";\n    }\n    else{\n        return Math.min(...lst);\n\
    \    }\n}", "    let smallest = lst[0];\n    let next_smallest = undefined;\n\
    \    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          next_smallest = smallest;\n            smallest = lst[i];\n       \
    \ }\n        else if(lst[i] > smallest && (next_smallest === undefined || lst[i]\
    \ < next_smallest)){\n            next_smallest = lst[i];\n        }\n    }\n\
    \    return next_smallest;\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    var firstMin = lst[0];\n    var secondMin = lst[1];\n    for (var\
    \ i = 1; i < lst.length; i++){\n        if (lst[i] < firstMin){\n            secondMin\
    \ = firstMin;\n            firstMin = lst[i];\n        }\n        else if (lst[i]\
    \ < secondMin && lst[i] > firstMin){\n            secondMin = lst[i];\n      \
    \  }\n    }\n    return secondMin;\n}\n", "    var min = Math.min(...lst);\n \
    \   var min2;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] !=\
    \ min && min2 == undefined){\n            min2 = lst[i];\n        }\n        else\
    \ if (lst[i] != min && lst[i] < min2){\n            min2 = lst[i];\n        }\n\
    \    }\n    return min2;\n}\n", "\tfunction quick_sort(lst){\n\t\tif(lst.length<=1){\n\
    \t\t\treturn lst;\n\t\t}\n\t\tvar pivot = lst[0];\n\t\tvar left = [];\n\t\tvar\
    \ right = [];\n\t\tfor(var i=1;i<lst.length;i++){\n\t\t\tif(lst[i]<pivot){\n\t\
    \t\t\tleft.push(lst[i]);\n\t\t\t}else{\n\t\t\t\tright.push(lst[i]);\n\t\t\t}\n\
    \t\t}\n\t\treturn quick_sort(left).concat(pivot,quick_sort(right));\n\t}\n\tvar\
    \ sorted_lst = quick_sort(lst);\n\tvar second_smallest = undefined;\n\tfor(var\
    \ i=0;i<sorted_lst.length;i++){\n\t\tif(sorted_lst[i]==sorted_lst[0]){\n\t\t\t\
    continue;\n\t\t}else{\n\t\t\tsecond_smallest = sorted_lst[i];\n\t\t\tbreak;\n\t\
    \t}\n\t}\n\treturn second_smallest;\n}\nvar result = next_smallest([1, 2, 3, 4,\
    \ 5]);\nif(result==2){\n\tdocument.write(\"1 passed<br/>\");\n}else{\n\tdocument.write(\"\
    1 failed<br/>\");\n}\nvar result = next_smallest([5, 1, 4, 3, 2]);\nif(result==2){\n\
    \tdocument.write(\"2 passed<br/>\");\n}else{\n\tdocument.write(\"2 failed<br/>\"\
    );\n}\nvar result = next_smallest([]);\nif(result==undefined){\n\tdocument.write(\"\
    3 passed<br/>\");\n}else{\n\tdocument.write(\"3 failed<br/>\");\n}\nvar result\
    \ = next_smallest([1, 1]);\nif(result==undefined){\n\tdocument.write(\"4 passed<br/>\"\
    );\n}else{\n\tdocument.write(\"4 failed<br/>\");\n}\n", "    if (lst.length ===\
    \ 0) {return undefined;}\n    var small = Math.min(...lst);\n    lst.splice(lst.indexOf(small),\
    \ 1);\n    return Math.min(...lst);\n}\n", "    if (lst.length < 2){\n       \
    \ return undefined;\n    }\n    var min = minElement(lst);\n    var min2 = minElement(remove(lst,\
    \ min));\n    return min2;\n}\n", "    if (lst.length <= 1){\n        return undefined;\n\
    \    }\n    lst.sort();\n    var pre = lst[0];\n    for (var i = 1; i < lst.length;\
    \ i++){\n        if (lst[i] != pre){\n            return lst[i];\n        }\n\
    \        pre = lst[i];\n    }\n    return undefined;\n}\n", "    var min = lst[0];\n\
    \    var second_min = lst[1];\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] < min){\n            second_min = min;\n            min = lst[i];\n\
    \        }\n        else if(lst[i] < second_min && lst[i] != min){\n         \
    \   second_min = lst[i];\n        }\n    }\n    if(second_min == lst[1]){\n  \
    \      return second_min;\n    }\n    else{\n        return undefined;\n    }\n\
    }", "  \n  if(lst.length < 2){\n    return undefined;\n  }\n  var min = Math.min(...lst);\n\
    \  lst.splice(lst.indexOf(min), 1);\n  return Math.min(...lst);\n}\n", "    if\
    \ (lst.length < 2){\n        return undefined;\n    }\n    var max_value = Math.max(...lst);\n\
    \    var sorted_list = lst.sort(function(a, b){return a-b});\n    var filtered_sorted_list\
    \ = sorted_list.filter(function(value){return value !== max_value});\n    return\
    \ filtered_sorted_list[1];\n}\n", "\tif(lst.length < 2){\n\t\treturn undefined;\n\
    \t}\n\tif(lst.length == 2){\n\t\tif(lst[0] == lst[1]){\n\t\t\treturn undefined;\n\
    \t\t}\n\t}\n\tlet min = lst[0];\n\tlet nxt_min = lst[1];\n\tfor(let i = 1; i <\
    \ lst.length; i++){\n\t\tif(lst[i] < min){\n\t\t\tmin = lst[i];\n\t\t}\n\t\tif(lst[i]\
    \ < nxt_min && lst[i] > min){\n\t\t\tnxt_min = lst[i];\n\t\t}\n\t}\n\treturn nxt_min;\n\
    }", "  let cpy = lst.slice();\n  cpy.sort((a,b) => a-b);\n  let smallest = cpy[0];\n\
    \  for(let i = 1; i < cpy.length; i++){\n    if(cpy[i] > smallest){\n      return\
    \ cpy[i];\n    }\n  }\n  return undefined;\n}\n", "    if (lst.length === 0) return\
    \ undefined;\n    if (lst.length === 1) return undefined;\n    lst.sort();\n \
    \   for (var i = 0; i < lst.length; i++){\n        if (lst[i] !== lst[i+1]) return\
    \ lst[i+1];\n    }\n    return undefined;\n}\n", "    var smallest = lst[0]\n\
    \    var secondSmallest = lst[1]\n    if (lst.length == 0){\n        return undefined\n\
    \    }\n    if (lst.length == 1){\n        return undefined\n    }\n    if (lst.length\
    \ == 2){\n        if (lst[0] == lst[1]){\n            return undefined\n     \
    \   }\n    }\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] <\
    \ smallest){\n            smallest = lst[i]\n        }\n    }\n    for (var i\
    \ = 0; i < lst.length; i++){\n        if (lst[i] < secondSmallest && lst[i] >\
    \ smallest){\n            secondSmallest = lst[i]\n        }\n    }\n    return\
    \ secondSmallest\n}\n\nvar test1 = next_smallest([1, 2, 3, 4, 5])", "\tif(lst.length\
    \ == 0){\n\t\treturn undefined;\n\t}\n\telse if(lst.length == 1){\n\t\treturn\
    \ undefined;\n\t}\n\telse{\n\t\tvar smallest = lst[0];\n\t\tvar second_smallest\
    \ = lst[1];\n\t\tfor(var i = 1; i < lst.length; i++){\n\t\t\tif(lst[i] < smallest){\n\
    \t\t\t\tsecond_smallest = smallest;\n\t\t\t\tsmallest = lst[i];\n\t\t\t}\n\t\t\
    \telse if(lst[i] < second_smallest){\n\t\t\t\tsecond_smallest = lst[i];\n\t\t\t\
    }\n\t\t}\n\t\treturn second_smallest;\n\t}\n}\n", "    var a = []\n    for(i =\
    \ 0; i < lst.length; i++){\n        a.push(lst[i])\n    }\n    var max = Math.max(...a)\n\
    \    a.splice(a.indexOf(max), 1)\n    var max = Math.max(...a)\n    return max\n\
    }", "    if (lst.length == 0) {\n        return undefined;\n    }\n    if (lst.length\
    \ == 1) {\n        return undefined;\n    }\n    var newLst = [];\n    for (var\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] != lst[i + 1]) {\n       \
    \     newLst.push(lst[i]);\n        }\n    }\n    newLst.sort(function(a, b){return\
    \ a-b});\n    if (newLst.length == 1) {\n        return undefined;\n    }\n  \
    \  return newLst[1];\n}\n\nvar arr = [1, 2, 3, 4, 5]", "    var sorted = lst.sort((a,b)\
    \ => a-b);\n    var unique = [];\n    for(var i = 0; i < sorted.length; i++){\n\
    \        if(sorted[i] != sorted[i+1]){\n            unique.push(sorted[i]);\n\
    \        }\n    }\n    if(unique.length >= 2){\n        return unique[1];\n  \
    \  }\n    else{\n        return undefined;\n    }\n}\n", "    let sorted = lst.sort((a,b)\
    \ => a-b);\n    let secondSmallest;\n    let check = false;\n    for(let i = 0;\
    \ i < sorted.length; i++){\n        if(sorted[i] !== sorted[i+1]){\n         \
    \   if(sorted[i+1] < sorted[i+2]){\n                secondSmallest = sorted[i+1];\n\
    \                check = true;\n            }\n        }\n    }\n    if(check\
    \ === false){\n        return undefined;\n    }\n    return secondSmallest;\n\
    }\n\n", "\tvar min = 0;\n\tvar secMin = 0;\n\tif(lst.length < 2){\n\t\treturn\
    \ undefined;\n\t}\n\tfor(var i = 0; i < lst.length; i++){\n\t\tif(lst[i] < min){\n\
    \t\t\tsecMin = min;\n\t\t\tmin = lst[i];\n\t\t}\n\t\telse if(lst[i] < secMin &&\
    \ lst[i] != min){\n\t\t\tsecMin = lst[i];\n\t\t}\n\t}\n\tif(secMin == min){\n\t\
    \treturn undefined;\n\t}\n\treturn secMin;\n}", "    var smallest_1=lst[0];\n\
    \    var smallest_2;\n    for(var i=1;i<lst.length;i++){\n        if(lst[i]<smallest_1){\n\
    \            smallest_2=smallest_1;\n            smallest_1=lst[i];\n        }\n\
    \        else if(lst[i]<smallest_2){\n            smallest_2=lst[i];\n       \
    \ }\n    }\n    if(smallest_2===undefined){\n        return undefined;\n    }\n\
    \    else{\n        return smallest_2;\n    }\n}", "    if (lst.length <= 1){\n\
    \        return undefined;\n    }\n    let min1 = lst[0];\n    let min2 = lst[1];\n\
    \    for (let i = 0; i < lst.length; i++){\n        if (lst[i] < min1){\n    \
    \        min2 = min1;\n            min1 = lst[i];\n        }\n        else if\
    \ (lst[i] < min2 && lst[i] > min1){\n            min2 = lst[i];\n        }\n \
    \   }\n    if (min1 == min2){\n        return undefined;\n    }\n    return min2;\n\
    }\n", "    var smallest = lst[0]\n    var second_smallest = undefined\n    for\
    \ (var i = 0; i < lst.length; i++){\n        if (lst[i] < smallest){\n       \
    \     second_smallest = smallest\n            smallest = lst[i]\n        } else\
    \ if (lst[i] < second_smallest && lst[i] != smallest){\n            second_smallest\
    \ = lst[i]\n        }\n    }\n    return second_smallest\n}", "\tvar mn = Math.min(...lst);\n\
    \tvar mn2 = Math.max(...lst);\n\tfor(i=0;i<lst.length;i++){\n\t\tif(lst[i]<mn2\
    \ && lst[i]>mn){\n\t\t\tmn2 = lst[i];\n\t\t}\n\t}\n\treturn mn2;\n}", "    if\
    \ (lst.length < 2){\n        return undefined;\n    }\n    var smallest = lst[0];\n\
    \    var second_smallest = undefined;\n    for (var i = 1; i < lst.length; i++){\n\
    \        if (lst[i] < smallest){\n            second_smallest = smallest;\n  \
    \          smallest = lst[i];\n        } else if (lst[i] > smallest && (second_smallest\
    \ === undefined || lst[i] < second_smallest)){\n            second_smallest =\
    \ lst[i];\n        }\n    }\n    return second_smallest;\n}", "    let min = Math.min(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    lst.splice(minIndex, 1);\n    if(lst.length\
    \ > 0){\n        return Math.min(...lst);\n    }else{\n        return undefined;\n\
    \    }\n}", "    if (lst.length == 0){\n        return undefined;\n    }\n   \
    \ lst.sort(function(a, b){return a-b});\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] > lst[0]){\n            return lst[i];\n        }\n    }\n\
    \    return undefined;\n}\n", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    let lst_copy = lst.slice(0);\n    lst_copy.sort(function(a, b){return\
    \ a-b});\n    let smallest = lst_copy[0];\n    let second_smallest = smallest;\n\
    \    for (let i = 1; i < lst_copy.length; i++){\n        if (lst_copy[i] > smallest){\n\
    \            second_smallest = lst_copy[i];\n            break;\n        }\n \
    \   }\n    return second_smallest;\n}", "    let min1 = Math.min(...lst)\n   \
    \ let min2 = Math.max(...lst)\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] < min2 && lst[i] > min1){\n            min2 = lst[i]\n        }\n\
    \    }\n    if(min2 === Math.max(...lst)){\n        return undefined\n    }\n\
    \    return min2\n}\n", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    var min=lst[0];\n    var secondMin=lst[1];\n    for (var i=1; i<lst.length;\
    \ i++){\n        if (lst[i]<min){\n            min=lst[i];\n        }\n      \
    \  else if (lst[i]>min && lst[i]<secondMin){\n            secondMin=lst[i];\n\
    \        }\n    }\n    if (min==secondMin){\n        return undefined;\n    }\n\
    \    return secondMin;\n}\n", "    var smallest = lst[0];\n    var res = Infinity;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > smallest && lst[i]\
    \ < res){\n            res = lst[i];\n        }\n        if(lst[i] < smallest){\n\
    \            smallest = lst[i];\n        }\n    }\n    if(res == Infinity){\n\
    \        return undefined;\n    }\n    return res;\n}\n", "    if (lst.length\
    \ == 0){\n        return;\n    }\n    else if (lst.length == 1){\n        return;\n\
    \    }\n    else{\n        var min = Math.min(...lst);\n        var idx_min =\
    \ lst.indexOf(min);\n        lst.splice(idx_min, 1);\n        var next_min = Math.min(...lst);\n\
    \        return next_min;\n    }\n}", "    var lst2 = lst.sort();\n    var lst_smallest\
    \ = lst2[0];\n    var i = 0;\n    while (lst2[i] === lst_smallest){\n        i\
    \ += 1;\n    }\n    return lst2[i];\n}", "    if (lst.length <= 1){\n        return\
    \ undefined;\n    }\n    let first_min = lst[0];\n    let second_min = lst[1];\n\
    \    for (let i = 1; i < lst.length; i++){\n        if (lst[i] < first_min){\n\
    \            second_min = first_min;\n            first_min = lst[i];\n      \
    \  } else if (lst[i] < second_min){\n            second_min = lst[i];\n      \
    \  }\n    }\n    return second_min;\n}", "    if (lst.length < 2){\n        return\
    \ undefined;\n    }\n    var num = lst[0];\n    var num2 = lst[1];\n    if (num\
    \ < num2){\n        var temp = num;\n        num = num2;\n        num2 = temp;\n\
    \    }\n    for (var i = 2; i < lst.length; i++){\n        if (lst[i] < num){\n\
    \            num2 = num;\n            num = lst[i];\n        }\n        else if\
    \ (lst[i] < num2){\n            num2 = lst[i];\n        }\n    }\n    return num2;\n\
    }\n", "    if (lst.length <= 1){\n        return undefined;\n    }\n    var new_lst\
    \ = lst.slice(0);\n    var smallest = Math.min.apply(null, lst);\n    var index\
    \ = new_lst.indexOf(smallest);\n    new_lst.splice(index, 1);\n    var sec_smallest\
    \ = Math.min.apply(null, new_lst);\n    return sec_smallest;\n}", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n    var small = lst[0];\n    var nextSmall\
    \ = lst[1];\n    if (nextSmall > small){\n        small = lst[1];\n        nextSmall\
    \ = lst[0];\n    }\n    for (var i = 2; i < lst.length; i++){\n        if (lst[i]\
    \ < small){\n            nextSmall = small;\n            small = lst[i];\n   \
    \     }\n        else if (lst[i] < nextSmall){\n            nextSmall = lst[i];\n\
    \        }\n    }\n    return nextSmall;\n}", "  if (lst.length < 2){\n    return\
    \ \"undefined\";\n  }\n  var min = lst[0];\n  var min2 = lst[1];\n  for (var i\
    \ = 1; i < lst.length; i++){\n    if (lst[i] < min){\n      min2 = min;\n    \
    \  min = lst[i];\n    } else if (lst[i] < min2 && lst[i] != min){\n      min2\
    \ = lst[i];\n    }\n  }\n  if (min2 == min){\n    return \"undefined\";\n  }\n\
    \  return min2;\n}\n", "    if (lst.length == 0) {\n        return undefined;\n\
    \    }\n    else if (lst.length == 1){\n        return undefined;\n    }\n   \
    \ else {\n        var min = lst[0];\n        var idx = 0;\n        for (var i\
    \ = 1; i < lst.length; i++) {\n            if (lst[i] < min) {\n             \
    \   min = lst[i];\n                idx = i;\n            }\n        }\n      \
    \  if (idx == 0){\n            return lst[1];\n        }\n        else {\n   \
    \         return lst[0];\n        }\n    }\n}\n", "    if (lst.length <= 1){\n\
    \        return undefined;\n    }\n    let smallest = lst[0];\n    let second_smallest\
    \ = undefined;\n    for (let i = 1; i < lst.length; i++){\n        if (lst[i]\
    \ < smallest){\n            second_smallest = smallest;\n            smallest\
    \ = lst[i];\n        }\n        else if (lst[i] > smallest && (second_smallest\
    \ === undefined || lst[i] < second_smallest)){\n            second_smallest =\
    \ lst[i];\n        }\n    }\n    return second_smallest;\n}\n\nlet lst = [2, 3,\
    \ 4, 5, 6, 7, 1];", "  if (lst.length < 2){\n    return undefined;\n  }\n  var\
    \ min = lst[0];\n  var second_min = lst[1];\n  for (var i = 1; i < lst.length;\
    \ i++){\n    if (lst[i] < min){\n      second_min = min;\n      min = lst[i];\n\
    \    }\n    else if (lst[i] < second_min){\n      second_min = lst[i];\n    }\n\
    \  }\n  return second_min;\n}\n", "    let smallest = lst[0];\n    let secSmallest\
    \ = lst[1];\n    let arr = [];\n    if(lst.length === 1){\n        return undefined;\n\
    \    }\n    if(lst.length === 2){\n        if(lst[0] === lst[1]){\n          \
    \  return undefined;\n        }\n    }\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            smallest = lst[i];\n        }\n \
    \   }\n    for(let j = 0; j < lst.length; j++){\n        if(lst[j] < secSmallest\
    \ && lst[j] > smallest){\n            secSmallest = lst[j];\n        }\n    }\n\
    \    return secSmallest;\n}\n", "  if (lst.length <= 1){\n    return undefined;\n\
    \  }\n  var min = lst[0];\n  var second_min = lst[1];\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (lst[i] < min){\n      second_min = min;\n      min = lst[i];\n\
    \    }\n    else if (lst[i] < second_min && lst[i] != min){\n      second_min\
    \ = lst[i];\n    }\n  }\n  if (second_min == min){\n    return undefined;\n  }\n\
    \  return second_min;\n}", "  if (lst.length <= 1){\n    return undefined;\n \
    \ }\n  // var smallest = lst[0];\n  // var secondSmallest = lst[1];\n  // for\
    \ (var i = 0; i < lst.length; i++){\n  //   if (lst[i] < smallest){\n  //    \
    \ smallest = lst[i];\n  //   }\n  //   if (lst[i] < secondSmallest && lst[i] >\
    \ smallest){\n  //     secondSmallest = lst[i];\n  //   }\n  // }\n  // return\
    \ secondSmallest;\n  var sortedList = lst.sort(function(a, b){return a - b});\n\
    \  var smallest = sortedList[0];\n  for (var i = 0; i < sortedList.length; i++){\n\
    \    if (sortedList[i] > smallest){\n      return sortedList[i];\n    }\n  }\n\
    \  return undefined;\n}\n", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    if (lst.length == 2){\n        if (lst[0] == lst[1]){\n          \
    \  return undefined;\n        }\n        else{\n            return Math.min(lst[0],\
    \ lst[1]);\n        }\n    }\n    else{\n        var smallest = Number.MAX_VALUE;\n\
    \        var next_smallest = Number.MAX_VALUE;\n        for (var i = 0; i < lst.length;\
    \ i++){\n            if (lst[i] < smallest){\n                next_smallest =\
    \ smallest;\n                smallest = lst[i];\n            }\n            else\
    \ if (lst[i] < next_smallest && lst[i] != smallest){\n                next_smallest\
    \ = lst[i];\n            }\n        }\n        if (next_smallest == Number.MAX_VALUE){\n\
    \            return undefined;\n        }\n        else{\n            return next_smallest;\n\
    \        }\n    }\n}\n", "\tvar min = Math.min(...lst);\n\tvar min2 = Infinity;\n\
    \tfor (var i = 0; i < lst.length; i++){\n\t\tif (lst[i] > min && lst[i] < min2){\n\
    \t\t\tmin2 = lst[i];\n\t\t}\n\t}\n\tif (min2 == Infinity){\n\t\treturn undefined;\n\
    \t}\n\treturn min2;\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    var sorted = lst.sort(function(a, b){return a-b});\n    var smallest\
    \ = sorted[0];\n    var second_smallest = sorted[1];\n    for (var i = 0; i <\
    \ sorted.length; i++){\n        if (sorted[i] != smallest && sorted[i] != second_smallest){\n\
    \            return sorted[i];\n        }\n    }\n    return undefined;\n}\n",
  "\tfunction sortNumber(a,b) {\n\t    return a - b;\n\t}\n\tvar i;\n\tvar sorted\
    \ = lst.sort(sortNumber);\n\tconsole.log(sorted);\n\tvar unique = [];\n\tvar small\
    \ = Number.MAX_VALUE;\n\tvar second = Number.MAX_VALUE;\n\tfor (i = 0; i < sorted.length;\
    \ i++) {\n\t\tif (sorted[i] <= small) {\n\t\t\tsecond = small;\n\t\t\tsmall =\
    \ sorted[i];\n\t\t}\n\t\telse if (sorted[i] <= second && sorted[i] > small) {\n\
    \t\t\tsecond = sorted[i];\n\t\t}\n\t}\n\tif (second === Number.MAX_VALUE) {\n\t\
    \treturn undefined;\n\t}\n\treturn second;\n}\nvar test1 = [1, 2, 3, 4, 5];\n\
    var test2 = [5, 1, 4, 3, 2];\nvar test3 = [];\nvar test4 = [1, 1];", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n\n    let smallest = lst[0];\n    let\
    \ second_smallest = lst[1];\n\n    for (let i = 1; i < lst.length; i++){\n   \
    \     if (lst[i] < smallest){\n            second_smallest = smallest;\n     \
    \       smallest = lst[i];\n        }\n        else if (lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n\n    return second_smallest;\n\
    }\n", "    if (lst.length == 0) {\n        return undefined;\n    }\n    let min\
    \ = Math.min(...lst);\n    let max = Math.max(...lst);\n    let smallest = min;\n\
    \    let second_smallest = max;\n    for (let num of lst) {\n        if (num <\
    \ second_smallest && num > smallest) {\n            second_smallest = num;\n \
    \       }\n    }\n    if (second_smallest == max) {\n        return undefined;\n\
    \    }\n    return second_smallest;\n}", "    if (lst.length < 2){\n        return\
    \ undefined;\n    }\n    var min = lst[0];\n    var min2 = lst[1];\n    for (var\
    \ i = 1; i < lst.length; i++){\n        if (lst[i] < min){\n            min2 =\
    \ min;\n            min = lst[i];\n        }\n        else if (lst[i] > min &&\
    \ lst[i] < min2){\n            min2 = lst[i];\n        }\n    }\n    if (min2\
    \ > min){\n        return min2;\n    }\n    else{\n        return undefined;\n\
    \    }\n}\nvar test_list1 = [1, 2, 3, 4, 5];\nvar test_list2 = [5, 1, 4, 3, 2];\n\
    var test_list3 = [];\nvar test_list4 = [1, 1];\nvar ans1 = next_smallest(test_list1);\n\
    var ans2 = next_smallest(test_list2);\nvar ans3 = next_smallest(test_list3);\n\
    var ans4 = next_smallest(test_list4);", "    var min = Math.min(...lst);\n   \
    \ var smallest = lst.indexOf(min);\n    lst.splice(smallest, 1);\n    var second_smallest\
    \ = Math.min(...lst);\n    return second_smallest;\n}", "    var cur_min = Infinity\n\
    \    var second_min = Infinity\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < cur_min){\n            second_min = cur_min\n            cur_min\
    \ = lst[i]\n        } else if (lst[i] < second_min){\n            second_min =\
    \ lst[i]\n        }\n    }\n    if (second_min == Infinity){\n        return undefined\n\
    \    } else {\n        return second_min\n    }\n}\n", "    var first = Math.min(...lst);\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > first){\n   \
    \         return lst[i];\n        }\n    }\n    return undefined;\n}\n", "   \
    \ if (lst.length == 0){\n        return undefined;\n    }\n    if (lst.length\
    \ == 1){\n        return undefined;\n    }\n    if (lst.length == 2){\n      \
    \  if (lst[0] == lst[1]){\n            return undefined;\n        }\n    }\n \
    \   for (var i = 0; i < lst.length; i++){\n        if (lst[i] == Math.min(...lst)){\n\
    \            continue;\n        }\n        else{\n            return Math.min(...lst.slice(i));\n\
    \        }\n    }\n}\n", "    var min = Math.min(...lst);\n    var max = Math.max(...lst);\n\
    \    for(i = 0; i < lst.length; i++){\n        if(lst[i] == min){\n          \
    \  lst.splice(i, 1);\n        }\n    }\n    var min2 = Math.min(...lst);\n   \
    \ if(min2 != max){\n        return min2;\n    }\n    else{\n        return undefined;\n\
    \    }\n}", "    let min = Number.MAX_VALUE;\n    let min2 = Number.MAX_VALUE;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < min){\n       \
    \     min2 = min;\n            min = lst[i];\n        }\n        else if(lst[i]\
    \ < min2 && lst[i] != min){\n            min2 = lst[i];\n        }\n    }\n  \
    \  if(min2 == Number.MAX_VALUE){\n        return undefined;\n    }\n    return\
    \ min2;\n}\n", "    lst.sort(function(a, b){return a-b});\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] != lst[i+1]){\n            return lst[i+1];\n\
    \        }\n    }\n    return undefined;\n}", "    var sorted_lst = lst.sort(function(a,\
    \ b){return a-b});\n    var result = sorted_lst[1];\n    return result;\n}", " \
    \   var smallest = lst[0]\n    var next_smallest = lst[1]\n    if (lst.length\
    \ <= 1){\n        return undefined\n    }\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < smallest){\n            next_smallest = smallest\n\
    \            smallest = lst[i]\n        }\n        else if (lst[i] < next_smallest\
    \ && lst[i] != smallest){\n            next_smallest = lst[i]\n        }\n   \
    \ }\n    return next_smallest\n}\n", "  var sort_list = lst.sort();\n  if (sort_list.length\
    \ > 1){\n    return sort_list[1];\n  }\n  else {\n    return undefined;\n  }\n\
    }\nnext_smallest([1, 2, 3, 4, 5]);\nnext_smallest([5, 1, 4, 3, 2]);\nnext_smallest([]);\n\
    next_smallest([1, 1]);\n", "  if (lst.length > 1){\n    let min1 = lst[0];\n \
    \   let min2 = null;\n    for (let i = 1; i < lst.length; i++){\n      if (lst[i]\
    \ < min1){\n        min2 = min1;\n        min1 = lst[i];\n      } else if (lst[i]\
    \ < min2 || min2 === null){\n        min2 = lst[i];\n      }\n    }\n    return\
    \ min2;\n  }\n  return null;\n}\n", "    if (lst.length < 2){\n        return\
    \ undefined;\n    }\n    let min = lst[0];\n    let next_min = min;\n    for (let\
    \ i = 1; i < lst.length; i++){\n        if (lst[i] < min){\n            next_min\
    \ = min;\n            min = lst[i];\n        }\n        else if (lst[i] > min\
    \ && lst[i] < next_min){\n            next_min = lst[i];\n        }\n    }\n \
    \   if (next_min == min){\n        return undefined;\n    }\n    return next_min;\n\
    }", "\tif(lst.length < 2){\n\t\treturn undefined;\n\t}\n\tvar sm = Math.min(...lst);\n\
    \tvar lst2 = lst.filter(function(x){return x != sm});\n\treturn Math.min(...lst2);\n\
    }", "    var min = Math.min(...lst);\n    var index = lst.indexOf(min);\n    var\
    \ temp = lst.splice(index, 1);\n    var second_min = Math.min(...lst);\n    return\
    \ second_min;\n}", "    if (lst.length < 2){\n        return undefined;\n    }\
    \ else {\n        var min = Math.min(...lst);\n        var min_index = lst.indexOf(min);\n\
    \        if (min_index != -1){\n            lst.splice(min_index, 1);\n      \
    \  }\n        return Math.min(...lst);\n    }\n}\n", "    let min = lst[0];\n\
    \    let second_min = lst[1];\n    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i] < min){\n\
    \            second_min = min;\n            min = lst[i];\n        }\n       \
    \ else if (lst[i] < second_min && lst[i] > min){\n            second_min = lst[i];\n\
    \        }\n    }\n    return second_min;\n}\n", "    let result;\n    if(lst.length<2){\n\
    \        return undefined;\n    }\n    else{\n        let smallest = Math.min(...lst);\n\
    \        let counter = 0;\n        while(counter<lst.length){\n            if(lst[counter]==smallest){\n\
    \                lst.splice(counter,1);\n            }\n            else{\n  \
    \              counter++;\n            }\n        }\n        result = Math.min(...lst);\n\
    \    }\n    return result;\n}", "  if (lst.length < 2){\n    return undefined;\n\
    \  }\n  // find first smallest\n  var smallest = lst[0];\n  for (var x = 1; x\
    \ < lst.length; x++){\n    if (lst[x] < smallest){\n      smallest = lst[x];\n\
    \    }\n  }\n  // check for multiple instances of smallest\n  for (var x = 0;\
    \ x < lst.length; x++){\n    if (lst[x] === smallest){\n      return undefined;\n\
    \    }\n  }\n  // find second smallest\n  var next_smallest = lst[0];\n  for (var\
    \ x = 1; x < lst.length; x++){\n    if (lst[x] < next_smallest && lst[x] > smallest){\n\
    \      next_smallest = lst[x];\n    }\n  }\n  return next_smallest;\n}", "  let\
    \ smallest = lst[0];\n  let second_smallest = Number.MAX_SAFE_INTEGER;\n  for\
    \ (let i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if (lst[i] < second_smallest\
    \ && lst[i] != smallest){\n      second_smallest = lst[i];\n    }\n  }\n  if (second_smallest\
    \ == Number.MAX_SAFE_INTEGER){\n    return undefined;\n  }\n  return second_smallest;\n\
    }\n", "    // your code here...\n}\n", "\tif(lst.length<2){\n\t\treturn undefined;\n\
    \t}\n\telse{\n\t\tvar min = lst[0];\n\t\tvar secondMin = lst[1];\n\t\tfor(var\
    \ i=1;i<lst.length;i++){\n\t\t\tif(lst[i]<min){\n\t\t\t\tsecondMin = min;\n\t\t\
    \t\tmin = lst[i];\n\t\t\t}\n\t\t\telse if(lst[i]<secondMin){\n\t\t\t\tsecondMin\
    \ = lst[i];\n\t\t\t}\n\t\t}\n\t\treturn secondMin;\n\t}\n}", "    if (lst.length\
    \ == 0) return undefined;\n    let min = lst[0];\n    let next_min = min;\n  \
    \  for (i = 1; i < lst.length; i++){\n        if (lst[i] < min){\n           \
    \ next_min = min;\n            min = lst[i];\n        }\n        else if (lst[i]\
    \ < next_min){\n            next_min = lst[i];\n        }\n    }\n    if (min\
    \ == next_min) return undefined;\n    return next_min;\n}", "  if (lst.length\
    \ < 2){\n    return undefined;\n  }\n  let _max = Math.max(...lst);\n  let _min\
    \ = Math.min(...lst);\n  if (Math.abs(_max) > Math.abs(_min)){\n    return _min;\n\
    \  } else if (Math.abs(_max) < Math.abs(_min)){\n    return _max;\n  } else {\n\
    \    return undefined;\n  }\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    var a = [];\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (!(lst[i] in a)){\n            a.push(lst[i]);\n        }\n    }\n    if (a.length\
    \ == 1){\n        return undefined;\n    }\n    a.sort(function(a, b){return a-b});\n\
    \    return a[1];\n}", "    if (lst.length <= 1){\n        return undefined;\n\
    \    }\n    var smallest = Math.min(...lst);\n    var sma = lst.indexOf(smallest);\n\
    \    lst.splice(sma, 1);\n    return Math.min(...lst);\n}\n", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n    var i, min, min2;\n    min = lst[0];\n\
    \    min2 = lst[1];\n    for (i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < min){\n            min2 = min;\n            min = lst[i];\n        }\n   \
    \     else if (lst[i] < min2){\n            min2 = lst[i];\n        }\n    }\n\
    \    return min2;\n}", "  var smallest = lst[0];\n  var next_smallest = lst[1];\n\
    \  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n      smallest\
    \ = lst[i];\n    }\n  }\n  for (var j = 0; j < lst.length; j++){\n    if (lst[j]\
    \ < next_smallest && lst[j] > smallest){\n      next_smallest = lst[j];\n    }\n\
    \  }\n  return next_smallest;\n}\n", "  let smallest = Math.min(...lst);\n  let\
    \ smallerList = [];\n  let counter = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] === smallest){\n      counter++;\n    }\n    else {\n      smallerList.push(lst[i]);\n\
    \    }\n  }\n  if(counter > 1){\n    return undefined;\n  }\n  else {\n    return\
    \ Math.min(...smallerList);\n  }\n}", "  var small = Math.min(...lst);\n  var\
    \ smalllst = [small];\n  while (lst.includes(small)){\n    lst.splice(lst.indexOf(small),\
    \ 1);\n  }\n  var second = Math.min(...lst);\n  if(second == Infinity){\n    return\
    \ undefined;\n  }\n  return second;\n}\n", "    var smallest = Math.min(...lst);\n\
    \    var filtered = lst.filter(e => e!=smallest);\n    if(filtered.length > 0){\n\
    \        return Math.min(...filtered);\n    }\n    return undefined;\n}\n", " \
    \   let array = []\n    if(lst.length === 0) {\n        return undefined\n   \
    \ } else if(lst.length === 1) {\n        return undefined\n    }\n    for(let\
    \ i = 0; i < lst.length; i++) {\n        array.push(lst[i])\n    }\n    let sort\
    \ = array.sort((a, b) => a - b)\n    return sort[1]\n}", "  if (lst.length < 2){\n\
    \    return undefined;\n  }\n\n  var smallest = lst[0];\n  var second_smallest\
    \ = lst[1];\n\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] < smallest){\n\
    \      second_smallest = smallest;\n      smallest = lst[i];\n    }\n    else\
    \ if (lst[i] < second_smallest){\n      second_smallest = lst[i];\n    }\n  }\n\
    \  return second_smallest;\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    var min = lst[0];\n    var nMin = lst[1];\n    for (var i = 1; i <\
    \ lst.length; i++){\n        if (lst[i] < min){\n            nMin = min;\n   \
    \         min = lst[i];\n        }\n        else if (lst[i] < nMin){\n       \
    \     nMin = lst[i];\n        }\n    }\n    return nMin;\n}\n", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n    var minimum = lst[0];\n    var\
    \ second_min = lst[1];\n    if (second_min < minimum){\n        minimum = lst[1];\n\
    \        second_min = lst[0];\n    }\n    for (var i = 2; i < lst.length; i++){\n\
    \        if (lst[i] < minimum){\n            second_min = minimum;\n         \
    \   minimum = lst[i];\n        }\n        else if (lst[i] < second_min){\n   \
    \         second_min = lst[i];\n        }\n    }\n    return second_min;\n}\n",
  "    lst.sort(function(a, b){return a-b});\n    if (lst.length == 0){\n        return\
    \ undefined;\n    }\n    if (lst.length < 2){\n        return undefined;\n   \
    \ }\n    if (lst[0] == lst[1]){\n        return undefined;\n    }\n    return\
    \ lst[1];\n}\n", "\tif(lst.length < 2){\n\t\treturn undefined;\n\t}\n\tvar smallest\
    \ = lst[0];\n\tvar nextSmallest = lst[1];\n\tfor(var i = 1; i < lst.length; i++){\n\
    \t\tif(lst[i] < smallest){\n\t\t\tnextSmallest = smallest;\n\t\t\tsmallest = lst[i];\n\
    \t\t}\n\t\telse if(lst[i] < nextSmallest){\n\t\t\tnextSmallest = lst[i];\n\t\t\
    }\n\t}\n\treturn nextSmallest;\n}\n", "  if (lst.length === 0) {\n    return undefined;\n\
    \  } else if (lst.length === 1) {\n    return undefined;\n  }\n  let min = lst[0];\n\
    \  let secondmin = lst[1];\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      secondmin = min;\n      min = lst[i];\n    } else if (lst[i]\
    \ < secondmin && lst[i] > min) {\n      secondmin = lst[i];\n    }\n  }\n  return\
    \ secondmin;\n}\n", "    if (lst.length < 2){\n        return \"undefined\";\n\
    \    }\n    var smallest = Math.min(...lst);\n    var next_smallest = smallest;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > smallest && lst[i]\
    \ < next_smallest){\n            next_smallest = lst[i];\n        }\n    }\n \
    \   if (next_smallest === smallest){\n        return \"undefined\";\n    }\n \
    \   return next_smallest;\n}", "    lst.sort(function(a, b){return a-b});\n  \
    \  var max = lst[lst.length-1];\n    var min = lst[0];\n    for(var i = 1; i <\
    \ lst.length; i++){\n        if(lst[i] == min){\n            continue;\n     \
    \   }\n        return lst[i];\n    }\n    return undefined;\n}\n", "    if (lst.length\
    \ < 2){\n        return undefined;\n    }\n    let first = Math.min(...lst);\n\
    \    let second = Number.MAX_SAFE_INTEGER;\n    for (let i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < second && lst[i] > first){\n            second =\
    \ lst[i];\n        }\n    }\n    if (second == Number.MAX_SAFE_INTEGER){\n   \
    \     return undefined;\n    }\n    return second;\n}\n", "    var min_value =\
    \ lst[0];\n    var min_value_index = 0;\n    var second_min_value = min_value;\n\
    \    var second_min_value_index = min_value_index;\n    for (var i = 1; i < lst.length;\
    \ i++){\n        if (lst[i] < min_value){\n            second_min_value = min_value;\n\
    \            second_min_value_index = min_value_index;\n            min_value\
    \ = lst[i];\n            min_value_index = i;\n        }\n        else if (lst[i]\
    \ < second_min_value && i != min_value_index){\n            second_min_value =\
    \ lst[i];\n            second_min_value_index = i;\n        }\n    }\n    return\
    \ second_min_value;\n}\n\n", "    var size = lst.length;\n    var smallest = lst[0];\n\
    \    var second_smallest = [];\n    for(var i = 0; i < size; i++){\n        if(lst[i]\
    \ < smallest){\n            smallest = lst[i];\n        }\n    }\n    for(var\
    \ i = 0; i < size; i++){\n        if(lst[i] < second_smallest && lst[i] > smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }", "    let min = lst[0];\n    let nextMin = null;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < min){\n            nextMin = min;\n            min\
    \ = lst[i];\n        }\n        else if(lst[i] < nextMin && lst[i] != min){\n\
    \            nextMin = lst[i];\n        }\n    }\n    return nextMin;\n}", " \
    \   lst.sort(function(a, b){return a-b});\n    for(let i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] !== lst[i-1]){\n            return lst[i];\n      \
    \  }\n    }\n    return undefined;\n}\n", "  \n  if(lst.length<=1){\n    return\
    \ undefined;\n  }\n\n  let mini = lst[0];\n  let result = lst[1];\n  for(let i=1;\
    \ i<lst.length; i++){\n    if(lst[i]<mini){\n      result = mini;\n      mini\
    \ = lst[i];\n    }\n    else if(lst[i] < result){\n      result = lst[i];\n  \
    \  }\n  }\n  return result;\n}\n", "    if (lst.length == 0){\n        return\
    \ undefined;\n    }\n    else if (lst.length == 1){\n        return undefined;\n\
    \    }\n    else{\n        var smallest = lst[0];\n        var second_smallest\
    \ = lst[1];\n        for (var i = 0; i < lst.length; i++){\n            if (lst[i]\
    \ < smallest){\n                second_smallest = smallest;\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < second_smallest && lst[i]\
    \ != smallest){\n                second_smallest = lst[i];\n            }\n  \
    \      }\n        return second_smallest;\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

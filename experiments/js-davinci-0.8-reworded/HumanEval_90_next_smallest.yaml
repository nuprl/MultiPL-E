name: HumanEval_90_next_smallest
language: js
prompt: "//You are given an array of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\n// Return undefined if there\
  \ is no such element.\n// >>> next_smallest([1, 2, 3, 4, 5])\n// 2\n// >>> next_smallest([5,\
  \ 1, 4, 3, 2])\n// 2\n// >>> next_smallest([])\n// undefined\n// >>> next_smallest([1,\
  \ 1])\n// undefined\nfunction next_smallest(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = next_smallest;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),2);\n  assert.deepEqual(candidate([5,\
  \ 1, 4, 3, 2]),2);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([1, 1, 1, 1, 0]),1);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([-35, 34, 12, -45]),-35);\n}\n\n\
  test();"
completions: ["    if (lst.length > 1){\n        lst.sort();\n        for (var i =\
    \ 0; i < lst.length; i++){\n            if (lst[i] < lst[i+1]){\n            \
    \    return lst[i+1];\n            }\n        }\n    }\n    return undefined;\n\
    }", "    if (lst.length == 0) return undefined;\n    if (lst.length == 1) return\
    \ undefined;\n    var min = Math.min(...lst);\n    var index = lst.indexOf(min);\n\
    \    lst.splice(index, 1);\n    return Math.min(...lst);\n}\n", "\tif(lst.length<=1){\n\
    \t\treturn undefined;\n\t}\n\tvar smallest=Math.min(...lst);\n\tvar second_smallest=Number.MAX_VALUE;\n\
    \tfor(var i in lst){\n\t\tif(lst[i]>smallest&&lst[i]<second_smallest){\n\t\t\t\
    second_smallest=lst[i];\n\t\t}\n\t}\n\tif(second_smallest==Number.MAX_VALUE){\n\
    \t\treturn undefined;\n\t}\n\treturn second_smallest;\n}", "    return undefined;\n\
    }\n", "    if (lst.length < 2){\n        return undefined;\n    }\n    else{\n\
    \        let smallest = lst[0];\n        let secondSmallest = undefined;\n   \
    \     for (let i = 1; i < lst.length; i++){\n            if (lst[i] < smallest){\n\
    \                secondSmallest = smallest;\n                smallest = lst[i];\n\
    \            }\n            else if ((lst[i] < secondSmallest || secondSmallest\
    \ === undefined) && lst[i] !== smallest){\n                secondSmallest = lst[i];\n\
    \            }\n        }\n        return secondSmallest;\n    }\n}\n", "    var\
    \ smallest = Math.min(...lst);\n    var second_smallest = Math.max(...lst);\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < second_smallest\
    \ && lst[i] > smallest){\n            second_smallest = lst[i];\n        }\n \
    \   }\n    if (smallest == second_smallest){\n        return undefined;\n    }\n\
    \    return second_smallest;\n}", "    if (lst.length < 2){\n        return undefined;\n\
    \    }\n    else {\n        var smallest = lst[0];\n        var next_smallest\
    \ = lst[1];\n        for (var i = 0; i < lst.length; i++){\n            if (lst[i]\
    \ < smallest){\n                next_smallest = smallest;\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < next_smallest && lst[i]\
    \ > smallest){\n                next_smallest = lst[i];\n            }\n     \
    \   }\n        return next_smallest;\n    }\n}\n", "    if (lst.length === 0)\
    \ return undefined;\n    let sort_list = lst.sort((a, b) => a - b);\n    let smallest\
    \ = sort_list[0];\n    let i = 1;\n    while (sort_list[i] === smallest) {\n \
    \       i += 1;\n    }\n    return sort_list[i];\n}\n", "    if (lst.length <=\
    \ 1){\n        return undefined;\n    }\n    let smallest = lst[0];\n    let second_smallest\
    \ = undefined;\n    for (let i = 1; i < lst.length; i++){\n        if (lst[i]\
    \ < smallest){\n            second_smallest = smallest;\n            smallest\
    \ = lst[i];\n        } else if (lst[i] < second_smallest || second_smallest ===\
    \ undefined){\n            second_smallest = lst[i];\n        }\n    }\n    return\
    \ second_smallest;\n}\n", "    if (lst.length == 0) {\n        return undefined;\n\
    \    }\n    var lst_sorted = lst.sort();\n    if (lst_sorted[0] != lst_sorted[1])\
    \ {\n        return lst_sorted[1];\n    }\n    else {\n        var result = lst_sorted[1];\n\
    \        for (var i = 1; i < lst_sorted.length; i++) {\n            if (lst_sorted[i]\
    \ != result) {\n                return lst_sorted[i];\n            }\n       \
    \ }\n    }\n    return undefined;\n}", "    if (lst.length === 0) return undefined;\n\
    \    if (lst.length === 1) return undefined;\n    if (lst.length === 2) {\n  \
    \      if (lst[0] === lst[1]) return undefined;\n        else return lst[1];\n\
    \    }\n    var smallest = Number.MAX_VALUE;\n    var second_smallest = Number.MAX_VALUE;\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] < smallest) {\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if (lst[i] > smallest && lst[i] < second_smallest) {\n \
    \           second_smallest = lst[i];\n        }\n    }\n    if (second_smallest\
    \ === Number.MAX_VALUE) return undefined;\n    return second_smallest;\n}", " \
    \   var smallest = Math.min(...lst);\n    var result = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] != smallest){\n            result.push(lst[i]);\n\
    \        }\n    }\n    if(result.length > 0){\n        return Math.min(...result);\n\
    \    }else{\n        return undefined;\n    }\n}", "    var lst=lst.slice().sort(function(a,b){return\
    \ a-b});\n    var lst2=[];\n    for(var i=0;i<lst.length;i++){\n        if(lst2.indexOf(lst[i])==-1){\n\
    \            lst2.push(lst[i]);\n        }\n    }\n    if(lst2.length>1){\n  \
    \      return lst2[1];\n    }\n    else{\n        return undefined;\n    }\n}",
  "    if (lst.length < 2){\n        return undefined;\n    }\n    var smallest =\
    \ lst[0];\n    var secondSmallest = lst[1];\n    for (var i = 1; i < lst.length;\
    \ i++){\n        if (lst[i] < smallest){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if (lst[i] < secondSmallest){\n\
    \            secondSmallest = lst[i];\n        }\n    }\n    return secondSmallest;\n\
    }\n", "    if (lst.length < 2){\n        return undefined;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = lst[1];\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < smallest){\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if (lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\n", "    if (lst.length == 0) {\n        return undefined;\n    }\n    var min\
    \ = lst[0];\n    var second_min = lst[0];\n    for (i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < min) {\n            second_min = min;\n            min\
    \ = lst[i];\n        }\n        else if (lst[i] < second_min && lst[i] != min)\
    \ {\n            second_min = lst[i];\n        }\n    }\n    if (second_min ==\
    \ min) {\n        return undefined;\n    }\n    return second_min;\n}", "    if\
    \ (lst.length < 2){\n        return undefined;\n    } else {\n        var smallest\
    \ = lst[0];\n        var second_smallest = lst[1];\n        for (var i = 0; i\
    \ < lst.length; i++){\n            if (lst[i] < smallest){\n                second_smallest\
    \ = smallest;\n                smallest = lst[i];\n            } else if (lst[i]\
    \ < second_smallest && lst[i] > smallest){\n                second_smallest =\
    \ lst[i];\n            }\n        }\n        return second_smallest;\n    }\n\
    }\n", "    //return lst.sort()[1];  // will return undefined for empty list\n\
    \    if (lst.length < 2) {\n        return undefined;\n    }\n    var smallest\
    \ = lst[0];\n    var second_smallest = undefined;\n    for (var i = 1; i < lst.length;\
    \ i++) {\n        if (lst[i] < smallest) {\n            second_smallest = smallest;\n\
    \            smallest = lst[i];\n        } else if ((lst[i] < second_smallest)\
    \ || (second_smallest === undefined)) {\n            second_smallest = lst[i];\n\
    \        }\n    }\n    return second_smallest;\n}", "    if (lst.length == 1){\n\
    \        return undefined;\n    }\n    else{\n        var res = Math.min(...lst);\n\
    \        lst.splice(lst.indexOf(res), 1);\n        var res2 = Math.min(...lst);\n\
    \        return res2;\n    }\n}\n", "    if (lst.length<=1){\n        return undefined;\n\
    \    }\n    var smallest=lst[0];\n    var second_smallest;\n    for (var i=1;i<lst.length;i++){\n\
    \        if (lst[i]<smallest){\n            second_smallest=smallest;\n      \
    \      smallest=lst[i];\n        }\n        else if (lst[i]>smallest && lst[i]<second_smallest){\n\
    \            second_smallest=lst[i];\n        }\n    }\n    return second_smallest;\n\
    }"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

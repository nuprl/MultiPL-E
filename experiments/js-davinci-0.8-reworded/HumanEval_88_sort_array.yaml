name: HumanEval_88_sort_array
language: js
prompt: "//Given an array of non-negative integers, return a cojs of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n// >>> sort_array([5])\n\
  // [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0, 1, 2, 3, 4, 5]\n// >>> sort_array([2,\
  \ 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
  \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
  \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
  \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42,\
  \ 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\n\
  test();"
completions: ["    let sum = array[0] + array[array.length - 1];\n    let newArr =\
    \ [];\n    if(sum % 2 === 0){\n        newArr = array.sort(function(a, b){return\
    \ b - a;});\n    }else{\n        newArr = array.sort(function(a, b){return a -\
    \ b;});\n    }\n    return newArr;\n}", "    if (array.length == 0 || array.length\
    \ == 1){\n        return array;\n    }else{\n        if (array[0] + array[array.length\
    \ - 1] % 2 == 0){\n            return array.sort(function(a, b){\n           \
    \     return b - a;\n            });\n        }else{\n            return array.sort(function(a,\
    \ b){\n                return a - b;\n            });\n        }\n    }\n}\n",
  "    if(array.length>1){\n        if((array[0]+array[array.length-1])%2==0){\n \
    \           array.sort(function(a,b){\n                return b-a;\n         \
    \   });\n        }\n        else{\n            array.sort(function(a,b){\n   \
    \             return a-b;\n            });\n        }\n    }\n    return array;\n\
    }", "  const firstElement = array[0];\n  const lastElement = array[array.length\
    \ - 1];\n  const sum = firstElement + lastElement;\n  if (sum % 2 === 0) {\n \
    \   return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "  var odds = [],\n      evens = [],\n      result\
    \ = [];\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] % 2 ===\
    \ 0) {\n      evens.push(array[i]);\n    } else {\n      odds.push(array[i]);\n\
    \    }\n  }\n  odds.sort(function(a, b) { return a - b; });\n  evens.sort(function(a,\
    \ b) { return b - a; });\n  for (var i = 0; i < array.length; i++) {\n    if (array[i]\
    \ % 2 === 0) {\n      result.push(evens.shift());\n    } else {\n      result.push(odds.shift());\n\
    \    }\n  }\n  return result;\n}", "  let sum = array[0] + array[array.length\
    \ - 1];\n  return sum % 2 === 0 ? array.sort((a, b) => b - a) : array.sort((a,\
    \ b) => a - b);\n}", "  var newArray = [];\n  if ((array[0] + array[array.length\
    \ - 1]) % 2 === 0) {\n    newArray = array.sort(function(a, b) {\n      return\
    \ b - a;\n    });\n  } else {\n    newArray = array.sort(function(a, b) {\n  \
    \    return a - b;\n    });\n  }\n  return newArray;\n}", "    if(array.length\
    \ === 0){\n        return [];\n    }else if(array.length === 1){\n        return\
    \ array;\n    }else{\n        if((array[0] + array[array.length - 1]) % 2 ===\
    \ 0){\n            return (array.sort().reverse());\n        }else{\n        \
    \    return (array.sort());\n        }\n    }\n}\n", "    let sum = array[0] +\
    \ array[array.length - 1];\n    console.log(sum)\n    if(sum % 2 !== 0){\n   \
    \     return array.sort((a, b) => a - b);\n    }else{\n        return array.sort((a,\
    \ b) => b - a);\n    }\n}\nlet arr = [2, 4, 3, 0, 1, 5, 6]\nlet result = sort_array(arr);",
  "  let result = [];\n  if (array.length < 1){\n    return array;\n  }\n  if ((array[0]\
    \ + array[array.length - 1]) % 2 !== 0){\n    result = array.sort((a, b) => a\
    \ - b);\n  } else if ((array[0] + array[array.length - 1]) % 2 === 0){\n    result\
    \ = array.sort((a, b) => b - a);\n  }\n  return result;\n}\n", "    if(array.length\
    \ === 0){\n        return array;\n    }\n    if(array.length === 1){\n       \
    \ return array;\n    }\n    if((array[0] + array[array.length - 1]) % 2 !== 0){\n\
    \        array.sort((a, b) => a - b);\n    }\n    else{\n        array.sort((a,\
    \ b) => b - a);\n    }\n    return array;\n}\n", "  if (array.length<=1) {\n \
    \   return array;\n  }\n\n  let first = array[0];\n  let last = array[array.length-1];\n\
    \  let sum = first + last;\n  let newArray = [];\n\n  for (var i = 0; i < array.length;\
    \ i++) {\n    newArray.push(array[i]);\n  }\n\n  newArray.sort(function(a, b){\n\
    \    return a-b;\n  });\n\n  if (sum%2===0) {\n    return newArray.reverse();\n\
    \  } else {\n    return newArray;\n  }\n}\n", "    let first_element = array[0];\n\
    \    let last_element = array[array.length - 1];\n    let sum = first_element\
    \ + last_element;\n    if (sum % 2 == 0) {\n        return array.sort(function(a,\
    \ b){return b - a})\n    } else {\n        return array.sort(function(a, b){return\
    \ a - b})\n    }\n}", "    var sum = array[0] + array[array.length - 1];\n   \
    \ if (sum % 2 === 0) {\n        return array.sort(function(a, b) {\n         \
    \   return b - a;\n        });\n    } else {\n        return array.sort(function(a,\
    \ b) {\n            return a - b;\n        });\n    }\n}\n", "  let sum = array[0]\
    \ + array[array.length - 1];\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => b - a);\n  } else {\n    return array.sort((a, b) => a - b);\n  }\n}\n",
  "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
    \    return array;\n  }\n  var check = array[0] + array[array.length - 1];\n \
    \ if (check % 2 === 0) {\n    array.sort(function(a, b) {\n      return b - a;\n\
    \    });\n  } else {\n    array.sort(function(a, b) {\n      return a - b;\n \
    \   });\n  }\n  return array;\n}\n", "   let sum = array[0] + array[array.length\
    \ - 1];\n   if(sum % 2 !== 0){\n       array.sort(function(a, b){return a - b});\n\
    \   } else{\n       array.sort(function(a, b){return b - a});\n   }\n   return\
    \ array;\n}\n", "    let sum = array[0] + array[array.length - 1];\n    if (sum\
    \ % 2 !== 0) {\n        return array.sort((a, b) => a - b);\n    } else {\n  \
    \      return array.sort((a, b) => b - a);\n    }\n}\n", "    if(array.length\
    \ == 0){\n        return array;\n    }\n    let first = array[0];\n    let last\
    \ = array[array.length - 1];\n    if( (first + last) % 2 == 0){\n        return\
    \ array.sort(function(a, b){return b - a;});\n    }\n    else{\n        return\
    \ array.sort(function(a, b){return a - b;});\n    }\n}", "    if (array.length\
    \ === 0 || array.length === 1) {\n        return array;\n    } else {\n      \
    \  if ((array[0] + array[array.length - 1]) % 2) {\n            return array.sort(function(a,\
    \ b) {\n                return a - b;\n            });\n        } else {\n   \
    \         return array.sort(function(a, b) {\n                return b - a;\n\
    \            });\n        }\n    }\n}", "    if (array.length > 1) {\n       \
    \ let sum = array[0] + array[array.length - 1];\n        if (sum % 2 === 0) {\n\
    \            array.sort(function (a, b) {\n                return b - a;\n   \
    \         });\n        } else {\n            array.sort(function (a, b) {\n  \
    \              return a - b;\n            });\n        }\n    }\n    return array;\n\
    }\n", "    // write your code here\n    let firstIndex = array[0];\n    let lastIndex\
    \ = array[array.length - 1];\n    let sum = firstIndex + lastIndex;\n    if (sum\
    \ % 2 == 0) {\n        array.sort(function(a, b){return b-a});\n    } else {\n\
    \        array.sort(function(a, b){return a-b});\n    }\n    return array;\n}",
  "  if (array.length == 0) {\n    return array;\n  } else if (array.length == 1)\
    \ {\n    return array;\n  } else if ((array[0] + array[array.length - 1]) % 2\
    \ != 0) {\n    return array.sort(function(a, b){\n      return a - b;\n    });\n\
    \  } else {\n    return array.sort(function(a, b){\n      return b - a;\n    });\n\
    \  }\n}\n", "  if(array.length === 0){\n    return [];\n  } else if(array.length\
    \ === 1){\n    return array;\n  } else if(array[0] + array[array.length - 1] %\
    \ 2 === 0){\n    return array.sort((a, b) => b - a);\n  } else if(array[0] + array[array.length\
    \ - 1] % 2 !== 0){\n    return array.sort((a, b) => a - b);\n  }\n}\n", "    if\
    \ (array.length > 0) {\n        if ((array[0] + array[array.length - 1]) % 2 ==\
    \ 0) {\n            array.sort(function (a, b) {\n                return b - a;\n\
    \            });\n        } else {\n            array.sort(function (a, b) {\n\
    \                return a - b;\n            });\n        }\n    }\n    return\
    \ array;\n}\n", "    var sum = array[0] + array[array.length - 1];\n    if (sum\
    \ % 2 == 0) {\n        return array.sort(function(a, b){return b - a});\n    }\
    \ else {\n        return array.sort(function(a, b){return a - b});\n    }\n}",
  "    let answer = []\n    for(let i = 0; i < array.length; i++){\n      answer.push(array[i])\n\
    \    }\n    if(array.length < 2){\n      return answer\n    }\n    if((array[0]\
    \ + array[array.length - 1]) % 2 === 0){\n      answer.sort(function(a, b){return\
    \ b - a})\n    }else{\n      answer.sort(function(a, b){return a - b})\n    }\n\
    \    return answer\n  }", "    if(array.length == 0){\n        return [];\n  \
    \  }else if(array.length == 1){\n        return array;\n    }else{\n        return\
    \ array.sort(function(a,b){\n            return a + b;\n        });\n    }\n}\n",
  "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 == 0) {\n  \
    \      return array.sort((a, b) => a - b);\n    } else {\n        return array.sort((a,\
    \ b) => b - a);\n    }\n}", "    if(array.length==0){\n        return [];\n  \
    \  }\n    else if(array.length==1){\n        return array;\n    }\n    else if((array[0]+array[array.length-1])%2==0){\n\
    \        array.sort(function(a,b){\n            return b-a;\n        });\n   \
    \     return array;\n    }\n    else{\n        array.sort(function(a,b){\n   \
    \         return a-b;\n        });\n        return array;\n    }\n}", "    if(array.length\
    \ < 2){\n        return array;\n    }\n\n    var sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 === 0){\n        return array.sort(function(a, b){return\
    \ b - a});\n    }\n    else{\n        return array.sort(function(a, b){return\
    \ a - b});\n    }\n}\n", "\tvar sum = 0;\n\tvar newArr = [];\n\tvar oddArr = [];\n\
    \tvar evenArr = [];\n\tfor(var i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\
    \t}\n\tif(sum % 2 === 0){\n\t\tnewArr = array.sort(function(a, b){return b - a;});\n\
    \t}else{\n\t\tnewArr = array.sort(function(a, b){return a - b;});\n\t}\n\tfor(var\
    \ j = 0; j < newArr.length; j++){\n\t\tif(newArr[j] % 2 === 0){\n\t\t\tevenArr.push(newArr[j]);\n\
    \t\t}else{\n\t\t\toddArr.push(newArr[j]);\n\t\t}\n\t}\n\tvar finalArr = oddArr.concat(evenArr);\n\
    \treturn finalArr;\n}", "    let copy_array = [];\n    for (let i=0; i<array.length;\
    \ i++){\n        copy_array.push(array[i]);\n    }\n    let first = copy_array[0];\n\
    \    let last = copy_array[copy_array.length-1];\n    let num = first + last;\n\
    \    if (num % 2 == 0){\n        copy_array.sort(function(a, b){return b-a;});\n\
    \    }\n    else{\n        copy_array.sort(function(a, b){return a-b;});\n   \
    \ }\n    return copy_array;\n}\n", "    let evenSum = 0;\n    let oddSum = 0;\n\
    \    let evens = [];\n    let odds = [];\n    let newArr = [];\n    if(array.length\
    \ == 0 || array.length == 1){\n        return array;\n    }\n    else{\n     \
    \   evenSum = array[0] + array[array.length - 1];\n        for(let i = 0; i <\
    \ array.length; i++){\n            if(array[i] % 2 == 0){\n                evens.push(array[i]);\n\
    \            }\n            else{\n                odds.push(array[i]);\n    \
    \        }\n        }\n        if(evenSum % 2 == 0){\n            evens.sort(function(a,\
    \ b){return b - a});\n            odds.sort(function(a, b){return b - a});\n \
    \           for(let i = 0; i < evens.length; i++){\n                newArr.push(evens[i]);\n\
    \            }\n            for(let i = 0; i < odds.length; i++){\n          \
    \      newArr.push(odds[i]);\n            }\n        }\n        else{\n      \
    \      evens.sort(function(a, b){return a - b});\n            odds.sort(function(a,\
    \ b){return a - b});\n            for(let i = 0; i < evens.length; i++){\n   \
    \             newArr.push(evens[i]);\n            }\n            for(let i = 0;\
    \ i < odds.length; i++){\n                newArr.push(odds[i]);\n            }\n\
    \        }\n        return newArr;\n    }\n}\nlet array = [2, 4, 3, 0, 1, 5, 6];\n\
    let newArr = sort_array(array);", "    var counter = 0;\n    for(var i = 0; i\
    \ < array.length; i++) {\n        for(var j = 0; j < array.length; j++) {\n  \
    \          if(array[i] + array[j] % 2 === 0) {\n                counter++;\n \
    \           }\n        }\n    }\n    if(counter % 2 === 0) {\n        return array.sort(function(a,\
    \ b) {\n            return a-b;\n        });\n    } else {\n        return array.sort(function(a,\
    \ b) {\n            return b-a;\n        });\n    }\n}\n", "  let left_sum = array[0];\n\
    \  let right_sum = array[array.length - 1];\n  if((left_sum + right_sum) % 2 ==\
    \ 0){\n    return array.sort((a, b) => a - b);\n  }\n  else{\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "    var odd_array = [];\n    var even_array = [];\n\
    \    var odd_index_array = [];\n    var even_index_array = [];\n    if (array.length\
    \ === 0){\n        return [];\n    } else if (array.length % 2 === 0){\n     \
    \   return array.sort(function(a, b){\n            return b - a;\n        });\n\
    \    } else {\n        for (i = 0; i < array.length; i++){\n            if (array[i]\
    \ % 2 === 0){\n                even_array.push(array[i]);\n                even_index_array.push(i);\n\
    \            } else {\n                odd_array.push(array[i]);\n           \
    \     odd_index_array.push(i);\n            }\n        }\n        even_array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n        odd_array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n        for (j = 0; j < odd_array.length;\
    \ j++){\n            array[odd_index_array[j]] = odd_array[j];\n        }\n  \
    \      for (k = 0; k < even_array.length; k++){\n            array[even_index_array[k]]\
    \ = even_array[k];\n        }\n        return array;\n    }\n}", "    if(array.length\
    \ === 0){\n        return array;\n    }\n    else if(array.length === 1){\n  \
    \      return array;\n    }\n    else{\n        if((array[0] + array[array.length\
    \ - 1]) % 2 === 0){\n            return array.sort(function(a, b){return b - a;});\n\
    \        }\n        else{\n            return array.sort(function(a, b){return\
    \ a - b;});\n        }\n    }\n}\nvar arr = [2, 4, 3, 0, 1, 5, 6];", "    if(array.length\
    \ === 0 || array.length === 1){\n        return array;\n    }\n    let sum = array[0]\
    \ + array[array.length - 1];\n    if(sum % 2 === 0){\n        return array.sort((a,\
    \ b) => b - a);\n    }else{\n        return array.sort((a, b) => a - b);\n   \
    \ }\n}", "  if (array.length == 0) {\n    return array;\n  }\n  let odd_array\
    \ = [];\n  let even_array = [];\n  let odd_check = false;\n  let even_check =\
    \ false;\n  let sum = array[0] + array[array.length - 1];\n  if (sum % 2 == 0)\
    \ {\n    even_check = true;\n  }\n  else {\n    odd_check = true;\n  }\n  for\
    \ (let i = 0; i < array.length; i++) {\n    if (array[i] % 2 == 0) {\n      even_array.push(array[i]);\n\
    \    }\n    else {\n      odd_array.push(array[i]);\n    }\n  }\n  if (odd_check)\
    \ {\n    odd_array.sort((a, b) => a - b);\n    for (let i = 0; i < array.length;\
    \ i++) {\n      if (array[i] % 2 == 0) {\n        array[i] = even_array.shift();\n\
    \      }\n      else {\n        array[i] = odd_array.shift();\n      }\n    }\n\
    \  }\n  else {\n    even_array.sort((a, b) => b - a);\n    for (let i = 0; i <\
    \ array.length; i++) {\n      if (array[i] % 2 == 0) {\n        array[i] = even_array.shift();\n\
    \      }\n      else {\n        array[i] = odd_array.shift();\n      }\n    }\n\
    \  }\n  return array;\n}", "    let sum = 0;\n    if(array.length != 0){\n   \
    \     for(let i = 0; i < array.length; i++){\n            sum += array[i];\n \
    \       }\n        if(sum % 2 != 0){\n            return array.sort((a, b) =>\
    \ a - b);\n        }else{\n            return array.sort((a, b) => b - a);\n \
    \       }\n    }else{\n        return array;\n    }\n}\n", "    let temp = [];\n\
    \    let sum = array[0] + array[array.length - 1];\n    if(sum % 2 == 0){\n  \
    \      array.sort((a, b) => {\n            return b - a;\n        });\n    }else{\n\
    \        array.sort((a, b) => {\n            return a - b;\n        });\n    }\n\
    \    return array;\n}", "    //insert your code here\n\n    var first = array[0];\n\
    \    var last = array[array.length-1];\n    if ((first + last) % 2 == 0){\n  \
    \      return array.sort(function(a, b){return b-a;});\n    }\n    else{\n   \
    \     return array.sort(function(a, b){return a-b;});\n    }\n\n}\n", "  if(array.length\
    \ == 0 || array.length == 1) {\n    return array;\n  }\n  var sum = array[0] +\
    \ array[array.length - 1];\n  var oddeven = sum % 2;\n  if(oddeven == 0) {\n \
    \   return array.sort(function(a, b){return b-a});\n  }\n  else {\n    return\
    \ array.sort(function(a, b){return a-b});\n  }\n}", "    //your code here\n  \
    \  var sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
    \       return array.sort((a, b) => a - b);\n    } else {\n        return array.sort((a,\
    \ b) => b - a);\n    }\n}", "    //I believe this is the functional approach\n\
    \    //the '%' is the modulo operator, it will return the remainder of division\n\
    \    //the '==' is the test for equality, it will return a boolean value\n   \
    \ //the code is saying, if the remainder of index 0 and the last index division\
    \ is equal to 0\n    //then return the array in descending order\n    if(array[0]\
    \ % array[array.length - 1] == 0){\n        return array.sort((a, b) => b - a);\n\
    \    }\n    //otherwise return the array in ascending order\n    else{\n     \
    \   return array.sort((a, b) => a - b);\n    }\n}\n", "    if(array.length ===\
    \ 0){\n        return [];\n    }\n    if(array.length === 1){\n        return\
    \ array;\n    }\n    if((array[0] + array[array.length - 1]) % 2 === 0){\n   \
    \     return array.sort((a, b) => b - a);\n    }else{\n        return array.sort((a,\
    \ b) => a - b);\n    }\n}\n", "    let count = 0;\n    array.forEach(element =>\
    \ {\n        count += element;\n    });\n    if(count % 2 === 0){\n        return\
    \ array.sort((a, b) => b - a);\n    }\n    return array.sort((a, b) => a - b);\n\
    }\n", "    let isOdd = (array[0] + array[array.length - 1]) % 2;\n    return isOdd\
    \ ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  let sum\
    \ = array[0] + array[array.length - 1];\n  if (sum % 2 == 0) {\n    return array.sort(function(a,\
    \ b){return b - a;});\n  }\n  else {\n    return array.sort(function(a, b){return\
    \ a - b;});\n  }\n}", "  var result = [];\n  var flag;\n  if(array.length ===\
    \ 0){\n    return [];\n  }\n  if(array.length === 1){\n    return array;\n  }\n\
    \  if((array[0] + array[array.length - 1]) % 2 !== 0){\n    flag = 1;\n  }\n \
    \ if((array[0] + array[array.length - 1]) % 2 === 0){\n    flag = 0;\n  }\n  for(var\
    \ i = 0; i < array.length; i++){\n    result.push(array[i]);\n  }\n  if(flag ===\
    \ 1){\n    result.sort(function(a, b){\n      return a - b;\n    });\n  }\n  if(flag\
    \ === 0){\n    result.sort(function(a, b){\n      return b - a;\n    });\n  }\n\
    \  return result;\n}\n", "  let len = array.length;\n  if(len === 0) {\n    return\
    \ [];\n  } else if(len === 1) {\n    return array;\n  } else {\n    let first\
    \ = array[0];\n    let last = array[len - 1];\n    if((first + last) % 2 === 0)\
    \ {\n      array.sort((a, b) => b - a);\n    } else {\n      array.sort((a, b)\
    \ => a - b);\n    }\n    return array;\n  }\n}\n", "    if(array.length==0) return\
    \ array;\n    let sum = array[0] + array[array.length-1];\n    if(sum%2==0){\n\
    \        return array.sort( (a,b) => b-a);\n    }else{\n        return array.sort(\
    \ (a,b) => a-b);\n    }\n}\n", "    if (array.length == 0) {\n        return array;\n\
    \    }\n    else if (array.length == 1) {\n        return array;\n    }\n    else\
    \ if ((array[0] + array[array.length - 1]) % 2 == 0) {\n        return array.sort((a,\
    \ b) => b - a);\n    }\n    else {\n        return array.sort((a, b) => a - b);\n\
    \    }\n}", "\tfunction compare(a, b){\n\t\tif((a+b)%2 === 0){\n\t\t\treturn b-a;\n\
    \t\t}\n\t\telse{\n\t\t\treturn a-b;\n\t\t}\n\t}\n\tif(array.length === 0){\n\t\
    \treturn [];\n\t}\n\treturn array.sort(compare);\n}", "    let isEven = array.length\
    \ % 2 === 0;\n    let evenArray = [];\n    let oddArray = [];\n    if(array.length\
    \ === 0 || array.length === 1){\n        return array;\n    }else if(isEven){\n\
    \        for(let i = 0; i < array.length; i++){\n            if(array[i] % 2 ===\
    \ 0){\n                evenArray.push(array[i]);\n            }else{\n       \
    \         oddArray.push(array[i]);\n            }\n        }\n        return evenArray.sort((a,\
    \ b) => a-b).concat(oddArray.sort((a, b) => b-a));\n    }else{\n        for(let\
    \ i = 0; i < array.length; i++){\n            if(array[i] % 2 === 0){\n      \
    \          evenArray.push(array[i]);\n            }else{\n                oddArray.push(array[i]);\n\
    \            }\n        }\n        return oddArray.sort((a, b) => a-b).concat(evenArray.sort((a,\
    \ b) => b-a));\n    }\n}", "    if(array.length > 0){\n        if((array[0] +\
    \ array[array.length - 1]) % 2 === 0){\n            return array.sort(function(a,\
    \ b){return b - a});\n        }\n        else{\n            return array.sort(function(a,\
    \ b){return a - b});\n        }\n    }\n    else{\n        return array;\n   \
    \ }\n}", "    var sum = array[0] + array[array.length - 1];\n    if (sum % 2 ===\
    \ 0) {\n        return array.sort(function(a, b) {\n            return b - a;\n\
    \        });\n    } else {\n        return array.sort(function(a, b) {\n     \
    \       return a - b;\n        });\n    }\n}", "  if (array.length == 0 || array.length\
    \ == 1){\n    return array;\n  } else if ((array[0] + array[array.length - 1])\
    \ % 2 == 0){\n    return array.sort(function(a, b){\n      return b - a;\n   \
    \ });\n  } else {\n    return array.sort(function(a, b){\n      return a - b;\n\
    \    });\n  }\n}\n", "    let result = [];\n    if (array.length === 0) {\n  \
    \      return result;\n    }\n    let odd_array = [];\n    let even_array = [];\n\
    \    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n\
    \        for (let i = 0; i < array.length; i++) {\n            if (array[i] %\
    \ 2 === 0) {\n                even_array.push(array[i]);\n            } else {\n\
    \                odd_array.push(array[i]);\n            }\n        }\n       \
    \ even_array.sort((a, b) => b - a);\n        odd_array.sort((a, b) => b - a);\n\
    \        for (let i = 0; i < array.length; i++) {\n            if (array[i] %\
    \ 2 === 0) {\n                result.push(even_array.shift());\n            }\
    \ else {\n                result.push(odd_array.shift());\n            }\n   \
    \     }\n    } else {\n        for (let i = 0; i < array.length; i++) {\n    \
    \        if (array[i] % 2 === 0) {\n                even_array.push(array[i]);\n\
    \            } else {\n                odd_array.push(array[i]);\n           \
    \ }\n        }\n        even_array.sort((a, b) => a - b);\n        odd_array.sort((a,\
    \ b) => a - b);\n        for (let i = 0; i < array.length; i++) {\n          \
    \  if (array[i] % 2 === 0) {\n                result.push(even_array.shift());\n\
    \            } else {\n                result.push(odd_array.shift());\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "\tif (array.length ===\
    \ 0) {\n\t\treturn array;\n\t}\n\tlet first = array[0];\n\tlet last = array[array.length\
    \ - 1];\n\tif ((first + last) % 2 === 0) {\n\t\tarray.sort(function(a, b) {\n\t\
    \t\treturn b - a;\n\t\t});\n\t} else {\n\t\tarray.sort(function(a, b) {\n\t\t\t\
    return a - b;\n\t\t});\n\t}\n\treturn array;\n}", "    // your code here..\n \
    \   if (array.length <= 1) return array;\n    let newArray = [];\n    if ((array[0]\
    \ + array[array.length - 1]) % 2 === 0) {\n        newArray = array.sort(function(a,\
    \ b) {\n            return b - a;\n        });\n    } else {\n        newArray\
    \ = array.sort(function(a, b) {\n            return a - b;\n        });\n    }\n\
    \    return newArray;\n}", "    if(array.length===0){\n        return [];\n  \
    \  }else if(array.length === 1){\n        return array;\n    }else if((array[0]+array[array.length-1])%2\
    \ === 0){\n        array.sort(function(a,b){\n            return b-a;\n      \
    \  });\n        return array;\n    }else{\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n        return array;\n    }\n}", "  if\
    \ (array.length === 0) {\n    return array;\n  }\n  if (array.length === 1) {\n\
    \    return array;\n  }\n  if (array[0] + array[array.length - 1] % 2 === 0) {\n\
    \    return array.sort(function(a, b) {\n      return b - a;\n    });\n  } else\
    \ {\n    return array.sort(function(a, b) {\n      return a - b;\n    });\n  }\n\
    }", "    // given array of non-negative integers,\n    // return array after sorting.\n\
    \    if (array.length == 0) {\n        return [];\n    } else if (array.length\
    \ == 1) {\n        return array;\n    } else {\n        // if sum of first and\
    \ last index of array is odd, sort ascending.\n        if ((array[0] + array[array.length\
    \ - 1]) % 2 == 1) {\n            return array.sort((a, b) => a - b);\n       \
    \ } else {\n            // if sum of first and last index of array is even, sort\
    \ descending.\n            return array.sort((a, b) => b - a);\n        }\n  \
    \  }\n}\n", "    let newArray = [];\n    let odds = [];\n    let evens = [];\n\
    \    let sum = 0;\n    for(let i = 0; i < array.length; i++){\n        if(array[i]\
    \ % 2 === 0){\n            evens.push(array[i]);\n        } else {\n         \
    \   odds.push(array[i]);\n        }\n    }\n    sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 === 0){\n        odds.sort(function(a, b){return b - a;});\n\
    \        newArray = odds.concat(evens);\n    } else {\n        odds.sort(function(a,\
    \ b){return a - b;});\n        newArray = odds.concat(evens);\n    }\n    return\
    \ newArray;\n}\n", "  if (!array.length) return array;\n  if (array.length ==\
    \ 1) return array;\n  if (array[0] + array[array.length - 1] % 2 == 0) {\n   \
    \ return array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b)\
    \ => a - b);\n  }\n}", "    if(array.length < 2){\n        return array;\n   \
    \ }\n    let mid = Math.floor(array.length / 2);\n    let left = array.slice(0,\
    \ mid);\n    let right = array.slice(mid);\n    return sort_array(left).concat(sort_array(right));\n\
    }", "  if(array.length == 0 || array.length == 1) return array;\n  let sum = array[0]\
    \ + array[array.length - 1];\n  if(sum % 2 == 0){\n    array.sort((a, b) => b\
    \ - a);\n  } else {\n    array.sort((a, b) => a - b);\n  }\n  return array;\n}",
  "    //\u6C42\u548C\n    var sum=array[0]+array[array.length-1];\n    //\u57FA\u6570\
    \n    if(sum%2!=0){\n        //\u5347\u5E8F\n        array.sort(function(a,b){\n\
    \            return a-b;\n        });\n    }else{\n        //\u964D\u5E8F\n  \
    \      array.sort(function(a,b){\n            return b-a;\n        });\n    }\n\
    \    return array;\n}\n", "  let result = [];\n  if(array.length < 1){\n    return\
    \ result;\n  } else if(array.length < 2){\n    return array;\n  } else {\n   \
    \ if((array[0] + array[array.length - 1]) % 2 === 0){\n      for(let i = array.length\
    \ - 1; i >= 0; i--){\n        result.push(array[i]);\n      }\n    } else {\n\
    \      for(let i = 0; i < array.length; i++){\n        result.push(array[i]);\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    if(array.length<2)return array;\n\
    \    var sum=array[0]+array[array.length-1];\n    var i=0;\n    var j=array.length-1;\n\
    \    if(sum%2==0){\n        while(i<j){\n            if(array[i]>array[j]){\n\
    \                var temp=array[i];\n                array[i]=array[j];\n    \
    \            array[j]=temp;\n            }\n            i++;\n            j--;\n\
    \        }\n    }else{\n        while(i<j){\n            if(array[i]<array[j]){\n\
    \                var temp=array[i];\n                array[i]=array[j];\n    \
    \            array[j]=temp;\n            }\n            i++;\n            j--;\n\
    \        }\n    }\n    return array;\n}", "    let result = [];\n    if(array.length\
    \ === 0 || array.length === 1)\n        return array;\n    if((array[0] + array[array.length\
    \ - 1]) % 2 !== 0){\n        result = [...array].sort((a, b) => a - b);\n    }else{\n\
    \        result = [...array].sort((a, b) => b - a);\n    }\n    return result;\n\
    }\n\nmodule.exports = sort_array;", "    const isOdd = (array[0] + array[array.length\
    \ - 1]) % 2;\n    if(isOdd) return array.sort((a, b) => a - b);\n    return array.sort((a,\
    \ b) => b - a);\n}\n", "  if(array.length === 0){\n    return array;\n  }\n  if(array.length\
    \ === 1){\n    return array;\n  }\n  if((array[0] + array[array.length - 1]) %\
    \ 2 !== 0){\n    return array.sort((a, b) => a - b);\n  }\n  return array.sort((a,\
    \ b) => b - a);\n}", "    var sum = array[0] + array[array.length - 1];\n    if\
    \ (sum % 2 === 0) {\n        return array.sort(function(a, b) {\n            return\
    \ b - a;\n        });\n    } else {\n        return array.sort(function(a, b)\
    \ {\n            return a - b;\n        });\n    }\n}\n", "    if(!array.length){\n\
    \        return array;\n    }\n    var sum = array[0] + array[array.length - 1];\n\
    \    if(sum % 2){\n        return array.sort(function(a, b){return a - b;});\n\
    \    }else{\n        return array.sort(function(a, b){return b - a;});\n    }\n\
    }", "    if (array.length === 0) {\n        return [];\n    }\n    else if (array.length\
    \ === 1) {\n        return array;\n    }\n    else {\n        //sum is odd\n \
    \       if ((array[0] + array[array.length - 1]) % 2 === 1) {\n            //ascending\
    \ order\n            return array.sort((a, b) => a - b);\n        }\n        //sum\
    \ is even\n        else {\n            //descending order\n            return\
    \ array.sort((a, b) => b - a);\n        }\n    }\n}", "    if(array.length ==\
    \ 0){\n        return [];\n    }else if(array.length == 1){\n        return array;\n\
    \    }else{\n        if((array[0] + array[array.length - 1]) % 2 == 0){\n    \
    \        return array.sort((a, b) => b - a);\n        }else{\n            return\
    \ array.sort((a, b) => a - b);\n        }\n    }\n}", "  if (array.length ===\
    \ 0 || array.length === 1){\n    return array;\n  }\n  else if ((array[0] + array[array.length\
    \ - 1]) % 2 !== 0){\n    return array.sort(function(a, b){return a - b});\n  }\n\
    \  else {\n    return array.sort(function(a, b){return b - a});\n  }\n}\n", " \
    \   if(array.length === 0 || array.length === 1){\n        return array;\n   \
    \ }\n    var sum = array[0] + array[array.length - 1];\n    var isEven = sum %\
    \ 2 === 0;\n    if(isEven){\n        var sortedArray = array.sort(function(a,\
    \ b){return b - a;});\n    } else {\n        var sortedArray = array.sort(function(a,\
    \ b){return a - b;});\n    }\n    return sortedArray;\n}\n", "    if (array.length\
    \ == 0 || array.length == 1){\n        return array;\n    }\n    else{\n     \
    \   var sum = array[0] + array[array.length - 1];\n        if (sum % 2 == 0){\n\
    \            var sorted = array.sort(function(a, b){return b - a});\n        \
    \    return sorted;\n        }\n        else{\n            var sorted = array.sort(function(a,\
    \ b){return a - b});\n            return sorted;\n        }\n    }\n}", "    if(array.length\
    \ === 0){\n        return [];\n    }\n    else if(array.length === 1){\n     \
    \   return array;\n    }\n    else{\n        if((array[0] + array[array.length\
    \ - 1]) % 2 === 0){\n            let new_array = array.sort((a, b) => b - a);\n\
    \            return new_array;\n        }\n        else{\n            let new_array\
    \ = array.sort((a, b) => a - b);\n            return new_array;\n        }\n \
    \   }\n}", "  var sum = array[0] + array[array.length - 1];\n  return (sum % 2\
    \ == 0) ? array.sort(function(a, b){ return b - a; }) : array.sort(function(a,\
    \ b){ return a - b; });\n}", "    if (array.length === 0) return [];\n    if (array.length\
    \ === 1) return array;\n    if (array[0] + array[array.length - 1] % 2 === 0)\
    \ {\n        return array.sort((a, b) => b - a);\n    } else {\n        return\
    \ array.sort((a, b) => a - b);\n    }\n}", "    return array.length < 2 ? array\
    \ : array.sort((a, b) => (a + array[array.length - 1]) % 2 === (b + array[array.length\
    \ - 1]) % 2 ? a - b : (b + array[array.length - 1]) % 2 ? 1 : -1);\n}", "  if\
    \ (array.length < 2) {\n    return array;\n  }\n  var isEven = ((array[0] + array[array.length\
    \ - 1]) % 2 === 0);\n  var array_to_sort = array.slice(1, array.length - 1);\n\
    \  var sorted_array = array_to_sort.sort(function(a, b) {\n    if (isEven) {\n\
    \      return b - a;\n    } else {\n      return a - b;\n    }\n  });\n  return\
    \ [array[0]].concat(sorted_array).concat([array[array.length - 1]]);\n}\n", " \
    \   //TODO\n    return array;\n}\n", "    if (array.length == 0 || array.length\
    \ == 1) {\n        return array;\n    }\n    else {\n        if ((array[0] + array[array.length\
    \ - 1]) % 2 == 0) {\n            let num = array[0];\n            array[0] = array[array.length\
    \ - 1];\n            array[array.length - 1] = num;\n            return array.sort((a,\
    \ b) => b - a);\n        }\n        else {\n            return array.sort((a,\
    \ b) => a - b);\n        }\n    }\n}\n", "  let isEven = false;\n  if(array.length\
    \ == 0 || array.length == 1){\n    return array;\n  }\n  if((array[0] + array[array.length\
    \ - 1]) % 2 == 0){\n    isEven = true;\n  }\n  if(isEven){\n    return array.sort((a,\
    \ b) => {return b - a});\n  }else{\n    return array.sort((a, b) => {return a\
    \ - b});\n  }\n}\n", "\tvar sum = array[0] + array[array.length - 1];\n\tif(sum\
    \ % 2 !== 0){\n\t\treturn array.sort();\n\t}else{\n\t\treturn array.sort().reverse();\n\
    \t}\n}\n", "  if (array.length < 2) return array;\n  let odd = false;\n  if ((array[0]\
    \ + array[array.length - 1]) % 2 !== 0) odd = true;\n  let newArray = odd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n  return newArray;\n}\n", "   \
    \ if (array.length===0 || array.length===1){\n        return array;\n    }\n \
    \   if ((array[0]+array[array.length-1])%2===0){\n        return array.sort(function(a,b){return\
    \ b-a});\n    }\n    return array.sort(function(a,b){return a-b});\n}", "    if\
    \ (array.length === 0) {\n        return array;\n    } else if (array.length ===\
    \ 1) {\n        return array;\n    } else if ((array[0] + array[array.length -\
    \ 1]) % 2 === 0) {\n        return array.sort((a, b) => a - b);\n    } else {\n\
    \        return array.sort((a, b) => b - a);\n    }\n}\n", "  const sum = array[0]\
    \ + array[array.length - 1];\n  const isOdd = sum % 2;\n  const newArray = array.sort(function(a,\
    \ b){\n    if(isOdd){\n      return a - b;\n    } else {\n      return b - a;\n\
    \    }\n  });\n  return newArray;\n}\n", "  if(array.length==0){\n    return array;\n\
    \  }\n  if(array.length==1){\n    return array;\n  }\n  if(array.length%2==0){\n\
    \    array.sort(function(a,b){\n      return b-a;\n    });\n  }\n  else{\n   \
    \ array.sort(function(a,b){\n      return a-b;\n    });\n  }\n  return array;\n\
    }", "    if(array.length===0){\n        return array;\n    }\n    if(array.length===1){\n\
    \        return array;\n    }\n    if((array[0]+array[array.length-1])%2===0){\n\
    \        return array.sort(function(a,b){\n            return b-a;\n        });\n\
    \    }\n    return array.sort(function(a,b){\n        return a-b;\n    });\n}\n",
  "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 !== 0) {\n \
    \       array.sort((a, b) => a - b);\n    } else {\n        array.sort((a, b)\
    \ => b - a);\n    }\n    return array;\n}", "    if (array.length == 0 || array.length\
    \ == 1) {\n        return array;\n    }\n    // check the sum of the first and\
    \ last index\n    if ((array[0] + array[array.length - 1]) % 2 == 0) {\n     \
    \   return array.sort((a, b) => b - a);\n    } else {\n        return array.sort((a,\
    \ b) => a - b);\n    }\n}", "    var first_index = array[0];\n    var last_index\
    \ = array[array.length - 1];\n    if((first_index + last_index) % 2 === 0){\n\
    \        for(var i = array.length - 1; i >= 0; i--){\n            for(var j =\
    \ 0; j < i; j++){\n                if(array[j] > array[j + 1]){\n            \
    \        var temp = array[j];\n                    array[j] = array[j + 1];\n\
    \                    array[j + 1] = temp;\n                }\n            }\n\
    \        }\n    }\n    else{\n        for(var i = array.length - 1; i >= 0; i--){\n\
    \            for(var j = 0; j < i; j++){\n                if(array[j] < array[j\
    \ + 1]){\n                    var temp = array[j];\n                    array[j]\
    \ = array[j + 1];\n                    array[j + 1] = temp;\n                }\n\
    \            }\n        }\n    }\n    return array;\n}\n", "    if(array.length==0){\n\
    \        return array;\n    }\n    if(array.length==1){\n        return array;\n\
    \    }\n    let sum=array[0]+array[array.length-1];\n    let newArr=array.sort((a,b)=>{\n\
    \        if(sum%2==0){\n            return b-a;\n        }else{\n            return\
    \ a-b;\n        }\n    });\n    return newArr;\n}", "    var sum = array[0] +\
    \ array[array.length - 1];\n    if (sum % 2 == 0) {\n        array.sort(function(a,\
    \ b){return b - a});\n    }\n    else {\n        array.sort(function(a, b){return\
    \ a - b});\n    }\n    return array;\n}", "    return (array.length === 0) ? []\
    \ : (array.reduce((a, b) => a + b, 0) % 2) === 0 ? array.sort((a, b) => b - a)\
    \ : array.sort((a, b) => a - b);\n}", "    if (array.length === 0 || array.length\
    \ === 1){\n        return array;\n    }\n    else{\n        let sortedArray =\
    \ array.sort(function(a, b){return a-b});\n        if ((sortedArray[0] + sortedArray[sortedArray.length\
    \ - 1]) % 2 === 0){\n            return sortedArray.reverse();\n        }\n  \
    \      else{\n            return sortedArray;\n        }\n    }\n}\n", "    var\
    \ sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n      \
    \  array.sort(function(a, b) {return b - a;});\n    } else {\n        array.sort(function(a,\
    \ b) {return a - b;});\n    }\n    return array;\n}\n", "    if(array.length >\
    \ 1 && (array[0] + array[array.length - 1]) % 2 == 0){\n        array.sort(function(a,\
    \ b){return b - a});\n    }else if(array.length > 1 && (array[0] + array[array.length\
    \ - 1]) % 2 == 1){\n        array.sort(function(a, b){return a - b});\n    }\n\
    \    return array;\n}\n", "    // TODO: implement this!\n    return array;\n}",
  "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n \
    \       return array.sort((a, b) => b - a);\n    }\n    return array.sort((a,\
    \ b) => a - b);\n}", "    if (array.length === 0) {\n        return [];\n    }\n\
    \    let last_index = array.length - 1;\n    if ( (array[0] + array[last_index])\
    \ % 2 === 0 ) {\n        return array.sort((a, b) => b - a);\n    } else {\n \
    \       return array.sort((a, b) => a - b);\n    }\n}\n", "  if(array.length===0){\n\
    \    return [];\n  }else if(array.length===1){\n    return array;\n  }else if((array[0]+array[array.length-1])%2===0){\n\
    \    return array.sort(function(a,b){return b-a});\n  }else{\n    return array.sort(function(a,b){return\
    \ a-b});\n  }\n}\n", "  if(array.length === 0 || array.length === 1){\n    return\
    \ array;\n  }\n  if(array[0] % 2 === 0 && array[array.length - 1] % 2 === 0){\n\
    \    return array.sort(function(a, b){return b - a;});\n  }else if(array[0] %\
    \ 2 !== 0 && array[array.length - 1] % 2 !== 0){\n    return array.sort(function(a,\
    \ b){return a - b;});\n  }else{\n    return array.sort(function(a, b){return a\
    \ - b;});\n  }\n}", "    let sum = array[0] + array[array.length - 1];\n    let\
    \ arraySorted = array.sort(function(a, b){return a - b});\n    if(sum % 2 !==\
    \ 0){\n        return arraySorted;\n    }else{\n        return arraySorted.reverse();\n\
    \    }\n}", "    if(array.length == 0 || array.length == 1) return array;\n  \
    \  if(array[0] + array[array.length - 1] % 2)\n        return array.sort((a, b)\
    \ => a - b);\n    else\n        return array.sort((a, b) => b - a);\n}\n", " \
    \ // code here\n  if (array.length) {\n    if ((array[0] + array[array.length\
    \ - 1]) % 2) {\n      return array.sort((a, b) => {\n        return a - b;\n \
    \     });\n    } else {\n      return array.sort((a, b) => {\n        return b\
    \ - a;\n      });\n    }\n  }\n  return array;\n}\nmodule.exports = sort_array;",
  "    const sum = array[0] + array[array.length - 1];\n    const sorted = array.sort();\n\
    \    if (sum % 2 === 0) {\n        return sorted.reverse();\n    }\n    return\
    \ sorted;\n}\n", "    if (sumOfFirstAndLast(array) % 2 === 0) {\n        return\
    \ array.sort(function(a, b) {\n            return b - a;\n        });\n    } else\
    \ {\n        return array.sort(function(a, b) {\n            return a - b;\n \
    \       });\n    }\n\n}", "    return array.length === 0 ? [] : array.length %\
    \ 2 === 0 ? array.sort((a, b) => b - a) : array.sort((a, b) => a - b);\n}\n",
  "    if(sum(array) % 2 === 0){\n        array.sort((a, b) => b - a);\n    } else\
    \ {\n        array.sort((a, b) => a - b);\n    }\n    return array;\n}", "   \
    \ if(array.length==0) return [];\n    var sum=array[0]+array[array.length-1];\n\
    \    if(sum%2==0){\n        array.sort((a,b)=>b-a);\n    }else{\n        array.sort((a,b)=>a-b);\n\
    \    }\n    return array;\n}", "    var sum = array[0] + array[array.length -\
    \ 1];\n    var sortedArray = array.sort(function(a, b){return a - b});\n    if(sum\
    \ % 2 === 0){\n        return sortedArray.reverse();\n    }\n    return sortedArray;\n\
    }\n", "    let evens = []\n    let odds = []\n    let sum = array[0] + array[array.length\
    \ - 1]\n    if (sum % 2 == 0){\n        for (i = 0; i < array.length; i++){\n\
    \            if (array[i] % 2 == 0){\n                evens.push(array[i])\n \
    \           }\n            else {\n                odds.push(array[i])\n     \
    \       }\n        }\n        evens.sort(function(a, b){return b-a})\n       \
    \ odds.sort(function(a, b){return b-a})\n        return evens.concat(odds)\n \
    \   }\n    else {\n        return array.sort(function(a, b){return a-b})\n   \
    \ }\n}", "  if(!array.length || array.length === 1) return array;\n  let sum =\
    \ array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "    let arrSum = array.reduce((a,\
    \ b) => a + b, 0);\n    array.sort((a, b) => {\n        if(arrSum % 2 === 0){\n\
    \            return b - a;\n        }\n        return a - b;\n    });\n    return\
    \ array;\n}", "    if(array.length === 0){\n        return array;\n    } else\
    \ if(array.length === 1){\n        return array;\n    }\n    let total = array[0]\
    \ + array[array.length - 1];\n    if(total % 2 === 0){\n        array.sort(function(a,\
    \ b){return b - a});\n    } else{\n        array.sort(function(a, b){return a\
    \ - b});\n    }\n    return array;\n}", "  if(array.length == 0){\n    return\
    \ array;\n  }\n  if(array.length == 1){\n    return array;\n  }\n  var copyArray\
    \ = array.slice();\n  if((copyArray[0] + copyArray[copyArray.length - 1]) % 2\
    \ == 0){\n    return copyArray.sort(function(a, b){return b - a});\n  }else{\n\
    \    return copyArray.sort(function(a, b){return a - b});\n  }\n}", "  if (array.length\
    \ == 0 || array.length == 1) return array;\n  let pivot = array[0];\n  let left\
    \ = [];\n  let right = [];\n  for (let i = 1; i < array.length; i++) {\n    if\
    \ (array[i] > pivot) {\n      right.push(array[i]);\n    } else {\n      left.push(array[i]);\n\
    \    }\n  }\n  return sort_array(left).concat(pivot, sort_array(right));\n}\n",
  "    let sum = array[0] + array[array.length - 1];\n    if (sum % 2 == 0)\n    \
    \    return array.sort(function(a, b){return b - a});\n    else\n        return\
    \ array.sort(function(a, b){return a - b});\n}\n", "    if (array.length == 0)\
    \ return array;\n    let sum = array[0] + array[array.length - 1];\n    return\
    \ (sum % 2 == 0) ? array.sort((a, b) => b - a) : array.sort((a, b) => a - b);\n\
    }\n", "    var sum = array[0] + array[array.length - 1];\n    if (sum % 2 == 0)\
    \ {\n        return array.sort(function(a, b){return b - a});\n    }\n    else\
    \ {\n        return array.sort(function(a, b){return a - b});\n    }\n}", "\t\
    if(array.length === 0 || array.length === 1) return array;\n\tvar temp = array[0]\
    \ + array[array.length - 1];\n\tvar newArr = [];\n\tif(temp % 2 === 0){\n\t\t\
    newArr = array.sort(function(a, b){\n\t\t\treturn b - a;\n\t\t});\n\t} else {\n\
    \t\tnewArr = array.sort(function(a, b){\n\t\t\treturn a - b;\n\t\t});\n\t}\n\t\
    return newArr;\n}\n", "    var total = array[0] + array[array.length - 1];\n \
    \   console.log(total);\n    var arr = array.sort();\n    console.log(arr);\n\
    \    if (total % 2 !== 0){\n        return arr;\n    }\n    else if (total % 2\
    \ === 0){\n        return arr.reverse();\n    }\n    else{\n        return arr;\n\
    \    }\n}\nsort_array([5, 2, 3, 4, 1]);", "    if (array.length == 0 || array.length\
    \ == 1) return array;\n    let p1 = 0;\n    let p2 = array.length - 1;\n    if\
    \ ( (array[p1] + array[p2]) % 2 == 0 ) {\n        array.sort( (a, b) => a < b);\n\
    \    } else {\n        array.sort( (a, b) => a > b);\n    }\n    return array;\n\
    }\n", "    if (array.length === 0 || array.length === 1) {\n        return array;\n\
    \    }\n    const first = array[0];\n    const last = array[array.length - 1];\n\
    \    if ((first + last) % 2 === 0) {\n        array.sort((a, b) => b - a);\n \
    \   } else {\n        array.sort((a, b) => a - b);\n    }\n    return array;\n\
    }", "    var sum = array[0] + array[array.length - 1];\n    if (sum % 2 === 0)\
    \ {\n        array.sort(function(a, b) {\n            return b - a;\n        });\n\
    \    } else {\n        array.sort(function(a, b) {\n            return a - b;\n\
    \        });\n    }\n    return array;\n}\n", "  if(!array.length)\n    return\
    \ [];\n  if(array.length === 1)\n    return array;\n  const sum = array[0] + array[array.length\
    \ - 1];\n  if(sum % 2 === 0)\n    return array.sort((a, b) => b - a);\n  else\n\
    \    return array.sort((a, b) => a - b);\n}", "    let sum = array[0] + array[array.length\
    \ - 1];\n    let odd = true;\n    if (sum % 2 === 0) {\n        odd = false;\n\
    \    }\n    return odd ? array.sort((a, b) => a - b) : array.sort((a, b) => b\
    \ - a);\n}\n", "    var sum = array[0] + array[array.length - 1];\n    // if(array.length\
    \ == 0){\n    //     return [];\n    // }\n    // else if(array.length == 1){\n\
    \    //     return array;\n    // }\n    // else{\n    //     if(sum % 2 == 0){\n\
    \    //         return array.sort(function(a, b){return b - a;});\n    //    \
    \ }\n    //     else{\n    //         return array.sort(function(a, b){return\
    \ a - b;});\n    //     }\n    // }\n    if(sum % 2 == 0){\n        return array.sort(function(a,\
    \ b){return b - a;});\n    }\n    else{\n        return array.sort(function(a,\
    \ b){return a - b;});\n    }\n}\n", "  if (array.length % 2 == 0) {\n    array.sort(function(a,\
    \ b){return b-a});\n  } else {\n    array.sort(function(a, b){return a-b});\n\
    \  }\n  return array;\n}", "    let result = array.slice();\n    let sum = result[0]\
    \ + result[result.length - 1];\n    if (sum % 2 !== 0) {\n        for (let i =\
    \ 0; i < result.length; i++) {\n            for (let j = 0; j < result.length\
    \ - 1; j++) {\n                if (result[j] > result[j + 1]) {\n            \
    \        let temp = result[j];\n                    result[j] = result[j + 1];\n\
    \                    result[j + 1] = temp;\n                }\n            }\n\
    \        }\n    } else {\n        for (let i = 0; i < result.length; i++) {\n\
    \            for (let j = 0; j < result.length - 1; j++) {\n                if\
    \ (result[j] < result[j + 1]) {\n                    let temp = result[j];\n \
    \                   result[j] = result[j + 1];\n                    result[j +\
    \ 1] = temp;\n                }\n            }\n        }\n    }\n    return result;\n\
    }", "  var sum_array = array.slice(0, 1).concat(array.slice(-1));\n  var sum =\
    \ sum_array.reduce(function(a, b) {\n    return a + b;\n  });\n  if (sum % 2 ==\
    \ 0) {\n    return array.sort(function(a, b) {\n      return b - a;\n    });\n\
    \  } else {\n    return array.sort(function(a, b) {\n      return a - b;\n   \
    \ });\n  }\n}", "    if(array.length === 0){\n        return array;\n    }\n \
    \   else if(array.length === 1){\n        return array;\n    }\n    let sum =\
    \ array[0] + array[array.length - 1];\n    if(sum % 2 === 0){\n        for(let\
    \ i = 0; i < array.length - 1; i++){\n            for(let j = 0; j < array.length\
    \ - 1 - i; j++){\n                if(array[j] < array[j + 1]){\n             \
    \       let temp = array[j];\n                    array[j] = array[j + 1];\n \
    \                   array[j + 1] = temp;\n                }\n            }\n \
    \       }\n    }\n    else{\n        for(let i = 0; i < array.length - 1; i++){\n\
    \            for(let j = 0; j < array.length - 1 - i; j++){\n                if(array[j]\
    \ > array[j + 1]){\n                    let temp = array[j];\n               \
    \     array[j] = array[j + 1];\n                    array[j + 1] = temp;\n   \
    \             }\n            }\n        }\n    }\n    return array;\n}\nlet array\
    \ = [2, 4, 3, 0, 1, 5, 6];", "\tif(array.length === 0){\n\t\treturn [];\n\t}else\
    \ if(array.length === 1){\n\t\treturn array;\n\t}else{\n\t\tlet sum = array[0]\
    \ + array[array.length - 1];\n\t\tif(sum % 2 === 0){\n\t\t\tarray.sort((a, b)\
    \ => b - a);\n\t\t}else{\n\t\t\tarray.sort((a, b) => a - b);\n\t\t}\n\t\treturn\
    \ array;\n\t}\n}\n", "    if(array.length == 0){\n        return array;\n    }\n\
    \    if(array.length == 1){\n        return array;\n    }\n    if(array.length\
    \ % 2 == 0){\n        if(array[0] % 2 == 0){\n            array.sort(function(a,\
    \ b){return b - a});\n        }\n        else{\n            array.sort(function(a,\
    \ b){return a - b});\n        }\n    }\n    else{\n        if(array[0] % 2 ==\
    \ 0){\n            array.sort(function(a, b){return a - b});\n        }\n    \
    \    else{\n            array.sort(function(a, b){return b - a});\n        }\n\
    \    }\n    return array;\n}", "  if (array.length === 0) return array;\n  if\
    \ (array.length === 1) return array;\n  var array_copy = array.slice();\n  var\
    \ sum = array_copy[0] + array_copy[array_copy.length - 1];\n  var is_even = sum\
    \ % 2 === 0;\n  var sorted_array = array_copy.sort(function(a, b){\n    if (is_even){\n\
    \      return b - a;\n    } else {\n      return a - b;\n    }\n  });\n  return\
    \ sorted_array;\n}\n", "  if(array.length == 0 || array.length == 1) {\n    return\
    \ array;\n  }\n  if(array[0] + array[array.length - 1] % 2 == 0) {\n    var result\
    \ = array.sort();\n    return result;\n  } else {\n    var result = array.sort();\n\
    \    result.reverse();\n    return result;\n  }\n}\n", "    if(array.length ===\
    \ 0 || array.length === 1){\n        return array;\n    }\n    let sum = array[0]\
    \ + array[array.length - 1];\n    let sorted_array = [array[0], array[array.length\
    \ - 1]];\n    if(sum % 2 === 0){\n        for(let i = 1; i < array.length - 1;\
    \ i++){\n            sorted_array.push(array[i]);\n        }\n        return sorted_array.sort((a,\
    \ b) => b - a);\n    }\n    for(let i = 1; i < array.length - 1; i++){\n     \
    \   sorted_array.push(array[i]);\n    }\n    return sorted_array.sort((a, b) =>\
    \ a - b);\n}\n", "  if(array.length == 0 || array.length == 1){\n    return array;\n\
    \  }\n  let even_odd = array[0] + array[array.length - 1];\n  if(even_odd % 2\
    \ == 0){\n    return array.sort((a, b) => b - a);\n  }else{\n    return array.sort((a,\
    \ b) => a - b);\n  }\n}\n", "    if (!array.length || array.length === 1) {\n\
    \        return array;\n    }\n    let sum = array[0] + array[array.length - 1];\n\
    \    let res;\n    if (sum % 2 === 0) {\n        res = array.sort((a, b) => b\
    \ - a);\n    } else {\n        res = array.sort((a, b) => a - b);\n    }\n   \
    \ return res;\n}\n", "    if (array.length == 0) {\n        return array;\n  \
    \  }\n    var sum = array[0] + array[array.length - 1];\n    if (sum % 2 == 0)\
    \ {\n        return array.sort(function(a, b){\n            return b - a;\n  \
    \      });\n    } else {\n        return array.sort(function(a, b){\n        \
    \    return a - b;\n        });\n    }\n}", "  if (array.length === 0 || array.length\
    \ === 1) {\n    return array;\n  }\n  if ((array[0] + array[array.length - 1])\
    \ % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  } else {\n    return\
    \ array.sort((a, b) => a - b);\n  }\n}", "    let isOdd = (array[0] + array[array.length\
    \ - 1]) % 2 === 1;\n    let sortedArray = array.sort(isOdd ? (a, b) => a - b :\
    \ (a, b) => b - a);\n    return sortedArray;\n}\nmodule.exports = sort_array;",
  "    return array.sort((a,b)=>{\n        return (a+b)%2==0?b-a:a-b;\n    })\n}",
  "  if (array.length === 0 || array.length === 1){\n    return array;\n  }\n  var\
    \ sum = array[0] + array[array.length - 1];\n  if (sum % 2 === 0){\n    return\
    \ array.sort(function(a, b){\n      return b - a;\n    });\n  } else {\n    return\
    \ array.sort(function(a, b){\n      return a - b;\n    });\n  }\n}\n", "\tif(array.length==0){\n\
    \t\treturn array;\n\t}else if(array.length==1){\n\t\treturn array;\n\t}else{\n\
    \t\t//array.sort(function(a,b){return a-b;});\n\t\tif((array[0]+array[array.length-1])%2==0){\n\
    \t\t\t//\u5076\u6570\n\t\t\tarray.sort(function(a,b){return b-a;});\n\t\t}else{\n\
    \t\t\t//\u5947\u6570\n\t\t\tarray.sort(function(a,b){return a-b;});\n\t\t}\n\t\
    \treturn array;\n\t}\n}\n", "  let start = array[0];\n  let end = array[array.length\
    \ - 1];\n  let total = start + end;\n  let sorted;\n  if (total % 2 === 0) {\n\
    \    sorted = array.sort(function(a, b){return b - a;});\n  } else {\n    sorted\
    \ = array.sort(function(a, b){return a - b;});\n  }\n  return sorted;\n}\n", " \
    \   let sumIndex = array[0] + array[array.length - 1];\n    if(sumIndex % 2 ===\
    \ 0){\n        return array.sort((a, b) => a - b).reverse();\n    }\n    return\
    \ array.sort((a, b) => a - b);\n}", "    //first sort the array and assign it\
    \ to new array\n    const sortedArray = array.sort();\n    //check if the sum\
    \ of first and last index is even\n    if((sortedArray[0] + sortedArray[sortedArray.length\
    \ - 1]) % 2 === 0){\n        //if even, reverse the sorted array\n        return\
    \ sortedArray.reverse();\n    }else{\n        //else return the sorted array\n\
    \        return sortedArray;\n    }\n}\n", "    // create a variable that holds\
    \ the sum of the first and last index\n    let sum = array[0] + array[array.length\
    \ - 1];\n    // sort the array\n    // if sum is odd, sort the array in ascending\
    \ order\n    if (sum % 2 === 1) {\n        array.sort(function(a, b) {\n     \
    \       return a - b;\n        });\n    }\n    // if sum is even, sort the array\
    \ in descending order\n    else {\n        array.sort(function(a, b) {\n     \
    \       return b - a;\n        });\n    }\n    // return the array\n    return\
    \ array;\n}", "    if (array.length === 0) {\n        return [];\n    } else if\
    \ (array.length === 1) {\n        return array;\n    }\n    //\n    let i = 0;\n\
    \    let j = array.length - 1;\n    let copy = array.slice();\n    //\n    if\
    \ ((copy[i] + copy[j]) % 2 === 0) {\n        while (i < j) {\n            while\
    \ (copy[i] % 2 === 0) {\n                i++;\n            }\n            while\
    \ (copy[j] % 2 === 1) {\n                j--;\n            }\n            let\
    \ tmp = copy[i];\n            copy[i] = copy[j];\n            copy[j] = tmp;\n\
    \        }\n    }\n    //\n    return copy.sort((a, b) => {\n        return a\
    \ - b;\n    });\n}", '']
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

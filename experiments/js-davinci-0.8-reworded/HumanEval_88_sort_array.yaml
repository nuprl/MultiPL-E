name: HumanEval_88_sort_array
language: js
prompt: "//Given an array of non-negative integers, return a cojs of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n// >>> sort_array([5])\n\
  // [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0, 1, 2, 3, 4, 5]\n// >>> sort_array([2,\
  \ 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
  \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
  \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
  \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42,\
  \ 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\n\
  test();"
completions: ["    let sum = array[0] + array[array.length - 1];\n    let newArr =\
    \ [];\n    if(sum % 2 === 0){\n        newArr = array.sort(function(a, b){return\
    \ b - a;});\n    }else{\n        newArr = array.sort(function(a, b){return a -\
    \ b;});\n    }\n    return newArr;\n}", "    if (array.length == 0 || array.length\
    \ == 1){\n        return array;\n    }else{\n        if (array[0] + array[array.length\
    \ - 1] % 2 == 0){\n            return array.sort(function(a, b){\n           \
    \     return b - a;\n            });\n        }else{\n            return array.sort(function(a,\
    \ b){\n                return a - b;\n            });\n        }\n    }\n}\n",
  "    if(array.length>1){\n        if((array[0]+array[array.length-1])%2==0){\n \
    \           array.sort(function(a,b){\n                return b-a;\n         \
    \   });\n        }\n        else{\n            array.sort(function(a,b){\n   \
    \             return a-b;\n            });\n        }\n    }\n    return array;\n\
    }", "  const firstElement = array[0];\n  const lastElement = array[array.length\
    \ - 1];\n  const sum = firstElement + lastElement;\n  if (sum % 2 === 0) {\n \
    \   return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "  var odds = [],\n      evens = [],\n      result\
    \ = [];\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] % 2 ===\
    \ 0) {\n      evens.push(array[i]);\n    } else {\n      odds.push(array[i]);\n\
    \    }\n  }\n  odds.sort(function(a, b) { return a - b; });\n  evens.sort(function(a,\
    \ b) { return b - a; });\n  for (var i = 0; i < array.length; i++) {\n    if (array[i]\
    \ % 2 === 0) {\n      result.push(evens.shift());\n    } else {\n      result.push(odds.shift());\n\
    \    }\n  }\n  return result;\n}", "  let sum = array[0] + array[array.length\
    \ - 1];\n  return sum % 2 === 0 ? array.sort((a, b) => b - a) : array.sort((a,\
    \ b) => a - b);\n}", "  var newArray = [];\n  if ((array[0] + array[array.length\
    \ - 1]) % 2 === 0) {\n    newArray = array.sort(function(a, b) {\n      return\
    \ b - a;\n    });\n  } else {\n    newArray = array.sort(function(a, b) {\n  \
    \    return a - b;\n    });\n  }\n  return newArray;\n}", "    if(array.length\
    \ === 0){\n        return [];\n    }else if(array.length === 1){\n        return\
    \ array;\n    }else{\n        if((array[0] + array[array.length - 1]) % 2 ===\
    \ 0){\n            return (array.sort().reverse());\n        }else{\n        \
    \    return (array.sort());\n        }\n    }\n}\n", "    let sum = array[0] +\
    \ array[array.length - 1];\n    console.log(sum)\n    if(sum % 2 !== 0){\n   \
    \     return array.sort((a, b) => a - b);\n    }else{\n        return array.sort((a,\
    \ b) => b - a);\n    }\n}\nlet arr = [2, 4, 3, 0, 1, 5, 6]\nlet result = sort_array(arr);",
  "  let result = [];\n  if (array.length < 1){\n    return array;\n  }\n  if ((array[0]\
    \ + array[array.length - 1]) % 2 !== 0){\n    result = array.sort((a, b) => a\
    \ - b);\n  } else if ((array[0] + array[array.length - 1]) % 2 === 0){\n    result\
    \ = array.sort((a, b) => b - a);\n  }\n  return result;\n}\n", "    if(array.length\
    \ === 0){\n        return array;\n    }\n    if(array.length === 1){\n       \
    \ return array;\n    }\n    if((array[0] + array[array.length - 1]) % 2 !== 0){\n\
    \        array.sort((a, b) => a - b);\n    }\n    else{\n        array.sort((a,\
    \ b) => b - a);\n    }\n    return array;\n}\n", "  if (array.length<=1) {\n \
    \   return array;\n  }\n\n  let first = array[0];\n  let last = array[array.length-1];\n\
    \  let sum = first + last;\n  let newArray = [];\n\n  for (var i = 0; i < array.length;\
    \ i++) {\n    newArray.push(array[i]);\n  }\n\n  newArray.sort(function(a, b){\n\
    \    return a-b;\n  });\n\n  if (sum%2===0) {\n    return newArray.reverse();\n\
    \  } else {\n    return newArray;\n  }\n}\n", "    let first_element = array[0];\n\
    \    let last_element = array[array.length - 1];\n    let sum = first_element\
    \ + last_element;\n    if (sum % 2 == 0) {\n        return array.sort(function(a,\
    \ b){return b - a})\n    } else {\n        return array.sort(function(a, b){return\
    \ a - b})\n    }\n}", "    var sum = array[0] + array[array.length - 1];\n   \
    \ if (sum % 2 === 0) {\n        return array.sort(function(a, b) {\n         \
    \   return b - a;\n        });\n    } else {\n        return array.sort(function(a,\
    \ b) {\n            return a - b;\n        });\n    }\n}\n", "  let sum = array[0]\
    \ + array[array.length - 1];\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => b - a);\n  } else {\n    return array.sort((a, b) => a - b);\n  }\n}\n",
  "  if (array.length === 0) {\n    return [];\n  }\n  if (array.length === 1) {\n\
    \    return array;\n  }\n  var check = array[0] + array[array.length - 1];\n \
    \ if (check % 2 === 0) {\n    array.sort(function(a, b) {\n      return b - a;\n\
    \    });\n  } else {\n    array.sort(function(a, b) {\n      return a - b;\n \
    \   });\n  }\n  return array;\n}\n", "   let sum = array[0] + array[array.length\
    \ - 1];\n   if(sum % 2 !== 0){\n       array.sort(function(a, b){return a - b});\n\
    \   } else{\n       array.sort(function(a, b){return b - a});\n   }\n   return\
    \ array;\n}\n", "    let sum = array[0] + array[array.length - 1];\n    if (sum\
    \ % 2 !== 0) {\n        return array.sort((a, b) => a - b);\n    } else {\n  \
    \      return array.sort((a, b) => b - a);\n    }\n}\n", "    if(array.length\
    \ == 0){\n        return array;\n    }\n    let first = array[0];\n    let last\
    \ = array[array.length - 1];\n    if( (first + last) % 2 == 0){\n        return\
    \ array.sort(function(a, b){return b - a;});\n    }\n    else{\n        return\
    \ array.sort(function(a, b){return a - b;});\n    }\n}", "    if (array.length\
    \ === 0 || array.length === 1) {\n        return array;\n    } else {\n      \
    \  if ((array[0] + array[array.length - 1]) % 2) {\n            return array.sort(function(a,\
    \ b) {\n                return a - b;\n            });\n        } else {\n   \
    \         return array.sort(function(a, b) {\n                return b - a;\n\
    \            });\n        }\n    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_31_is_prime
language: js
prompt: "//Return true if a given number is prime, and false otherwise.\n// >>> is_prime(6)\n\
  // false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n// true\n// >>> is_prime(13441)\n\
  // true\n// >>> is_prime(61)\n// true\n// >>> is_prime(4)\n// false\n// >>> is_prime(1)\n\
  // false\nfunction is_prime(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = is_prime;\n  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(101),true);\n\
  \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(13441),true);\n\
  \  assert.deepEqual(candidate(61),true);\n  assert.deepEqual(candidate(4),false);\n\
  \  assert.deepEqual(candidate(1),false);\n  assert.deepEqual(candidate(5),true);\n\
  \  assert.deepEqual(candidate(11),true);\n  assert.deepEqual(candidate(17),true);\n\
  \  assert.deepEqual(candidate(85),false);\n  assert.deepEqual(candidate(77),false);\n\
  \  assert.deepEqual(candidate(255379),false);\n}\n\ntest();"
completions: ["    if (n==1) {\n        return false;\n    }\n\n    if (n==2) {\n\
    \        return true;\n    }\n\n    if (n%2==0) {\n        return false;\n   \
    \ }\n\n    var limit = Math.sqrt(n);\n    for (var i = 3; i <= limit; i += 2)\
    \ {\n        if (n%i==0) {\n            return false;\n        }\n    }\n\n  \
    \  return true;\n}\n", "  // your answer here\n  if (n==1){\n    return false;\n\
    \  }\n  else if (n<=0){\n    return false;\n  }\n  else{\n    for (var i=2; i<n;\
    \ i++){\n      if (n%i==0){\n        return false;\n      }\n    }\n    return\
    \ true;\n  }\n}\n", "\tif (n <= 1){\n\t\treturn false;\n\t}\n\n\tfor (i = 2; i\
    \ < n; i++){\n\t\tif (n % i == 0){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "    if (n < 2) {\n        return false;\n    }\n    for (var i\
    \ = 2; i < n; i++){\n        if (n % i == 0){\n            return false;\n   \
    \     }\n    }\n    return true;\n}", "    if (n <= 1) return false;\n    if (n\
    \ === 2) return true;\n    if (n % 2 === 0) return false;\n    for (var i = 3;\
    \ i < n; i+=2){\n        if (n % i === 0) return false;\n    }\n    return true;\n\
    }\n", "  if (n < 2) {\n    return false;\n  }\n  for (var i = 2; i < n; i++) {\n\
    \    if (n % i == 0) {\n      return false;\n    }\n  }\n  return true;\n}", " \
    \   let m = Math.floor(Math.sqrt(n));\n    for(let i = 2; i <= m; i++) {\n   \
    \     if(n % i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if (n < 2) return false;\n  for (var i = 2; i < n; i++){\n \
    \   if (n % i == 0) return false;\n  }\n  return true;\n}\n\n", "\tif (n < 2)\
    \ return false;\n\tfor (var i = 2; i < n; i++){\n\t\tif (n % i == 0) return false;\n\
    \t}\n\treturn true;\n}\n\n", "    if (n < 2) {\n      return false;\n    } else\
    \ if (n == 2) {\n      return true;\n    } else {\n      for (var x = 2; x < n;\
    \ x++) {\n        if (n % x == 0) {\n          return false;\n        }\n    \
    \  }\n      return true;\n    }\n}\n", "    var divisor = 2;\n    while (n > divisor){\n\
    \        if(n % divisor == 0){\n            return false;\n        }\n       \
    \ else\n            divisor++;\n    }\n    return true;\n}", "    var i;\n   \
    \ if (n > 3){\n        for (i = 2; i < n; i++){\n            if (n % i == 0){\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    else{\n        return false;\n    }\n}\n", "    if (n === 2){\n  \
    \      return true;\n    }\n    else if (n < 2 || n % 2 === 0){\n        return\
    \ false;\n    }\n    else {\n        for (var i = 3; i <= Math.sqrt(n); i++){\n\
    \            if (n % i === 0){\n                return false;\n            }\n\
    \        }\n        return true;\n    }\n}\n", "    var prime = true;\n    for(var\
    \ i = 2; i < n; i++){\n        if(n % i == 0){\n            prime = false;\n \
    \       }\n    }\n    return prime;\n}", "    for(var i = 2; i < n; i++){\n  \
    \      if(n % i === 0){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  if (n == 1){\n    return false;\n  }\n  for (i = 2; i < n; i++){\n\
    \    if (n % i == 0){\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  let i;\n  let j;\n  let last = 1;\n  if (n < 2){\n    return false;\n  }\n  if\
    \ (n == 2){\n    return true;\n  }\n  if (n % 2 == 0){\n    return false;\n  }\n\
    \  for (i = 3; i < n; i += 2){\n    for (j = 3; j < i; j += 2){\n      if (i %\
    \ j == 0){\n        last = 0;\n        break;\n      }\n    }\n    if (last ==\
    \ 1){\n      if (n % i == 0){\n        return false;\n      }\n    }\n    last\
    \ = 1;\n  }\n  return true;\n}\n", "  if (n < 2) {\n    return false;\n  }\n \
    \ var i = 2;\n  while (i < n) {\n    if (n % i == 0) {\n      return false;\n\
    \    }\n    i++;\n  }\n  return true;\n}", "    // TODO\n}\n", "\treturn (n >=\
    \ 1) && (n <= 3) || (n % 2 != 0 && n % 3 != 0);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

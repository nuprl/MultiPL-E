language: js
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    //YOUR CODE GOES HERE\n    var p = (a +\
    \ b + c) / 2\n    var area = Math.sqrt(p * (p - a) * (p - b) * (p - c))\n    if\
    \ (a + b > c && a + c > b && b + c > a) {\n        return area\n    }\n    else\
    \ {\n        return -1\n    }\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpjt4rrbbp.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjt4rrbbp.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a+b>c && a+c>b && b+c>a){\n        var\
    \ s = (a+b+c)/2;\n        return Math.sqrt(s*(s-a)*(s-b)*(s-c)).toFixed(2);\n\
    \    }else{\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (a + b > c && a + c > b && b + c > a) {\n\
    \    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return area.toFixed(2);\n  } else {\n    return -1;\n  }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var s = (a + b + c) / 2;\n  if (a + b > c\
    \ && a + c > b && b + c > a) {\n    return (Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))).toFixed(2);\n  }\n  return -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        return parseFloat(((a + b + c) / 2).toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpjm77q68_.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpjm77q68_.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2\n    if(s - a <\
    \ a && s - b < b && s - c < c){\n        return Number((Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))).toFixed(2))\n    }\n    return -1\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp2b78uac0.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2b78uac0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (a + b > c && a + c > b && b + c > a) {\n\
    \    return Math.round(100 * Math.sqrt((a + b + c) * (a + b - c) * (a - b + c)\
    \ * (-a + b + c))) / 100;\n  } else {\n    return -1;\n  }\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n24\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmps2qfmvj8.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps2qfmvj8.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 24,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\t// if (a + b < c || a + c < b || b + c < a){\n\
    \t// \treturn -1;\n\t// }\n\t// var p = (a + b + c) / 2;\n\t// var area = p *\
    \ (p - a) * (p - b) * (p - c);\n\t// area = Math.sqrt(area);\n\t// return parseFloat(area.toFixed(2));\n\
    \tif (a + b > c && a + c > b && b + c > a){\n\t\tvar p = (a + b + c) / 2;\n\t\t\
    var area = p * (p - a) * (p - b) * (p - c);\n\t\tarea = Math.sqrt(area);\n\t\t\
    return parseFloat(area.toFixed(2));\n\t}\n\treturn -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif ((a + b) > c && (a + c) > b && (b + c)\
    \ > a) {\n\t\treturn Math.round(100 * .5 * a * b) / 100;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpjyrbafqh.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjyrbafqh.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // Write code here.\n    if (a + b > c &&\
    \ a + c > b && b + c > a) {\n        return Number(((a * b * Math.sin(c * Math.PI\
    \ / 180)) / 2).toFixed(2));\n    } else {\n        return -1;\n    }\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.52\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp5zyjlgwv.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5zyjlgwv.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.52,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  // Your Code\n  const s = (a + b + c) / 2;\n\
    \  return (Math.sqrt(s * (s - a) * (s - b) * (s - c))) || -1;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmp5t5phsmy.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5t5phsmy.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // Code your solution here\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmp5dtl0mu9.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5dtl0mu9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var total = 0;\n    if ((a + b) > c && (a\
    \ + c) > b && (b + c) > a){\n        total = a + b + c;\n        return total;\n\
    \    } else {\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n12\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmpw6luvou9.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw6luvou9.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 12,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a + b + c) / 2;\n    var area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if(area > 0){\n        return\
    \ parseFloat(area.toFixed(2));\n    }\n    return -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if ((a + b) > c && (a + c) > b && (b + c)\
    \ > a) {\n        var p = (a + b + c) / 2;\n        var area = Math.sqrt(p * (p\
    \ - a) * (p - b) * (p - c));\n        return area.toFixed(2);\n    } else {\n\
    \        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2;\n    return (s\
    \ - a) * (s - b) * (s - c) < 0 ? -1 : Number((Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))).toFixed(2));\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpkdggq4xc.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkdggq4xc.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (Math.abs(a - b) < c && c < a + b && Math.abs(a\
    \ - c) < b && b < a + c && Math.abs(b - c) < a && a < b + c) {\n  let s = (a +\
    \ b + c) / 2;\n  return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    \  } else {\n    return -1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var s = (a + b + c) / 2;\n  var area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  if(area > 0){\n    return area.toFixed(2);\n\
    \  }\n  else{\n    return -1;\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif (a+b>c && a+c>b && b+c>a){\n\t\tvar p =\
    \ (a+b+c)/2;\n\t\tvar A = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\t\treturn A.toFixed(2);\n\
    \t}\n\telse{\n\t\treturn -1;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(!(a < b + c) || !(b < a + c) || !(c < a\
    \ + b)){\n\t\treturn -1;\n\t}\n\tvar p = (a + b + c) / 2;\n\tvar x = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n\treturn x.toFixed(2);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    //your code here\n    let sides = [a, b,\
    \ c];\n    let largest = Math.max(...sides);\n    let sum = sides.reduce((a, b)\
    \ => a + b, 0);\n    if(sum - largest <= largest){\n        return -1;\n    }\
    \ else {\n        let halfPerimeter = (sum - largest) / 2;\n        let triangleArea\
    \ = Math.sqrt(halfPerimeter * (halfPerimeter - a) * (halfPerimeter - b) * (halfPerimeter\
    \ - c));\n        return triangleArea.toFixed(2);\n    }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1.15'\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpk8a36p_0.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk8a36p_0.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1.15',\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let ss = (a + b + c) / 2;\n    if( ss -\
    \ a > 0 && ss - b > 0 && ss - c > 0){\n        return Math.sqrt(ss * (ss - a)\
    \ * (ss - b) * (ss - c)).toFixed(2);\n    }\n    return -1;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // Write your code here\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmp7vzp9br9.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7vzp9br9.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let p = (a + b + c) / 2\n    if( p - a <=\
    \ 0 || p - b <= 0 || p - c <= 0){\n        return -1\n    }\n    return Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)).toFixed(2)\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (a+b>c && a+c>b && b+c>a){\n    let s =\
    \ (a+b+c)/2;\n    let area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    return area.toFixed(2);\n\
    \  } else {\n    return -1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821073
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        return Math.round(Math.sqrt((a + b + c) * (a + b - c) * (a - b +\
    \ c) * (-a + b + c)) * 100) / 100;\n    } else {\n        return -1;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n24\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp3upld6bq.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3upld6bq.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 24,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var p = (a + b + c) / 2;\n    var s = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    if (s > 0) {\n        return s.toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a < 0 || b < 0 || c < 0){\n        return\
    \ -1;\n    }\n    if((a + b > c) && (a + c > b) && (b + c > a)){\n        let\
    \ perimeter = (a + b + c) / 2;\n        return Math.sqrt(perimeter * (perimeter\
    \ - a) * (perimeter - b) * (perimeter - c)).toFixed(2);\n    }\n    return -1;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  \n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmpzp1sboqd.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzp1sboqd.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tvar sum = a + b + c;\n\tvar area = 0;\n\t\
    if ((a + b) > c && (a + c) > b && (b + c) > a) {\n\t\tvar s = sum / 2;\n\t\tarea\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\t\treturn parseFloat(area.toFixed(2));\n\
    \t}\n\telse {\n\t\treturn -1;\n\t}\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // your code here\n    if(a+b > c && a+c\
    \ > b && b+c > a){\n      return Number((0.5*a*b).toFixed(2));\n    }\n    else{\n\
    \      return -1;\n    }\n  }\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpt41c0wuq.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt41c0wuq.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // Your code here\n    let s = (a + b +\
    \ c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if\
    \ (area > 0) {\n        return Number(area.toFixed(2));\n    } else {\n      \
    \  return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(Math.max(a, b, c) < (a + b + c - Math.max(a,\
    \ b, c))){\n\t\tvar s = 0.5 * (a + b + c);\n\t\treturn (Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))).toFixed(2);\n\t}\n\treturn -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    //check if triangle is valid\n    if ((a+b)\
    \ > c && (a+c) > b && (b+c) > a){\n        //calculate area\n        var s = ((a+b+c)/2);\n\
    \        var area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n        //round area to 2\
    \ decimal points\n        return Math.round(area * 100) / 100;\n    } else {\n\
    \        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (Math.round(a + b) > c && Math.round(a\
    \ + c) > b && Math.round(b + c) > a) {\n      let p = (a + b + c) / 2;\n     \
    \ let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n      return Math.round(s\
    \ * 100) / 100;\n  } else {\n      return -1;\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a + b > c && a + c > b && b + c > a){\n\
    \        return parseFloat(((a + b + c) / 2).toFixed(2));\n    } else {\n    \
    \    return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpvbbrjvdd.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpvbbrjvdd.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if ((a + b > c) && (a + c > b) && (b + c\
    \ > a)) {\n        let p = (a + b + c) / 2;\n        return Math.sqrt(p * (p -\
    \ a) * (p - b) * (p - c)).toFixed(2);\n    } else {\n        return -1;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a + b > c && a + c > b && b + c > a){\n\
    \        let s = (a + b + c) / 2;\n        let area = Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n        return parseFloat(area.toFixed(2));\n    } else\
    \ {\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let triangleArea = -1;\n    if (a > 0 &&\
    \ b > 0 && c > 0) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        const s = (a + b + c) / 2;\n            triangleArea = Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n    }\n    return triangleArea;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmptb5n2ulb.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmptb5n2ulb.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tvar p;\n\tvar s;\n\tif(a+b>c && a+c>b && b+c>a){\n\
    \t\tp = (a+b+c)/2;\n\t\ts = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\t\treturn +s.toFixed(2);\n\
    \t}\n\telse{\n\t\treturn -1;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let p = (a + b + c) / 2\n    let area =\
    \ Math.sqrt(p * (p - a) * (p - b) * (p - c))\n    return area.toFixed(2)\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpz54j487m.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz54j487m.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        var s = (a + b + c) / 2;\n        var area = Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n        return area.toFixed(2);\n    }\n    else {\n\
    \        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if ((a + b) > c && (a + c) > b && (b + c)\
    \ > a) {\n    p = (a + b + c) / 2;\n    var area = Math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c));\n    return area.toFixed(2);\n  }\n  else {\n    return -1;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a+b>c && a+c>b && b+c>a){\n        return\
    \ (a+b+c)/2\n    } else {\n        return -1\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.5\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmpxiknmp6w.js:26:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxiknmp6w.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.5,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a + b > c && a + c > b && b + c > a){\n\
    \        let p = (a + b + c) / 2;\n        return Math.sqrt(p * (p - a) * (p -\
    \ b) * (p - c)).toFixed(2);\n    }\n    return -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (a + b > c && a + c > b\
    \ && b + c > a){\n        return Math.round(area * 100) / 100;\n    }\n    else\
    \ {\n        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tlet area = 0;\n\tif(a+b > c && a+c > b &&\
    \ b+c > a){\n\t\tarea = (1/4)*Math.sqrt((a+b+c)*(-a+b+c)*(a-b+c)*(a+b-c));\n\t\
    }else{\n\t\tarea = -1;\n\t}\n\treturn area;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpk5n96nx9.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk5n96nx9.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a + b + c) / 2;\n    var area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area <= 0) {\n        return\
    \ -1;\n    }\n    return area.toFixed(2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpsg7f84k0.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsg7f84k0.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // write your code here...\n    var sides\
    \ = [a, b, c];\n    var max = Math.max(...sides);\n    sides.splice(sides.indexOf(max),\
    \ 1);\n    if (sides[0] + sides[1] > max) {\n        var p = (a + b + c) / 2;\n\
    \        return Math.sqrt(p * (p - a) * (p - b) * (p - c)).toFixed(2);\n    }\
    \ else {\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2;\n    let area =\
    \  Math.sqrt(s*((s-a)*(s-b)*(s-c)));\n    if (area > 0)\n        return +area.toFixed(2);\n\
    \    else\n        return -1;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var result = a + b - c;\n    if (result\
    \ > 0) {\n        var area = a * b * c;\n        return area.toFixed(2);\n   \
    \ }\n    else return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'60.00'\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmpgvqvd56z.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgvqvd56z.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '60.00',\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n   var area = -1;\n\n   if(a+b > c && a+c >\
    \ b && b+c > a){\n    area = a*b/2;\n   }\n   return area;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpwjpekvur.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwjpekvur.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2\n    let area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return area > 0 ? area.toFixed(2)\
    \ : -1\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    //TO DO\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmp5ngswniu.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp5ngswniu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var p = (a + b + c) / 2;\n  var a = p * (p\
    \ - a) * (p - b) * (p - c);\n  if (a < 0) return -1;\n  else return Math.sqrt(a).toFixed(2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0.00'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp0mf_6l6k.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0mf_6l6k.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0.00',\n\
    \  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // YOUR CODE GOES HERE\n    var s = (a +\
    \ b + c) / 2;\n    if (a < (b + c) && b < (a + c) && c < (a + b)) {\n        return\
    \ parseFloat((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n    }\
    \ else {\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  let perimeter = (a + b + c) / 2;\n  if ((a\
    \ + b <= c) || (a + c <= b) || (b + c <= a)) {\n    return -1;\n  } else {\n \
    \   return Math.round(Math.sqrt(perimeter * (perimeter - a) * (perimeter - b)\
    \ * (perimeter - c)) * 100) / 100;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c&&a+c>b&&b+c>a){\n\t\tvar p = (a+b+c)/2;\n\
    \t\treturn Math.sqrt(p*(p-a)*(p-b)*(p-c)).toFixed(2);\n\t}else{\n\t\treturn -1;\n\
    \t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var area;\n    if(a + b > c && a + c > b\
    \ && b + c > a){\n        var p = (a + b + c) / 2;\n        area = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    }\n    else{\n        area = -1;\n    }\n\
    \    return area;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpd0e0_5gq.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd0e0_5gq.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // Code here\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmp8bflw7ni.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp8bflw7ni.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    const p = (a + b + c) / 2;\n    let area\
    \ = 0;\n    if (p - a < 0 || p - b < 0 || p - c < 0) {\n        return -1;\n \
    \   }\n    area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return parseFloat(area.toFixed(2));\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpjmr0h1s_.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjmr0h1s_.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (a + b > c && a + c > b && b + c > a) {\n\
    \    var p = (a + b + c) / 2;\n    var area = Math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n    return Number(area.toFixed(2));\n  } else {\n    return -1;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tvar result;\n\tif ((a + b > c) && (a + c >\
    \ b) && (b + c > a)){\n\t\tresult = (a + b + c) / 2;\n\t\treturn Math.sqrt(result\
    \ * (result - a) * (result - b) * (result - c)).toFixed(2);\n\t} else {\n\t\t\
    return -1;\n\t}\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        var s = (a + b + c) / 2;\n        var area = Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n        return area.toFixed(2);\n    } else {\n     \
    \   return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // return -1 if triangle is impossible\n\
    \    if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\
    \    // return area using heron's formula\n    let s = (a + b + c) / 2;\n    return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0 ? area.toFixed(2)\
    \ : -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  let s = (a + b + c) / 2;\n  let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  if(a + b > c && a + c > b && b + c > a) {\n\
    \      return area.toFixed(2);\n  } else {\n      return -1;\n  }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a + b + c) / 2;\n    var a = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return a == 0 ? -1 : a.toFixed(2);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpuu8xj5js.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuu8xj5js.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  let triangle_area = 1/2 * a * b;\n  return\
    \ triangle_area\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n\
    \  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmpd4q07_jd.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd4q07_jd.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (a + b > c && a + c > b && b + c > a) {\n\
    \    return Number(((a + b + c) / 2 * Math.sqrt(((a + b + c) / 2) * ((a + b +\
    \ c) / 2 - a) * ((a + b + c) / 2 - b) * ((a + b + c) / 2 - c))).toFixed(2));\n\
    \  } else {\n    return -1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n36\n\nshould loosely\
    \ deep-equal\n\n6\n    at test (/tmp/tmp5i5wg3w1.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5i5wg3w1.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 36,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  return (a + b > c && a + c > b && b + c >\
    \ a) ? Number((0.5 * a * b).toFixed(2)) : -1;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpr3qym13p.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr3qym13p.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let max = Math.max(a, b, c);\n    let min\
    \ = Math.min(a, b, c);\n    let mid = a + b + c - max - min;\n    if(max < mid\
    \ + min){\n        // return 0.5 * max * min;\n        return parseFloat((0.5\
    \ * max * min).toFixed(2));\n    }\n    return -1;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n6\n    at test (/tmp/tmp2ssmz578.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ssmz578.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        return ((a * b) / 2).toFixed(2);\n    } else {\n        return -1;\n\
    \    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'16.00'\n\nshould\
    \ loosely deep-equal\n\n8.18\n    at test (/tmp/tmp3vikiohz.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp3vikiohz.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '16.00',\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if (a + b > c && a + c > b && b + c > a) {\n\
    \    // calculate area using Heron's formula\n    // https://www.mathopenref.com/heronsformula.html\n\
    \    var s = (a + b + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return Number(area.toFixed(2));\n  } else {\n    return -1;\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        let s = (a + b + c) / 2;\n        return Math.round(Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c)) * 100) / 100;\n    }\n    return -1;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a+b > c && a+c > b && b+c > a){\n   \
    \     let s = (a+b+c)/2;\n        let A = s-a;\n        let B = s-b;\n       \
    \ let C = s-c;\n        return Math.sqrt(s*A*B*C).toFixed(2);\n    }else{\n  \
    \      return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  let s = (a + b + c) / 2;\n  if(s === a ||\
    \ s === b || s === c) return -1;\n  let triangle = Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n  return triangle.toFixed(2);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'NaN'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp1ev0vqnl.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1ev0vqnl.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'NaN',\n \
    \ expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    //write your code here\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmp88c31aec.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp88c31aec.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif(a+b>c && a+c>b && b+c>a){\n\t\tvar p =\
    \ (a+b+c)/2;\n\t\tvar area = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\t\treturn Math.round(area*100)/100;\n\
    \t}\n\telse{\n\t\treturn -1;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var s = (a + b + c) / 2\n  var area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n  return area === 0 ? -1 : +area.toFixed(2)\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp22xk48n5.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp22xk48n5.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var answer = -1\n  if(a+b>c){\n    if(a+c>b){\n\
    \      if(b+c>a){\n        answer = a*b*.5\n      }\n    }\n  }\n  return answer\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmpq52e2x6s.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq52e2x6s.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var p = (a + b + c) / 2;\n    var area =\
    \ Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    if (area > 0) {\n        return\
    \ area.toFixed(2);\n    } else {\n        return -1;\n    }\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n        let s = (a + b + c) / 2;\n        let area = Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n        return Number(area.toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif (a+b > c && a+c > b && b+c > a){\n\t\t\
    return parseFloat((a*b/2).toFixed(2));\n\t} else {\n\t\treturn -1;\n\t}\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n16\n\nshould loosely\
    \ deep-equal\n\n8.18\n    at test (/tmp/tmp_r2_86_m.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_r2_86_m.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 16,\n  expected:\
    \ 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\t// check for the triangel\n\tif (a + b > c\
    \ && a + c > b && b + c > a) {\n\t\tvar p = (a + b + c) / 2;\n\t\treturn Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)).toFixed(2);\n\t} else {\n\t\treturn -1;\n\t}\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmpzfdsehb1.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzfdsehb1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if(a + b > c){\n    var s = (a + b + c) /\
    \ 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return Math.round(area\
    \ * 100) / 100;\n  } else{\n    return -1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmphzvqa2e3.js:32:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphzvqa2e3.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if ((a+b>c) && (a+c>b) && (b+c>a)) {\n   \
    \ var s = (a+b+c)/2;\n    var area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    return\
    \ area.toFixed(2);\n  }\n  else {\n    return -1;\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var s = (a + b + c) / 2;\n  var A = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  return A >= 0 ? A.toFixed(2) : -1;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0.00'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpjdstnmcd.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjdstnmcd.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0.00',\n\
    \  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    var s = (a + b + c) / 2;\n    var area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return isNaN(area) ? -1 : area;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmprilr_01x.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmprilr_01x.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if (a > (b + c) || b > (a + c) || c > (a\
    \ + b)){\n        return -1;\n    }\n    let s = (a + b + c) / 2;\n    let area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area.toFixed(2);\n\
    }\n\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0.00'\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmp6kf0p1xm.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6kf0p1xm.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0.00',\n\
    \  expected: -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    // var a = 3;\n    // var b = 4;\n    //\
    \ var c = 5;\n    var p = (a + b + c)/2;\n    var area = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \    return area;\n}\nvar area = triangle_area(3, 4, 5);\nvar area1 = triangle_area(1,\
    \ 2, 10);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n-1\n    at test (/tmp/tmpkklizro0.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkklizro0.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let p = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    if(area > 0){\n        return\
    \ area.toFixed(2);\n    }\n    return -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  var result = -1;\n  var p = (a + b + c) /\
    \ 2;\n  var area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  if (area) {\n\
    \    result = area.toFixed(2);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area) {\n        return\
    \ area.toFixed(2);\n    } else {\n        return -1;\n    }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let sides = [a, b, c].sort((a, b) => b -\
    \ a);\n    if(sides[0] >= sides[1] + sides[2]){\n        return -1;\n    }\n \
    \   let p = (a + b + c) / 2;\n    return Math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c)).toFixed(2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    if(a + b > c && a + c > b && b + c > a){\n\
    \        // use heron's formula\n        // s = (a + b + c) / 2\n        let s\
    \ = (a + b + c) / 2;\n        return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    }\n    return -1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8.181534085976786\n\
    \nshould loosely deep-equal\n\n8.18\n    at test (/tmp/tmpt6tckpjc.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt6tckpjc.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8.181534085976786,\n\
    \  expected: 8.18,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmpzfdsehb1.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzfdsehb1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    let s = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area > 0){\n        return\
    \ Number(area.toFixed(2));\n    } else {\n        return -1;\n    }\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n    //a + b > c\n    //a + c > b\n    //b +\
    \ c > a\n    if (a + b > c && a + c > b && b + c > a){\n        var p = (a + b\
    \ + c) / 2;\n        return Math.sqrt(p * (p - a) * (p - b) * (p - c)).toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n6\n    at test (/tmp/tmpvu3oa2ih.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpvu3oa2ih.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 6,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\tif (a + b > c && a + c > b && b + c > a) {\n\
    \t\tvar s = (a + b + c) / 2;\n\t\tvar area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n\t\treturn area.toFixed(2);\n\t}\n\telse {\n\t\treturn -1;\n\t}\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
    \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n\t//if it is not a valid triangle, return -1\n\
    \tif((a + b) < c || (a + c) < b || (b + c) < a){\n\t\treturn -1;\n\t}\n\t//Otherwise\
    \ return the area, rounded to 2 decimal points\n\telse{\n\t\tvar p = (a + b +\
    \ c) / 2;\n\t\tvar area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\t\treturn\
    \ Math.round(area * 100) / 100;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n-1\n    at test (/tmp/tmp1hs0a3y3.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1hs0a3y3.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ -1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821074
- exit_code: 0
  program: "//Given the lengths of the three sides of a triangle. Return the area\
    \ of\n// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n// Otherwise return -1\n// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n// than the third side.\n// Example:\n\
    // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\n\
    function triangle_area(a, b, c){\n  if ((a+b>c) && (a+c>b) && (b+c>a)) {\n   \
    \ s = (a+b+c)/2;\n    area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    return area.toFixed(2);\n\
    \  } else {\n    return -1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
    \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
    \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),-1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821074

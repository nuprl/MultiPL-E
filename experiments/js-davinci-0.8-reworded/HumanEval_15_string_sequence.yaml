name: HumanEval_15_string_sequence
language: js
prompt: "//Return a string containing space-delimited numbers starting from 0 upto\
  \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
  // \"0 1 2 3 4 5\"\nfunction string_sequence(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
  0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\n\
  test();"
completions: ["    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr.push(i);\n\
    \    }\n    return arr.join(\" \");\n}\n", "\tlet str = \"\";\n\tfor(let i = 0;\
    \ i <= n; i++){\n\t\tstr += i + \" \";\n\t}\n\tstr = str.slice(0, -1);\n\treturn\
    \ str;\n}\n", "  var result = '';\n  for(var i = 0; i <= n; i++){\n    result\
    \ += i + ' ';\n  }\n  return result.slice(0, -1);\n}", "    if (n == 0) {\n  \
    \      return \"0\";\n    }\n    return string_sequence(n-1) + \" \" + n;\n}\n",
  "    var str = '';\n    for(var i = 0; i <= n; i++){\n        str += i + ' ';\n\
    \    }\n    return str.trim();\n}\n", "  var string_sequence = \"\";\n  for (var\
    \ i = 0; i <= n; i++) {\n    string_sequence += i + \" \";\n  }\n  return string_sequence.trim();\n\
    }\n", "    if (n === 0) return \"0\";\n    return string_sequence(n-1) + \" \"\
    \ + n;\n}\n", "    var string=\"\";\n    for(var i=0;i<=n;i++){\n        string=string.concat(i+\"\
    \ \");\n    }\n    string=string.trim();\n    return string;\n}\n", "    var string\
    \ = \"\";\n    for(var i = 0; i <= n; i++){\n        string += i + \" \";\n  \
    \  }\n    return string;\n}\n", "    var result = [];\n    for(var i = 0; i <=\
    \ n; i++){\n        result.push(i);\n    }\n    return result.join(\" \");\n}",
  "    let array = [];\n    for (let i = 0; i < n + 1; i++){\n        array.push(i);\n\
    \    }\n    return array.join(\" \");\n}\n", "  var sequence = \"\";\n  if (n\
    \ >= 0){\n    for (var i = 0; i <= n; i++){\n      sequence += i + \" \";\n  \
    \  }\n  }\n  return sequence;\n}\n", "  let string = '';\n  for (let i = 0; i\
    \ <= n; i++) {\n    string += ' ' + i;\n  }\n  return string.trim();\n}\n", " \
    \   if (n == 0) {\n        return \"0\";\n    } else {\n        return string_sequence(n-1)\
    \ + \" \" + n;\n    }\n}\n", "    var arr = [];\n    for(var i = 0; i <= n; i++){\n\
    \        arr.push(i);\n    }\n    return arr.join(\" \");\n}\n", "    // TODO\n\
    \    var res = '';\n    for(var i = 0; i <= n; i++){\n        res += i + ' ';\n\
    \    }\n    return res.trim();\n}\n", "\tvar st = \"\";\n\tfor(var i = 0; i <\
    \ n+1; i++){\n\t\tst += i;\n\t\tif(i<n){\n\t\t\tst += \" \";\n\t\t}\n\t}\n\treturn\
    \ st;\n}\n", "    for(var i = 0; i <= n; i++){\n        console.log(i);\n    }\n\
    }\n", "  if (n == 0) {\n    return \"0\";\n  }\n  return string_sequence(n-1)\
    \ + \" \" + n;\n}\n", "    var str = \"\";\n    for(i=0; i<=n; i++){\n       \
    \ str += (i+\" \");\n    }\n    return str;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

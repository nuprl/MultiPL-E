name: HumanEval_30_get_positive
language: js
prompt: "//Return only positive numbers in the array.\n// >>> get_positive([-1, 2,\
  \ -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
  \ 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_positive;\n  assert.deepEqual(candidate([-1, -2, 4, 5, 6]),[4, 5, 6]);\n\
  \  assert.deepEqual(candidate([5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),[5, 3, 2,\
  \ 3, 3, 9, 123, 1]);\n  assert.deepEqual(candidate([-1, -2]),[]);\n  assert.deepEqual(candidate([]),[]);\n\
  }\n\ntest();"
completions: ["  return l.filter(e=>e>0);\n}\n", "    //write your code here\n   \
    \ return list(filter(lambda x: x > 0, l));\n}\n\nassert same_contents(get_positive([-1,\
    \ 2, -4, 5, 6]), [2, 5, 6])\nassert same_contents(get_positive([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10]), [5, 3, 2, 3, 9, 123, 1])", "    return l.filter(num\
    \ => num > 0);\n}\n", "  return l.filter(function(a){\n    return a > 0;\n  });\n\
    }\n", "    // ???\n    return l.filter(function(n){return n>0});\n}\n", "    return\
    \ l.filter(function(num){\n        return num > 0;\n    });\n}\n", "  return l.filter(function(num){\n\
    \    return num > 0;\n  });\n}", "    return l.filter(x => x > 0);\n}\n", "  \
    \  //write your code here\n}\n", "    return l.filter(el => el >= 0);\n}\n", " \
    \   //YOUR CODE HERE\n    var res = [];\n    for (var i = 0; i < l.length; i++)\
    \ {\n        if (l[i] > 0) {\n            res.push(l[i]);\n        }\n    }\n\
    \    return res;\n}\n", "  var out = [];\n  for (var i = 0; i < l.length; i++){\n\
    \    if (l[i] > 0){\n      out.push(l[i]);\n    }\n  }\n  return out;\n}\n", " \
    \   return l.filter(function(el){return el > 0});\n}\n", "    // your code goes\
    \ here\n    var n = [];\n    for (i=0; i<l.length; i++){\n        if (l[i]>0){\n\
    \            n.push(l[i]);\n        }\n    }\n    return n;\n}\n", "    return\
    \ l.filter(function(i){return i > 0;});\n}\n", "  return l.filter(function(x){\n\
    \    return x > 0;\n  });\n}", "    let new_l = [];\n    for (let i=0; i<l.length;\
    \ i++){\n        if (l[i] > 0){\n            new_l.push(l[i]);\n        }\n  \
    \  }\n    return new_l;\n}", "  l = l.filter(value => {\n    return value > 0;\n\
    \  });\n  return l;\n}\n", "    return l.filter(function(a){\n        return a>0;\n\
    \    });\n}\n", "  var result = [];\n  l.forEach(function(i){\n    if (i > 0){\n\
    \      result.push(i);\n    }\n  });\n  return result;\n}", "\tvar pos = [];\n\
    \tfor (var i = 0; i < l.length; i++){\n\t\tif (l[i] >= 0){\n\t\t\tpos.push(l[i]);\n\
    \t\t}\n\t}\n\treturn pos;\n}\n", "    return l.filter(function(num){\n      return\
    \ num > 0;\n    });\n  }", "  var result = l.filter(function(number){\n    return\
    \ number > 0;\n  });\n  return result;\n}", "   return l.filter(num => num >=\
    \ 0);\n}", "    var result = l.filter(function(x){return x > 0;});\n    return\
    \ result;\n}\n", "\treturn l.filter(function(item){return item>0;});\n}\n", " \
    \   // >>> get_positive([-1, 2, -4, 5, 6])\n    // [2, 5, 6]\n    // >>> get_positive([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    // [5, 3, 2, 3, 9, 123, 1]\n    return\
    \ l.filter(x => x > 0);\n}\n", "    return l.filter(x => x > 0);\n}", "    return\
    \ l.filter(n => n>0);\n}\n", "}\n\n", "    var new_list = [];\n    for (i = 0;\
    \ i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}", "    var result = []\n    for (var\
    \ i = 0; i < l.length; i++) {\n        if (l[i] > 0) {\n            result.push(l[i])\n\
    \        }\n    }\n    return result\n}", "    let result = [];\n    for (let\
    \ i = 0; i < l.length; i++){\n        if (l[i] >= 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "\treturn _.filter(l, function(num){\
    \ return num > 0; });\n}\n", "    //Write your code here\n}\n", "    var positive_l\
    \ = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n   \
    \         positive_l.push(l[i]);\n        }\n    }\n    return positive_l;\n}\n",
  "   var newlist = filter(is_positive, l);\n   return newlist;\n}\n", "    var result\
    \ = l.filter(function(element){\n        return element > 0;\n    });\n    return\
    \ result;\n}", "  return l.filter(function(v){\n    return v > 0;\n  });\n}\n",
  "    return l.filter(function(number){\n        return number > 0;\n    });\n}\n",
  "    //Write code here.\n}\n", "    //Write your code here\n}\n", "    var l2 =\
    \ []\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n      \
    \      l2.push(l[i])\n        }\n    }\n    return l2\n}\n", "    var arr = [];\n\
    \    for(var i = 0; i < l.length; i++){\n        if(l[i] > 0){\n            arr.push(l[i]);\n\
    \        }\n    }\n    return arr;\n}\n", "\treturn l.filter(function(num){\n\t\
    \treturn num >= 0;\n\t});\n}", "\n}\n", "\treturn l.filter(function(v) {return\
    \ v > 0});\n}\n", "    return l.filter(function(num){\n        return num > 0;\n\
    \    });\n}", "    return l.filter(function(number){\n        return number >\
    \ 0;\n    });\n}", "\tvar pos = []\n\tfor (var i = 0; i < l.length; i++){\n\t\t\
    if (l[i] > 0){\n\t\t\tpos.push(l[i])\n\t\t}\n\t}\n\treturn pos\n}", "  let out\
    \ = []\n  for (let x in l){\n    if (l[x] >= 0){\n      out.push(l[x])\n    }\n\
    \  }\n  return out\n}\n", "\tvar o = [];\n\tfor(var i = 0; i < l.length; i++){\n\
    \t\tif(l[i] > 0){\n\t\t\to.push(l[i]);\n\t\t}\n\t}\n\treturn o;\n}\n", "    //\
    \ your code here\n    var newList = [];\n    for (var i = 0; i < l.length; i++)\
    \ {\n        if (l[i] > 0) {\n            newList.push(l[i]);\n        }\n   \
    \ }\n    return newList;\n}\n", "  return l.filter(function(n){\n    return n>0;\n\
    \  });\n}", "    var res = []\n    for (var i = 0; i < l.length; i++){\n     \
    \   if (l[i] > 0){\n            res.push(l[i])\n        }\n    }\n    return res\n\
    }\n", "\treturn l.filter(function(val){return val>0;});\n}\n", "    return l.filter(item\
    \ => item > 0);\n}", "   return l.filter(function(num){\n       return num > 0;\n\
    \   });\n}\n", "    return l.filter(function(n){\n        return n > 0;\n    });\n\
    }\n", "    // var a = l.filter(function(n){\n    //     return n>0;\n    // });\n\
    \    // return a;\n    return l.filter(n=>n>0);\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    let arr = []\n    for(let i=0; i<l.length;\
    \ i++){\n        if(l[i]>0){\n            arr.push(l[i])\n        }\n    }\n \
    \   return arr\n}", "    var pos = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] >= 0){\n            pos.push(l[i]);\n        }\n    }\n    return\
    \ pos;\n}\n", "    // your code here\n    return l.filter(function(x){\n     \
    \   return x > 0;\n    });\n}\n", "    return l.filter(function(n){\n        return\
    \ n > 0;\n    });\n}\n", "    return l.filter(l => l > 0);\n}", "    return l.filter(function(num){return\
    \ num > 0;});\n}\n", "  //return l.filter(item => item >= 0)\n  return l.filter(item\
    \ => item > 0)\n}\n", "    return l.filter(e => e >= 0);\n}\n", "\t// var pos_list\
    \ = [];\n\t// for (var x = 0; x < l.length; x++){\n\t// \tif (l[x] >= 0){\n\t\
    // \t\tpos_list.push(l[x]);\n\t// \t}\n\t// }\n\t// return pos_list;\n\tvar pos_list\
    \ = [];\n\tfor (var x of l){\n\t\tif (x >= 0){\n\t\t\tpos_list.push(x);\n\t\t\
    }\n\t}\n\treturn pos_list;\n}", "    let pos_arr = []\n    l.forEach(elem => {\n\
    \        if (elem > 0){\n            pos_arr.push(elem)\n        }\n    })\n \
    \   return pos_arr\n}", "    return l.filter(function(x){return x>0});\n}\n",
  "    return l.filter(function(v){\n        return v > 0;\n    });\n}\n", "\tvar\
    \ a=[];\n\tfor(var i=0;i<l.length;i++){\n\t\tif(l[i]>0){\n\t\t\ta.push(l[i]);\n\
    \t\t}\n\t}\n\treturn a;\n}\n", "    var temp = l.filter(function(item){\n    \
    \    return item > 0;\n    });\n    return temp;\n}\n", "  var result = [];\n\
    \  for (var i = 0; i < l.length; i++) {\n    if (l[i] > 0) {\n      result.push(l[i]);\n\
    \    }\n  }\n  return result;\n}", "    var evens = []\n    for (var i = 0; i\
    \ < l.length; i++) {\n        if (l[i] > 0) {\n            evens.push(l[i])\n\
    \        }\n    }\n    return evens\n}\n", "    return l.filter(function(n){\n\
    \        return n > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    var result =[];\n    for(var i=0; i<l.length;\
    \ i++){\n        if(l[i]>0){\n            result.push(l[i]);\n        }\n    }\n\
    \    return result;\n}\n", "    return l.filter(function(value){\n        return\
    \ value > 0;\n    });\n}", "  var ret = []\n  for (var i = 0; i < l.length; i++)\
    \ {\n    if (l[i] >= 0) {\n      ret.push(l[i])\n    }\n  }\n  return ret\n}\n",
  "    //TODO\n    return l.filter(e => e > 0);\n}\n", "    var result = [];\n   \
    \ for (var i = 0; i < l.length; i++){\n        if (l[i] >= 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var res = [];\n    for (var\
    \ i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            res.push(l[i]);\n\
    \        }\n    }\n    return res;\n}", "\treturn filter(l, function(x){\n\t\t\
    return x > 0;\n\t});\n}\n", "  return l.filter(x => x > 0);\n}", "    var list\
    \ = []\n    for (i = 0; i < l.length; i++){\n        if (l[i] > 0){\n        \
    \    list.push(l[i])\n        }\n    }\n    return list\n}\n", "    var m = [];\n\
    \    for (var i = 0; i < l.length; i++){\n        if (l[i] >= 0){\n          \
    \  m.push(l[i]);\n        }\n    }\n    return m;\n}\n", "    return l.filter(x\
    \ => x > 0);\n}\n", "    return l.filter(x => x > 0);\n}\n", "    var output =\
    \ [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n     \
    \       output.push(l[i]);\n        }\n    }\n    return output;\n}\n", "    var\
    \ result = [];\n    for (var i=0; i<l.length; i++){\n        if (l[i]>0){\n  \
    \          result.push(l[i]);\n        }\n    }\n    return result;\n}\n", " \
    \   var positives = [];\n    l.forEach(function(num){\n        if (num > 0){\n\
    \            positives.push(num);\n        }\n    });\n    return positives;\n\
    }", "\tvar new_list = []\n\tfor (i = 0; i < l.length; i++){\n\t\tif (l[i] > 0){\n\
    \t\t\tnew_list.push(l[i])\n\t\t}\n\t}\n\treturn new_list\n}\n", "  var new_l =\
    \ []\n  for (i in l){\n    if (l[i] >= 0){\n      new_l.push(l[i])\n    }\n  }\n\
    \  return new_l\n}", "\treturn l.filter(x => x > 0);\n}\n", "    return l.filter(function(x){return\
    \ x>0;});\n}", "    return l.filter(function(x){return x>0});\n}\n", "\tvar res\
    \ = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tif(l[i]>0){\n\t\t\tres.push(l[i]);\n\
    \t\t}\n\t}\n\treturn res;\n}\n", "  return l.filter(function(e){\n    return e\
    \ > 0;\n  });\n}", "  var posArr = [];\n  for(var i = 0; i < l.length; i++){\n\
    \    if(l[i] > 0){\n      posArr.push(l[i]);\n    }\n  }\n  return posArr;\n}\n",
  "\t//var new_list = [];\n\t//var i;\n\t//for (i = 0; i < l.length; i++){\n\t//\t\
    if (l[i] >= 0){\n\t//\t\tnew_list.push(l[i]);\n\t//\t}\n\t//}\n\t//return new_list;\n\
    \treturn l.filter(function(x){\n\t\treturn x >= 0;\n\t});\n}\n", "    return l.filter(x\
    \ => x>0);\n}\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] >= 0){\n            result.push(l[i]);\n        }\n    }\n \
    \   return result;\n}\n", "    var m = [];\n    for (i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            m.push(l[i]);\n        }\n    }\n    return\
    \ m;\n}\n", "    return l.filter(function(x){\n        return x>0;\n    });\n}",
  "    return l.filter(i => i > 0);\n}\n", "    //Your code here\n    return list(filter(lambda\
    \ x: x > 0, l));\n}\nget_positive([-1, 2, -4, 5, 6]);\n", "    return l.filter(function(e){\n\
    \        return e>0;\n    });\n}\n", "    return l.filter(v => v > 0);\n}\n",
  "    var new_list = []\n    for (i=0; i<l.length; i++){\n        if (l[i] > 0){\n\
    \            new_list.push(l[i])\n        }\n    }\n    return new_list\n}\n",
  "  var arr = []\n  for (var i = 0; i < l.length; i++) {\n    if (l[i] >= 0) {\n\
    \      arr.push(l[i])\n    }\n  }\n  return arr\n}", "\treturn l.filter(function(item){\n\
    \t\treturn item > 0;\n\t});\n}\n", "    var r = [];\n    for(var i = 0; i < l.length;\
    \ i++){\n        if(l[i] > 0){\n            r.push(l[i]);\n        }\n    }\n\
    \    return r;\n}", "  var result = l.filter(\n      function(item){\n       \
    \   return item > 0;\n      }\n  );\n  return result;\n}\n", "    return l.filter(i\
    \ => i > 0);\n}", "    return l.filter(x => x>0);\n}\n", "\tvar pos_list = [];\n\
    \tfor (var i = 0; i < l.length; i++){\n\t\tif (l[i] >= 0){\n\t\t\tpos_list.push(l[i]);\n\
    \t\t}\n\t}\n\treturn pos_list;\n}\n", "    return l.filter(e => e > 0);\n}\nget_positive([-1,\
    \ 2, -4, 5, 6]);\nget_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]);\n", " \
    \   return l.filter(e => e > 0);\n}\n", "    //YOUR CODE GOES HERE\n    return\
    \ l.filter(function(num){\n        return num > 0;\n    });\n}\n", "    // Your\
    \ code here.\n}\n\n", "    var filterd_list = [];\n    for(var i = 0; i < l.length;\
    \ i++){\n        if(l[i] > 0){\n            filterd_list.push(l[i]);\n       \
    \ }\n    }\n    return filterd_list;\n}", "  return l.filter(function(num){\n\
    \    return num > 0;\n  });\n}\n", "    // Your code here\n    var pos = [];\n\
    \    for (var i = 0; i < l.length; i++) {\n      if (l[i] > 0) {\n        pos.push(l[i]);\n\
    \      }\n    }\n    return pos;\n}\n", "    let res = []\n    for (let i of l){\n\
    \        if (i > 0){\n            res.push(i)\n        }\n    }\n    return res\n\
    }\n", "\treturn l.filter(function(i){\n\t\treturn i > 0;\n\t});\n}\n", "    return\
    \ _.filter(l, function(num){\n        return num > 0;\n    });\n}\n", "    var\
    \ result = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n\
    \            result.push(l[i]);\n        }\n    }\n    return result;\n}\n", "\t\
    var result = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tif(l[i] > 0){\n\t\t\
    \tresult.push(l[i]);\n\t\t}\n\t}\n\treturn result;\n}\n", "    let positives =\
    \ []\n    for (let i = 0; i < l.length; i++){\n        if (l[i] >= 0){\n     \
    \       positives.push(l[i])\n        }\n    }\n    return positives\n}\n", " \
    \ return l.filter(num => num > 0);\n}\n", "  // code here\n  return filter(l,\
    \ function(e){\n    return e > 0;\n  });\n}\n", "    return l.filter(x => x>0);\n\
    };\n", "    return l.filter(n => n > 0);\n}\n", "    return l.filter(function(v){\n\
    \        return v>0;\n    });\n}\n", "   if(!l.length) return l;\n   var x = l.shift();\n\
    \   if(x > 0) return [x].concat(get_positive(l));\n   return get_positive(l);\n\
    }", "  return l.filter(function(num){return num > 0;});\n}\n", "    return l.filter(e\
    \ => e > 0);\n}\n", "    return l.filter(function(val){\n        return val >=\
    \ 0;\n    });\n}\n", "    let res = []\n    for (e of l){\n        if (e > 0){\n\
    \            res.push(e)\n        }\n    }\n    return res\n}", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}", "\tvar new_list = [];\n\tfor (var i = 0;\
    \ i < l.length; i++){\n\t\tif (l[i] > 0){\n\t\t\tnew_list.push(l[i]);\n\t\t}\n\
    \t}\n\treturn new_list;\n}", "    var positiveNums = l.filter(function(num){\n\
    \        return num > 0;\n    });\n    return positiveNums;\n}\n", "    var positive_list\
    \ = [];\n    for (var i=0; i<l.length; i++){\n        if (l[i] > 0){\n       \
    \     positive_list.push(l[i]);\n        }\n    }\n    return positive_list;\n\
    }", "    return list(filter(lambda x: x > 0, l));\n}\n", "    var pos = [];\n\
    \    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n           \
    \ pos.push(l[i]);\n        }\n    }\n    return pos;\n}\n", "    var positive\
    \ = [];\n    for (var i=0; i<l.length; i++){\n      if (l[i] > 0){\n        positive.push(l[i]);\n\
    \      }\n    }\n    return positive;\n  }\n  \n  //21\n  //Return only negative\
    \ numbers in the array.\n  // >>> get_negative([-1, 2, -4, 5, 6])\n  // [-1, -4]\n\
    \  // >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n  // [-5, -3,\
    \ -10]\n  function get_negative(l){\n    var negative = [];\n    for (var i=0;\
    \ i<l.length; i++){\n      if (l[i] < 0){\n        negative.push(l[i]);\n    \
    \  }\n    }\n    return negative;\n  }\n  \n  //22\n  //Return only even numbers\
    \ in the array.\n  // >>> get_even([-1, 2, -4, 5, 6])\n  // [2, -4, 6]\n  // >>>\
    \ get_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n  // [2, 0, -10]\n  function\
    \ get_even(l){\n    var even = [];\n    for (var i=0; i<l.length; i++){\n    \
    \  if (l[i] % 2 == 0){\n        even.push(l[i]);\n      }\n    }\n    return even;\n\
    \  }\n  \n  //23\n  //Return only odd numbers in the array.\n  // >>> get_odd([-1,\
    \ 2, -4, 5, 6])\n  // [-1, 5]\n  // >>> get_odd([5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10])\n  // [5, 3, -5, -3, 3, 9, 123, 1]\n  function get_odd(l){\n    var\
    \ odd = [];\n    for (var i=0; i<l.length; i++", "\treturn l.filter(x => x > 0);\n\
    }", "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n", " \
    \   if(l.length == 0){\n        return [];\n    }\n    if(l[0] > 0){\n       \
    \ return [l[0]].concat(get_positive(l.slice(1)));\n    }\n    return get_positive(l.slice(1));\n\
    }\n", "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n",
  "    let arr = [];\n    for(let i = 0; i < l.length; i++){\n        if(l[i] >= 0){\n\
    \            arr.push(l[i]);\n        }\n    }\n    return arr;\n}", "  var newL\
    \ = [];\n  for (var i = 0; i < l.length; i++) {\n    if (l[i] > 0) {\n      newL.push(l[i]);\n\
    \    }\n  }\n  return newL;\n}\n", "  return l.filter(function(num){\n    return\
    \ num >= 0;\n  });\n}\n", "    var res = []\n    for (i=0; i<l.length; i++){\n\
    \        if (l[i] > 0){\n            res.push(l[i])\n        }\n    }\n    return\
    \ res\n}", "    var p = [];\n    for (var i = 0; i < l.length; i++){\n       \
    \ if (l[i] > 0){\n            p.push(l[i]);\n        }\n    }\n    return p;\n\
    }\n", "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n",
  "    return l.filter(x => x > 0);\n}\n", "    return l.filter(function(item){\n\
    \        return item > 0;\n    });\n}\n", "\tvar result = [];\n\tfor(var i = 0;\
    \ i < l.length; i++){\n\t\tif(l[i] > 0){\n\t\t\tresult.push(l[i]);\n\t\t}\n\t\
    }\n\treturn result;\n}\n", "    return l.filter(function(item){\n        return\
    \ item > 0;\n    });\n}\n", "    const i = []\n    l.forEach(n => n > 0 ? i.push(n)\
    \ : null)\n    return i\n}\n", "    return l.filter(function(num){\n        return\
    \ num > 0;\n    });\n}", "    var newArr = [];\n    for(var i = 0; i < l.length;\
    \ i++){\n        if(l[i] > 0){\n            newArr.push(l[i]);\n        }\n  \
    \  }\n    return newArr;\n}\n", "    var n = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            n.push(l[i]);\n        }\n    }\n\
    \    return n;\n}\n", "    var result = [];\n    for (i=0; i<l.length; i++){\n\
    \        if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n  \
    \  return result;\n}", "    var mylist = [];\n    var i = 0;\n    while (i < l.length){\n\
    \        if (l[i] > 0){\n            mylist.push(l[i]);\n        }\n        i\
    \ = i + 1;\n    }\n    return mylist;\n}\n", "    return l.filter(function(n){\n\
    \        return n > 0;\n    });\n}\n", "    function is_positive(n){\n       \
    \ return n >= 0;\n    }\n    return list.filter(is_positive, l);\n}\n", "    var\
    \ mylist = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] >= 0){\n\
    \            mylist.push(l[i]);\n        }\n    }\n    return mylist;\n}\n", " \
    \   return l.filter(function(num){\n        return num > 0;\n    });\n}", "  \
    \  // your code here\n    var pos_list = []\n    var i = 0\n    while (i < l.length){\n\
    \        if (l[i] >= 0){\n            pos_list.push(l[i])\n        }\n       \
    \ i += 1\n    }\n    return pos_list\n}", "    var pos = [];\n    for (var i =\
    \ 0; i < l.length; i++){\n        if (l[i] >= 0){\n            pos.push(l[i]);\n\
    \        }\n    }\n    return pos;\n}", "    // your code here\n    var pos_l\
    \ = [];\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] > 0) {\n \
    \           pos_l.push(l[i]);\n        }\n    }\n    return pos_l;\n}\n", "  \
    \  return l.filter(function(a){\n        return a > 0;\n    });\n}\n", "    return\
    \ l.filter(\n        function(element){\n            return element >= 0;\n  \
    \      }\n    );\n}\n", "    var positiveList = []\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            positiveList.push(l[i])\n       \
    \ }\n    }\n    return positiveList\n}\n", "    //...\n}\n", "    var p = [];\n\
    \    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n           \
    \ p.push(l[i]);\n        }\n    }\n    return p;\n}\n", "\t// your code here\n\
    \tvar result = [];\n\tfor (var i = 0; i < l.length; i++) {\n\t\tif (l[i] > 0)\
    \ {\n\t\t\tresult.push(l[i]);\n\t\t}\n\t}\n\treturn result;\n}\n", "\t\n\t\n}\n",
  "  //PLACEHOLDER FOR SOLUTION\n  let p = []\n  for (let x of l){\n    if (x > 0){\n\
    \      p.push(x)\n    }\n  }\n  return p\n}\n", "    // YOUR CODE HERE\n    return\
    \ _.filter(l,function(item){return item > 0});\n\n}\n", "\t// your code here\n\
    }\n", "    return l.filter(x => x > 0);\n}\n", "    // your code here\n}\n", " \
    \ // for(var i=0; i<l.length; i++){\n  //   if(l[i]<0){\n  //     l.splice(i,1);\n\
    \  //     i--;\n  //   }\n  // }\n  // return l;\n  return l.filter(function(x){\n\
    \    return x>0;\n  });\n}\n", "    return l.filter(element => element >= 0);\n\
    }", "    var pos = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i]\
    \ >= 0){\n            pos.push(l[i]);\n        }\n    }\n    return pos;\n}",
  "    return l.filter(function(n){return n>0});\n}\n", "    var result = [];\n  \
    \  l.forEach(function(n){\n        if (n > 0){\n            result.push(n);\n\
    \        }\n    });\n    return result;\n}\n", "    var result = []\n    for (var\
    \ i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i])\n\
    \        }\n    }\n    return result\n}", "  var p=filter(function(a){return a>0;},l);\n\
    \  return p;\n}\n", "    // code here\n    var result = [];\n    for (var i =\
    \ 0; i < l.length; i++) {\n        if (l[i] > 0) {\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var new_list = [];\n    for\
    \ (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}", "  return l.filter(function(x){return\
    \ x > 0;});\n}\n", "    var newArray = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            newArray.push(l[i]);\n        }\n\
    \    }\n    return newArray;\n}", "    var new_list = [];\n    for (var i = 0;\
    \ i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

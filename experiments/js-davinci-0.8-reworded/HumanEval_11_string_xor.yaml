name: HumanEval_11_string_xor
language: js
prompt: "//Input are two strings a and b consisting only of 1s and 0s.\n// Perform\
  \ binary XOR on these inputs and return result also as a string.\n// >>> string_xor(\"\
  010\", \"110\")\n// \"100\"\nfunction string_xor(a, b){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = string_xor;\n  assert.deepEqual(candidate(\"111000\", \"101010\"),\"010010\"\
  );\n  assert.deepEqual(candidate(\"1\", \"1\"),\"0\");\n  assert.deepEqual(candidate(\"\
  0101\", \"0000\"),\"0101\");\n}\n\ntest();"
completions: ["  var arrayA = [];\n  var arrayB = [];\n  var arrayXOR = [];\n  var\
    \ result = '';\n  for (var i = 0; i < a.length; i++) {\n    arrayA.push(parseInt(a[i]));\n\
    \  }\n  for (var j = 0; j < b.length; j++) {\n    arrayB.push(parseInt(b[j]));\n\
    \  }\n  for (var k = 0; k < arrayA.length; k++) {\n    if (arrayA[k] !== arrayB[k])\
    \ {\n      arrayXOR.push(1);\n    }\n    else {\n      arrayXOR.push(0);\n   \
    \ }\n  }\n  result = arrayXOR.join('');\n  return result;\n}", "  var result =\
    \ \"\";\n  a = a.split(\"\");\n  b = b.split(\"\");\n  for(var i = 0; i < a.length;\
    \ i++){\n    if(a[i] === b[i]){\n      result += \"0\";\n    }else{\n      result\
    \ += \"1\";\n    }\n  }\n  return result;\n}\n", "    let res = \"\";\n    let\
    \ aSplit = a.split(\"\");\n    let bSplit = b.split(\"\");\n    for(let i = 0;\
    \ i < aSplit.length; i++){\n        if(aSplit[i] == bSplit[i]){\n            res\
    \ = res + \"0\";\n        }else{\n            res = res + \"1\";\n        }\n\
    \    }\n    return res;\n}", "    var result = '';\n    for(var i = 0; i < a.length;\
    \ i++){\n        if(a[i] == b[i]){\n            result += '0';\n        }else{\n\
    \            result += '1';\n        }\n    }\n    return result;\n}", "  var\
    \ result = \"\";\n  for(var i = 0; i < a.length; i++){\n    if(a[i] === b[i]){\n\
    \      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "  const n1 = parseInt(a, 2);\n  const n2 = parseInt(b, 2);\n\
    \  return (n1 ^ n2).toString(2);\n}\n", "  return (parseInt(a, 2) ^ parseInt(b,\
    \ 2)).toString(2);\n}\n", "  var aBin = a.split('');\n  var bBin = b.split('');\n\
    \  var result = [];\n  for (var i = 0; i < aBin.length; i++){\n    if (aBin[i]\
    \ === bBin[i]){\n      result.push('0');\n    } else {\n      result.push('1');\n\
    \    }\n  }\n  return result.join('');\n}\n", "    return (parseInt(a, 2) ^ parseInt(b,\
    \ 2)).toString(2);\n}\n", "    if (a.length != b.length)\n        return \"Not\
    \ the same length\"\n    var ans = \"\";\n    for (var i = 0; i < a.length; i++){\n\
    \        if (a[i] == b[i])\n            ans += \"0\";\n        else\n        \
    \    ans += \"1\";\n    }\n    return ans;\n}\n", "\tvar result = \"\";\n\tfor(var\
    \ i = 0; i < a.length; i++){\n\t\tif(a[i] == b[i]){\n\t\t\tresult += \"0\";\n\t\
    \t}\n\t\telse{\n\t\t\tresult += \"1\";\n\t\t}\n\t}\n\treturn result;\n}\n", " \
    \   if (a === \"\" || b === \"\") return \"\";\n    const result = [];\n    let\
    \ temp;\n    for (let i = 0; i < a.length; i++){\n        if (a[i] === b[i]){\n\
    \            temp = 0;\n        }\n        else temp = 1;\n        result.push(temp);\n\
    \    }\n    return result.join(\"\");\n}", "  var str1 = '';\n  for (var i = 0;\
    \ i < a.length; i++) {\n    if (a[i] === b[i]) {\n      str1 += '0';\n    } else\
    \ {\n      str1 += '1';\n    }\n  }\n  return str1;\n}\n", "\n}\n", "    let result\
    \ = \"\";\n    for(let i = 0; i < a.length; i++){\n        if (a[i] === b[i]){\n\
    \            result += '0';\n        } else {\n            result += '1';\n  \
    \      }\n    }\n    return result;\n}\n", "    return (parseInt(a, 2) ^ parseInt(b,\
    \ 2)).toString(2);\n}\n", "\tlet arr1 = a.split('');\n\tlet arr2 = b.split('');\n\
    \tlet arr3 = arr1.map((item, index) => {\n\t\tif(item != arr2[index]){\n\t\t\t\
    return 1;\n\t\t}\n\t\treturn 0;\n\t});\n\treturn arr3.join('');\n}\n\nmodule.exports\
    \ = string_xor;", "\n}\n", "  return String(parseInt(a, 2) ^ parseInt(b, 2)).split('').map(function(i){\n\
    \    return parseInt(i);\n  }).join('');\n}\n", "    //split the strings into\
    \ an array of characters\n    var array1 = a.split(\"\");\n    var array2 = b.split(\"\
    \");\n    var result = \"\";\n    //examine each element\n    for(var i = 0; i\
    \ < array1.length; i++){\n        if(array1[i] == array2[i]){\n            result\
    \ += \"0\";\n        }\n        else{\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}", "\tvar output = [];\n\tfor(var i = 0; i < a.length;\
    \ i++){\n\t\tif(a[i] == b[i]){\n\t\t\toutput.push(\"0\");\n\t\t}else{\n\t\t\t\
    output.push(\"1\");\n\t\t}\n\t}\n\treturn output.join(\"\");\n}\n", "  let result\
    \ = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] == b[i]) {\n \
    \     result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "\ta = a.split('');\n\tb = b.split('');\n\tvar result = [];\n\
    \tfor(var i = 0; i < a.length; i++){\n\t\tif(a[i] === b[i]){\n\t\t\tresult.push('0');\n\
    \t\t}else{\n\t\t\tresult.push('1');\n\t\t}\n\t}\n\treturn result.join('');\n}",
  "    var a = a.split('').map(function(x){return parseInt(x, 10);});\n    var b =\
    \ b.split('').map(function(x){return parseInt(x, 10);});\n    var result = [];\n\
    \    for(var i = 0; i < a.length; i++){\n        if(a[i] == b[i]){\n         \
    \   result.push(0);\n        } else {\n            result.push(1);\n        }\n\
    \    }\n    return result.join('');\n}\n", "    var a_char, b_char, res_char;\n\
    \    var res = \"\";\n    var a_len = a.length;\n    var b_len = b.length;\n \
    \   var a_idx = 0;\n    var b_idx = 0;\n    for(var i = 0; i < a_len; i++){\n\
    \        a_char = a.charAt(a_idx);\n        b_char = b.charAt(b_idx);\n      \
    \  if(a_char === b_char){\n            res_char = \"0\";\n        }else{\n   \
    \         res_char = \"1\";\n        }\n        res += res_char;\n        a_idx++;\n\
    \        b_idx++;\n        if(a_idx >= a_len){\n            a_idx = 0;\n     \
    \   }\n        if(b_idx >= b_len){\n            b_idx = 0;\n        }\n    }\n\
    \    return res;\n}", "    let output = \"\";\n    for(let i = 0; i < a.length;\
    \ i++){\n        if(a[i] !== b[i]){\n            output += \"1\";\n        } else\
    \ {\n            output += \"0\";\n        }\n    }\n    return output;\n}", " \
    \   //your code here\n    var split = a.split('');\n    var split2 = b.split('');\n\
    \    var results = [];\n    for(var i = 0; i < split.length; i++){\n        if(split[i]\
    \ === split2[i]){\n            results.push('0');\n        }else{\n          \
    \  results.push('1');\n        }\n    }\n    return results.join('');\n}\n", " \
    \   return (parseInt(a, 2) ^ parseInt(b, 2)).toString(2);\n}", "    return a.split('').map((e,i)=>parseInt(e,2)^parseInt(b[i],2)).join('');\n\
    }\n", "    var result = '';\n    for(var i = 0; i < a.length; i++){\n        result\
    \ += (a[i] == b[i]) ? 0 : 1;\n    }\n    return result;\n}", "    return a.split('').map((num,\
    \ i) => {return parseInt(num) ^ parseInt(b[i])}).join('');\n}\n", "  return a.split('').map(function(val,\
    \ index){\n    return val ^ b[index];\n  }).join('');\n}\n", "    let aBin = Number(a).toString(2);\n\
    \    let bBin = Number(b).toString(2);\n    return (aBin ^ bBin).toString(2);\n\
    }\n", "    let xor_str = \"\"\n    for (let i = 0; i < a.length; i++){\n     \
    \   if (a[i] == b[i]){\n            xor_str += \"0\"\n        } else {\n     \
    \       xor_str += \"1\"\n        }\n    }\n    return xor_str\n}", "  if(a.length!=b.length){\n\
    \    console.log(\"Unequal length!\");\n    return;\n  }\n  let a_arr = a.split(\"\
    \");\n  let b_arr = b.split(\"\");\n  let result = \"\";\n  for(let i=0; i<a_arr.length;\
    \ i++){\n    if(a_arr[i]==b_arr[i]){\n      result+=\"0\";\n    }\n    else{\n\
    \      result+=\"1\";\n    }\n  }\n  return result;\n}\n", "    var result = \"\
    \";\n    a = a.split(\"\");\n    b = b.split(\"\");\n    for(var i = 0; i < a.length;\
    \ i++){\n        result += (a[i] === b[i]) ? 0 : 1;\n    }\n    return result;\n\
    }\n", "  let str = '';\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] ===\
    \ b[i]) {\n      str += '0';\n    } else {\n      str += '1';\n    }\n  }\n  return\
    \ str;\n}", "    var len = a.length;\n    var result = \"\";\n    for(var i =\
    \ 0; i < len; i++){\n        if(a[i] == b[i])\n            result += \"0\";\n\
    \        else\n            result += \"1\";\n    }\n    return result;\n}\n",
  "    var result = \"\";\n    for(var i = 0; i < a.length; i++){\n        if(a[i]\
    \ === b[i]){\n            result += \"0\";\n        }\n        else{\n       \
    \     result += \"1\";\n        }\n    }\n    return result;\n}\n", "  let result\
    \ = \"\";\n  for (let i = 0; i < a.length; i++) {\n    let aBit = a[i];\n    let\
    \ bBit = b[i];\n    if (aBit === bBit) {\n      result += \"0\";\n    } else {\n\
    \      result += \"1\";\n    }\n  }\n  return result;\n}\n", "  var arr_out =\
    \ [];\n  for (var i = 0; i < a.length; i++){\n    if (a[i] === b[i]){\n      arr_out.push(\"\
    0\");\n    }\n    else{\n      arr_out.push(\"1\");\n    }\n  }\n  return arr_out.join(\"\
    \");\n}\n", "    let result = '';\n    let j = 0;\n    for(let i = 0; i < a.length;\
    \ i++){\n        if(a[i] === b[i]){\n            result = '0' + result;\n    \
    \    }else{\n            result = '1' + result;\n        }\n    }\n    return\
    \ result;\n}", "    return a.split('').map((char, i) => char === b[i] ? '0' :\
    \ '1').join('');\n}\n", "    let aArr = [];\n    let bArr = [];\n    let result\
    \ = [];\n    let aLen = a.length;\n    let bLen = b.length;\n    let aInt;\n \
    \   let bInt;\n    let resultStr = '';\n    if(aLen > bLen){\n        for(let\
    \ i = 0; i < aLen; i++){\n            aArr.push(a[i]);\n            if(b[i] !==\
    \ undefined){\n                bArr.push(b[i]);\n            } else {\n      \
    \          bArr.push(0);\n            }\n        }\n    } else {\n        for(let\
    \ i = 0; i < bLen; i++){\n            bArr.push(b[i]);\n            if(a[i] !==\
    \ undefined){\n                aArr.push(a[i]);\n            } else {\n      \
    \          aArr.push(0);\n            }\n        }\n    }\n    for(let i = 0;\
    \ i < aArr.length; i++){\n        aInt = parseInt(aArr[i]);\n        bInt = parseInt(bArr[i]);\n\
    \        if(aInt + bInt === 1){\n            result.push(1);\n        } else {\n\
    \            result.push(0);\n        }\n    }\n    for(let i = 0; i < result.length;\
    \ i++){\n        resultStr += result[i];\n    }\n    return resultStr;\n}\n",
  "\tvar output = \"\";\n\tfor(var i = 0; i < a.length; i++){\n\t\tif(a[i] == b[i]){\n\
    \t\t\toutput += \"0\";\n\t\t}\n\t\telse{\n\t\t\toutput += \"1\";\n\t\t}\n\t}\n\
    \treturn output;\n}\n", "\tvar i = a.length;\n\tvar j = b.length;\n\tvar result\
    \ = \"\";\n\tvar x;\n\tvar y;\n\tvar longest = (i > j) ? i : j;\n\n\twhile(longest--){\n\
    \t\tx = a[i - longest - 1] === \"1\";\n\t\ty = b[j - longest - 1] === \"1\";\n\
    \t\tresult = (x ^ y ? \"1\" : \"0\") + result;\n\t}\n\n\treturn result;\n}\n",
  "    return Number(a ^ b).toString(2);\n}\nstring_xor(\"010\", \"110\");\n", " \
    \   var result = '';\n    a = a.split('');\n    b = b.split('');\n    for(var\
    \ i = 0; i < a.length; i++){\n        if(a[i] === b[i]){\n            result +=\
    \ '0';\n        } else {\n            result += '1';\n        }\n    }\n    return\
    \ result;\n}\n", "    var c = '';\n    for (var i = 0; i < a.length; i++) {\n\
    \        c += a[i] === b[i] ? '0' : '1';\n    }\n    return c;\n}\n", "    let\
    \ answer = \"\";\n    for(let i = 0; i < a.length; i++){\n        if(a[i] !==\
    \ b[i]) answer += \"1\";\n        else answer += \"0\";\n    }\n    return answer;\n\
    }\n", "    var result = \"\";\n    var res;\n    for(var i = 0; i < a.length;\
    \ i++){\n        res = parseInt(a[i]) ^ parseInt(b[i]);\n        result += res.toString();\n\
    \    }\n    return result;\n}\n", "\tvar i = a.length;\n\tvar j = b.length;\n\t\
    var result = \"\";\n\tvar a_binary = a.split(\"\");\n\tvar b_binary = b.split(\"\
    \");\n\tif (i > j){\n\t\twhile (j < i){\n\t\t\tb_binary.unshift(\"0\");\n\t\t\t\
    j++;\n\t\t}\n\t} else if (j > i){\n\t\twhile (i < j){\n\t\t\ta_binary.unshift(\"\
    0\");\n\t\t\ti++;\n\t\t}\n\t}\n\tfor (var k = 0; k < i; k++){\n\t\tresult += (a_binary[k]\
    \ === b_binary[k]) ? \"0\" : \"1\";\n\t}\n\treturn result;\n}", "  //  return\
    \ parseInt(a, 2) ^ parseInt(b, 2).toString(2);\n  var result = '';\n  for (var\
    \ i = 0; i < a.length; i++) {\n    result += a[i] ^ b[i];\n  }\n  return result;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < a.length; i++){\n        if(a[i]\
    \ == b[i]){\n            result.push(\"0\");\n        }else{\n            result.push(\"\
    1\");\n        }\n    }\n    return result.join(\"\");\n}\n", "  var res = \"\"\
    ;\n  for(var i = 0; i < a.length; i++){\n    if(a[i] == b[i]){\n      res += \"\
    0\";\n    }else{\n      res += \"1\";\n    }\n  }\n  return res;\n}\n", "  return\
    \ (parseInt(a, 2) ^ parseInt(b, 2)).toString(2);\n}\n", "  return a.split('').map(function(a,\
    \ index){\n    return a == b[index] ? '0' : '1';\n  }).join('');\n}\n", "  let\
    \ c = '';\n  let aLen = a.length;\n  let bLen = b.length;\n  let iter = aLen >\
    \ bLen ? aLen : bLen;\n  for(let i = 0; i < iter; i++){\n    c += (a[i] ^ b[i]);\n\
    \  }\n  return c;\n}\n", "\treturn (parseInt(a, 2) ^ parseInt(b, 2)).toString(2);\n\
    }\n", "    return a.split('').map((val,i)=>parseInt(val)^parseInt(b[i])).join('');\n\
    }\n", "  var temp = [];\n  for(var i = 0; i < a.length; i++){\n    if(a[i] ===\
    \ b[i]){\n      temp.push('0');\n    } else {\n      temp.push('1');\n    }\n\
    \  }\n  return temp.join('');\n}\n", "  a = a.split('');\n  b = b.split('');\n\
    \  let output = '';\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] == b[i])\
    \ {\n      output += '0';\n    } else {\n      output += '1';\n    }\n  }\n  return\
    \ output;\n}\n", "    let res = \"\";\n    for(let i = 0; i < a.length; i++){\n\
    \        if(a[i] == b[i]) res += \"0\";\n        else res += \"1\";\n    }\n \
    \   return res;\n}\n", "    return decodeURIComponent(escape(String.fromCharCode.apply(String,\
    \ a.split('').map(function(c, i){\n        return c.charCodeAt(0) ^ b.charCodeAt(i).charCodeAt(0);\n\
    \    }))));\n}\n", "    //TODO: Perform binary XOR on strings a and b and return\
    \ the result\n    //      as a string.\n    var result = [];\n    for (var i =\
    \ 0; i < a.length; i++) {\n        if (a[i] == b[i]) {\n            result.push('0');\n\
    \        } else {\n            result.push('1');\n        }\n    }\n    return\
    \ result.join('');\n}\n", "\ta = bin2dec(a);\n\tb = bin2dec(b);\n\tvar xor = a\
    \ ^ b;\n\txor = dec2bin(xor);\n\treturn xor;\n}\n", "    let result = '';\n  \
    \  for (let i = 0; i < a.length; i++){\n        result += (a[i] ^ b[i]).toString();\n\
    \    }\n    return result;\n}\n", "\tvar aLen = a.length;\n\tvar bLen = b.length;\n\
    \tvar maxLen = aLen > bLen ? aLen : bLen;\n\tvar p1, p2;\n\tvar ret = \"\";\n\t\
    for(var i = 0; i < maxLen; i++){\n\t\tp1 = Number(a[i]) || 0;\n\t\tp2 = Number(b[i])\
    \ || 0;\n\t\tret += String(p1 ^ p2);\n\t}\n\treturn ret;\n}\n", "    var xor =\
    \ \"\";\n    for(var i = 0; i < a.length; i++){\n        if(a[i] === b[i]){\n\
    \            xor += \"0\";\n        } else {\n            xor += \"1\";\n    \
    \    }\n    }\n    return xor;\n}\n", "  return a.split('').map(function(x,i){\n\
    \    return ((x === '1' && b[i] !== '1') || (x !== '1' && b[i] === '1')) ? '1'\
    \ : '0';\n  }).join('');\n}\n", "  var l = a.length;\n  var result = [];\n  for(var\
    \ i = 0; i < l; i++){\n    result.push(String(Number(a[i]) ^ Number(b[i])));\n\
    \  }\n  return result.join('');\n}\n", "\tvar result = \"\";\n\tfor(var i = 0;\
    \ i < a.length; i++){\n\t\tif(a[i] == b[i]){\n\t\t\tresult += \"0\";\n\t\t}else{\n\
    \t\t\tresult += \"1\";\n\t\t}\n\t}\n\treturn result;\n}\n", "  let result = \"\
    \";\n  let arr1 = a.split(\"\");\n  let arr2 = b.split(\"\");\n  let longest =\
    \ Math.max(arr1.length, arr2.length);\n  for(let i = 0; i < longest; i++){\n \
    \   if(arr1[i] === arr2[i]){\n      result += \"0\";\n    }else{\n      result\
    \ += \"1\";\n    }\n  }\n  return result;\n}\n", "  let result = \"\";\n  for\
    \ (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result +=\
    \ '0';\n    } else {\n      result += '1';\n    }\n  }\n  return result;\n}\n",
  "    var result = [];\n    for(var i = 0; i < a.length; i++){\n        result.push(\
    \ a[i] === b[i] ? '0' : '1' );\n    }\n    return result.join('');\n}\n", "  \
    \  let array=[];\n    for(let i=0;i<a.length;i++){\n        if(a[i]!=b[i]){\n\
    \            array.push(1);\n        }\n        else{\n            array.push(0);\n\
    \        }\n    }\n    return array.join('');\n}", "\tif (typeof a === 'undefined'\
    \ || typeof b === 'undefined'){\n\t\tthrow new Error('requires two string arguments');\n\
    \t}\n\treturn (a.toString(2) ^ b.toString(2)).toString(2);\n}", "    if(a.length\
    \ != b.length){\n        throw new Error(\"The two strings are not of the same\
    \ length.\");\n    }\n    var result = \"\";\n    for(var i = 0; i < a.length;\
    \ i++){\n        if(a[i] === b[i]){\n            result += \"0\";\n        }else{\n\
    \            result += \"1\";\n        }\n    }\n    return result;\n}\n", " \
    \   return a.split('').map((char, index) => char ^ b[index]).join('');\n}\n",
  "  let result = \"\";\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] ===\
    \ b[i]) {\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n\
    \  }\n  return result;\n}", "    a = a.split('');\n    b = b.split('');\n    return\
    \ a.map(function(value, index){\n      return value == b[index] ? 0 : 1;\n   \
    \ }).join('');\n}\n", "    var c = \"\";\n    for (var i = 0; i < a.length; i++)\
    \ {\n        c += (a[i] ^ b[i]);\n    }\n    return c;\n}\n", "    return a\n\
    \        .split('')\n        .map((c, i) => (parseInt(c) ^ parseInt(b[i])).toString())\n\
    \        .join('');\n}\n", "  // convert to binary then xor the values together\n\
    \  var i = 0;\n  var result = '';\n  var aBin = binary_string_to_array(a);\n \
    \ var bBin = binary_string_to_array(b);\n  while (i < aBin.length || i < bBin.length)\
    \ {\n    // get the characters we need to compare for the xor\n    var aChar =\
    \ aBin[i];\n    var bChar = bBin[i];\n    // if a is shorter then we assume the\
    \ rest of the string is padded with 0s\n    if (typeof aChar === 'undefined')\
    \ {\n      aChar = 0;\n    }\n    // if b is shorter then we assume the rest of\
    \ the string is padded with 0s\n    if (typeof bChar === 'undefined') {\n    \
    \  bChar = 0;\n    }\n    // perform the xor and concat the resulting string\n\
    \    result += aChar ^ bChar;\n    i++;\n  }\n  return result;\n}\n", "    let\
    \ output = \"\";\n    for(let i = 0; i < a.length; i++){\n        if(a[i] == b[i]){\n\
    \            output += \"0\";\n        }\n        else{\n            output +=\
    \ \"1\";\n        }\n    }\n    return output;\n}\n", "    return '';\n}\n", " \
    \ var result = \"\";\n  for(var i = 0; i < a.length; i++){\n    if(a[i] === b[i]){\n\
    \      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n  }\n  return\
    \ result;\n}\n", "  var aArr = a.split('');\n  var bArr = b.split('');\n  var\
    \ cArr = [];\n  for (var i = 0; i < aArr.length; i++) {\n    if (aArr[i] == bArr[i])\
    \ {\n      cArr.push('0');\n    }\n    else {\n      cArr.push('1');\n    }\n\
    \  }\n  return cArr.join('');\n}\n", "    return a.split('').map((x, idx) => (x\
    \ ^ b[idx]).toString()).join('');\n}\n", "    var res = \"\";\n    var i = 0;\n\
    \    while(i < a.length || i < b.length){\n        if(a[i] == b[i]){\n       \
    \     res += \"0\";\n        }\n        else{\n            res += \"1\";\n   \
    \     }\n        i++;\n    }\n    return res;\n}", "\n}\n", "    return binaryXOR(a,\
    \ b);\n}\n", "  let i, xor = '';\n  for (i = 0; i < a.length; i++) {\n    xor\
    \ += a[i] == b[i] ? '0' : '1';\n  }\n  return xor;\n}\n", "    let str = \"\"\
    ;\n    for(let i = 0; i < a.length; i++){\n        if(a[i] === b[i]){\n      \
    \      str += \"0\";\n        } else {\n            str += \"1\";\n        }\n\
    \    }\n    return str;\n}\n", "  let result = \"\";\n  for (let i = 0; i < a.length;\
    \ i++) {\n    result += a[i] == b[i] ? \"0\" : \"1\";\n  }\n  return result;\n\
    }\n", "    if(typeof a != 'string' || typeof b != 'string'){\n        return \"\
    Inputs must be strings\";\n    }\n    var l = a.length > b.length ? a.length :\
    \ b.length;\n    var c = \"\";\n    for(var i = 0; i < l; i++){\n        c +=\
    \ (a[i] == b[i]) ? \"0\" : \"1\";\n    }\n    return c;\n}", "    return a.replace(/[^01]/g,\
    \ '')\n        .split('')\n        .map(function(v, i){ return parseInt(v, 10)\
    \ ^ parseInt(b[i], 10); })\n        .join('');\n}\n", "    let xor = \"\";\n \
    \   for(let i = 0; i < a.length; i++){\n        xor += (a[i] ^ b[i]);\n    }\n\
    \    return xor;\n}\n", "\n}\n", "    let newString = '';\n    for (let i = 0;\
    \ i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            newString +=\
    \ '1';\n        } else {\n            newString += '0';\n        }\n    }\n  \
    \  return newString;\n}\n", "    var result = \"\";\n    var i = a.length - 1;\n\
    \    var j = b.length - 1;\n\n    while(i >= 0 || j >= 0){\n        var aBit =\
    \ i >= 0 ? a[i] : \"0\";\n        var bBit = j >= 0 ? b[j] : \"0\";\n        if(aBit\
    \ != bBit){\n            result = \"1\" + result;\n        } else {\n        \
    \    result = \"0\" + result;\n        }\n        i--;\n        j--;\n    }\n\n\
    \    return result;\n}", "  let result = '';\n  if (a.length !== b.length) {\n\
    \    throw new Error(\"lengths of strings are not equal\");\n  }\n  for (let i\
    \ = 0; i < a.length; i++) {\n    if (a[i] === b[i]) {\n      result += \"0\";\n\
    \    } else {\n      result += \"1\";\n    }\n  }\n  return result;\n}\n", " \
    \ let result = [];\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i])\
    \ {\n      result.push(0);\n    } else {\n      result.push(1);\n    }\n  }\n\
    \  return result.join('');\n}\n", "    return a.toString(2) ^ b.toString(2);\n\
    }\n", "  var xor = \"\";\n  for(var i = 0; i < a.length; i++){\n    if(a[i] ==\
    \ b[i]){\n      xor += \"0\";\n    }\n    else{\n      xor += \"1\";\n    }\n\
    \  }\n  return xor;\n}\n", "    var output = \"\";\n    for(var i = 0; i < a.length;\
    \ i++){\n        var aa = parseInt(a[i]);\n        var bb = parseInt(b[i]);\n\
    \        if(aa == bb){\n            output += \"0\";\n        }\n        else{\n\
    \            output += \"1\";\n        }\n    }\n    return output;\n}\n", " \
    \ let op1 = a.split('')\n  let op2 = b.split('')\n  let answer = []\n  for (var\
    \ i = 0; i < op1.length; i++) {\n    if (op1[i] === op2[i]) {\n      answer.push('0')\n\
    \    } else {\n      answer.push('1')\n    }\n  }\n  return answer.join('')\n\
    }\n", "    var result = \"\";\n    for(var i = 0; i < a.length; i++){\n      \
    \  if(a[i] == b[i]){\n            result += \"0\";\n        }else{\n         \
    \   result += \"1\";\n        }\n    }\n    return result;\n}\n", "    return\
    \ (parseInt(a, 2) ^ parseInt(b, 2)).toString(2);\n}\n", "\treturn \"\";\n}\n",
  "  var r = '';\n  for (var i = 0; i < a.length; i++) {\n    var c = (a[i] === b[i])\
    \ ? '0' : '1';\n    r += c;\n  }\n  return r;\n}\n\n", "    a = a.split('');\n\
    \    b = b.split('');\n    let result = [];\n    a.forEach((item, index) => {\n\
    \        result.push(item ^ b[index]);\n    });\n    return result.join('');\n\
    }\n", "    // write your code here.\n}\n", "\n}\n", "    var s = '';\n    for(var\
    \ i = 0; i < a.length; i++)\n        s += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n\
    \    return s;\n}\n\n", "  if (a.length == b.length) {\n    return a.split('').map(function(i,\
    \ j) {\n      return parseInt(i) ^ parseInt(b[j]);\n    }).join('');\n  }\n  return\
    \ -1;\n}\n", "    let result = \"\";\n    for(let i = 0; i < a.length; i++){\n\
    \        if(a[i] == b[i]){\n            result += \"0\";\n        }\n        else{\n\
    \            result += \"1\";\n        }\n    }\n    return result;\n}\n", " \
    \   var x = \"\";\n    for(var i = 0; i < a.length; i++){\n        x += ((a[i]\
    \ !== b[i]) ? \"1\" : \"0\");\n    }\n    return x;\n}\n", "    var a = Number(\"\
    0b\" + a)\n    var b = Number(\"0b\" + b)\n    var result = a ^ b\n    return\
    \ result.toString(2)\n}", "\treturn \"\";\n}\n", "  return (parseInt(a, 2) ^ parseInt(b,\
    \ 2)).toString(2);\n}\n", "    var res = \"\";\n    for(var i = 0; i < a.length;\
    \ i++){\n        var stringToNumber = parseInt(a[i],10) + parseInt(b[i],10);\n\
    \        if(stringToNumber % 2 === 0){\n            res += \"0\";\n        }else{\n\
    \            res += \"1\";\n        }\n    }\n    return res;\n}\n", "    var\
    \ res = \"\";\n    for(var i = 0; i < a.length; i++){\n        if(a[i] == b[i]){\n\
    \            res += \"0\";\n        }\n        else {\n            res += \"1\"\
    ;\n        }\n    }\n    return res;\n}\n", "\n}\n", "    return a.replace(/[^01]/g,\
    \ '')\n        .split('')\n        .map( function(d,i) {\n            return Number(d)\
    \ ^ Number(b[i]);\n        })\n        .join('');\n}\n", "    //convert string\
    \ to array and save in variable\n    var arrA = a.split('');\n    var arrB = b.split('');\n\
    \    // create empty array to push results to\n    var result = [];\n    // loop\
    \ through \n    for(var i = 0; i < arrA.length; i++){\n        // if the values\
    \ are equal then convert to boolean\n        if(arrA[i] === arrB[i]){\n      \
    \      //convert to boolean\n            result.push(false);\n        } else {\n\
    \            // if they dont equal convert to boolean\n            result.push(true);\n\
    \        }\n    }\n    // convert the boolean values to strings\n    var stringResult\
    \ = result.map(String);\n    //return the new string result\n    return stringResult.join('');\n\
    }\n", "\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\tvar output =\
    \ \"\";\n\tfor (var i = 0; i < a.length; i++) {\n\t\tvar currChar = a[i];\n\t\t\
    var nextChar = b[i];\n\t\tif (currChar === nextChar) {\n\t\t\toutput += \"0\"\
    ;\n\t\t} else {\n\t\t\toutput += \"1\";\n\t\t}\n\t}\n\treturn output;\n}\n", " \
    \   const aArr = a.split('');\n    const bArr = b.split('');\n    let result =\
    \ [];\n    for(let i = 0; i < aArr.length; i++){\n        result.push(Number(aArr[i])\
    \ ^ Number(bArr[i]));\n    }\n    return result.join('');\n}", "\treturn a.map((x,\
    \ i) => (x === b[i]) ? '0' : '1').join('');\n}\n", "    var arr = [];\n    for(var\
    \ i = 0; i < a.length; i++){\n        if(a[i] == b[i])\n            arr.push(\"\
    0\");\n        else\n            arr.push(\"1\");\n    }\n    return arr.join(\"\
    \");\n}", "\tvar result = \"\";\n\tfor(var i = 0; i < a.length; i++){\n\t\tif(a[i]\
    \ === b[i]){\n\t\t\tresult += '0';\n\t\t} else {\n\t\t\tresult += '1';\n\t\t}\n\
    \t}\n\treturn result;\n}\n", "  let result = '';\n  for (let i = 0; i < a.length;\
    \ i++) {\n    if (a[i] === b[i]) {\n      result += '0';\n    } else {\n     \
    \ result += '1';\n    }\n  }\n  return result;\n}\n", "    //your code here\n\
    }\n```\n\n```js", "    return a.split('').map((ch, i) => +ch ^ +b[i]).join('');\n\
    }\n", "    return a.split('').map((v,i)=>v==b[i]?'0':'1').join('');\n}\n", "\t\
    var a_bin = a.split('');\n\tvar b_bin = b.split('');\n\tvar result = [];\n\tfor(var\
    \ i = 0; i < a_bin.length; i++){\n\t\tresult.push(a_bin[i]^b_bin[i]);\n\t}\n\t\
    return result.join('');\n}\n", "\tlet result = \"\";\n\tfor(let i = 0; i < a.length;\
    \ i++){\n\t\tif(a[i] === b[i]){\n\t\t\tresult += \"0\";\n\t\t}else{\n\t\t\tresult\
    \ += \"1\";\n\t\t}\n\t}\n\treturn result;\n}\n", "\tlet result = '';\n\tfor (let\
    \ i = 0; i < a.length; i++) {\n\t\tif (a[i] === b[i]) {\n\t\t\tresult += '0';\n\
    \t\t} else {\n\t\t\tresult += '1';\n\t\t}\n\t}\n\treturn result;\n}\n", "    if(a.length\
    \ !== b.length){\n        console.log(\"Inputs are different lengths.\");\n  \
    \      return;\n    }\n    var s = \"\";\n    for(var i = 0; i < a.length; i++){\n\
    \        if(a[i] === b[i]){\n            s += \"0\";\n        } else {\n     \
    \       s += \"1\";\n        }\n    }\n    return s;\n}\n", "    let aNum = parseInt(a,\
    \ 2);\n    let bNum = parseInt(b, 2);\n    let xor = aNum ^ bNum;\n    let xorString\
    \ = xor.toString(2);\n    return xorString;\n}\n", "  var s = \"\";\n  for(var\
    \ i = 0; i < a.length; i++){\n    if(a[i] === b[i]){\n      s += \"0\";\n    }\
    \ else {\n      s += \"1\";\n    }\n  }\n  return s;\n}\n", "  if (typeof a !=\
    \ 'string' || typeof b != 'string'){\n    throw new Error(\"Invalid input.\");\n\
    \  }\n  let a_array = a.split('');\n  let b_array = b.split('');\n  if (a_array.length\
    \ != b_array.length){\n    throw new Error(\"Arrays must be the same length.\"\
    );\n  }\n  let xor_array = [];\n  for (let i = 0; i < a_array.length; i++){\n\
    \    if (a_array[i] != b_array[i]){\n      xor_array.push(1);\n    } else {\n\
    \      xor_array.push(0);\n    }\n  }\n  return xor_array.join('');\n}\n", " \
    \ if(a === b){\n    return '0';\n  }\n  else{\n    return '1';\n  }\n}\n", " \
    \ let xor = [];\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i])\
    \ {\n      xor.push('0');\n    } else {\n      xor.push('1');\n    }\n  }\n  return\
    \ xor.join('');\n}", "    let result = [];\n    for(let i = 0; i < a.length; i++){\n\
    \        if(a[i] === b[i]){\n            result.push('0');\n        } else {\n\
    \            result.push('1');\n        }\n    }\n    return result.join('');\n\
    }\n", "  var result = \"\";\n  a = a.split(\"\");\n  b = b.split(\"\");\n  for(var\
    \ i = 0; i < a.length; i++){\n    result += (a[i]^b[i]);\n  }\n  return result;\n\
    }\n", "  let temp = [];\n  for(let i = 0; i < a.length; i++){\n    if(a[i] ==\
    \ b[i]){\n      temp.push(0);\n    }else{\n      temp.push(1);\n    }\n  }\n \
    \ return temp.join('');\n}", "\tvar xor = parseInt(a, 2) ^ parseInt(b, 2);\n\t\
    return (xor >>> 0).toString(2);\n}\n", "  return '';\n}\n", "    return b.split('').map((v,i)=>Number(v)+Number(a[i])).map(v=>v%2).join('');\n\
    }", "  var result = \"\";\n  for(var i = 0; i < a.length; i++){\n    if(a[i] ===\
    \ b[i]){\n      result += \"0\";\n    } else {\n      result += \"1\";\n    }\n\
    \  }\n  return result;\n}\n", "    return a.split('').map((v,i)=>{\n        return\
    \ Number(v)^Number(b[i]);\n    }).join('');\n}\n", "  let bin2 = string2bin(b)\n\
    \  let bin1 = string2bin(a)\n  let hex1 = bin2hex(bin1)\n  let hex2 = bin2hex(bin2)\n\
    \  let xor = hexXor(hex1, hex2)\n  let binXor = hex2bin(xor)\n  let binXorString\
    \ = bin2string(binXor)\n  return binXorString\n}\n\n", "    let res = \"\";\n\
    \    for(let i = 0; i < a.length; i++){\n        if(a[i] === b[i]) res += \"0\"\
    ;\n        else res += \"1\";\n    }\n    return res;\n}\n", "    // Let's first\
    \ convert both a and b to binary.\n    var a = parseInt(a, 2);\n    var b = parseInt(b,\
    \ 2);\n    // Now we perform the XOR operation.\n    var result = a ^ b;\n   \
    \ // Finally we convert the integer result to a string.\n    return result.toString(2);\n\
    }\n", "  // return a ^ b;\n  return (a.split('').map(function(a, i){\n    return\
    \ a ^ b[i];\n  }).join(''));\n}\n", "  var len = Math.max(a.length, b.length);\n\
    \  var i = 0;\n  var r = \"\";\n  for(; i < len; i++){\n    r += (a[i] == b[i])\
    \ ? \"0\" : \"1\";\n  }\n  return r;\n}\n", "  let aArr = a.split('');\n  let\
    \ bArr = b.split('');\n  let result = aArr.map((e, i) => {\n    if (e !== bArr[i])\
    \ {\n      return '1';\n    } else {\n      return '0';\n    }\n  }).join('');\n\
    \  return result;\n}\n", "    let result = '';\n    for (let i = 0; i < a.length;\
    \ i++) {\n        if (a[i] == b[i]) {\n            result += '0';\n        } else\
    \ {\n            result += '1';\n        }\n    }\n    return result;\n}\n", " \
    \   var result = \"\";\n    var i = a.length - 1;\n    var j = b.length - 1;\n\
    \n    while(i >= 0 || j >= 0){\n        var x = (i >= 0) ? a[i] : '0';\n     \
    \   var y = (j >= 0) ? b[j] : '0';\n        if(x == y)\n            result = '0'\
    \ + result;\n        else\n            result = '1' + result;\n        i--;\n\
    \        j--;\n    }\n    return result;\n}", "    //check if the string length\
    \ is equal \n    if(a.length == b.length){\n        let result = \"\";\n     \
    \   //loop through the string\n        for(let i = 0; i < a.length; i++){\n  \
    \          //check if a[i] is equal to b[i] and the result is equal to 0\n   \
    \         if(a[i] == b[i] && result == 0){\n                result += 0;\n   \
    \         }\n            //check if a[i] is equal to b[i] and the result is equal\
    \ to 1\n            else if(a[i] == b[i] && result == 1){\n                result\
    \ += 1;\n            }\n            //check if a[i] is not equal to b[i] and the\
    \ result is equal to 0\n            else if(a[i] != b[i] && result == 0){\n  \
    \              result += 1;\n            }\n            //check if a[i] is not\
    \ equal to b[i] and the result is equal to 1\n            else if(a[i] != b[i]\
    \ && result == 1){\n                result += 0;\n            }\n        }\n \
    \       //return the result\n        return result;\n    }\n    //return false\n\
    \    return false;\n}", "    var res = [];\n    for(i=0; i<a.length; i++){\n \
    \       res.push(parseInt(a[i]) ^ parseInt(b[i]));\n    }\n    res = res.join('');\n\
    \    return res;\n}", "  var res = \"\";\n  for(var i = 0; i < a.length; i++){\n\
    \    if(a[i] === b[i]){\n      res += \"0\";\n    }else{\n      res += \"1\";\n\
    \    }\n  }\n  return res;\n}", "  var result = '';\n  for(var i = 0; i < a.length;\
    \ i++){\n    if(a[i] === b[i]){\n      result += '0';\n    } else {\n      result\
    \ += '1';\n    }\n  }\n  return result;\n}\n", "  let xor = '';\n  for (let i\
    \ = 0; i < a.length; i++) {\n    xor += (a[i] !== b[i]) ? '1' : '0';\n  }\n  return\
    \ xor;\n}\n", "  var out = \"\";\n  for (var i = 0; i < a.length; i++) {\n   \
    \ out += parseInt(a[i]) ^ parseInt(b[i]);\n  }\n  return out;\n}\n", "    return\
    \ a.split('').map((val, index) => parseInt(val) ^ parseInt(b[index])).join('');\n\
    }\n", "  return a.split('').map(function(v,i){\n    return (parseInt(v) ^ parseInt(b[i])).toString()\n\
    \  }).join('')\n}\n", "    if(a.length !== b.length){\n        throw new Error(\"\
    Inputs must be of equal length\");\n    }\n    var result = \"\";\n    for(var\
    \ i = 0; i < a.length; i++){\n        result += a[i] ^ b[i];\n    }\n    return\
    \ result;\n}", "    let result = '';\n    for (let i = 0; i < a.length; i++) {\n\
    \        if (a[i] === b[i]) result += '0';\n        else result += '1';\n    }\n\
    \    return result;\n}", "    a = a.split('');\n    b = b.split('');\n    if(a.length\
    \ !== b.length){\n        throw Error('Lengths do not match.');\n    }\n    return\
    \ a.map(function(x, i){\n        return +x ^ +b[i];\n    }).join('');\n}\n", " \
    \   let res = '';\n    for (let i = 0; i < a.length; i++) {\n        res += (a[i]\
    \ == b[i]) ? '0' : '1';\n    }\n    return res;\n}\n", "  var result = \"\";\n\
    \  for(var i = 0; i < a.length; i++){\n    result += (parseInt(a[i]) ^ parseInt(b[i])).toString();\n\
    \  }\n  return result;\n}\n", "    return a.split('').map((val, index) => val^b[index]).join('');\n\
    }\n", "  return a.replace(/[^01]/g, '')\n    .split('')\n    .map(function(v,\
    \ i){\n      return v ^ b[i];\n    })\n    .join('');\n}\n", "    return a.replace(/[01]/g,\
    \ function(i) {\n        return 1 - i;\n    });\n}\n", "    var res = '';\n  \
    \  var i = a.length - 1;\n    var j = b.length - 1;\n\n    while(i >= 0 || j >=\
    \ 0){\n        var aBit = i >= 0 ? a[i] : '0';\n        var bBit = j >= 0 ? b[j]\
    \ : '0';\n\n        if(aBit != bBit){\n            res = '1' + res;\n        }else{\n\
    \            res = '0' + res;\n        }\n        i--;\n        j--;\n    }\n\
    \    return res;\n}\n\nvar assert = require('assert');\nassert.equal(string_xor(\"\
    0\", \"0\"), \"0\");\nassert.equal(string_xor(\"0\", \"1\"), \"1\");\nassert.equal(string_xor(\"\
    00\", \"0\"), \"0\");\nassert.equal(string_xor(\"010\", \"110\"), \"100\");\n",
  "\treturn a.split('').map(function(val, index){\n\t\treturn (val != b[index]) ?\
    \ 1 : 0;\n\t}).join('');\n}\n\nvar score = 0;\nvar total = 0;\n\nvar challenge\
    \ = \"3d3d516343746d4d6d6c315669563362\";\nvar response = string_xor(challenge,\
    \ \"deadbeef\")\n", "  return a.split('').map(function(c, i){return (c==b[i])?0:1;}).join('');\n\
    }\n", "  var binResult = \"\";\n  for (var i = 0; i < a.length; i++) {\n    if\
    \ (a[i] === b[i]) {\n      binResult += \"0\";\n    } else {\n      binResult\
    \ += \"1\";\n    }\n  }\n  return binResult;\n}\n", "    var result = \"\";\n\
    \    for(var i = 0; i < a.length; i++){\n        if(a[i] == b[i]){\n         \
    \   result += \"0\";\n        }else{\n            result += \"1\";\n        }\n\
    \    }\n    return result;\n}\n", "  const result = [];\n  for (var i = 0; i <\
    \ a.length; i++) {\n    if (a[i] == b[i]) {\n      result.push('0');\n    } else\
    \ {\n      result.push('1');\n    }\n  }\n  return result.join('');\n}", "\tvar\
    \ result = \"\";\n\tvar a_len = a.length;\n\tvar b_len = b.length;\n\tvar iter_len\
    \ = a_len > b_len ? a_len : b_len;\n\tfor(var i = 0; i < iter_len; i++){\n\t\t\
    var a_value = i < a_len ? parseInt(a[i]) : 0;\n\t\tvar b_value = i < b_len ? parseInt(b[i])\
    \ : 0;\n\t\tresult += a_value ^ b_value;\n\t}\n\treturn result;\n}\n", "    a\
    \ = String(a);\n    b = String(b);\n    let res = '';\n    for (let i = 0; i <\
    \ a.length; i++){\n        if (a[i] !== b[i]){\n            res += '1';\n    \
    \    } else {\n            res += '0';\n        }\n    }\n    return res;\n}\n",
  "  var result = \"\";\n  for(var i = 0; i < a.length; i++){\n    if(a[i] === b[i]){\n\
    \      result += '0';\n    }else{\n      result += '1';\n    }\n  }\n  return\
    \ result;\n}\n", "    let res = [];\n    for(let i = 0; i < a.length; i++){\n\
    \        if(a[i] === b[i]){\n            res.push(\"0\");\n        }else{\n  \
    \          res.push(\"1\");\n        }\n    }\n    return res.join(\"\");\n}\n",
  "  var result = \"\";\n  var ch1, ch2;\n  for(var i = 0; i < a.length; i++){\n \
    \   ch1 = a.charAt(i);\n    ch2 = b.charAt(i);\n    if(ch1 == ch2){\n      result\
    \ += \"0\";\n    }\n    else{\n      result += \"1\";\n    }\n  }\n  return result;\n\
    }\n", "    return _.map(_.zip(a, b), function(pair){\n        return (+pair[0])\
    \ ^ (+pair[1]);\n    }).join('');\n}\n", "  var aa = a.split('');\n  var bb =\
    \ b.split('');\n  var result = [];\n  aa.forEach(function(item, index){\n    var\
    \ temp = parseInt(item) ^ parseInt(bb[index]);\n    result.push(temp);\n  });\n\
    \  return result.join('');\n}\n", "    let numA = parseInt(a, 2);\n    let numB\
    \ = parseInt(b, 2);\n    let numXOR = numA ^ numB;\n    let result = numXOR.toString(2);\n\
    \    return result;\n}", "    let len = (a.length > b.length) ? a.length : b.length;\n\
    \    let arr1 = a.split('');\n    let arr2 = b.split('');\n    let res = [];\n\
    \    for(let i = 0; i < len; i++){\n        if((arr1[i] === '1' && arr2[i] ===\
    \ '0') || (arr1[i] === '0' && arr2[i] === '1')){\n            res.push('1');\n\
    \        }else{\n            res.push('0');\n        }\n    }\n    return res.join('');\n\
    }", "  // your code goes here\n  var result = \"\";\n  for (var i = 0; i < a.length;\
    \ i++){\n    if (a[i] === b[i]) {\n      result += \"0\";\n    } else {\n    \
    \  result += \"1\";\n    }\n  }\n  return result;\n}", "    var a_bin = a.split('');\n\
    \    var b_bin = b.split('');\n    var xor = [];\n    for(var i = 0; i < a_bin.length;\
    \ i++){\n        if(a_bin[i] !== b_bin[i]){\n            xor.push('1');\n    \
    \    } else {\n            xor.push('0');\n        }\n    }\n    return xor.join('');\n\
    }", "    //Convert string inputs to ascii decimal\n    var a1 = a.charCodeAt(0);\n\
    \    var a2 = a.charCodeAt(1);\n    var a3 = a.charCodeAt(2);\n    var b1 = b.charCodeAt(0);\n\
    \    var b2 = b.charCodeAt(1);\n    var b3 = b.charCodeAt(2);\n    //Perform XOR\
    \ on ascii decimal values\n    var xor1 = a1 ^ b1;\n    var xor2 = a2 ^ b2;\n\
    \    var xor3 = a3 ^ b3;\n    //Convert ascii decimal values back to ascii char\
    \ string\n    var xor1str = String.fromCharCode(xor1);\n    var xor2str = String.fromCharCode(xor2);\n\
    \    var xor3str = String.fromCharCode(xor3);\n    //Concatenate ascii char strings\n\
    \    var xorstr = xor1str + xor2str + xor3str;\n    //Return ascii char string\n\
    \    return xorstr;\n}\n", "    var c = parseInt(a, 2) ^ parseInt(b, 2);\n   \
    \ return c.toString(2);\n}\n", "    let c = \"\";\n    for(let i = 0; i < a.length;\
    \ i++){\n        c += (parseInt(a[i])+parseInt(b[i]))%2;\n    }\n    return c;\n\
    }\n", "\t// First we will convert both strings to\n\t// binary numbers and perform\
    \ the XOR operation.\n\t// Then we will convert the binary number back to\n\t\
    // its hexadecimal representation\n\t// and return the answer.\n\tvar abin = parseInt(a,\
    \ 2);\n\tvar bbin = parseInt(b, 2);\n\tvar xorbin = abin ^ bbin;\n\treturn xorbin.toString(2);\n\
    }\n", "  let aArr = a.split('');\n  let bArr = b.split('');\n  let xored = [];\n\
    \  for(let i = 0; i < aArr.length; i++){\n    let num = i;\n    if(aArr[i] ===\
    \ bArr[i]){\n      xored.push('0');\n    }else{\n      xored.push('1');\n    }\n\
    \  }\n  return xored.join('');\n}\n", "    // your code here...\n    var res =\
    \ \"\";\n    for(var i = 0; i < a.length; i++){\n        if(a[i] == b[i]){\n \
    \           res = res + \"0\";\n        }\n        else{\n            res = res\
    \ + \"1\";\n        }\n    }\n    return res;\n}", "  if(a.length !== b.length){return\
    \ \"Inputs must be of equal length.\"}\n  let result = \"\";\n  for(let i = 0;\
    \ i < a.length; i++){\n    result += a[i] == b[i] ? 0 : 1;\n  }\n  return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_104_unique_digits
language: js
prompt: "//Given an array of positive integers x. return a sorted array of all \n\
  // elements that hasn't any even digit.\n// Note: Returned array should be sorted\
  \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
  // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
  \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
  \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
  \ 135]);\n}\n\ntest();"
completions: ["    let result = []\n    for(let i = 0; i < x.length; i++){\n     \
    \   let num = x[i].toString()\n        if(num.indexOf('2') === -1 && num.indexOf('4')\
    \ === -1 && num.indexOf('6') === -1 && num.indexOf('8') === -1 && num.indexOf('0')\
    \ === -1){\n            result.push(x[i])\n        }\n    }\n    return result.sort(function(a,\
    \ b){return a-b})\n}\n\n", "\treturn x.filter(function(num){\n\t\treturn (num\
    \ % 2 === 1) && (num % 10 !== 0);\n\t}).sort(function(a, b){\n\t\treturn a - b;\n\
    \t});\n}\n", "  var evens = [0,2,4,6,8]\n  var result = []\n  for (var i = 0;\
    \ i < x.length; i++) {\n    var count = 0\n    for (var j = 0; j < x[i].toString().length;\
    \ j++) {\n      for (var k = 0; k < evens.length; k++) {\n        if (parseInt(x[i].toString()[j])\
    \ === evens[k]) {\n          count += 1\n        }\n      }\n    }\n    if (count\
    \ === 0) {\n      result.push(x[i])\n    }\n  }\n  return result.sort(function(a,b){return\
    \ a-b})\n}", "    function uniqueDigit(arr) {\n        var containsEven = false;\n\
    \        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] % 2 ===\
    \ 0) {\n                containsEven = true;\n            }\n        }\n     \
    \   return !containsEven;\n    }\n    return x.filter(uniqueDigit).sort();\n}\n",
  "    var hasEvenDigit = false;\n    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        var currentNumber = x[i];\n        var currentDigit;\n      \
    \  while(currentNumber > 0){\n            currentDigit = currentNumber % 10;\n\
    \            if(currentDigit % 2 == 0){\n                hasEvenDigit = true;\n\
    \                break;\n            }\n            currentNumber = Math.floor(currentNumber\
    \ / 10);\n        }\n        if(!hasEvenDigit){\n            result.push(x[i]);\n\
    \        }\n        hasEvenDigit = false;\n    }\n    return result.sort(function(a,\
    \ b){return a - b});\n}", "  var oddArray = []\n  for(var i = 0; i < x.length;\
    \ i++){\n    if(!(x[i].toString().includes(\"2\")) && !(x[i].toString().includes(\"\
    4\")) && !(x[i].toString().includes(\"6\")) && !(x[i].toString().includes(\"8\"\
    ))){\n      oddArray.push(x[i])\n    }\n  }\n  oddArray.sort(function(a, b){return\
    \ a-b})\n  return oddArray\n}\n", "  var result = [];\n  for (var i = 0; i < x.length;\
    \ i++) {\n    var is_unique = true;\n    var number = x[i].toString();\n    for\
    \ (var j = 0; j < number.length; j++) {\n      if (number[j] % 2 === 0) {\n  \
    \      is_unique = false;\n      }\n    }\n    if (is_unique) {\n      result.push(x[i]);\n\
    \    }\n  }\n  return result.sort(function(a, b){return a-b});\n}", "    var result\
    \ = [];\n    for(var i = 0; i < x.length; i++){\n        var flag = true;\n  \
    \      var count = 0;\n        while(x[i] > 0){\n            var r = x[i] % 10;\n\
    \            if(r % 2 == 0){\n                flag = false;\n                break;\n\
    \            }\n            count++;\n            x[i] = Math.floor(x[i] / 10);\n\
    \        }\n        if(flag == true){\n            result.push(x[i]);\n      \
    \  }\n    }\n    return result;\n}\n", "    var unique = [];\n    for(var i =\
    \ 0; i < x.length; i++){\n        if(x[i].toString().split('').includes(\"2\"\
    ) || x[i].toString().split('').includes(\"4\") || x[i].toString().split('').includes(\"\
    6\") || x[i].toString().split('').includes(\"8\") || x[i].toString().split('').includes(\"\
    0\")){\n            var isUnique = false;\n        }\n        else{\n        \
    \    var isUnique = true;\n        }\n        if(isUnique){\n            unique.push(x[i]);\n\
    \        }\n    }\n    return unique.sort(function(a, b){return a-b});\n}", "\t\
    return x.filter(element => !has_even_digit(element)).sort((a,b) => a-b);\n}\n",
  "\tlet arr = [];\n\tfor(let i = 0; i < x.length; i++){\n\t\tlet counter = 0;\n\t\
    \tlet num = x[i].toString();\n\t\tfor(let j = 0; j < num.length; j++){\n\t\t\t\
    if(num[j] % 2 === 0){\n\t\t\t\tcounter += 1;\n\t\t\t}\n\t\t}\n\t\tif(counter ===\
    \ 0){\n\t\t\tarr.push(x[i]);\n\t\t}\n\t}\n\treturn arr.sort(function(a, b){return\
    \ a-b});\n}\n", "    let sorted_array = []\n    for (let i = 0; i < x.length;\
    \ i++){\n        if (String(x[i]).includes('2') === false && String(x[i]).includes('4')\
    \ === false && String(x[i]).includes('6') === false && String(x[i]).includes('8')\
    \ === false && String(x[i]).includes('0') === false){\n            sorted_array.push(x[i])\n\
    \        }\n    }\n    return sorted_array.sort(function(a, b){return a-b})\n}",
  "\tvar res = [];\n\tvar even = function(num){\n\t\tvar res = false;\n\t\tvar nums\
    \ = num.toString().split('');\n\t\tfor(var i = 0; i < nums.length; i++){\n\t\t\
    \tif(nums[i] % 2 === 0){\n\t\t\t\tres = true;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\
    \t}\n\tfor(var i = 0; i < x.length; i++){\n\t\tif(!even(x[i])){\n\t\t\tres.push(x[i]);\n\
    \t\t}\n\t}\n\treturn res.sort(function(a,b){return a-b});\n}\n", "\t// array to\
    \ hold the values without any even digits\n\tvar evens = [];\n\t// loop through\
    \ the array to be sorted\n\tfor (i=0; i<x.length; i++){\n\t\t// array to hold\
    \ a single value to be tested as a string\n\t\tvar y = x[i].toString().split(\"\
    \");\n\t\t// array to hold each digit of a single value to be tested\n\t\tvar\
    \ z = [];\n\t\t// loop through each value in the array of the current single value\n\
    \t\tfor (n=0; n<y.length; n++){\n\t\t\t// add to the array of digits for the current\
    \ single value\n\t\t\tz.push(parseInt(y[n]));\n\t\t}\n\t\t// loop through the\
    \ array of digits for the current single value\n\t\tfor (a=0; a<z.length; a++){\n\
    \t\t\t// if the digit is even, break the loop\n\t\t\tif (z[a] % 2 === 0){\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t\t// if the digit is odd and the loop hasn't broken,\
    \ add the current\n\t\t\t// single value to the array of values with no even digits\n\
    \t\t\telse if (a === z.length-1){\n\t\t\t\tevens.push(x[i]);\n\t\t\t}\n\t\t}\n\
    \t}\n\t// if the length of the array of values with no even digits is 0, return\n\
    \t// an empty array\n\tif (evens.length === 0){\n\t\treturn [];\n\t}\n\t// otherwise,\
    \ return the array sorted in increasing order\n\telse {\n\t\treturn evens.sort(function(a,\
    \ b){return a-b});\n\t}\n}\n", "\t\n\tvar newArr = [];\n\tfor(var i = 0; i < x.length;\
    \ i++){\n\t\tif(Number.isInteger(x[i]/2)){\n\t\t\tnewArr.push(x[i]);\n\t\t}\n\t\
    }\n\treturn newArr;\n}\n", "    var result = [];\n    for(var i = 0; i < x.length;\
    \ i++){\n        if(x[i].toString().indexOf(\"2\") == -1 && x[i].toString().indexOf(\"\
    4\") == -1 && x[i].toString().indexOf(\"6\") == -1 && x[i].toString().indexOf(\"\
    8\") == -1){\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }", "    var new_arr = [];\n    for(var i = 0; i < x.length; i++){\n        if(x[i].toString().includes(\"\
    2\") || x[i].toString().includes(\"4\") ||\n            x[i].toString().includes(\"\
    6\") || x[i].toString().includes(\"8\") ||\n            x[i].toString().includes(\"\
    0\")){\n                continue;\n            }\n        else{\n            new_arr.push(x[i]);\n\
    \        }\n    }\n    return new_arr.sort();\n}", "    var unique_odds = [];\n\
    \    for (var i = 0; i < x.length; i++){\n        var y = x[i].toString();\n \
    \       var is_even = false;\n        for (var j = 0; j < y.length; j++){\n  \
    \          if (parseInt(y[j]) % 2 == 0){\n                is_even = true;\n  \
    \          }\n        }\n        if (is_even == false){\n            unique_odds.push(x[i]);\n\
    \        }\n    }\n    unique_odds.sort(function(a, b){return a-b});\n    return\
    \ unique_odds;\n}\n", "  \n  //declare new array\n  //loop through array\n  //check\
    \ if current index has an even digit\n  //if it does, append it to new array\n\
    \  //return new array\n\n\n  var newArray = [];\n  for(var i = 0; i < x.length;\
    \ i++){\n    var isEven = false;\n    var currentNum = x[i].toString();\n    for(var\
    \ j = 0; j < currentNum.length; j++){\n      if(parseInt(currentNum[j]) % 2 ===\
    \ 0){\n        isEven = true;\n      }\n    }\n    if(isEven === false){\n   \
    \   newArray.push(x[i]);\n    }\n  }\n  return newArray;\n}", "    let arr = [];\n\
    \    for(let i = 0; i < x.length; i++){\n        let temp = x[i].toString();\n\
    \        for(let j = 0; j < temp.length; j++){\n            if(temp[j] % 2 ==\
    \ 0){\n                break;\n            }else if(j == temp.length - 1){\n \
    \               arr.push(temp);\n            }\n        }\n    }\n    return arr.sort();\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

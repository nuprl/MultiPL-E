name: HumanEval_140_fix_spaces
language: js
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunction fix_spaces(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"),\"Example\");\n  assert.deepEqual(candidate(\"\
  Mudasir Hanif \"),\"Mudasir_Hanif_\");\n  assert.deepEqual(candidate(\"Yellow Yellow\
  \  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\");\n  assert.deepEqual(candidate(\"\
  Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"   Exa 1 2 2 mple\"\
  ),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["    var a = text.replace(/ /g, \"_\");\n    var b = a.replace(/_{2,}/g,\
    \ \"-\");\n    return b;\n}\n", "\treturn text.replace(/  +/g, '-').replace(/\
    \ /g, '_').replace(/^-/, '_')\n}\n", "    const regex_multiple_spaces = / {2,}/g;\n\
    \    return text.replace(regex_multiple_spaces, \"-\").replace(/ /g, \"_\");\n\
    }\n\n", "    text = text.trim()\n    if(text.length == 0) return text\n    let\
    \ newText = ''\n    let spaces = 0\n    for(let i = 0; i < text.length; i++){\n\
    \        let char = text[i]\n        if(char == ' '){\n            spaces++\n\
    \            if(spaces < 3){\n                newText += '_'\n            }else{\n\
    \                newText += '-'\n            }\n        }else{\n            spaces\
    \ = 0\n            newText += char\n        }\n    }\n    return newText\n}",
  "    return text.replace(/\\s/g,\"_\").replace(/_+/g, function(m){return m.length\
    \ > 1 ? '-' : '_'});\n}", "   if (text.split(' ').length == 1){\n      return\
    \ text\n   }\n   else if (text.split(' ').length == 2){\n      return text.replace('\
    \ ', '_')\n   }\n   else if (text.split(' ').length > 2){\n      return text.replace('\
    \ ', '_').replace('  ', '-')\n   }\n}\n", "    text = text.trim();\n    let answer\
    \ = \"\";\n    let count = 0;\n    for(let i = 0; i < text.length; i++){\n   \
    \     if(text[i] == \" \"){\n            count++;\n            if(count == 2){\n\
    \                answer += \"-\";\n            }\n        }else{\n           \
    \ answer += text[i];\n            count = 0;\n        }\n    }\n    return answer;\n\
    }\n", "    var spaces = \" \";\n    text = text.replace(spaces, \"_\");\n    text\
    \ = text.replace(spaces+spaces, \"_\");\n    text = text.replace(spaces+spaces+spaces,\
    \ \"-\");\n    return text;\n}\n", "    var  text = text.replace(/\\s/g, '_');\n\
    \    console.log(text);\n}\nfix_spaces(\" Example 1\");\nfix_spaces(\" Example\
    \ 2\");\nfix_spaces(\" Example 3\");", "  text = text.trim();\n  text = text.replace(/\
    \ /g, \"_\");\n  var changedText = text.replace(/_+/g, \"-\");\n  return changedText;\n\
    }\n", "    let res = text.replace(/\\s{2,}/g, \"-\");\n    res = res.replace(/\\\
    s/g, \"_\");\n    return res;\n}", "    var result=text.replace(/ /g,\"_\");\n\
    \    result=result.replace(/__/g,\"-\");\n    return result;\n}\n", "    return\
    \ text.replace(/  +/g, \"-\").replace(/ /g, \"_\");\n}\n", "    let result = '';\n\
    \    let temp = '';\n    for(let i = 0; i < text.length; i++){\n        if(text[i]\
    \ !== ' ') result += text[i];\n        else {\n            temp += text[i];\n\
    \            if(temp.length > 2) result += '-';\n            else result += '_';\n\
    \        }\n    }\n    return result;\n}", "\tif(text.trim().length == 0){\n\t\
    \treturn \"\"\n\t}\n\treturn text.trim().replace(/  +/g, '-').replace(/ /g, '_')\n\
    }\n", "    var i = text.indexOf(\" \");\n    if (i == -1){\n        return text;\n\
    \    }\n    return fix_spaces(text.replace(\"  \", \"-\").replace(\" \", \"_\"\
    ));\n}", "    var fixed_text = text;\n    fixed_text = fixed_text.replace(/\\\
    s/g, \"_\");\n    fixed_text = fixed_text.replace(/[_]{2,}/g, \"-\");\n    return\
    \ fixed_text;\n}\n", "\t// convert string to array and then back to a string\n\
    \treturn text.split(\" \").join(\"_\").replace(/__+/g, \"-\");\n}\n", "  let spaceFlag\
    \ = false;\n  let newStr = \"\";\n  for(let i = 0; i < text.length; i++){\n  \
    \  if(text[i] !== \" \"){\n      spaceFlag = false;\n      newStr += text[i];\n\
    \    }\n    else if(spaceFlag === false){\n      spaceFlag = true;\n      newStr\
    \ += \"_\";\n    }\n    else{\n      newStr += \"-\";\n    }\n  }\n  return newStr;\n\
    }", "    let text_count = text.split(\" \");\n    if (text_count.length === 2){\n\
    \        text = text.replace(\" \", \"_\");\n    }\n    else if (text_count.length\
    \ > 2){\n        text = text.replace(\" \", \"_\");\n        text = text.replace(\"\
    \  \", \"-\");\n    }\n    return text;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

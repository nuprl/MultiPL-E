name: HumanEval_140_fix_spaces
language: js
prompt: "//Given a string text, replace all spaces in it with underscores, \n// and\
  \ if a string has more than 2 consecutive spaces, \n// then replace all consecutive\
  \ spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n// >>> fix_spaces(\"\
  \ Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example 2\")\n// \"_Example_2\"\
  \n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\nfunction fix_spaces(text){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fix_spaces;\n  assert.deepEqual(candidate(\"Example\"),\"Example\");\n  assert.deepEqual(candidate(\"\
  Mudasir Hanif \"),\"Mudasir_Hanif_\");\n  assert.deepEqual(candidate(\"Yellow Yellow\
  \  Dirty  Fellow\"),\"Yellow_Yellow__Dirty__Fellow\");\n  assert.deepEqual(candidate(\"\
  Exa   mple\"),\"Exa-mple\");\n  assert.deepEqual(candidate(\"   Exa 1 2 2 mple\"\
  ),\"-Exa_1_2_2_mple\");\n}\n\ntest();"
completions: ["    var a = text.replace(/ /g, \"_\");\n    var b = a.replace(/_{2,}/g,\
    \ \"-\");\n    return b;\n}\n", "\treturn text.replace(/  +/g, '-').replace(/\
    \ /g, '_').replace(/^-/, '_')\n}\n", "    const regex_multiple_spaces = / {2,}/g;\n\
    \    return text.replace(regex_multiple_spaces, \"-\").replace(/ /g, \"_\");\n\
    }\n\n", "    text = text.trim()\n    if(text.length == 0) return text\n    let\
    \ newText = ''\n    let spaces = 0\n    for(let i = 0; i < text.length; i++){\n\
    \        let char = text[i]\n        if(char == ' '){\n            spaces++\n\
    \            if(spaces < 3){\n                newText += '_'\n            }else{\n\
    \                newText += '-'\n            }\n        }else{\n            spaces\
    \ = 0\n            newText += char\n        }\n    }\n    return newText\n}",
  "    return text.replace(/\\s/g,\"_\").replace(/_+/g, function(m){return m.length\
    \ > 1 ? '-' : '_'});\n}", "   if (text.split(' ').length == 1){\n      return\
    \ text\n   }\n   else if (text.split(' ').length == 2){\n      return text.replace('\
    \ ', '_')\n   }\n   else if (text.split(' ').length > 2){\n      return text.replace('\
    \ ', '_').replace('  ', '-')\n   }\n}\n", "    text = text.trim();\n    let answer\
    \ = \"\";\n    let count = 0;\n    for(let i = 0; i < text.length; i++){\n   \
    \     if(text[i] == \" \"){\n            count++;\n            if(count == 2){\n\
    \                answer += \"-\";\n            }\n        }else{\n           \
    \ answer += text[i];\n            count = 0;\n        }\n    }\n    return answer;\n\
    }\n", "    var spaces = \" \";\n    text = text.replace(spaces, \"_\");\n    text\
    \ = text.replace(spaces+spaces, \"_\");\n    text = text.replace(spaces+spaces+spaces,\
    \ \"-\");\n    return text;\n}\n", "    var  text = text.replace(/\\s/g, '_');\n\
    \    console.log(text);\n}\nfix_spaces(\" Example 1\");\nfix_spaces(\" Example\
    \ 2\");\nfix_spaces(\" Example 3\");", "  text = text.trim();\n  text = text.replace(/\
    \ /g, \"_\");\n  var changedText = text.replace(/_+/g, \"-\");\n  return changedText;\n\
    }\n", "    let res = text.replace(/\\s{2,}/g, \"-\");\n    res = res.replace(/\\\
    s/g, \"_\");\n    return res;\n}", "    var result=text.replace(/ /g,\"_\");\n\
    \    result=result.replace(/__/g,\"-\");\n    return result;\n}\n", "    return\
    \ text.replace(/  +/g, \"-\").replace(/ /g, \"_\");\n}\n", "    let result = '';\n\
    \    let temp = '';\n    for(let i = 0; i < text.length; i++){\n        if(text[i]\
    \ !== ' ') result += text[i];\n        else {\n            temp += text[i];\n\
    \            if(temp.length > 2) result += '-';\n            else result += '_';\n\
    \        }\n    }\n    return result;\n}", "\tif(text.trim().length == 0){\n\t\
    \treturn \"\"\n\t}\n\treturn text.trim().replace(/  +/g, '-').replace(/ /g, '_')\n\
    }\n", "    var i = text.indexOf(\" \");\n    if (i == -1){\n        return text;\n\
    \    }\n    return fix_spaces(text.replace(\"  \", \"-\").replace(\" \", \"_\"\
    ));\n}", "    var fixed_text = text;\n    fixed_text = fixed_text.replace(/\\\
    s/g, \"_\");\n    fixed_text = fixed_text.replace(/[_]{2,}/g, \"-\");\n    return\
    \ fixed_text;\n}\n", "\t// convert string to array and then back to a string\n\
    \treturn text.split(\" \").join(\"_\").replace(/__+/g, \"-\");\n}\n", "  let spaceFlag\
    \ = false;\n  let newStr = \"\";\n  for(let i = 0; i < text.length; i++){\n  \
    \  if(text[i] !== \" \"){\n      spaceFlag = false;\n      newStr += text[i];\n\
    \    }\n    else if(spaceFlag === false){\n      spaceFlag = true;\n      newStr\
    \ += \"_\";\n    }\n    else{\n      newStr += \"-\";\n    }\n  }\n  return newStr;\n\
    }", "    let text_count = text.split(\" \");\n    if (text_count.length === 2){\n\
    \        text = text.replace(\" \", \"_\");\n    }\n    else if (text_count.length\
    \ > 2){\n        text = text.replace(\" \", \"_\");\n        text = text.replace(\"\
    \  \", \"-\");\n    }\n    return text;\n}", "    let newText = text.replace(/\\\
    s+/g, '_')\n    return newText\n}", "\tvar newText = text.trim();\n\tnewText =\
    \ newText.replace(/ /g,\"_\");\n\tif(newText.indexOf(\"  \")>0){\n\t\tnewText\
    \ = newText.replace(/ /g,\"-\");\n\t}\n\treturn newText;\n}\n", "    // Write\
    \ your code here\n\n}\n\n", "  var result = \"\";\n  var new_text = text.trim();\n\
    \  for (var i = 0; i < new_text.length; i++) {\n    if (new_text[i] === \" \"\
    ) {\n      if (new_text[i + 1] === \" \") {\n        if (new_text[i + 2] === \"\
    \ \") {\n          result += \"-\";\n          while (new_text[i] === \" \") {\n\
    \            i++;\n          }\n        } else {\n          result += \"_\";\n\
    \        }\n      } else {\n        result += \"_\";\n      }\n    } else {\n\
    \      result += new_text[i];\n    }\n  }\n  return result;\n}\n", "    var text=\
    \ text.replace(/\\s{2,}/g, '-');\n    var text= text.replace(/\\s/g, '_');\n \
    \   return text;\n}", "    //your code here\n}\n", "  if(text.split(' ').length\
    \ === 2){\n    return text.replace(/ /g, '_');\n  } else if(text.split(' ').length\
    \ === 3){\n    return text.replace(/ /g, '_');\n  } else {\n    return text.replace(/\
    \ /g, '-');\n  }\n}", "  var text1 = text.replace(/\\s/g,\"_\");\n  var text2\
    \ = text1.replace(/____/g,\"-\");\n  return text2;\n  }\n", "    var string =\
    \ text.replace(/\\s/g, '_');\n    var array = string.split('');\n    var count\
    \ = 0;\n    for(var i = 0; i < array.length; i++){\n        if(array[i] == '_'){\n\
    \            count ++;\n        }\n        else{\n            count = 0;\n   \
    \     }\n        if(count == 3){\n            array[i] = '-';\n            count\
    \ = 0;\n        }\n    }\n    return array.join('');\n}", "  let splitted_text\
    \ = text.split(\" \");\n  let fixed_text = \"\";\n  for(let i = 0; i < splitted_text.length;\
    \ i++){\n    if(splitted_text[i] !== \"\"){\n      if(splitted_text[i].length\
    \ > 2){\n        fixed_text += \"-\" + splitted_text[i];\n      }else{\n     \
    \   fixed_text += \"_\" + splitted_text[i];\n      }\n    }\n  }\n  fixed_text\
    \ = fixed_text.substring(1);\n  return fixed_text;\n}", "  let result = \"\";\n\
    \  let space_count = 0;\n  for (let i = 0; i < text.length; i++){\n    if (text[i]\
    \ === \" \"){\n      space_count++;\n      if (space_count <= 2){\n        result\
    \ += \"_\";\n      }\n      else{\n        result += \"-\";\n      }\n    }\n\
    \    else{\n      result += text[i];\n      space_count = 0;\n    }\n  }\n  return\
    \ result;\n}\n", "\tvar txt=text.trim();\n\tvar arr=txt.split(' ');\n\tfor(var\
    \ i=0;i<arr.length;i++){\n\t\tif(arr[i]==''){\n\t\t\tarr[i]='-';\n\t\t}\n\t}\n\
    \tvar result=arr.join('_');\n\treturn result;\n}\n", "\n}\n", "    //Add your\
    \ code here\n}\n\n", "    let arr = text.split(\" \")\n    let result = \"\"\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] == \"\"){\n     \
    \       if(arr[i-1] == \"\"){\n                result += \"-\"\n            }\n\
    \            else{\n                result += \"_\"\n            }\n        }\n\
    \        else{\n            result += arr[i]\n        }\n    }\n    return result\n\
    }", "    let arr = text.split('');\n    let i = 0;\n    while(i < arr.length){\n\
    \        if(arr[i] == ' '){\n            if(arr[i+1] == ' '){\n              \
    \  arr[i] = '-';\n                while(arr[i+1] == ' '){\n                  \
    \  arr.splice(i+1, 1);\n                }\n            }else{\n              \
    \  arr[i] = '_';\n            }\n        }\n        i++;\n    }\n    return arr.join('');\n\
    }", "\treturn text.replace(/\\s+/g, '_');\n}\n", "    let splitArr = text.split(\"\
    \ \");\n    let array = [];\n    for(let i = 0; i < splitArr.length; i++){\n \
    \       if(splitArr[i] != \"\"){\n            array.push(splitArr[i]);\n     \
    \   }\n    }\n    let combined = array.join(\"_\");\n    if(combined.includes(\"\
    _\")){\n        let arr = combined.split(\"_\");\n        let newArr = [];\n \
    \       for(let i = 0; i < arr.length; i++){\n            if(arr[i] != \"\"){\n\
    \                newArr.push(arr[i]);\n            }\n        }\n        combined\
    \ = newArr.join(\"-\");\n    }\n    return combined;\n}\n", "    let textArray\
    \ = text.split(\" \");\n    let newTextArray = textArray.filter(item => item !==\
    \ \"\");\n    let count = 0;\n    let newString = newTextArray.map(item => {\n\
    \        if(count > 1){\n            count = 0;\n            return \"-\" + item;\n\
    \        } else if(item !== \"\"){\n            count += 1;\n            return\
    \ item;\n        }\n    }).join(\"_\");\n    return newString;\n}\n", "\tvar result\
    \ = \"\";\n\tvar count = 0;\n\tvar last = \"\";\n\tfor(var i = 0; i < text.length;\
    \ i++){\n\t\tif(text[i] == \" \"){\n\t\t\tcount++;\n\t\t\tlast = \" \";\n\t\t\
    }\n\t\telse if(text[i] != \" \"){\n\t\t\tif(count > 2){\n\t\t\t\tresult += \"\
    -\" + text[i];\n\t\t\t}\n\t\t\telse if(count == 2){\n\t\t\t\tresult += \"_\" +\
    \ text[i];\n\t\t\t}\n\t\t\telse if(count == 1){\n\t\t\t\tresult += last + text[i];\n\
    \t\t\t}\n\t\t\telse if(count == 0){\n\t\t\t\tresult += text[i];\n\t\t\t}\n\t\t\
    \tcount = 0;\n\t\t}\n\t}\n\treturn result;\n}\n", "    if (text.includes(\"  \"\
    )){\n        text=text.replace(/  /g,\"-\");\n    }\n    text=text.replace(/ /g,\"\
    _\");\n    return text;\n}", "\treturn text.replace(/ +/g, '-').replace(/^ +|\
    \ +$/g, '');\n}", "    var i=0;\n    while(i<text.length){\n        if(text[i]===\"\
    \ \"){\n            if(text[i+1]===\" \"){\n                var n=0;\n       \
    \         var j=i+1;\n                while(text[j]===\" \"){\n              \
    \      j++;\n                    n++;\n                }\n                if(n>2){\n\
    \                    text=text.slice(0,i+1)+\"-\"+text.slice(j);\n           \
    \     }\n                else if(n===2){\n                    text=text.slice(0,i+1)+\"\
    _\"+text.slice(j);\n                }\n            }\n            else{\n    \
    \            text=text.slice(0,i)+\"_\"+text.slice(i+1);\n            }\n    \
    \    }\n        i++;\n    }\n    if(text[0]===\" \"){\n        text=text.slice(1);\n\
    \    }\n    return text;\n}\n\n", "    return text.replace(/ /g, '_').replace(/\
    \ {2,}/g, '-');\n}\n", "    return;\n}\n", "  return text.trim().replace(/\\s+/g,\
    \ function(space){\n    if(space.length == 1){\n      return \"_\";\n    }\n \
    \   return \"-\";\n  });\n}\n\n", "    while(text.indexOf(\"  \") > -1){\n   \
    \     text = text.replace(\"  \", \"-\");\n    }\n    text = text.replace(\" \"\
    , \"_\");\n    return text;\n}\n", "    var regExp = /\\s/gi;\n    var textReplaced\
    \ = text.replace(regExp, '_');\n    var regExp2 = /_{2,}/gi;\n    return textReplaced.replace(regExp2,\
    \ '-');\n}\n", "    var newText = text.replace(/\\s+/g,'_');\n    var answer =\
    \ text.replace(/\\s+/g,'-');\n    if(newText.length<=2){\n        return newText;\n\
    \    }\n    else{\n        return answer;\n    }\n}\n", "    let newstr=text.replace(/[\\\
    s]{2,}/g,\"_\");\n    newstr=newstr.replace(/[\\s]/g,\"-\");\n    return newstr;\n\
    }", "    text = text.replace(/ /g, \"_\");\n    return text.replace(/_/g, \"-\"\
    );\n}", "    let arr = text.split(\"\");\n    let i = 0;\n    let counter = 0;\n\
    \    while(arr[i] == \" \"){\n        arr[i] = \"\";\n        i++;\n    }\n  \
    \  for(let j = 0; j < arr.length; j++){\n        if(arr[j] == \" \"){\n      \
    \      counter++;\n        }\n        else{\n            counter = 0;\n      \
    \  }\n        if(counter == 2){\n            arr[j] = \"-\";\n        }\n    \
    \    else if(counter > 2){\n            arr[j] = \"\";\n        }\n        else{\n\
    \            arr[j] = arr[j];\n        }\n    }\n    return arr.join(\"\");\n}",
  "    var new_text = text.replace(/\\s+/g, ' ');\n    new_text = new_text.replace(/\\\
    s/g, '_');\n    new_text = new_text.replace(/__/g, '-');\n    return new_text;\n\
    }", "    var fixed_text = text.trim();\n    var split_text = fixed_text.split(\"\
    \ \");\n    if (split_text.length < 3){\n        fixed_text = split_text.join(\"\
    _\");\n    } else {\n        fixed_text = split_text.join(\"-\");\n    }\n   \
    \ return fixed_text;\n}", "    var myRegExp = /[ ]{2,}/g; //look for more than\
    \ 2 spaces in a row\n    var replacedText = text.replace(myRegExp, '-'); //replace\
    \ those with a dash\n    var myRegExp = /[ ]/g; //look for any spaces\n    var\
    \ finalText = replacedText.replace(myRegExp, '_'); //replace those with an underscore\n\
    \    return finalText;\n}\n", "\tvar space = \"\";\n\tfor (var i = 0; i < text.length;\
    \ i++) {\n\t\tif (text[i] == \" \"){\n\t\t\tspace += \"_\";\n\t\t}\n\t\telse if\
    \ (text[i] == \"-\"){\n\t\t\tspace += \"-\";\n\t\t}\n\t\telse{\n\t\t\tspace +=\
    \ text[i];\n\t\t}\n\t}\n\tvar underscore = space.replace(/__/g, \"-\");\n\treturn\
    \ underscore;\n}", "    let newString = \"\";\n    let hold = \"\";\n    let lastChar\
    \ = \"\";\n    for(let i = 0; i < text.length; i++){\n        if(text[i] == \"\
    \ \"){\n            if(hold == \" \"){\n                newString += \"-\";\n\
    \                hold = \"\";\n            }else{\n                hold = \" \"\
    ;\n            }\n        }else{\n            if(hold == \" \"){\n           \
    \     newString += \"_\";\n                hold = \"\";\n            }\n     \
    \       newString += text[i];\n        }\n    }\n    return newString;\n}", "\t\
    text=text.replace(/\\s+/g,\"_\")\n\treturn text\n}", "\tvar count = 0;\n\tvar\
    \ result = \"\";\n\tfor(var i = 0; i < text.length; i++){\n\t\tif(text[i] ===\
    \ \" \"){\n\t\t\tcount++;\n\t\t\tif(count >= 2){\n\t\t\t\tresult += \"-\";\n\t\
    \t\t}\n\t\t}\n\t\telse{\n\t\t\tcount = 0;\n\t\t\tresult += text[i];\n\t\t}\n\t\
    }\n\treturn result;\n}", "    //var text = \"Example\";\n    //var text = \"Example\
    \ 1\";\n    //var text = \"Example 2\";\n    //var text = \"Example 3\";\n   \
    \ var text = text.trim();\n    var text = text.replace(/ /g, \"_\");\n    var\
    \ space = text.match(/_{2,}/g);\n    if (space) {\n        space.forEach(function(item){\n\
    \            var a = text.match(/_{2,}/g);\n            text = text.replace(a,\
    \ \"-\");\n        });\n    }\n    console.log(text);\n}\n", "    text = text.replace(\"\
    \  \", \"-\");\n    text = text.replace(\" \", \"_\");\n    text = text.replace(\"\
    _ \", \"_\");\n    return text;\n}", "    var str = \"\";\n    var space = 0;\n\
    \    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n  \
    \          space++;\n            if(space > 2){\n                str += \"-\"\
    ;\n            }else{\n                str += \"_\";\n            }\n        }else{\n\
    \            str += text[i];\n            space = 0;\n        }\n    }\n    return\
    \ str;\n}", "    var newstr = text.replace(/\\s+/g, '_');\n    return newstr;\n\
    }\n", "    var newText = text.replace(/\\s+/g, '_');\n    console.log(newText);\n\
    }\n\nfix_spaces(\" Example 3\");\n", "    var new_text = \"\";\n    var space_count\
    \ = 0;\n    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"\
    ){\n            space_count += 1;\n            if(space_count > 2){\n        \
    \        new_text += \"-\";\n            }\n            else{\n              \
    \  new_text += \"_\";\n            }\n        }\n        else{\n            space_count\
    \ = 0;\n            new_text += text[i];\n        }\n    }\n    return new_text;\n\
    }\n", "  let result = text.replace(/\\s+/g, '_')\n  return result\n}", "\t\n\t\
    var newText = text.replace(/  +/g, '-');\n\treturn newText.replace(/ /g, '_');\n\
    }\n", "    var text1 = text.trim();\n    if (text1.length < 3){\n        return\
    \ text1.replace(/ /g,\"_\");\n    }\n    var arr = text1.split('');\n    if (arr[2]\
    \ === ' '){\n        return arr.slice(0,2).join('').replace(/ /g,\"_\") + '_'\
    \ + arr.slice(3).join('').replace(/ /g,\"-\");\n    }\n    return arr.slice(0,2).join('').replace(/\
    \ /g,\"_\") + arr.slice(2).join('').replace(/ /g,\"_\");\n}\n", "    var count\
    \ = 0;\n    var new_text = \"\";\n    for(var i = 0; i < text.length; i++){\n\
    \        if(text[i] == \" \"){\n            count ++;\n            if(count ==\
    \ 1){\n                new_text += \"_\";\n            }\n            else if(count\
    \ == 2){\n                new_text += \"_\";\n            }\n            else\
    \ if(count > 2){\n                new_text += \"-\";\n            }\n        }\n\
    \        else{\n            count = 0;\n            new_text += text[i];\n   \
    \     }\n    }\n    return new_text;\n}\n", "    var n = text.replace(/\\s/g,\
    \ \"_\");\n    var k = n.replace(/___/g, \"-\");\n    return k;\n}\n", "\tvar\
    \ str = '';\n\tvar space = text.split(' ');\n\tfor(i=0; i< space.length; i++){\n\
    \t\tif(space[i] != ''){\n\t\t\tif(space[i+1] == '' && space[i+2] == ''){\n\t\t\
    \t\tstr += space[i] + '-';\n\t\t\t}\n\t\t\telse if(space[i+1] == ''){\n\t\t\t\t\
    str += space[i] + '_';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tstr += space[i] + ' ';\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n", "\treturn text.replace(/ /g, function(x){\n\
    \t\tif(x === ' '){\n\t\t\treturn '_';\n\t\t}\n\t\telse{\n\t\t\treturn '-';\n\t\
    \t}\n\t});\n}\n", "    for(var i = 0; i < text.length; i++){\n        var text\
    \ = text.replace(\" \", \"_\");\n        var text = text.replace(\"  \", \"_\"\
    );\n        var text = text.replace(\"   \", \"-\");\n    }\n    return text;\n\
    }", "    // You code here\n    return text.replace(/\\s/g, \"_\").replace(/[_]{2,}/g,\
    \ \"-\");\n}\n", "    var newText = text.replace(/ /g, \"_\");\n    return newText.replace(/_{2,}/g,\
    \ \"-\");\n}\n", "    var count = 0;\n    var output = \"\";\n    for(var x =\
    \ 0; x < text.length; x++){\n        if(text[x] == \" \"){\n            count++;\n\
    \            if(count > 2){\n                output += \"-\";\n            }\n\
    \            else{\n                output += \"_\";\n            }\n        }\n\
    \        else{\n            count = 0;\n            output += text[x];\n     \
    \   }\n    }\n    return output;\n}\n", "    text = text.replace(/ /g,\"_\");\n\
    \    var arr = text.split(\"\");\n    var space = 0;\n    for(i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] == \"_\"){\n            space++;\n        }else{\n\
    \            space = 0;\n        }\n        if(space == 2){\n            arr[i]\
    \ = \"-\";\n        }\n    }\n    return arr.join(\"\");\n}", "    let i = 0;\n\
    \    let cnt = 0;\n    let result = '';\n    while(i < text.length){\n       \
    \ if(text[i] === ' '){\n            cnt++;\n            if(cnt > 2){\n       \
    \         result += '-';\n                while(text[i] === ' '){\n          \
    \          i++;\n                }\n                cnt = 0;\n            }\n\
    \            else{\n                result += '_';\n            }\n        }\n\
    \        else{\n            result += text[i];\n        }\n        i++;\n    }\n\
    \    return result;\n}", "    var regex = / /gi;\n    var repeat = / {2,}/gi;\n\
    \    text = text.replace(regex, \"_\");\n    text = text.replace(repeat, \"-\"\
    );\n    return text;\n}\n", "    let spaces=text.split(\" \");\n    let result=spaces[0];\n\
    \    let count=0;\n    for(let i=1;i<spaces.length;i++){\n        if(spaces[i]!==\"\
    \"){\n            result=result+\"_\"+spaces[i];\n            count=0;\n     \
    \   }\n        else{\n            count++;\n            if(count==1){\n      \
    \          result=result+\"_\";\n            }\n            else if(count==2){\n\
    \                result=result+\"-\";\n            }\n        }\n    }\n    return\
    \ result;\n}", "    let count = 0;\n    let result = '';\n    for(let i = 0; i\
    \ < text.length; i++){\n        if(text[i] === ' '){\n            if(text[i+1]\
    \ === ' '){\n                if(count < 2){\n                    result += '_';\n\
    \                    count++;\n                }\n                else{\n    \
    \                result += '-';\n                }\n            }\n          \
    \  else{\n                result += '_';\n                count = 0;\n       \
    \     }\n        }\n        else{\n            result += text[i];\n        }\n\
    \    }\n    return result;\n}\n", "    var count = 0;\n    var temp = \"\";\n\
    \    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n  \
    \          count++;\n            if(count >= 3){\n                temp += \"-\"\
    ;\n                count = 0;\n            }\n            else{\n            \
    \    temp += \"_\";\n            }\n        }\n        else{\n            temp\
    \ += text[i];\n            count = 0;\n        }\n    }\n    return temp;\n}\n\
    \n", "  var result = text.replace(/ +/g, \"_\");\n  return result;\n}", "    //write\
    \ your code here\n    let res = text;\n    for(let i = 0; i < res.length; i++){\n\
    \        if(res[i] === ' ' && res[i-1] !== ' ' && res[i+1] !== ' '){\n       \
    \     res = res.replace(res[i], '_');\n        }\n        if(res[i] === ' ' &&\
    \ res[i-1] === ' ' && res[i+1] === ' '){\n            res = res.replace(res[i],\
    \ '-');\n        }\n    }\n    return res;\n}\n", "\tif (text.length < 2){\n\t\
    \treturn text.replace(\" \", \"_\");\n\t}\n\tif (text.charAt(0) == \" \"){\n\t\
    \treturn \"_\" + fix_spaces(text.substring(1));\n\t}\n\tif (text.charAt(0) ==\
    \ \" \" && text.charAt(1) == \" \"){\n\t\treturn \"_\" + fix_spaces(text.substring(1));\n\
    \t}\n\tif (text.charAt(0) == \" \" && text.charAt(1) == \" \" && text.charAt(2)\
    \ == \" \"){\n\t\treturn \"_\" + fix_spaces(text.substring(1));\n\t}\n\treturn\
    \ text.charAt(0) + fix_spaces(text.substring(1));\n}\n", "    var cnt = 0;\n \
    \   var result = \"\";\n    for(var i = 0; i < text.length; i++){\n        if(text[i]\
    \ === \" \"){\n            cnt += 1;\n            if(cnt > 2){\n             \
    \   result += \"-\";\n            }\n            else{\n                result\
    \ += \"_\";\n            }\n        }\n        else{\n            result += text[i];\n\
    \            cnt = 0;\n        }\n    }\n    return result;\n}", "    let output\
    \ = \"\";\n    let count = 0;\n    for(let i = 0; i < text.length; i++){\n   \
    \     if(text[i] != \" \"){\n            output += text[i];\n            count\
    \ = 0;\n        }else{\n            count++;\n            if(count == 1){\n  \
    \              output += \"_\";\n            }else if(count == 2){\n         \
    \       output += \"_\";\n            }else{\n                output += \"-\"\
    ;\n            }\n        }\n    }\n    return output;\n}\n", "    var newText\
    \ = text.replace(/ /g, '_');\n    var trimText = newText.trim();\n    var finalText\
    \ = trimText.replace(/__/g, '-');\n    console.log(finalText);\n}\n", "    text\
    \ = text.trim();\n    var result = \"\";\n    for(var i = 0; i < text.length;\
    \ i++){\n        if(text[i] == \" \"){\n            result += \"_\";\n       \
    \ }else{\n            result += text[i];\n        }\n    }\n    var list = result.split(\"\
    _\");\n    var answer = list[0];\n    var marker = 0;\n    var previous;\n   \
    \ for(var i = 1; i < list.length; i++){\n        if(list[i] != \"\"){\n      \
    \      if(previous == \"\"){\n                answer += \"-\";\n            }else{\n\
    \                answer += \"_\";\n            }\n            answer += list[i];\n\
    \        }\n        previous = list[i];\n    }\n    return answer;\n}\n\n", "\n\
    }\n", "\tvar result = text.replace(/\\s/g,\"_\");\n\tresult = result.replace(/__/g,\"\
    -\");\n\treturn result;\n}\n", "    let st = text.trim();\n    let arr = st.split('\
    \ ');\n    let str = arr.join('_');\n    return str;\n}\n", "    var text = text.replace(/\\\
    s/g, '_');\n    return text;\n}", "    var result = text.trim().replace(/\\s/g,\
    \ \"_\");\n    var result2 = result.replace(/__/g, \"-\");\n    return result2;\n\
    }\n\n", "    return text.replace(/\\s{2,}/g, '-').replace(/ /g, '_');\n}\n", " \
    \   var fixed_text = text.replace(/  +/g, \" \").replace(/ /g, \"_\").replace(/\
    \ +/g, \"-\");\n    console.log(fixed_text);\n}\n\nfix_spaces(\" Example\");\n\
    fix_spaces(\" Example 1\");\nfix_spaces(\" Example 2\");\nfix_spaces(\" Example\
    \ 3\");", "    let result = text;\n    for(let i = 0; i < result.length; i++){\n\
    \        if(result[i] == \" \"){\n            result = result.replace(\" \", \"\
    _\");\n        }\n    }\n    for(let i = 0; i < result.length; i++){\n       \
    \ if(result[i] == \"_\" && result[i+1] == \"_\"){\n            result = result.replace(\"\
    __\", \"-\");\n        }\n    }\n    return result;\n}", "    //return text.replace(/\
    \ /g, \"_\").replace(/__/g, \"_\").replace(/___/g, \"-\");\n    return text.replace(/\\\
    s{3,}/g, \"-\").replace(/\\s/g, \"_\");\n}\n\n", "    let new_text = text.replace(/\
    \ +/g, \"_\")\n    if (new_text.length - text.length > 1){\n        new_text =\
    \ new_text.replace(/_/g, \"-\")\n    }\n    return new_text;\n}", "    var newText\
    \ = text.replace(/  +/g, '-');\n    newText = newText.replace(/ /g, '_');\n  \
    \  return newText;\n}", "    let text_words = text.split(\" \");\n    let text_fixed\
    \ = [];\n    for (let i = 0; i < text_words.length; i++){\n        if (text_words[i]\
    \ !== \"\"){\n            text_fixed.push(text_words[i]);\n        }\n    }\n\
    \    text_fixed = text_fixed.join(\"_\");\n    text_fixed = text_fixed.replace(/_+/g,\
    \ \"-\");\n    text_fixed = text_fixed.replace(/^-+/, \"\");\n    return text_fixed;\n\
    }\n", "  var counter = 0;\n  for(var i = 0; i < text.length; i++){\n    if(text[i]\
    \ == \" \"){\n      counter = 0;\n      while(text[i] == \" \"){\n        counter++;\n\
    \        i++;\n      }\n      i--;\n      if(counter > 2){\n        text = text.slice(0,i)\
    \ + \"-\" + text.slice(i+counter);\n      }\n      else{\n        text = text.slice(0,i)\
    \ + \"_\" + text.slice(i+counter);\n      }\n    }\n  }\n  return text;\n}\n",
  "    var t_arr = text.split('');\n    for(var i = 0; i < t_arr.length; i++){\n \
    \       if(t_arr[i] === ' '){\n            t_arr[i] = '_';\n        }\n    }\n\
    \    text = t_arr.join('');\n    var arr = text.split('');\n    for(var j = 0;\
    \ j < arr.length; j++){\n        if(arr[j] === '_' && arr[j+1] === '_' && arr[j+2]\
    \ === '_'){\n            arr[j] = '-';\n            arr[j+1] = '';\n         \
    \   arr[j+2] = '';\n        }\n    }\n    return arr.join('');\n}\n", "    const\
    \ textArr = text.split(\"\");\n    for(let i = 0; i < textArr.length; i++){\n\
    \        if(textArr[i] === \" \"){\n            if(textArr[i-1] !== \" \" && textArr[i+1]\
    \ !== \" \"){\n                textArr[i] = \"_\";\n            }\n          \
    \  else if(textArr[i-1] === \" \" && textArr[i+1] === \" \"){\n              \
    \  textArr[i] = \"-\";\n            }\n        }\n    }\n    return textArr.join(\"\
    \");\n}", "    var fixed = text.trim();\n    fixed = fixed.replace(/ +/g, '_');\n\
    \    fixed = fixed.replace(/_+/g, '-');\n    return fixed;\n}", "    let newText\
    \ = \"\";\n    let count = 0;\n    for(let i = 0; i < text.length; i++){\n   \
    \     if(text[i] === \" \"){\n            count++;\n            if(count === 1){\n\
    \                newText += \"_\";\n            }\n            else if(count ===\
    \ 2){\n                newText += \"_\";\n            }\n            else if(count\
    \ === 3){\n                newText += \"-\";\n            }\n        }\n     \
    \   else{\n            newText += text[i];\n            count = 0;\n        }\n\
    \    }\n    return newText;\n}\n", "    text = text.replace(/\\s{2,}/g, '-');\n\
    \    text = text.replace(/\\s/g, '_');\n    return text;\n}\n", "    var newtext\
    \ = text.replace(/ /g,\"_\")\n    newtext = newtext.replace(/__/g,\"_\")\n   \
    \ newtext = newtext.replace(/__/g,\"-\")\n    return newtext\n}", "\tvar result\
    \ = text;\n\tresult = result.replace(/\\s/g, \"_\");\n\tresult = result.replace(/_{3,}/g,\
    \ \"-\");\n\treturn result;\n}\n", "    var noSpaces = text.replace(/\\s/g, '_');\n\
    \    var spaces = noSpaces.replace(/_{2,}/g, '-');\n    return spaces;\n};", " \
    \   if(text.length > 0){\n        text = text.trim()\n        let count = 0;\n\
    \        let space = ' ';\n        let i = 0;\n        while(i < text.length){\n\
    \            if(text[i] === space){\n                count++;\n              \
    \  if(count >= 3){\n                    text = text.replace(space, '-');\n   \
    \                 count = 0;\n                }\n                else{\n     \
    \               text = text.replace(space, '_');\n                }\n        \
    \    }\n            else{\n                count = 0;\n            }\n       \
    \     i++;\n        }\n    }\n    return text;\n}\n", "\tvar space_count = 0;\n\
    \tvar fixed_text = \"\";\n\tfor(var i = 0; i < text.length; i++){\n\t\tif(text[i]\
    \ == \" \"){\n\t\t\tspace_count += 1;\n\t\t\tif(space_count > 2){\n\t\t\t\tfixed_text\
    \ += \"-\";\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfixed_text += \"_\";\n\t\t\t}\n\t\t\
    }\n\t\telse{\n\t\t\tspace_count = 0;\n\t\t\tfixed_text += text[i];\n\t\t}\n\t\
    }\n\treturn fixed_text;\n}", "  text = text.trim();\n  while(text.indexOf(\" \
    \ \") !== -1){\n    text = text.replace(\"  \", \" \");\n  }\n  while(text.indexOf(\"\
    \ \") !== -1){\n    text = text.replace(\" \", \"_\");\n  }\n  while(text.indexOf(\"\
    __\") !== -1){\n    text = text.replace(\"__\", \"-\");\n  }\n  return text;\n\
    }\n", "    newText = text.replace(/\\s{2,}/g, '-');\n    return newText.replace(/\\\
    s/g, '_');\n}\n", "    let arr = text.split('');\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] == ' '){\n            arr[i] = '_';\n        }\n  \
    \  }\n    console.log(arr.join(''));\n}\n", "    var arr = text.split(\" \");\n\
    \    var i;\n    for(i = 0; i < arr.length; i++){\n        if(arr[i] == \"\"){\n\
    \            arr[i] = \"_\";\n        }\n    }\n    for(i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] == \"_\" && arr[i+1] == \"_\"){\n            arr[i]\
    \ = \"-\";\n        }\n    }\n    arr = arr.join(\"\");\n    return arr;\n}",
  "  var textNoSpace = text.replace(/ /g, \"_\");\n  var textNoSpace2 = textNoSpace.replace(/__/g,\
    \ \"-\");\n  return textNoSpace2;\n}\n", "  text = text.replace(/ /g, \"_\");\n\
    \  text = text.replace(/_+/g, \"-\");\n  return text;\n}\n", "    while(text.includes(\"\
    \  \")){\n        text = text.replace(\"  \", \"-\");\n    }\n    return text.replace(\"\
    \ \", \"_\");\n}\n\n\n", "\tvar string = text;\n\tvar split_string = string.split('\
    \ ');\n\tfor(var i = 0; i < split_string.length; i++){\n\t\tif(split_string[i]\
    \ != ''){\n\t\t\tvar fixed_string = split_string[i];\n\t\t\t// console.log(fixed_string);\n\
    \t\t\tfor(var j = i + 1; j < split_string.length; j++){\n\t\t\t\tif(split_string[j]\
    \ != ''){\n\t\t\t\t\tvar fixed_string = fixed_string + '_' + split_string[j];\n\
    \t\t\t\t\t// console.log(fixed_string);\n\t\t\t\t\ti = j;\n\t\t\t\t}\n\t\t\t}\n\
    \t\t\treturn fixed_string;\n\t\t}\n\t}\n}\n", "  let splits = text.split(\" \"\
    );\n  let result = \"\";\n  let count = 0;\n  for(let i = 0; i < splits.length;\
    \ i++){\n    if(splits[i] != \"\"){\n      if(count == 0){\n        result +=\
    \ splits[i];\n      }else if(count == 1){\n        result += \"_\" + splits[i];\n\
    \      }else if(count == 2){\n        result += \"_\" + splits[i];\n      }else{\n\
    \        result += \"-\" + splits[i];\n      }\n      count = 0;\n    }else{\n\
    \      count++;\n    }\n  }\n  return result;\n}", "  if (text.match(/  /g)){\n\
    \    var formattedText = text.replace(/  /g, \"-\");\n    console.log(formattedText);\n\
    \  } else {\n    var formattedText = text.replace(/ /g, \"_\");\n    console.log(formattedText);\n\
    \  }\n}\n", "    let empty_space_count = 0;\n    for(let i = 0; i < text.length;\
    \ i++){\n        if(text[i] == \" \"){\n            empty_space_count ++;\n  \
    \      }\n    }\n    if(empty_space_count >= 2){\n        let new_text = text.replace(/\
    \ /g,\"-\");\n        return new_text;\n    }\n    else{\n        let new_text\
    \ = text.replace(/ /g,\"_\");\n        return new_text;\n    }\n}", "    var list\
    \ = text.split(\" \");\n    var new_text = \"\";\n    for (var i = 0; i < list.length;\
    \ i++){\n        if (list[i] != \"\"){\n            if (i == 0){\n           \
    \     new_text += list[i];\n            } else if (i == 1){\n                new_text\
    \ += \"_\" + list[i];\n            } else if (i == 2){\n                new_text\
    \ += \"_\" + list[i];\n            } else {\n                new_text += \"-\"\
    \ + list[i];\n            }\n        }\n    }\n    return new_text;\n}\n", " \
    \   var space = text.indexOf(\" \");\n    var space2 = text.indexOf(\"  \");\n\
    \    if (space < 0){\n        return text;\n    }\n    else if (space > 0 && space2\
    \ < 0){\n        return text.replace(\" \", \"_\");\n    }\n    else if (space2\
    \ > 0){\n        return text.replace(\"  \", \"-\");\n    }\n    else{\n     \
    \   return text;\n    }\n}", "\n}\n", "    var result = '';\n    var last_char\
    \ = '';\n    var char = '';\n    var flag = 0;\n    for(var i = 0; i < text.length;\
    \ i++){\n        char = text[i];\n        if(char === ' '){\n            if(last_char\
    \ !== char){\n                result += '_';\n            }else{\n           \
    \     flag += 1;\n                if(flag === 2){\n                    result\
    \ += '-';\n                }\n            }\n        }else{\n            result\
    \ += char;\n            flag = 0;\n        }\n        last_char = char;\n    }\n\
    \    return result;\n}\n", "    let output = '';\n    let spacesCount = 0;\n \
    \   for(let i = 0; i < text.length; i++){\n        if(text[i] == ' '){\n     \
    \       spacesCount++;\n            output += '_';\n        }\n        else{\n\
    \            if(spacesCount >= 3){\n                output += '-';\n         \
    \   }\n            output += text[i];\n            spacesCount = 0;\n        }\n\
    \    }\n    return output;\n}\n", "    var space = /\\s/g;\n    text = text.replace(space,\
    \ \"_\");\n    var mlt_space = /_{2,}/g;\n    text = text.replace(mlt_space, \"\
    -\");\n    return text;\n}\n", "    text = text.trim();\n    let newText = text.replace(/\\\
    s/g, '_');\n    let newText2 = newText.replace(/__/g, '_');\n    let newText3\
    \ = newText2.replace(/___/g, '-');\n    return newText3;\n}\n\n\n", "\treturn\
    \ text.replace(/\\s+/g, '_').replace(/_+/g, '_');\n}\n", "    if(text.length >\
    \ 2){\n      let temp = text.replace(/ /g, '_');\n      return temp.replace(/_+/g,\
    \ '-');\n    }\n  }\n  \n  console.log(fix_spaces(\" Example\")) // \"Example\"\
    \n  console.log(fix_spaces(\" Example 1\")) // \"Example_1\"\n  console.log(fix_spaces(\"\
    \ Example 2\")) // \"_Example_2\"\n  console.log(fix_spaces(\" Example 3\")) //\
    \ \"_Example-3\"\n  \n  //Given an array of numbers, check if any of the numbers\
    \ are the character codes for lower case vowels \n  // (a, e, i, o, u). If they\
    \ are, change the array value to a string of that vowel. \n  // Return the resulting\
    \ array.\n  // Ex. [118,117,120,121,117,98,122,97,120,106,104,116,113,114,113,120,106]\n\
    \  // [\"u\", \"u\", \"x\", \"y\", \"u\", \"b\", \"z\", \"a\", \"x\", \"j\", \"\
    h\", \"t\", \"q\", \"r\", \"q\", \"x\", \"j\"]\n  function replace_vowels(numbers){\n\
    \      let newArr = []\n      numbers.forEach(element => {\n          if(element\
    \ === 118){\n              newArr.push('u')\n          } else if(element === 117){\n\
    \              newArr.push('u')\n          } else if(element === 120){\n     \
    \         newArr.push('x')\n          } else if(element === 121){\n          \
    \    newArr.push('y')\n          } else if(element === 98){\n              newArr.push('b')\n\
    \          } else if(element === 122){\n              newArr.push('z')\n     \
    \     } else if(element === 97){\n              newArr.push('a')\n          }\
    \ else if(element === 106){\n              newArr.push('j')\n          } else\
    \ if(element === 104){\n              newArr.push('h')\n          } else if(element\
    \ === 116){\n              newArr.push('t", "    // if (typeof text === \"string\"\
    ){\n    //     text = text.replace(/(\\s+)/g,function(match, p1){return p1.length\
    \ >2 ? \"-\" : \"_\";});\n    //     return text;\n    // }\n    return typeof\
    \ text === \"string\" ? text.replace(/(\\s+)/g,function(match, p1){return p1.length\
    \ >2 ? \"-\" : \"_\";}) : text;\n}\n", "    var res = '';\n    var prev = '';\n\
    \    for(var i = 0; i < text.length; i++){\n        if(text[i] == ' '){\n    \
    \        if(prev == ' '){\n                res += '-';\n            }\n      \
    \      else{\n                res += '_';\n            }\n        }\n        else{\n\
    \            res += text[i];\n        }\n        prev = text[i];\n    }\n    return\
    \ res;\n}", "    text = text.trim();\n    text = text.replace(/\\s{2,}/g, '-');\n\
    \    text = text.replace(/\\s/g, '_');\n    return text;\n}", "    var newText\
    \ = text.replace(/ /g, '_');\n    if (newText.indexOf('_') != -1) {\n        if\
    \ (newText.indexOf('__') != -1) {\n            var newText = newText.replace(/__/g,\
    \ '-');\n        }\n    }\n    return newText;\n}\n\n", "    var text_split =\
    \ text.split(\" \");\n    var output = \"\";\n    var i;\n    for (i = 0; i <\
    \ text_split.length; i++){\n        if (text_split[i] != \"\"){\n            output\
    \ += text_split[i];\n            if (i != text_split.length - 1){\n          \
    \      output += \"_\";\n            }\n        }\n    }\n    return output;\n\
    }\n", "    //...\n}\n", "\tvar fix=text.replace(/ /g,\"_\");\n\tvar fix2=fix.replace(/__/g,\"\
    _\");\n\tvar fix3=fix2.replace(/___/g,\"-\");\n\treturn fix3;\n}\n", "    let\
    \ result = '';\n    let spaceCount = 0;\n    for(let i = 0; i < text.length; i++){\n\
    \        if(text[i] !== ' '){\n            result += text[i];\n            spaceCount\
    \ = 0;\n        }\n        else{\n            spaceCount++;\n            if(spaceCount\
    \ > 2){\n                result += '-';\n            }\n            else{\n  \
    \              result += '_';\n            }\n        }\n    }\n    return result;\n\
    }", "    return text.replace(/ +/g, ' ').replace(/ /g, '_').replace(/__+/g, '-');\n\
    }\n", "    var fixed_spaces = text.replace(/ /g, \"_\");\n    fixed_spaces = fixed_spaces.replace(/__/g,\
    \ \"-\");\n    return fixed_spaces;\n}", "    while(text.indexOf(\"  \") != -1){\n\
    \        text = text.replace(\"  \", \"-\");\n    }\n    return text.replace(\"\
    \ \", \"_\");\n}\n", "    let count = 0;\n    for(let i = 0; i < text.length;\
    \ i++){\n        if(text[i] == \" \"){\n            count += 1;\n        }\n \
    \       else{\n            count = 0;\n        }\n        if(count > 2){\n   \
    \         text = text.replace(\" \", \"-\");\n        }\n    }\n    if(count ==\
    \ 0){\n        return text;\n    }\n    else{\n        text = text.replace(\"\
    \ \", \"_\");\n        return text;\n    }\n}\n", "    var res = \"\";\n    for(var\
    \ i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n            res\
    \ += \"_\";\n        }\n        else{\n            res += text[i];\n        }\n\
    \    }\n    return res;\n}", "\tvar textArray = text.split(\" \");\n\tvar newString\
    \ = \"\";\n\tfor (var i = 0; i < textArray.length; i++) {\n\t\tvar a = textArray[i];\n\
    \t\tif (a.length > 0) {\n\t\t\tnewString += a;\n\t\t\tif (i < textArray.length\
    \ - 1) {\n\t\t\t\tnewString += \"_\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (i < textArray.length\
    \ - 2) {\n\t\t\t\tnewString += \"-\";\n\t\t\t}\n\t\t}\n\t}\n\treturn newString;\n\
    }\n\n", "    text = text.trim();\n    return text.replace(/\\s/g, '_').replace(/_+/g,\
    \ '-');\n}\n\n", "\tvar space = \" \";\n\tvar result = \"\";\n\tfor (var i = 0;\
    \ i < text.length; i++) {\n\t\tif (text[i] != space) {\n\t\t\tresult += text[i];\n\
    \t\t}\n\t\telse if (text[i] == space && i == 0) {\n\t\t\tresult += text[i];\n\t\
    \t}\n\t\telse if (text[i] == space && i == 1) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 2) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 3) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 4) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 5) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 6) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 7) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 8) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 9) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 10) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 11) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 12) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse if (text[i] == space && i == 13) {\n\t\t\tresult += text[i];\n\t\t\
    }\n\t\telse", "    return text.trim().replace(/\\s+/g, (m) => {\n        if(m.length\
    \ > 2){\n            return '-';\n        }else{\n            return '_';\n  \
    \      }\n    });\n}\n", "  let ret = text.replace(/\\s+/g, ' ');\n  ret = ret.replace(/^\
    \ /, '');\n  ret = ret.replace(/ $/, '');\n  if(ret.match(/\\s{2}/)){\n    ret\
    \ = ret.replace(/\\s+/g, '-');\n  }else{\n    ret = ret.replace(/\\s+/g, '_');\n\
    \  }\n  return ret;\n}\n", "    var consecutive = 0;\n    var output = \"\";\n\
    \    for(var i = 0; i < text.length; i++){\n        if(text[i] == \" \"){\n  \
    \          consecutive++;\n            if(consecutive >= 2){\n               \
    \ output += \"-\";\n            }\n        }\n        else{\n            consecutive\
    \ = 0;\n            output += text[i];\n        }\n    }\n    return output;\n\
    }\n", "    var fix = text.replace(/\\s/g, \"_\");\n    var fix1 = fix.replace(/__/g,\
    \ \"_\");\n    var fix2 = fix1.replace(/__/g, \"-\");\n    return fix2;\n}\n",
  "  return text.replace(/ +/g,'-').replace(/ /g,'_').replace(/^-/g,'_');\n}\n", " \
    \ //1. use regular expression to remove multiple spaces\n  var new_text = text.replace(/\
    \ +/g, ' ')\n\n  //2. count number of spaces\n  var spaces = new_text.match(/\
    \ /g).length;\n\n  //3. replace spaces with _ or -\n  if (spaces == 1){\n    new_text\
    \ = new_text.replace(/ /g, '_')\n  }\n  else if (spaces > 1){\n    new_text =\
    \ new_text.replace(/ /g, '-')\n  }\n  else {\n    return new_text\n  }\n  return\
    \ new_text\n}\n", "    let result = \"\";\n    let count = 0;\n    for(let i =\
    \ 0; i < text.length; i++){\n        if(text[i] == \" \" && count == 0){\n   \
    \         result += \"_\";\n            count++;\n        }else if(text[i] ==\
    \ \" \" && count == 1){\n            result += \"_\";\n            count++;\n\
    \        }else if(text[i] == \" \" && count == 2){\n            result += \"-\"\
    ;\n            count++;\n        }else{\n            result += text[i];\n    \
    \        count = 0;\n        }\n    }\n    return result;\n}\n", "    return text.replace(/\
    \ /g, \"_\").replace(/_{2,}/g, \"-\")\n}\n", "    //YOUR CODE HERE\n    let temp\
    \ = text.split(\" \");\n    if(temp.length === 1){\n        return temp[0];\n\
    \    }\n    else if(temp.length === 2){\n        return temp[0] + \"_\" + temp[1];\n\
    \    }\n    else{\n        return temp[0] + \"_\" + temp[1] + \"-\";\n    }\n\
    }\n", "    if (text.match(/  /g)){\n        return text.replace(/ /g,\"-\")\n\
    \    } else {\n        return text.replace(/ /g,\"_\")\n    }\n}\n", "    return\
    \ text.trim().replace(/ /g, \"_\").replace(/\\s{2,}/g, \"-\");\n}\n", "    if(text.includes(\"\
    \  \")){\n        let y = text.replace(/ /g, \"-\");\n        let x = y.replace(/--/g,\
    \ \"-\");\n        return x;\n    }\n    else{\n        let x = text.replace(/\
    \ /g, \"_\");\n        return x;\n    }\n}\n", "    let newString = '';\n    let\
    \ textArray = text.split(' ');\n    for(let i = 0; i < textArray.length; i++){\n\
    \        if(textArray[i] !== ''){\n            newString += `_${textArray[i]}`;\n\
    \        }\n    }\n    return newString.replace(/__/g, '-').slice(1);\n}\n", " \
    \   var spaces = text.match(/\\s{2,}/g);\n    if(spaces === null){\n        text\
    \ = text.replace(/\\s/g,\"_\");\n    }\n    else{\n        for(var i = 0; i <\
    \ spaces.length; i++){\n            if(spaces[i].length >= 2){\n             \
    \   text = text.replace(spaces[i],\"-\");\n            }\n        }\n        text\
    \ = text.replace(/\\s/g,\"_\");\n    }\n    return text;\n}\n", "    text = text.trim();\n\
    \    let spaceIndex = text.indexOf(\" \");\n    if(spaceIndex > 0){\n        text\
    \ = text.replace(\" \", \"_\");\n    }\n    text = text.replace(/\\s+/g, \"-\"\
    );\n    return text;\n}\n", "    if (text.indexOf(\"  \") === -1) {\n        return\
    \ text.replace(/ /g, \"_\");\n    } else {\n        return text.replace(/ /g,\
    \ \"-\");\n    }\n}\n", "  let res = text.replace(/  +/g, '-');\n  res = res.replace(/\
    \ /g, '_');\n  res = res.replace(/-/g, ' ');\n  return res;\n}\n", "\tlet count\
    \ = 0;\n\tlet new_text = '';\n\tfor(let x of text){\n\t\tif(x == ' '){\n\t\t\t\
    count++;\n\t\t\tif(count >= 3){\n\t\t\t\tnew_text += '-';\n\t\t\t\tcount = 0;\n\
    \t\t\t}else{\n\t\t\t\tnew_text += '_';\n\t\t\t}\n\t\t}else{\n\t\t\tnew_text +=\
    \ x;\n\t\t\tcount = 0;\n\t\t}\n\t}\n\treturn new_text;\n}", "    return text.replace(/\\\
    s{2,}/g, \"-\").replace(/\\s/g, \"_\");\n}\n", "\ttext=text.trim();\n\tconsole.log(text);\n\
    \tif(text.charAt(0)===\" \"){\n\t\ttext=\"_\"+text.slice(1);\n\t}\n\ttext=text.replace(/\\\
    s+/g,\"_\");\n\tconsole.log(text);\n\ttext=text.replace(/_+/g,\"-\");\n\tconsole.log(text);\n\
    \treturn text;\n}\nfix_spaces(\" Example\");\nfix_spaces(\" Example 1\");\nfix_spaces(\"\
    \ Example 2\");\nfix_spaces(\" Example 3\");\n", "    let space_count = 0;\n \
    \   for(let i = 0; i < text.length; i++){\n        if(text[i] === \" \"){\n  \
    \          space_count++;\n        }\n    }\n    if(space_count === 0){\n    \
    \    return text;\n    }\n    if(space_count === 1){\n        return text.replace(\"\
    \ \", \"_\");\n    }\n    if(space_count > 1){\n        let new_str = \"\";\n\
    \        for(let i = 0; i < text.length; i++){\n            if(text[i] === \"\
    \ \"){\n                if(i === 0){\n                    new_str += \"_\";\n\
    \                }\n                else if(i === 1){\n                    new_str\
    \ += \"_\";\n                }\n                else if(text[i-1] === \" \"){\n\
    \                    new_str += \"-\";\n                }\n                else{\n\
    \                    new_str += \"_\";\n                }\n            }\n   \
    \         else{\n                new_str += text[i];\n            }\n        }\n\
    \        return new_str;\n    }\n}", "    var results = \"\";\n    for(var i =\
    \ 0; i < text.length; i++){\n        if(text[i] == \" \"){\n            if(results[results.length\
    \ - 1] == \"_\"){\n                if(results[results.length - 2] == \"_\"){\n\
    \                    results += \"-\";\n                }\n                else{\n\
    \                    results += \"_\";\n                }\n            }\n   \
    \         else{\n                results += \"_\";\n            }\n        }\n\
    \        else{\n            results += text[i];\n        }\n    }\n    return\
    \ results;\n}\n", "    var replaced = text.replace(/\\s{2,}/g, \"-\");\n    return\
    \ replaced.replace(/\\s/g, \"_\");\n};\n", "\tvar space_count = 0;\n\tvar output\
    \ = \"\";\n\tfor(var i = 0; i < text.length; i++){\n\t\tif(text[i] == \" \"){\n\
    \t\t\tspace_count++;\n\t\t\tif(space_count > 2){\n\t\t\t\toutput += \"-\";\n\t\
    \t\t}\n\t\t\telse{\n\t\t\t\toutput += \"_\";\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t\
    space_count = 0;\n\t\t\toutput += text[i];\n\t\t}\n\t}\n\treturn output;\n}\n\n",
  "\tif(text.length <=1){\n\t\treturn text;\n\t}\n\tvar spaces = 0;\n\tvar result\
    \ = \"\";\n\tfor(var i = 0; i < text.length; i++){\n\t\tif(text[i] == \" \"){\n\
    \t\t\tspaces++;\n\t\t}else{\n\t\t\tspaces = 0;\n\t\t}\n\t\tif(spaces == 1){\n\t\
    \t\tresult = result + \"_\";\n\t\t}else if(spaces == 2){\n\t\t\tresult = result\
    \ + \"-\";\n\t\t}else if(spaces == 0){\n\t\t\tresult = result + text[i];\n\t\t\
    }\n\t}\n\treturn result;\n}\n", "    var text_arr = text.split('');\n    for(var\
    \ i = 0; i < text_arr.length; i++){\n        if(text_arr[i] == ' '){\n       \
    \     text_arr[i] = '_';\n        }else if(text_arr[i] == '_' && text_arr[i+1]\
    \ == '_'){\n            text_arr[i] = '-';\n        }\n    }\n    return text_arr.join('');\n\
    }", "    text = text.replace(/ +(?= )/g,'');\n    text = text.replace(/ +/g, '_');\n\
    \    text = text.replace(/ /g, '_');\n    return text;\n}", "    var arr = text.split('');\n\
    \    for(var i = 0; i < arr.length; i++){\n        if(arr[i] == ' '){\n      \
    \      arr[i] = '_';\n        }\n    }\n    var str = arr.join('');\n    var first_half\
    \ = str.split('__');\n    var final_str = first_half.join('-');\n    return final_str;\n\
    }\n", "  text=text.replace(/[ ]+/g, function(s){\n    if(s.length>2){\n      return\
    \ '-';\n    }else{\n      return '_';\n    }\n  });\n  return text;\n}", "   \
    \ let result = \"\";\n    let spaced = false;\n    for(let i = 0; i < text.length;\
    \ i++){\n        if(text[i] === \" \"){\n            if(!spaced){\n          \
    \      result += \"_\";\n                spaced = true;\n            }\n     \
    \       else{\n                if(text[i + 1] === \" \"){\n                  \
    \  result += \"-\";\n                    while(text[i + 1] === \" \"){\n     \
    \                   i++;\n                    }\n                }\n         \
    \       else{\n                    result += \"_\";\n                }\n     \
    \       }\n        }\n        else{\n            result += text[i];\n        \
    \    spaced = false;\n        }\n    }\n    return result;\n}\n", "    var space\
    \ = text.indexOf(\" \");\n    if (space === -1){\n        return text;\n    }\n\
    \    var first = text.slice(0, space);\n    var last = text.slice(space + 1);\n\
    \    if (last.indexOf(\" \") === -1){\n        return first + \"_\" + last;\n\
    \    } else if (last.indexOf(\" \") === last.lastIndexOf(\" \")){\n        return\
    \ first + \"_\" + fix_spaces(last);\n    } else {\n        return first + \"-\"\
    ;\n    }\n}", "    var str = text.trim();\n    var a = str.split(\" \");\n   \
    \ var new_text = a.join(\"_\");\n    var b = new_text.split(\"__\");\n    var\
    \ new_text2 = b.join(\"-\");\n    return new_text2;\n};", "\tvar new_text = \"\
    \";\n\tvar space_counter = 0;\n\tfor(var i = 0; i < text.length; i++){\n\t\tif(text[i]\
    \ == \" \"){\n\t\t\tspace_counter += 1;\n\t\t\tif(space_counter >= 2){\n\t\t\t\
    \tnew_text += \"-\";\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tspace_counter = 0;\n\t\t\
    \tnew_text += text[i];\n\t\t}\n\t}\n\treturn new_text;\n}\n", "    var arr = text.split('');\n\
    \    var new_arr = [];\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ == ' '){\n            new_arr.push('_');\n        }\n        else{\n       \
    \     new_arr.push(arr[i]);\n        }\n    }\n    return new_arr.join('');\n\
    }\n", "    return text.trim().replace(/\\s+/g, \"_\")\n}", "  return text.replace(/\
    \ /g, '_').replace(/_+/g, '-');\n}", "    let space = \" \";\n    let underscores\
    \ = \"_\";\n    let text1 = text.replace(space, underscores);\n    let text2 =\
    \ text1.replace(underscores+underscores+underscores, underscores+\"-\");\n   \
    \ let text3 = text2.replace(underscores+underscores, underscores);\n    return\
    \ text3;\n}", "    return text.trim().replace(/\\s+/g, '-');\n  }\n  \n  \n  //Given\
    \ a string text, return the string with all the words in it, except the last word,\
    \ reversed.\n  // >>> reverse_words(\"Example\")\n  // \"Example\"\n  // >>> reverse_words(\"\
    Example string\")\n  // \"Example gnirts\"\n  // >>> reverse_words(\"Example string\
    \ two\")\n  // \"Example gnirts owt\"\n  function reverse_words(text){\n    return\
    \ text.split(\" \").slice(0, -1).reverse().join(\" \") + \" \" + text.split(\"\
    \ \").slice(-1);\n  }\n  \n  \n  //Given a list of numbers and a number k, return\
    \ whether any two numbers from the list add up to k.\n  // >>> sum_equals_k([10,\
    \ 15, 3, 7], 17)\n  // True\n  // >>> sum_equals_k([10, 15, 3, 4], 17)\n  // False\n\
    \  function sum_equals_k(list, k){\n    for (let i=0; i<list.length; i++){\n \
    \     for (let j=0; j<list.length; j++){\n        if (list[i] + list[j] == k){\n\
    \          return true;\n        }\n      }\n    }\n    return false;\n  }\n \
    \ \n  \n  //Given a list of numbers and a number k, return whether any two numbers\
    \ from the list add up to k.\n  // >>> sum_equals_k([10, 15, 3, 7], 17)\n  //\
    \ True\n  // >>> sum_equals_k([10, 15, 3, 4], 17)\n  // False\n  function sum_equals_k(list,\
    \ k){\n    for (let i=0; i<list.length; i++){\n      for (let j=0; j<list.length;\
    \ j++){\n        if (list[i] + list[j] == k){\n          return true;\n      \
    \  }\n      }\n    }\n    return false;\n  }\n  \n  \n  //Given a list of numbers\
    \ and a number k, return whether", "    let arr = text.split(\" \")\n    let newArr\
    \ = []\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] === \"\"){\n\
    \            newArr.push(\"-\")\n        } else {\n            newArr.push(arr[i])\n\
    \        }\n    }\n    return newArr.join(\"_\")\n}", "  var spaceCount = 0;\n\
    \  for(var i = 0; i < text.length; i++){\n    if(text[i] === \" \"){\n      spaceCount++;\n\
    \    }\n    else{\n      spaceCount = 0;\n    }\n    if(spaceCount === 2){\n \
    \     text = text.slice(0, i) + \"-\" + text.slice(i + 1);\n    }\n    else if(spaceCount\
    \ > 2){\n      text = text.slice(0, i) + text.slice(i + 1);\n      i--;\n    }\n\
    \  }\n  if(text[0] === \" \"){\n    text = text.slice(1);\n  }\n  return text.replace(/\
    \ /g, \"_\");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

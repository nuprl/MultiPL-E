name: HumanEval_74_total_match
language: js
prompt: "//Write a function that accepts two arrays of strings and returns the array\
  \ that has \n// total number of chars in the all strings of the array less than\
  \ the other array.\n// if the two arrays have the same number of chars, return the\
  \ first array.\n// Examples\n// >>> total_match([], [])\n// []\n// >>> total_match([\"\
  hi\", \"admin\"], [\"hI\", \"Hi\"])\n// [\"hI\", \"Hi\"]\n// >>> total_match([\"\
  hi\", \"admin\"], [\"hi\", \"hi\", \"admin\", \"project\"])\n// [\"hi\", \"admin\"\
  ]\n// >>> total_match([\"hi\", \"admin\"], [\"hI\", \"hi\", \"hi\"])\n// [\"hI\"\
  , \"hi\", \"hi\"]\n// >>> total_match([\"4\"], [\"1\", \"2\", \"3\", \"4\", \"5\"\
  ])\n// [\"4\"]\nfunction total_match(lst1, lst2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = total_match;\n  assert.deepEqual(candidate([], []),[]);\n  assert.deepEqual(candidate([\"\
  hi\", \"admin\"], [\"hi\", \"hi\"]),[\"hi\", \"hi\"]);\n  assert.deepEqual(candidate([\"\
  hi\", \"admin\"], [\"hi\", \"hi\", \"admin\", \"project\"]),[\"hi\", \"admin\"]);\n\
  \  assert.deepEqual(candidate([\"4\"], [\"1\", \"2\", \"3\", \"4\", \"5\"]),[\"\
  4\"]);\n  assert.deepEqual(candidate([\"hi\", \"admin\"], [\"hI\", \"Hi\"]),[\"\
  hI\", \"Hi\"]);\n  assert.deepEqual(candidate([\"hi\", \"admin\"], [\"hI\", \"hi\"\
  , \"hi\"]),[\"hI\", \"hi\", \"hi\"]);\n  assert.deepEqual(candidate([\"hi\", \"\
  admin\"], [\"hI\", \"hi\", \"hii\"]),[\"hi\", \"admin\"]);\n  assert.deepEqual(candidate([],\
  \ [\"this\"]),[]);\n  assert.deepEqual(candidate([\"this\"], []),[]);\n}\n\ntest();"
completions: ["    var sum1 = 0;\n    var sum2 = 0;\n    for(var i = 0; i < lst1.length;\
    \ i++){\n        for(var j = 0; j < lst1[i].length; j++){\n            sum1 +=\
    \ lst1[i].charCodeAt(j);\n        }\n    }\n    for(var i = 0; i < lst2.length;\
    \ i++){\n        for(var j = 0; j < lst2[i].length; j++){\n            sum2 +=\
    \ lst2[i].charCodeAt(j);\n        }\n    }\n    if(sum1 < sum2){\n        return\
    \ lst1;\n    }\n    return lst2;\n}", "    let sum_lst1 = 0;\n    let sum_lst2\
    \ = 0;\n    for(let item of lst1){\n        sum_lst1 += item.length;\n    }\n\
    \    for(let item of lst2){\n        sum_lst2 += item.length;\n    }\n    if(sum_lst1\
    \ > sum_lst2){\n        return lst2;\n    }\n    else{\n        return lst1;\n\
    \    }\n}\n", "    var total_sum1 = 0;\n    var total_sum2 = 0;\n    for(var i\
    \ = 0; i < lst1.length; i++){\n        total_sum1 += lst1[i].length;\n    }\n\
    \    for(var i = 0; i < lst2.length; i++){\n        total_sum2 += lst2[i].length;\n\
    \    }\n    if(total_sum1 == total_sum2){\n        return lst1;\n    }\n    else\
    \ if(total_sum1 < total_sum2){\n        return lst1;\n    }\n    else{\n     \
    \   return lst2;\n    }\n}", "    let total1 = 0;\n    let total2 = 0;\n    for(let\
    \ i = 0; i < lst1.length; i++){\n        total1 += lst1[i].length;\n    }\n  \
    \  for(let i = 0; i < lst2.length; i++){\n        total2 += lst2[i].length;\n\
    \    }\n    if(total1 === total2){\n        return lst1;\n    }\n    else if(total1\
    \ < total2){\n        return lst1;\n    }\n    else{\n        return lst2;\n \
    \   }\n}", "  const sum1 = array_sum(lst1);\n  const sum2 = array_sum(lst2);\n\
    \  if (sum1 > sum2){\n    return lst2;\n  }\n  else if (sum1 === sum2){\n    return\
    \ lst1;\n  }\n  else{\n    return lst1;\n  }\n}", "    var lst1_count = 0;\n \
    \   var lst2_count = 0;\n    for(var i = 0; i < lst1.length; i++){\n        lst1_count\
    \ += lst1[i].length;\n    }\n    for(var j = 0; j < lst2.length; j++){\n     \
    \   lst2_count += lst2[j].length;\n    }\n    if(lst1_count == lst2_count){\n\
    \        return lst1;\n    }\n    else if(lst1_count < lst2_count){\n        return\
    \ lst1;\n    }\n    else{\n        return lst2;\n    }\n}", "    let total1 =\
    \ 0;\n    let total2 = 0;\n    for(let i = 0; i < lst1.length; i++){\n       \
    \ total1 += lst1[i].length;\n    }\n    for(let i = 0; i < lst2.length; i++){\n\
    \        total2 += lst2[i].length;\n    }\n    if(total1 < total2){\n        return\
    \ lst1;\n    }else{\n        return lst2;\n    }\n}", "  let count = 0;\n  let\
    \ count2 = 0;\n  for(let i = 0; i < lst1.length; i++){\n    for(let j = 0; j <\
    \ lst1[i].length; j++){\n      count++;\n    }\n  }\n  for(let k = 0; k < lst2.length;\
    \ k++){\n    for(let l = 0; l < lst2[k].length; l++){\n      count2++;\n    }\n\
    \  }\n  if(count < count2){\n    return lst1;\n  }\n  else if(count > count2){\n\
    \    return lst2;\n  }\n  else{\n    return lst1;\n  }\n}", "    if (lst1.length\
    \ === 0 && lst2.length === 0){\n        return [];\n    }\n    let sum1 = 0;\n\
    \    let sum2 = 0;\n    for (let i = 0; i < lst1.length; i++){\n        sum1 +=\
    \ lst1[i].length;\n    }\n    for (let i = 0; i < lst2.length; i++){\n       \
    \ sum2 += lst2[i].length;\n    }\n    if (sum1 < sum2){\n        return lst1;\n\
    \    } else {\n        return lst2;\n    }\n}\n", "    total = 0;\n    total2\
    \ = 0;\n    for(var i = 0; i < lst1.length; i++){\n        total += lst1[i].length;\n\
    \    }\n    for(var i = 0; i < lst2.length; i++){\n        total2 += lst2[i].length;\n\
    \    }\n    if(total == total2 || total < total2){\n        return lst1;\n   \
    \ }else{\n        return lst2;\n    }\n}\n", "    var sum1 = 0;\n    var sum2\
    \ = 0;\n    for(var i = 0; i < lst1.length; i++){\n        sum1 += lst1[i].length;\n\
    \    }\n    for(var i = 0; i < lst2.length; i++){\n        sum2 += lst2[i].length;\n\
    \    }\n    if(sum1 < sum2){\n        return lst1;\n    }\n    else{\n       \
    \ return lst2;\n    }\n}", "    if (lst1.length < 1 && lst2.length < 1){\n   \
    \     return [];\n    }\n    else if (lst1.length < 1 && lst2.length > 0){\n \
    \       return lst2;\n    }\n    else if (lst1.length > 0 && lst2.length < 1){\n\
    \        return lst1;\n    }\n    var total1 = 0;\n    var total2 = 0;\n    for\
    \ (var i = 0; i < lst1.length; i++){\n        total1 += lst1[i].length;\n    }\n\
    \    for (var i = 0; i < lst2.length; i++){\n        total2 += lst2[i].length;\n\
    \    }\n    if (total1 > total2){\n        return lst2;\n    }\n    else if (total1\
    \ < total2){\n        return lst1;\n    }\n    else{\n        return lst1;\n \
    \   }\n}", "    var count1 = 0;\n    var count2 = 0;\n    for(var i = 0; i < lst1.length;\
    \ i++){\n        count1 += lst1[i].length;\n    }\n    for(var i = 0; i < lst2.length;\
    \ i++){\n        count2 += lst2[i].length;\n    }\n    if(count1 < count2){\n\
    \        return lst1;\n    }\n    else{\n        return lst2;\n    }\n}", "  \
    \  var total1 = 0\n    var total2 = 0\n    for (let i=0; i<lst1.length; i++){\n\
    \        total1 += lst1[i].length\n    }\n    for (let i=0; i<lst2.length; i++){\n\
    \        total2 += lst2[i].length\n    }\n    if (total1 > total2){\n        return\
    \ lst2\n    }\n    else{\n        return lst1\n    }\n}\n", "  let len1 = 0;\n\
    \  let len2 = 0;\n  for(let i = 0; i < lst1.length; i++){\n    len1 += lst1[i].length;\n\
    \  }\n  for(let i = 0; i < lst2.length; i++){\n    len2 += lst2[i].length;\n \
    \ }\n  if(len1 === len2){\n    return lst1;\n  }else if(len1 < len2){\n    return\
    \ lst1;\n  }else{\n    return lst2;\n  }\n}\n", "    const lst1_lst = lst1.map(function(elem){\n\
    \        return elem.length;\n    })\n    const lst2_lst = lst2.map(function(elem){\n\
    \        return elem.length;\n    })\n    const lst1_total = lst1_lst.reduce(function(acc,\
    \ elem){\n        return acc + elem;\n    })\n    const lst2_total = lst2_lst.reduce(function(acc,\
    \ elem){\n        return acc + elem;\n    })\n    if (lst1_total < lst2_total){\n\
    \        return lst1;\n    } else {\n        return lst2;\n    }\n}", "    let\
    \ number_of_chars_1 = 0;\n    let number_of_chars_2 = 0;\n    for(let i = 0; i\
    \ < lst1.length; i++){\n        number_of_chars_1 += lst1[i].length;\n    }\n\
    \    for(let i = 0; i < lst2.length; i++){\n        number_of_chars_2 += lst2[i].length;\n\
    \    }\n    if(number_of_chars_1 < number_of_chars_2){\n        return lst1;\n\
    \    }else{\n        return lst2;\n    }\n}\n\n", "    let lst1_char_count = 0;\n\
    \    let lst2_char_count = 0;\n    for(let i = 0; i < lst1.length; i++){\n   \
    \     lst1_char_count += lst1[i].length;\n    }\n    for(let i = 0; i < lst2.length;\
    \ i++){\n        lst2_char_count += lst2[i].length;\n    }\n    if(lst1_char_count\
    \ > lst2_char_count){\n        return lst2;\n    }\n    else{\n        return\
    \ lst1;\n    }\n}", "\tvar chars1 = 0;\n\tvar chars2 = 0;\n\tfor(var i = 0; i\
    \ < lst1.length; i++){\n\t\tchars1 += lst1[i].length;\n\t}\n\tfor(var i = 0; i\
    \ < lst2.length; i++){\n\t\tchars2 += lst2[i].length;\n\t}\n\tif(chars1 < chars2){\n\
    \t\treturn lst1;\n\t}\n\telse{\n\t\treturn lst2;\n\t}\n}\n", "\tif (lst1 == []){\n\
    \t\treturn lst1;\n\t}\n\tif (lst2 == []){\n\t\treturn lst2;\n\t}\n\tvar chars1\
    \ = 0;\n\tvar chars2 = 0;\n\tfor (i=0; i<lst1.length; i++){\n\t\tchars1 += lst1[i].length;\n\
    \t}\n\tfor (i=0; i<lst2.length; i++){\n\t\tchars2 += lst2[i].length;\n\t}\n\t\
    if (chars1 > chars2){\n\t\treturn lst2;\n\t}\n\telse if (chars1 < chars2){\n\t\
    \treturn lst1;\n\t}\n\telse{\n\t\treturn lst1;\n\t}\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

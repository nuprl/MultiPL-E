language: js
name: HumanEval_60_sum_to_n
results:
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n * (n + 1)\
    \ / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    total += i;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar res = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tres += i;\n\t}\n\treturn res;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar result = 0;\n\t\
    for(var i = 0; i <= n; i++){\n\t\tresult += i;\n\t}\n\treturn result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    for(var i = 1; i <= n; i++)\n    {\n        result += i;\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn n*(n+1)/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    for(var i = 0; i <= n; i++){\n        result += i;\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i<=n; i++){\n        sum += i;\n    }\n    return sum;\n}\nvar\
    \ sum30 = sum_to_n(30);\nvar sum100 = sum_to_n(100);\nvar sum5 = sum_to_n(5);\n\
    var sum10 = sum_to_n(10);\nvar sum1 = sum_to_n(1);\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = n*(n+1)/2;\n\
    \    return result;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let result = 0;\n\
    \    for(let i = 1; i <= n; i++){\n        result += i;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n * (n + 1))\
    \ / 2;\n}\nsum_to_n(5);\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var total = 0;\n \
    \   for(i=1; i<=n; i++){\n        total += i;\n    }\n    return total;\n}\nsum_to_n(5);\n\
    \n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n*(n+1))/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for(let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i<=n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        result += i;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp6c4tbkb9.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6c4tbkb9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n==1){\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let sum = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    // YOUR CODE HERE\n\
    \    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum += i;\n   \
    \ }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp6c4tbkb9.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6c4tbkb9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n===1){\n\t\treturn\
    \ 1;\n\t}\n\telse{\n\t\treturn sum_to_n(n-1)+n;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var i;\n    var sum\
    \ = 0;\n    for(i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n == 1){\n   \
    \     return 1;\n    }\n    else{\n        return n + sum_to_n(n-1);\n    }\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n == 1){\n   \
    \     return 1;\n    } else {\n        return n + sum_to_n(n-1);\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    result += i;\n  }\n  return result;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n===1){\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn (n*(n+1))/2;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n*(n+1)/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n==1){\n\t\treturn\
    \ 1;\n\t}\n\telse{\n\t\treturn n+sum_to_n(n-1);\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if (n === 1){\n  \
    \      return 1;\n    }\n    else {\n        return sum_to_n(n-1) + n;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var output = 0;\n\
    \    for(i=1; i<=n; i++){\n        output = output + i;\n    }\n    return output;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var tot=0;\n    for(var\
    \ i=1;i<=n;i++){\n        tot+=i;\n    }\n    return tot;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(i=1; i<=n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return ((n*(n+1))/2);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    // replace the following\
    \ line with your code\n    return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n21\n    at test (/tmp/tmpemhmgfgw.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpemhmgfgw.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 21,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n*(n+1))/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = n;\n   \
    \ for(var i = 1; i < n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = n\n    for(let\
    \ i = n - 1; i >= 1; i--){\n        sum += i\n    }\n    return sum\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n * (n + 1)\
    \ / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var i;\n    var sum\
    \ = 0;\n    for(i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(i=1; i<=n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar total = 0;\n\tfor(var\
    \ i = 0; i < n + 1; i++){\n\t\ttotal += i;\n\t}\n\treturn total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum=0;\n    for(var\
    \ i=1;i<=n;i++){\n        sum+=i;\n    }\n    return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 1; i <= n; i++) {\n    total += i;\n  }\n  return total;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn n*(n+1)/2;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for(i=1; i<=n; i++){\n        sum += i;\n    }\n    return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  sum=0;\n  for(i=1;i<=n;i++){\n\
    \    sum+=i;\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n == 1){\n    return\
    \ 1;\n  }\n  else{\n    return n + sum_to_n(n-1);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i<=n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    // Code goes here\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmppuet9q_h.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmppuet9q_h.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n==1){\n      \
    \  return 1;\n    }\n    return n+sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n === 1){\n   \
    \     return 1;\n    }\n    return n + sum_to_n(n-1);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n*(n+1)/2;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var num = n;\n  var\
    \ sum = 0;\n  for(var i = 1; i <= num; i++){\n    sum += i;\n  }\n  return sum;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\t\t\n\tif(n === 1){\n\
    \t\treturn 1;\n\t}else{\n\t\treturn n + sum_to_n(n-1);\n\t}\n\t\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var total = 0;\n \
    \   for(var i = 1; i <= n; i++){\n        total += i;\n    }\n    return total;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum=0;\n    for(var\
    \ i=1;i<=n;i++){\n        sum+=i;\n    }\n    return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n * (n + 1))\
    \ / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n*(n+1)/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  for(var i = 0; i < n;\
    \ i++){\n    var sum = 0;\n    sum = i + sum;\n  }\n  return sum;\n}\n\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpetf5qpyj.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpetf5qpyj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n===1){\n     \
    \   return 1;\n    }\n    return n + sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    for(var i = 0; i < n; i++){\n        result += i;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpi9mo1q6a.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9mo1q6a.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ var count = 0;\n    while (count <= n){\n        sum += count;\n        count++;\n\
    \    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    result += i;\n  }\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tsum = 0;\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 0; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n * (n + 1))\
    \ / 2;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let total = 0;\n \
    \   for(let i = 1; i <= n; i++){\n        total += i;\n    }\n    return total;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar answer = (n*(n+1))/2;\n\
    \treturn answer;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ var i = 1;\n    while(i <= n){\n        sum += i;\n        i++;\n    }\n   \
    \ return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n == 1){\n\t\treturn\
    \ 1;\n\t}\n\telse{\n\t\treturn n + sum_to_n(n-1);\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // if n == 1 return\
    \ 1\n  if (n === 1) {\n    return 1;\n  }\n  // else return n + sum_to_n(n-1)\n\
    \  else {\n    return n + sum_to_n(n-1);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n===1){\n    return\
    \ 1;\n  }\n  else{\n    return n + sum_to_n(n-1);\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n<=1){\n    return\
    \ n;\n  }\n  else {\n    return n + sum_to_n(n-1);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n*(n+1)/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp6c4tbkb9.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6c4tbkb9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return (n*(n+1))/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n == 1){\n    \
    \    return 1;\n    }\n    return n + sum_to_n(n-1);\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let result = 0;\n\
    \    for(let i = 0; i < n; i++){\n        result += i;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2ppd2a74.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ppd2a74.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return (n*(n+1))/2;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    total += i;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 0; i < n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpecuk6ni0.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpecuk6ni0.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tif (n\
    \ > 0){\n\t\tfor (var i = 1; i <= n; i++){\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn\
    \ sum;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n == 1){\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n-1);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(i=1; i<=n; i++){\n        sum += i;\n    }\n    return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n * (n + 1)\
    \ / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var i;\n    var sum\
    \ = 0;\n    for(i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum=0;\n  for(var\
    \ i=1;i<=n;i++){\n    sum+=i;\n  }\n  return sum;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n<1){\n\t\treturn\
    \ \"You need to input a positive integer number\";\n\t}\n\tvar result = 0;\n\t\
    for(var i=1; i<=n; i++){\n\t\tresult += i;\n\t}\n\treturn result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ var i = 1;\n    while(i<=n){\n        sum += i;\n        i++;\n    }\n    return\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n*(n+1)/2;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n == 1){\n    \
    \    return 1;\n    }\n    else{\n        return n + sum_to_n(n-1);\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\t// sum = 0;\n\t// for\
    \ (i = 1; i <= n; i++){\n\t// \tsum += i;\n\t// }\n\t// return sum;\n\treturn\
    \ n*(n+1)/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\t\n\tvar s=0;\n\t\n\t\
    for(var i=1;i<=n;i++){\n\t\ts=s+i;\n\t}\n\treturn s;\n}\nprint(sum_to_n(30));\n\
    print(sum_to_n(100));\nprint(sum_to_n(5));\nprint(sum_to_n(10));\nprint(sum_to_n(1));\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8iks8_ae.js:21\nprint(sum_to_n(30));\n^\n\nReferenceError: print\
    \ is not defined\n    at Object.<anonymous> (/tmp/tmp8iks8_ae.js:21:1)\n    at\
    \ Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  //base case\n  if(n\
    \ === 1){\n    return 1;\n  }\n  //recursive case\n  return n + sum_to_n(n-1);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n < 1){\n     \
    \   return 0;\n    }else{\n        return n + sum_to_n(n-1);\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar arr = [];\n\tvar\
    \ i = 0;\n\tvar sum = 0;\n\twhile(i <= n){\n\t\tarr.push(i);\n\t\ti += 1;\n\t\
    }\n\tfor(i = 0; i < arr.length; i++){\n\t\tsum += arr[i];\n\t}\n\treturn sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ let i = 1;\n    while(i <= n){\n        sum += i;\n        i++;\n    }\n   \
    \ return sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var x = (n*(n+1))/2;\n\
    \  return x;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn ((n*(n+1))/2);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var result = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    result += i;\n  }\n  return result;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for(let i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 1; i <= n; i++) {\n    total += i;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var x = 0;\n    var\
    \ c = 0;\n    while (c <= n){\n        x = x + c;\n        c = c + 1;\n    }\n\
    \    return x;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\t//return parseInt(n*(n+1)/2);\n\
    \tvar sum = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n\
    }\nvar assert = require('assert');\ndescribe('calculate sum to n', function(){\n\
    \tit('it should sum 1 to 10', function(){\n\t\tassert.equal(55, sum_to_n(10));\n\
    \t});\n\tit('it should sum 1 to 1', function(){\n\t\tassert.equal(1, sum_to_n(1));\n\
    \t});\n\tit('it should sum 1 to 5', function(){\n\t\tassert.equal(15, sum_to_n(5));\n\
    \t});\n\tit('it should sum 1 to 30', function(){\n\t\tassert.equal(465, sum_to_n(30));\n\
    \t});\n\tit('it should sum 1 to 100', function(){\n\t\tassert.equal(5050, sum_to_n(100));\n\
    \t});\n});\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpkxi0_zre.js:38\nconst assert = require('node:assert');\n      ^\n\
    \nSyntaxError: Identifier 'assert' has already been declared\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    //your code here\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp7z221hhw.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp7z221hhw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var total = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    total += i;\n  }\n  return total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    //your code here!\n\
    \    // var counter = 0;\n    // for (var i = 1; i <= n; i++) {\n    //     counter\
    \ += i;\n    // }\n    // return counter;\n    return n * (n + 1) / 2;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    // var sum = 0;\n\
    \    // for(i=0; i<=n; i++){\n    //     sum = sum + i;\n    // }\n    // console.log(sum);\n\
    \    return ((n*(n+1))/2);\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum=0;\n    for(var\
    \ i=1;i<=n;i++){\n        sum+=i;\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar num = 1;\n\tvar\
    \ sum = 0;\n\twhile(num <= n){\n\t\tsum += num;\n\t\tnum += 1;\n\t}\n\treturn\
    \ sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn (n*(n+1))/2;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar total = 0;\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\ttotal += i;\n\t}\n\treturn total;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var total = 0;\n \
    \   for(var i = 1; i <= n; i++){\n        total += i;\n    }\n    return total;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp6c4tbkb9.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6c4tbkb9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result=0;\n  \
    \  for(var i=1;i<=n;i++){\n        result+=i;\n    }\n    return result;\n}\n\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n===1){\n     \
    \   return 1;\n    }\n    else{\n        return n+sum_to_n(n-1);\n    }\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    //>>> sum_to_n(30)\n\
    \    //465\n    //>>> sum_to_n(100)\n    //5050\n    //>>> sum_to_n(5)\n    //15\n\
    \    //>>> sum_to_n(10)\n    //55\n    //>>> sum_to_n(1)\n    //1\n    //The number\
    \ that we are starting to add at\n    //is 1.\n    var start = 1;\n    //The number\
    \ that we are going to add to.\n    //is n.\n    var end = n;\n    //total is\
    \ 0\n    var total = 0;\n    //while start is less than or equal to\n    //end,\
    \ loop.\n    while(start <= end){\n        //total is total plus start\n     \
    \   total = total + start;\n        //start is start plus 1\n        start = start\
    \ + 1;\n    }\n    //return total\n    return total;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n<0){\n       \
    \ return 0;\n    }\n    else{\n        return n+sum_to_n(n-1);\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar total = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\ttotal += i;\n\t}\n\treturn total;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    let sum = 0;\n   \
    \ for(i=1; i<=n; i++){\n        sum = sum + i;\n    }\n    return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  // CODE HERE\n  var\
    \ sum = 0;\n  for (var i = 1; i <= n; i++) {\n    sum += i;\n  }\n  return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    if(n==1){\n      \
    \  return 1;\n    }\n    else{\n        return n+sum_to_n(n-1);\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    //print(n);\n    if(n<=1){\n\
    \        return n;\n    }else{\n        return n+sum_to_n(n-1);\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n < 0){\n\t\treturn\
    \ \"n cannot be negative\";\n\t}else if(n > 0){\n\t\tvar result = 0;\n\t\tfor(var\
    \ i = 1; i <= n; i++){\n\t\t\tresult += i;\n\t\t}\n\t\treturn result;\n\t}else{\n\
    \t\treturn 1;\n\t}\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum=0;\n\tfor(var\
    \ i=1;i<=n;i++){\n\t\tsum=sum+i;\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\nvar sum =0;\nfor(var i=1;i<=n;i++){\n\
    sum=sum+i;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpppfpu9mc.js:29\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at Object.compileFunction (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n == 1){\n    return\
    \ 1;\n  }\n  return n + sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  var\
    \ i = 1;\n  while(i <= n){\n    sum += i;\n    i++;\n  }\n  return sum;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n>0){\n\t\tvar sum=n+sum_to_n(n-1);\n\
    \t\treturn sum;\n\t}\n\telse{\n\t\treturn 0;\n\t}\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  let i = 1;\n  let sum\
    \ = 0;\n  for(; i<=n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    return n * (n + 1)\
    \ / 2;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = (n * (n\
    \ + 1)) / 2;\n    console.log(sum);\n    return sum;\n}\nsum_to_n(30);\nsum_to_n(100);\n\
    sum_to_n(5);\nsum_to_n(10);\nsum_to_n(1);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '465

    5050

    15

    55

    1

    1

    21

    66

    465

    5050

    '
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var s = 0;\n  var i\
    \ = 1;\n  while(i <= n){\n    s = s + i;\n    i = i + 1;\n  }\n  return s;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return n * (n + 1) /\
    \ 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    // REPLACE THE NEXT\
    \ LINE WITH YOUR ANSWER\n    return (n * (n + 1)) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  return (n * (n + 1))\
    \ / 2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  var sum = 0;\n  for(var\
    \ i = 0; i <= n; i++){\n    sum += i;\n  }\n  return sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n===1){\n\t\treturn\
    \ 1;\n\t}\n\treturn n + sum_to_n(n-1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var result = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        result += i;\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 1
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\t// write your code here\
    \ and return your answer\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp1mq4n0gi.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1mq4n0gi.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var sum = 0;\n   \
    \ for(var i = 1; i <= n; i++){\n        sum += i;\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar sum = 0;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821257
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\treturn n*(n+1)/2;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n\
    \  assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n  if (n === 1){\n    return\
    \ 1;\n  }\n  else {\n    return n + sum_to_n(n-1);\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n    var s = 0;\n    for(var\
    \ i = 1; i <= n; i++){\n        s = s + i;\n    }\n    return s;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar i, sum = 0;\n\t\
    for(i = 1; i <= n; i++){\n\t\tsum += i;\n\t}\n\treturn sum;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tif(n<=1){\n\t\treturn\
    \ n;\n\t}\n\telse{\n\t\treturn n+sum_to_n(n-1);\n\t}\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\t//Your code goes here.\n\
    \treturn (n*(n+1))/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sum_to_n;\n  assert.deepEqual(candidate(1),1);\n\
    \  assert.deepEqual(candidate(6),21);\n  assert.deepEqual(candidate(11),66);\n\
    \  assert.deepEqual(candidate(30),465);\n  assert.deepEqual(candidate(100),5050);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231
- exit_code: 0
  program: "//sum_to_n is a function that sums numbers from 1 to n.\n// >>> sum_to_n(30)\n\
    // 465\n// >>> sum_to_n(100)\n// 5050\n// >>> sum_to_n(5)\n// 15\n// >>> sum_to_n(10)\n\
    // 55\n// >>> sum_to_n(1)\n// 1\nfunction sum_to_n(n){\n\tvar result = 0;\n\t\
    for(var i = 1; i <= n; i++){\n\t\tresult += i;\n\t}\n\treturn result;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sum_to_n;\n\
    \  assert.deepEqual(candidate(1),1);\n  assert.deepEqual(candidate(6),21);\n \
    \ assert.deepEqual(candidate(11),66);\n  assert.deepEqual(candidate(30),465);\n\
    \  assert.deepEqual(candidate(100),5050);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977231

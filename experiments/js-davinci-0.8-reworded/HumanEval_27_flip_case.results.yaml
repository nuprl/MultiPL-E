language: js
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar result = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string[i]\
    \ == string[i].toUpperCase()){\n\t\t\tresult += string[i].toLowerCase();\n\t\t\
    }else{\n\t\t\tresult += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var string_length = string.length;\n    var new_string = \"\";\n    for (var\
    \ i = 0; i < string_length; i++){\n        if (string[i] === string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }\n        else {\n\
    \            new_string += string[i].toUpperCase();\n        }\n    }\n    return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var new_string = \"\";\n  for (var i = 0; i < string.length; i++){\n    if\
    \ (string[i] == string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    } else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n  return\
    \ new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newstring = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      newstring += string[i].toLowerCase();\n\
    \    }\n    else{\n      newstring += string[i].toUpperCase();\n    }\n  }\n \
    \ return newstring;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var stringArr = string.split(\"\");\n    for(var i = 0; i < stringArr.length;\
    \ i++){\n        if(stringArr[i] === stringArr[i].toUpperCase()){\n          \
    \  stringArr[i] = stringArr[i].toLowerCase();\n        }\n        else{\n    \
    \        stringArr[i] = stringArr[i].toUpperCase();\n        }\n    }\n    return\
    \ stringArr.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \treturn string.replace(/[a-z]/g, function(m){\n\t\treturn m.toUpperCase();\n\t\
    }).replace(/[A-Z]/g, function(m){\n\t\treturn m.toLowerCase();\n\t});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello!'\n\nshould\
    \ loosely deep-equal\n\n'hELLO!'\n    at test (/tmp/tmp64b6zqxf.js:18:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp64b6zqxf.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello!',\n\
    \  expected: 'hELLO!',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  flipped = \"\"\n  for (var i = 0; i < string.length; i++) {\n    character\
    \ = string[i]\n    if (character == character.toUpperCase()) {\n      flipped\
    \ += character.toLowerCase()\n    } else {\n      flipped += character.toUpperCase()\n\
    \    }\n  }\n  return flipped\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped = '';\n    for (var i = 0; i < string.length; i++){\n       \
    \ if (string[i] == string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        }\n        else{\n            flipped += string[i].toUpperCase();\n \
    \       }\n    }\n    return flipped;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \   var changed = '';\n   for (var i = 0; i < string.length; i++){\n      var\
    \ char = string[i];\n      if (char === char.toUpperCase()){\n         changed\
    \ += char.toLowerCase();\n      } else {\n         changed += char.toUpperCase();\n\
    \      }\n   }\n   return changed;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let newString = \"\";\n    for(let i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newstring = \"\";\n    for (var i = 0; i < string.length; i++){\n   \
    \     if (string[i] === string[i].toUpperCase()){\n            newstring += string[i].toLowerCase();\n\
    \        }\n        else{\n            newstring += string[i].toUpperCase();\n\
    \        }\n    }\n    return newstring;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //create empty string variable\n    var newString = \"\";\n    //loop through\
    \ string\n    for(var i = 0; i < string.length; i++){\n        //if character\
    \ is uppercase, add to newString as lowercase\n        if(string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        }\n        //if character\
    \ is lowercase, add to newString as uppercase\n        else{\n            newString\
    \ += string[i].toUpperCase();\n        }\n    }\n    //return the new string\n\
    \    return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }else{\n            newString += string[i].toUpperCase();\n        }\n\
    \    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  let result = \"\"\n  for (let char of string){\n    if (char.toUpperCase()\
    \ === char){\n      result += char.toLowerCase()\n    } else {\n      result +=\
    \ char.toUpperCase()\n    }\n  }\n  return result\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(char){\n        if(char === char.toUpperCase()){\n\
    \            return char.toLowerCase();\n        }\n        return char.toUpperCase();\n\
    \    }).join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //Create new string for output\n    var output = \"\";\n    //loop through\
    \ input string\n    for(var i = 0; i < string.length; i++){\n        //If character\
    \ is uppercase (ASCII 65 - 90)\n        if(string.charCodeAt(i) >= 65 && string.charCodeAt(i)\
    \ <= 90){\n            //Add lowercase character to output string\n          \
    \  output += String.fromCharCode(string.charCodeAt(i) + 32);\n        }\n    \
    \    //If character is lowercase (ASCII 97 - 122)\n        else if(string.charCodeAt(i)\
    \ >= 97 && string.charCodeAt(i) <= 122){\n            //Add uppercase character\
    \ to output string\n            output += String.fromCharCode(string.charCodeAt(i)\
    \ - 32);\n        }\n        //Else character is not a letter (neither upper nor\
    \ lowercase)\n        else{\n            //Add character to output string\n  \
    \          output += string[i];\n        }\n    }\n    //Return output string\n\
    \    return output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else if(string[i] == string[i].toLowerCase()){\n         \
    \   newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let result = \"\";\n    for(let i = 0; i < string.length; i++){\n       \
    \ if(string[i] == string[i].toUpperCase()){\n            result += string[i].toLowerCase();\n\
    \        }\n        else{\n            result += string[i].toUpperCase();\n  \
    \      }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  return string.split('').map(function(char){\n    if(char.match(/[a-z]/)){\n\
    \      return char.toUpperCase();\n    }\n    else if(char.match(/[A-Z]/)){\n\
    \      return char.toLowerCase();\n    }\n    else{\n      return char;\n    }\n\
    \  }).join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var lower_str = string.toLowerCase();\n  var flipped_str = '';\n  for (var\
    \ i = 0; i < string.length; i++){\n    var char = string[i];\n    if (char ==\
    \ char.toLowerCase()){\n      flipped_str += lower_str[i].toUpperCase();\n   \
    \ }\n    else {\n      flipped_str += lower_str[i];\n    }\n  }\n  return flipped_str;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \treturn string.split('').map(function(x){\n\t\tif(/[a-z]/.test(x)){\n\t\t\treturn\
    \ x.toUpperCase();\n\t\t}\n\t\telse if(/[A-Z]/.test(x)){\n\t\t\treturn x.toLowerCase();\n\
    \t\t}\n\t\telse{\n\t\t\treturn x;\n\t\t}\n\t}).join('');\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var string = string.split(\"\");\n    var new_string = [];\n    for (var\
    \ i = 0; i < string.length; i++){\n        if (string[i] === string[i].toUpperCase()){\n\
    \            new_string.push(string[i].toLowerCase());\n        } else if (string[i]\
    \ === string[i].toLowerCase()){\n            new_string.push(string[i].toUpperCase());\n\
    \        } else {\n            new_string.push(string[i]);\n        }\n    }\n\
    \    return new_string.join(\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  let flippedArray = [];\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      flippedArray.push(string[i].toLowerCase());\n\
    \    } else {\n      flippedArray.push(string[i].toUpperCase());\n    }\n  }\n\
    \  return flippedArray.join('');\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var result = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      result += string[i].toLowerCase();\n  \
    \  }\n    else {\n      result += string[i].toUpperCase();\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var result = \"\";\n    for(i=0; i<string.length; i++){\n        if(string[i]==string[i].toUpperCase()){\n\
    \            result+=string[i].toLowerCase();\n        }\n        else if(string[i]==string[i].toLowerCase()){\n\
    \            result+=string[i].toUpperCase();\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  let newString = [];\n  for (let i = 0; i < string.length; i++){\n    let letter\
    \ = string[i];\n    if (letter == letter.toUpperCase()){\n      newString.push(letter.toLowerCase());\n\
    \    }\n    else {\n      newString.push(letter.toUpperCase());\n    }\n  }\n\
    \  return newString.join(\"\");\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flip_string = [];\n    for (var i = 0; i < string.length; i++){\n   \
    \     if (string[i] === string[i].toUpperCase()){\n            flip_string.push(string[i].toLowerCase());\n\
    \        }\n        else {\n            flip_string.push(string[i].toUpperCase());\n\
    \        }\n    }\n    return flip_string.join(\"\");\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\"\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase()\n\
    \        }\n        else {\n            newString += string[i].toUpperCase()\n\
    \        }\n    }\n    return newString\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(i=0; i<string.length; i++){\n        if(string[i]\
    \ === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar string_array = string.split(\"\");\n\tfor (var i = 0; i < string_array.length;\
    \ i++){\n\t\tif (string_array[i] == string_array[i].toUpperCase()){\n\t\t\tstring_array[i]\
    \ = string_array[i].toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tstring_array[i] =\
    \ string_array[i].toUpperCase();\n\t\t}\n\t}\n\treturn string_array.join(\"\"\
    );\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  string = string.split(\"\");\n  string.forEach(function(element, index){\n\
    \    if(string[index] === string[index].toUpperCase()){\n      string[index] =\
    \ string[index].toLowerCase();\n    }\n    else if(string[index] === string[index].toLowerCase()){\n\
    \      string[index] = string[index].toUpperCase();\n    }\n  });\n  return string.join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newString = \"\";\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i]\
    \ === string[i].toUpperCase()) {\n\t\t\tnewString += string[i].toLowerCase();\n\
    \t\t} else {\n\t\t\tnewString += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn\
    \ newString;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var new_str = \"\";\n    for(var i = 0; i < string.length; i++){\n      \
    \  if(string[i] === string[i].toUpperCase()){\n            new_str += string[i].toLowerCase();\n\
    \        }\n        else if(string[i] === string[i].toLowerCase()){\n        \
    \    new_str += string[i].toUpperCase();\n        }\n    }\n    return new_str;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = string.split(\"\");\n    var newNewString = []\n    for (var\
    \ i = 0; i < newString.length; i++){\n        if (newString[i] === newString[i].toUpperCase()){\n\
    \            newNewString.push(newString[i].toLowerCase());\n        } else if\
    \ (newString[i] === newString[i].toLowerCase()){\n            newNewString.push(newString[i].toUpperCase());\n\
    \        }\n    }\n    return newNewString.join(\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  for(var i = 0; i < string.length; i++){\n    if(string[i] === string[i].toUpperCase()){\n\
    \      string = string.replace(string[i], string[i].toLowerCase());\n    }\n \
    \   else if(string[i] === string[i].toLowerCase()){\n      string = string.replace(string[i],\
    \ string[i].toUpperCase());\n    }\n  }\n  return string;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS'\n\nshould loosely deep-equal\n\n'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n    at test (/tmp/tmpdivbg8l6.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdivbg8l6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS',\n  expected: 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.replace(/[a-z]/gi, function(match){\n        return match.toUpperCase()\
    \ === match ? match.toLowerCase() : match.toUpperCase();\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tnew_string = []\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i]\
    \ == string[i].toUpperCase()) {\n\t\t\tnew_string.push(string[i].toLowerCase())\n\
    \t\t}\n\t\telse {\n\t\t\tnew_string.push(string[i].toUpperCase())\n\t\t}\n\t}\n\
    \treturn new_string.join(\"\")\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var result = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      result += string[i].toLowerCase();\n  \
    \  } else {\n      result += string[i].toUpperCase();\n    }\n  }\n  return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(char){\n        if(char == char.toUpperCase()){\n\
    \            return char.toLowerCase();\n        }else{\n            return char.toUpperCase();\n\
    \        }\n    }).join('');\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var output = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ var lowerCase = string[i].toLowerCase();\n        var upperCase = string[i].toUpperCase();\n\
    \        if(string[i] === lowerCase){\n            output += upperCase;\n    \
    \    } else {\n            output += lowerCase;\n        }\n    }\n    return\
    \ output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    string = string.split(\"\");\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[i].toUpperCase()){\n            string[i] = string[i].toLowerCase();\n\
    \        }else{\n            string[i] = string[i].toUpperCase();\n        }\n\
    \    }\n    return string.join(\"\");\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] == string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let result = '';\n    for(let i = 0; i < string.length; i++){\n        let\
    \ letter = string[i];\n        if(letter === letter.toUpperCase()){\n        \
    \    result += letter.toLowerCase();\n        }else if(letter === letter.toLowerCase()){\n\
    \            result += letter.toUpperCase();\n        }\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //Write your code here\n    var new_string = \"\";\n    for(var i = 0; i\
    \ < string.length; i++){\n        if(string[i] == string[i].toUpperCase()){\n\
    \            new_string += string[i].toLowerCase();\n        }else{\n        \
    \    new_string += string[i].toUpperCase();\n        }\n    }\n    return new_string;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    const flipCase = {\n        \"a\": \"A\",\n        \"b\": \"B\",\n      \
    \  \"c\": \"C\",\n        \"d\": \"D\",\n        \"e\": \"E\",\n        \"f\"\
    : \"F\",\n        \"g\": \"G\",\n        \"h\": \"H\",\n        \"i\": \"I\",\n\
    \        \"j\": \"J\",\n        \"k\": \"K\",\n        \"l\": \"L\",\n       \
    \ \"m\": \"M\",\n        \"n\": \"N\",\n        \"o\": \"O\",\n        \"p\":\
    \ \"P\",\n        \"q\": \"Q\",\n        \"r\": \"R\",\n        \"s\": \"S\",\n\
    \        \"t\": \"T\",\n        \"u\": \"U\",\n        \"v\": \"V\",\n       \
    \ \"w\": \"W\",\n        \"x\": \"X\",\n        \"y\": \"Y\",\n        \"z\":\
    \ \"Z\",\n        \"A\": \"a\",\n        \"B\": \"b\",\n        \"C\": \"c\",\n\
    \        \"D\": \"d\",\n        \"E\": \"e\",\n        \"F\": \"f\",\n       \
    \ \"G\": \"g\",\n        \"H\": \"h\",\n        \"I\": \"i\",\n        \"J\":\
    \ \"j\",\n        \"K\": \"k\",\n        \"L\": \"l\",\n        \"M\": \"m\",\n\
    \        \"N\": \"n\",\n        \"O\": \"o\",\n        \"P\": \"p\",\n       \
    \ \"Q\": \"q\",\n        \"R\": \"r\",\n        \"S\": \"s\",\n        \"T\":\
    \ \"t\",\n        \"U\": \"u\",\n        \"V\": \"v\",\n        \"W\": \"w\",\n\
    \        \"X\": \"x\",\n        \"Y\": \"y\",\n        \"Z\": \"z\"\n    }\n \
    \   let result = \"\"\n    for (i = 0; i < string.length; i++){\n        let character\
    \ = string[i]\n        let newCharacter = flipCase[character]\n        result\
    \ += newCharacter\n    }\n    return result\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hELLOundefined'\n\
    \nshould loosely deep-equal\n\n'hELLO!'\n    at test (/tmp/tmpk1i_bxtm.js:74:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk1i_bxtm.js:78:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hELLOundefined',\n\
    \  expected: 'hELLO!',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let newString = \"\";\n    for(let i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \treturn string.replace(/[a-z]/gi, function(value){\n\t\tif(value.toUpperCase()\
    \ == value){\n\t\t\treturn value.toLowerCase();\n\t\t}else{\n\t\t\treturn value.toUpperCase();\n\
    \t\t}\n\t});\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var letters = string.split(\"\");\n  var newArray = [];\n  for (var i = 0;\
    \ i < letters.length; i++) {\n    if (letters[i] === letters[i].toUpperCase())\
    \ {\n      newArray.push(letters[i].toLowerCase());\n    }\n    else {\n     \
    \ newArray.push(letters[i].toUpperCase());\n    }\n  }\n  return newArray.join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(character){\n        if(character ===\
    \ character.toUpperCase()){\n            return character.toLowerCase();\n   \
    \     }\n        else{\n            return character.toUpperCase();\n        }\n\
    \    }).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var output = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ if(string[i] == string[i].toUpperCase()){\n            output += string[i].toLowerCase();\n\
    \        }\n        else{\n            output += string[i].toUpperCase();\n  \
    \      }\n    }\n    return output;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar x = string.length\n\tvar string = string.split(\"\")\n\t\tfor (i=0; i<x;\
    \ i++){\n\t\t\tif (string[i] === string[i].toUpperCase()){\n\t\t\t\tstring[i]\
    \ = string[i].toLowerCase()\n\t\t\t}\n\t\t\telse if (string[i] === string[i].toLowerCase()){\n\
    \t\t\t\tstring[i] = string[i].toUpperCase()\n\t\t\t}\n\t\t}\n\tstring = string.join(\"\
    \")\n\treturn string\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    console.log(\"Running flip_case...\");\n    var newString = \"\";\n    for\
    \ (var i = 0; i < string.length; i++){\n        if (string[i] === string[i].toUpperCase()){\n\
    \            newString += string[i].toLowerCase();\n        } else {\n       \
    \     newString += string[i].toUpperCase();\n        }\n    }\n    return newString;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Running flip_case...

    Running flip_case...

    Running flip_case...

    '
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var f=\"\";\n    for(i=0;i<string.length;i++){\n        if(string[i]==string[i].toUpperCase()){\n\
    \            f=f+string[i].toLowerCase();\n        }\n        else{\n        \
    \    f=f+string[i].toUpperCase();\n        }\n    }\n    return f;\n}\nvar result=flip_case(\"\
    Hello\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var result = '';\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (string[i] === string[i].toUpperCase()){\n            result += string[i].toLowerCase();\n\
    \        }\n        else {\n            result += string[i].toUpperCase();\n \
    \       }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n  \
    \  }\n    else {\n      flipped += string[i].toUpperCase();\n    }\n  }\n  return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var array = [];\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (string[i] === string[i].toUpperCase()){\n            array.push(string[i].toLowerCase());\n\
    \        }\n        else{\n            array.push(string[i].toUpperCase());\n\
    \        }\n    }\n    return array.join(\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(char){\n        if(char === char.toUpperCase()){\n\
    \            return char.toLowerCase();\n        } else {\n            return\
    \ char.toUpperCase();\n        }\n    }).join('');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    // Find the index of each letter in the alphabet.\n    //  If the index is\
    \ divisible by 2, add 32 to the ascii code of the letter to make it capital\n\
    \    //  If the index is not divisible by 2, subtract 32 from the ascii code of\
    \ the letter to make it lowercase\n    //  Add the new ascii code to a string\
    \ and return the string\n    let new_string = '';\n    for (let i = 0; i < string.length;\
    \ i++){\n        let index = string.charCodeAt(i);\n        if (index >= 97 &&\
    \ index <= 122){\n            new_string += String.fromCharCode(index - 32);\n\
    \        }\n        else if (index >= 65 && index <= 90){\n            new_string\
    \ += String.fromCharCode(index + 32);\n        }\n        else {\n           \
    \ new_string += string[i];\n        }\n    }\n    return new_string;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  return string.replace(/[a-z]/gi, function(m){\n    return m.toUpperCase() ==\
    \ m ? m.toLowerCase() : m.toUpperCase();\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var result = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ if(string[i] == string[i].toUpperCase()){\n            result += string[i].toLowerCase();\n\
    \        }else{\n            result += string[i].toUpperCase();\n        }\n \
    \   }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar string_array = string.split(\"\");\n\tvar array_length = string_array.length;\n\
    \tvar flipped_array = [];\n\tfor (var index = 0; index < array_length; index++){\n\
    \t\tif (string_array[index] == string_array[index].toUpperCase()){\n\t\t\tflipped_array.push(string_array[index].toLowerCase());\n\
    \t\t}\n\t\telse {\n\t\t\tflipped_array.push(string_array[index].toUpperCase());\n\
    \t\t}\n\t}\n\tvar flipped_string = flipped_array.join(\"\");\n\treturn flipped_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\"\n    for (var i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase()\n\
    \        }\n        else{\n            newString += string[i].toUpperCase()\n\
    \        }\n    }\n    return newString\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newStr = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string[i]\
    \ == string[i].toUpperCase()){\n\t\t\tnewStr += string[i].toLowerCase();\n\t\t\
    }\n\t\telse if(string[i] == string[i].toLowerCase()){\n\t\t\tnewStr += string[i].toUpperCase();\n\
    \t\t}\n\t}\n\treturn newStr;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(x => (x === x.toUpperCase()) ? x.toLowerCase()\
    \ : x.toUpperCase()).join('');\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped_string = \"\";\n    for (var i = 0; i < string.length; i++){\n\
    \        if (string[i] == string[i].toUpperCase()){\n            flipped_string\
    \ += string[i].toLowerCase();\n        }\n        else{\n            flipped_string\
    \ += string[i].toUpperCase();\n        }\n    }\n    return flipped_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var result = '';\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (string[i] === string[i].toUpperCase()){\n            result += string[i].toLowerCase();\n\
    \        } else {\n            result += string[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var new_string = '';\n    for (var i = 0; i < string.length; i++){\n    \
    \    var char = string[i];\n        if (char === char.toUpperCase()){\n      \
    \      new_string += char.toLowerCase();\n        }\n        else {\n        \
    \    new_string += char.toUpperCase();\n        }\n    }\n    return new_string;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(elem){\n        if(elem.toUpperCase()\
    \ === elem){\n            return elem.toLowerCase();\n        } else {\n     \
    \       return elem.toUpperCase();\n        }\n    }).join('');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] == string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    }\n    else {\n      newString += string[i].toUpperCase();\n    }\n  }\n\
    \  return newString;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newString = '';\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i]\
    \ == string[i].toUpperCase()) {\n\t\t\tnewString += string[i].toLowerCase();\n\
    \t\t} else {\n\t\t\tnewString += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn\
    \ newString;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map( function(character){\n        if (character\
    \ === character.toUpperCase()){\n            return character.toLowerCase();\n\
    \        }\n        return character.toUpperCase();\n    }).join('');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n  \
    \  }\n    else {\n      flipped += string[i].toUpperCase();\n    }\n  }\n  return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  return string.split('').map(char => {\n    if (char.toUpperCase() === char)\
    \ {\n      return char.toLowerCase();\n    } else {\n      return char.toUpperCase();\n\
    \    }\n  }).join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp69020djp.js:14:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp69020djp.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped_string = \"\";\n    for (var i = 0; i < string.length; i++){\n\
    \        var character = string[i];\n        var character_code = character.charCodeAt(0);\n\
    \        if (character_code < 91 && character_code > 64){\n            flipped_string\
    \ += String.fromCharCode(character_code + 32);\n        } else if (character_code\
    \ < 123 && character_code > 96){\n            flipped_string += String.fromCharCode(character_code\
    \ - 32);\n        } else {\n            flipped_string += character;\n       \
    \ }\n    }\n    return flipped_string;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newstring = \"\"\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newstring += string[i].toLowerCase()\n\
    \    }\n    else {\n      newstring += string[i].toUpperCase()\n    }\n  }\n \
    \ return newstring\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  //create result string\n  let flipped = \"\";\n  //loop through string\n  for(let\
    \ i = 0; i < string.length; i++){\n    //check if the character is alphabetic\n\
    \    if(string[i].match(/[a-z]/i)){\n      //if alphabetic, check if it is uppercase\n\
    \      if(string[i] === string[i].toUpperCase()){\n        //if uppercase, change\
    \ to lowercase\n        flipped += string[i].toLowerCase();\n      } else {\n\
    \        //if lowercase, change to uppercase\n        flipped += string[i].toUpperCase();\n\
    \      }\n    } else {\n      //if not alphabetic, add the character without converting\n\
    \      flipped += string[i];\n    }\n  }\n  //return result string\n  return flipped;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar flipped_case = \"\";\n\tfor (var i = 0; i < string.length; i++){\n\t\tvar\
    \ character = string[i];\n\t\tif (character == character.toUpperCase()){\n\t\t\
    \tflipped_case += character.toLowerCase();\n\t\t} else {\n\t\t\tflipped_case +=\
    \ character.toUpperCase();\n\t\t}\n\t}\n\treturn flipped_case;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //split the string into characters\n    //iterate through the characters\n\
    \    //for each character, check if it is lowercase or uppercase\n    //if it\
    \ is lowercase, change it to uppercase\n    //if it is uppercase, change it to\
    \ lowercase\n    //return string\n    var chars = string.split(\"\");\n    for(var\
    \ i = 0; i < chars.length; i++){\n        if(chars[i] === chars[i].toUpperCase()){\n\
    \            chars[i] = chars[i].toLowerCase();\n        }\n        else{\n  \
    \          chars[i] = chars[i].toUpperCase();\n        }\n    }\n    return chars.join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    for(var i = 0; i < string.length; i++){\n        var character = string[i];\n\
    \        if(character == character.toUpperCase()){\n            string = string.replace(character,\
    \ character.toLowerCase());\n        }\n        else if(character == character.toLowerCase()){\n\
    \            string = string.replace(character, character.toUpperCase());\n  \
    \      }\n    }\n    return string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS'\n\nshould loosely deep-equal\n\n'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n    at test (/tmp/tmpr6gw79yp.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr6gw79yp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS',\n  expected: 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n  \
    \  } else {\n      flipped += string[i].toUpperCase();\n    }\n  }\n  return flipped;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var array = string.split(\"\");\n  var new_array = [];\n  for (var i = 0; i\
    \ < array.length; i++){\n    if (array[i] == array[i].toUpperCase()){\n      new_array.push(array[i].toLowerCase());\n\
    \    }\n    else{\n      new_array.push(array[i].toUpperCase());\n    }\n  }\n\
    \  return new_array.join(\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  return string.split('').map(function(char){\n    if(char === char.toUpperCase()){\n\
    \      return char.toLowerCase();\n    }\n    return char.toUpperCase();\n  }).join('');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp5k9xosqm.js:13:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp5k9xosqm.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n \
    \   }\n    else if (string[i] === string[i].toLowerCase()){\n      flipped +=\
    \ string[i].toUpperCase();\n    }\n    else {\n      flipped += string[i];\n \
    \   }\n  }\n  return flipped;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar stringArray = string.split(\"\");\n\tfor(var i = 0; i < stringArray.length;\
    \ i++){\n\t\tif(stringArray[i] == stringArray[i].toUpperCase()){\n\t\t\tstringArray[i]\
    \ = stringArray[i].toLowerCase();\n\t\t}else{\n\t\t\tstringArray[i] = stringArray[i].toUpperCase();\n\
    \t\t}\n\t}\n\treturn stringArray.join(\"\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped_string = \"\"\n  for (var i = 0; i < string.length; i++){\n   \
    \ if (string[i] === string[i].toUpperCase()){\n      flipped_string += string[i].toLowerCase()\n\
    \    }\n    else {\n      flipped_string += string[i].toUpperCase()\n    }\n \
    \ }\n  return flipped_string\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(char){\n        if(char === char.toUpperCase()){\n\
    \            return char.toLowerCase();\n        } else {\n            return\
    \ char.toUpperCase();\n        }\n    }).join('');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = '';\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        } else {\n            newString += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821855
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newstr = \"\";\n    for (var i = 0; i < string.length; i++){\n      \
    \  var character = string[i];\n        if (character == character.toUpperCase()){\n\
    \            newstr += character.toLowerCase();\n        } else if (character\
    \ == character.toLowerCase()){\n            newstr += character.toUpperCase();\n\
    \        } else {\n            newstr += character;\n        }\n    }\n    return\
    \ newstr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newstring = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      newstring += string[i].toLowerCase();\n\
    \    } else {\n      newstring += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newstring;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  flippedString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      flippedString += string[i].toLowerCase();\n\
    \    }\n    else {\n      flippedString += string[i].toUpperCase();\n    }\n \
    \ }\n  return flippedString;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var result = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      result += string[i].toLowerCase();\n   \
    \ } else {\n      result += string[i].toUpperCase();\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newString = \"\";\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i]\
    \ === string[i].toUpperCase()) {\n\t\t\tnewString += string[i].toLowerCase();\n\
    \t\t}\n\t\telse {\n\t\t\tnewString += string[i].toUpperCase();\n\t\t}\n\t}\n\t\
    return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var out = \"\";\n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ === string[i].toUpperCase()){\n            out += string[i].toLowerCase();\n\
    \        }\n        else{\n            out += string[i].toUpperCase();\n     \
    \   }\n    }\n    return out;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newString = \"\";\n\tfor (var i = 0; i < string.length; i++) {\n\t\tvar\
    \ char = string[i];\n\t\tif (char === char.toUpperCase()) {\n\t\t\tnewString +=\
    \ char.toLowerCase();\n\t\t} else {\n\t\t\tnewString += char.toUpperCase();\n\t\
    \t}\n\t}\n\treturn newString;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    for(var i = 0; i < string.length; i++){\n        var letter = string[i];\n\
    \        if(letter == letter.toUpperCase()){\n            string = string.replace(letter,\
    \ letter.toLowerCase());\n        }\n        else{\n            string = string.replace(letter,\
    \ letter.toUpperCase());\n        }\n    }\n    return string;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS'\n\nshould loosely deep-equal\n\n'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n    at test (/tmp/tmp7us8x_38.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7us8x_38.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS',\n  expected: 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(char){\n        if(char === char.toUpperCase()){\n\
    \            return char.toLowerCase();\n        }\n        return char.toUpperCase();\n\
    \    }).join('');\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    for(var i = 0; i < string.length; i++){\n        if(string[i] === string[i].toUpperCase()){\n\
    \            console.log(string[i].toLowerCase());\n        }\n        else{\n\
    \            console.log(string[i].toUpperCase());\n        }\n    }\n}\nflip_case(\"\
    Hello\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmpxdyalom1.js:20:10)\n   \
    \ at Object.<anonymous> (/tmp/tmpxdyalom1.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'h

    E

    L

    L

    O

    '
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  //iterate through the string and check if lowercase or uppercase\n  //if lowercase\
    \ use the toUpperCase() method\n  //if uppercase use the toLowerCase() method\n\
    \  //return the string\n  for(var i = 0; i < string.length; i++){\n    if(string[i]\
    \ === string[i].toUpperCase()){\n      string = string.replace(string[i], string[i].toLowerCase());\n\
    \    } else {\n      string = string.replace(string[i], string[i].toUpperCase());\n\
    \    }\n  }\n  return string;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS'\n\nshould loosely deep-equal\n\n'tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS'\n    at test (/tmp/tmp9_qfygpf.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9_qfygpf.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'THESE VIOLENT\
    \ DELIGHTS HAVE VIOLENt ENDS',\n  expected: 'tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //break string into array of characters\n    const array = string.split('');\n\
    \    //loop through array and if characters are upper, downcase, if lower, upcase\n\
    \    for (let i = 0; i < array.length; i++){\n        if (array[i] === array[i].toUpperCase()){\n\
    \            array[i] = array[i].toLowerCase();\n        }\n        else {\n \
    \           array[i] = array[i].toUpperCase();\n        }\n    }\n    //join array\
    \ back into string\n    return array.join('');\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flip = '';\n    for (var i = 0; i < string.length; i++){\n        if\
    \ (string[i] === string[i].toUpperCase()){\n            flip += string[i].toLowerCase();\n\
    \        }\n        else {\n            flip += string[i].toUpperCase();\n   \
    \     }\n    }\n    return flip;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped = string.split(\"\").map(function(char){\n        if(char ===\
    \ char.toUpperCase()){\n            return char.toLowerCase();\n        } else\
    \ if(char === char.toLowerCase()){\n            return char.toUpperCase();\n \
    \       } else {\n            return char;\n        }\n    });\n    return flipped.join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let newArr = []\n    for(let i = 0; i < string.length; i++){\n        if(string[i]\
    \ === string[i].toUpperCase()){\n            newArr.push(string[i].toLowerCase())\n\
    \        }else{\n            newArr.push(string[i].toUpperCase())\n        }\n\
    \    }\n    return newArr.join('')\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flippedString = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[i].toUpperCase()){\n            flippedString\
    \ += string[i].toLowerCase();\n        } else {\n            flippedString +=\
    \ string[i].toUpperCase();\n        }\n    }\n    return flippedString;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newstring = \"\";\n    for (var i = 0; i < string.length; i++){\n   \
    \     if (string[i] == string[i].toUpperCase()){\n            newstring += string[i].toLowerCase();\n\
    \        } else {\n            newstring += string[i].toUpperCase();\n       \
    \ }\n    }\n    return newstring;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tlet new_string = \"\";\n\tfor (let char of string){\n\t\tif (char == char.toUpperCase()){\n\
    \t\t\tnew_string += char.toLowerCase();\n\t\t} else {\n\t\t\tnew_string += char.toUpperCase();\n\
    \t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar flipString = \"\";\n\t//for loop to iterate through string\n\tfor(var i\
    \ = 0; i < string.length; i++){\n\t\t//if character is lowercase, change to uppercase\n\
    \t\tif(string[i] === string[i].toLowerCase()){\n\t\t\tflipString += string[i].toUpperCase();\n\
    \t\t}\n\t\t//if character is uppercase, change to lowercase\n\t\telse{\n\t\t\t\
    flipString += string[i].toLowerCase();\n\t\t}\n\t}\n\treturn flipString;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar new_string = \"\";\n\tfor (var i = 0; i < string.length; i++){\n\t\tif (string[i]\
    \ === string[i].toUpperCase()){\n\t\t\tnew_string += string[i].toLowerCase();\n\
    \t\t}\n\t\telse {\n\t\t\tnew_string += string[i].toUpperCase();\n\t\t}\n\t}\n\t\
    return new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] == string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(c){\n        if(c === c.toUpperCase()){\n\
    \            return c.toLowerCase();\n        }\n        return c.toUpperCase();\n\
    \    }).join('');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newStr = \"\";\n  for(var i = 0; i < string.length; i++){\n    if(string[i]\
    \ === string[i].toUpperCase()){\n      newStr += string[i].toLowerCase();\n  \
    \  }else if(string[i] === string[i].toLowerCase()){\n      newStr += string[i].toUpperCase();\n\
    \    }\n  }\n  return newStr;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var new_string = \"\";\n    for (var i = 0; i < string.length; i++){\n  \
    \      if (string[i] === string[i].toUpperCase()){\n            new_string +=\
    \ string[i].toLowerCase();\n        }\n        else {\n            new_string\
    \ += string[i].toUpperCase();\n        }\n    }\n    return new_string;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  string = string.split(\"\");\n  for(var i = 0; i < string.length; i++){\n \
    \   if(string[i] == string[i].toUpperCase()){\n      string[i] = string[i].toLowerCase();\n\
    \    }\n    else{\n      string[i] = string[i].toUpperCase();\n    }\n  }\n  return\
    \ string.join(\"\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar result = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\tvar character\
    \ = string[i];\n\t\tif(character == character.toUpperCase()){\n\t\t\tresult +=\
    \ character.toLowerCase();\n\t\t}\n\t\telse{\n\t\t\tresult += character.toUpperCase();\n\
    \t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flippedString = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[i].toUpperCase()){\n            flippedString\
    \ += string[i].toLowerCase();\n        }\n        else{\n            flippedString\
    \ += string[i].toUpperCase();\n        }\n    }\n    return flippedString;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\"\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase()\n\
    \    } else {\n      newString += string[i].toUpperCase()\n    }\n  }\n  return\
    \ newString\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  return string.split('').map(function(letter){\n    return letter.toUpperCase()\
    \ === letter ? letter.toLowerCase() : letter.toUpperCase();\n  }).join('');\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var new_string = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    }\n    else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n\
    \  return new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    // do your work here\n    var flipped = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (string[i] === string[i].toUpperCase()){\n            flipped\
    \ += string[i].toLowerCase();\n        }\n        else{\n            flipped +=\
    \ string[i].toUpperCase();\n        }\n    }\n    return flipped;\n}\nflip_case(\"\
    Hello\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped_string = \"\";\n    for (var i = 0; i < string.length; i++){\n\
    \        if (string[i] === string[i].toUpperCase()){\n            flipped_string\
    \ += string[i].toLowerCase();\n        }\n        else{\n            flipped_string\
    \ += string[i].toUpperCase();\n        }\n    }\n    return flipped_string;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newString = \"\"\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i]\
    \ === string[i].toUpperCase()) {\n\t\t\tnewString += string[i].toLowerCase()\n\
    \t\t}\n\t\telse if (string[i] === string[i].toLowerCase()) {\n\t\t\tnewString\
    \ += string[i].toUpperCase()\n\t\t}\n\t\telse {\n\t\t\tnewString += string[i]\n\
    \t\t}\n\t}\n\treturn newString\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let result = \"\";\n    for(let i = 0; i < string.length; i++){\n       \
    \ let char = string[i];\n        if(char.toUpperCase() === char){\n          \
    \  result += char.toLowerCase();\n        }else{\n            result += char.toUpperCase();\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    }\n    else if (string[i] === string[i].toLowerCase()) {\n      newString\
    \ += string[i].toUpperCase();\n    }\n  }\n  return newString;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp5k9xosqm.js:13:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp5k9xosqm.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(char){\n        if(char.toUpperCase()\
    \ == char){\n            return char.toLowerCase();\n        }else{\n        \
    \    return char.toUpperCase();\n        }\n    }).join('');\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar new_string = '';\n\tfor (var i = 0; i < string.length; i++){\n\t\tif (string[i]\
    \ != string[i].toLowerCase()){\n\t\t\tnew_string += string[i].toLowerCase();\n\
    \t\t}\n\t\telse{\n\t\t\tnew_string += string[i].toUpperCase();\n\t\t}\n\t}\n\t\
    return new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \treturn string.split('').map(char => {\n\t\tif (char === char.toUpperCase())\
    \ return char.toLowerCase();\n\t\telse return char.toUpperCase();\n\t}).join('');\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var new_string = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    }\n    else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n\
    \  return new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var splitString = string.split(\"\");\n    var newString = [];\n    for (var\
    \ i = 0; i < splitString.length; i++){\n        if (splitString[i] === splitString[i].toUpperCase()){\n\
    \            newString.push(splitString[i].toLowerCase());\n        }\n      \
    \  else {\n            newString.push(splitString[i].toUpperCase());\n       \
    \ }\n    }\n    return newString.join(\"\");\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flip = \"\";\n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ === string[i].toUpperCase()){\n            flip += string[i].toLowerCase();\n\
    \        }\n        else{\n            flip += string[i].toUpperCase();\n    \
    \    }\n    }\n    return flip;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //String.fromCharCode(), charCodeAt()\n    var result = \"\";\n    for(var\
    \ i = 0; i < string.length; i++){\n        var ch = string[i];\n        var chCode\
    \ = string.charCodeAt(i);\n        if(chCode >= 65 && chCode <= 90){\n       \
    \     result += String.fromCharCode(chCode + 32);\n        }else if(chCode >=\
    \ 97 && chCode <= 122){\n            result += String.fromCharCode(chCode - 32);\n\
    \        }else{\n            result += ch;\n        }\n    }\n    return result;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var split_string = string.split(\"\");\n    var answer = \"\";\n    for (var\
    \ i = 0; i < split_string.length; i++){\n        if (split_string[i] == split_string[i].toUpperCase()){\n\
    \            answer += split_string[i].toLowerCase();\n        }\n        else{\n\
    \            answer += split_string[i].toUpperCase();\n        }\n    }\n    return\
    \ answer;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = \"\"\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      flipped += string[i].toLowerCase()\n  \
    \  }\n    else {\n      flipped += string[i].toUpperCase()\n    }\n  }\n  return\
    \ flipped\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var result = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ == string[i].toUpperCase()){\n      result += string[i].toLowerCase();\n   \
    \ } else {\n      result += string[i].toUpperCase();\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    }\n    else {\n      newString += string[i].toUpperCase();\n    }\n  }\n\
    \  return newString;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var output = '';\n    for(i=0; i<string.length; i++){\n        if(string[i]\
    \ == string[i].toUpperCase()){\n            output += string[i].toLowerCase();\n\
    \        }else{\n            output += string[i].toUpperCase();\n        }\n \
    \   }\n    return output;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  let result = \"\";\n  for (let i = 0; i < string.length; i++){\n    let letter\
    \ = string[i];\n    if (letter === letter.toUpperCase()){\n      result += letter.toLowerCase();\n\
    \    }\n    else {\n      result += letter.toUpperCase();\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar arr = string.split(\"\");\n\tfor(var i = 0; i < arr.length; i++){\n\t\t\
    if(arr[i] === arr[i].toUpperCase()){\n\t\t\tarr[i] = arr[i].toLowerCase();\n\t\
    \t}else{\n\t\t\tarr[i] = arr[i].toUpperCase();\n\t\t}\n\t}\n\treturn arr.join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //split string into an array\n    var string = string.split(\"\");\n    //for\
    \ each character in array\n    for(var i = 0; i < string.length; i++){\n     \
    \   //if the character is an uppercase letter\n        if(string[i] === string[i].toUpperCase()){\n\
    \            //assign that character to the lowercase letter\n            string[i]\
    \ = string[i].toLowerCase();\n        }\n        //if the character is a lowercase\
    \ letter\n        else if(string[i] === string[i].toLowerCase()){\n          \
    \  //assign that character to the uppercase letter\n            string[i] = string[i].toUpperCase();\n\
    \        }\n    }\n    //return the array joined back together\n    return string.join(\"\
    \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    // TODO: you code here\n    var result = \"\";\n    for (var i = 0; i < string.length;\
    \ i++){\n        if (string[i] == string[i].toUpperCase()){\n            result\
    \ += string[i].toLowerCase();\n        } else if (string[i] == string[i].toLowerCase()){\n\
    \            result += string[i].toUpperCase();\n        } else {\n          \
    \  result += string[i];\n        }\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = \"\";\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n \
    \   } else {\n      flipped += string[i].toUpperCase();\n    }\n  }\n  return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped = \"\";\n    for (var i = 0; i < string.length; i++){\n     \
    \   if (string[i] === string[i].toUpperCase()){\n            flipped += string[i].toLowerCase();\n\
    \        } else {\n            flipped += string[i].toUpperCase();\n        }\n\
    \    }\n    return flipped;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(function(l){\n        return l === l.toUpperCase()\
    \ ? l.toLowerCase() : l.toUpperCase();\n    }).join('');\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var result = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ var character = string[i];\n        if(character === character.toUpperCase()){\n\
    \            result += character.toLowerCase();\n        }else{\n            result\
    \ += character.toUpperCase();\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar flipped = \"\";\n\tfor (var i = 0; i < string.length; i++){\n\t\tif (string[i]\
    \ === string[i].toUpperCase()){\n\t\t\tflipped += string[i].toLowerCase();\n\t\
    \t}\n\t\telse{\n\t\t\tflipped += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newStr = \"\"\n    for(var i = 0; i < string.length; i++){\n        if(string[i]\
    \ == string[i].toUpperCase()){\n            newStr += string[i].toLowerCase()\n\
    \        }\n        else{\n            newStr += string[i].toUpperCase()\n   \
    \     }\n    }\n    return newStr\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flippedString = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[i].toUpperCase()){\n            flippedString\
    \ += string[i].toLowerCase();\n        }\n        else{\n            flippedString\
    \ += string[i].toUpperCase();\n        }\n    }\n    return flippedString;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var flipped = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      flipped += string[i].toLowerCase();\n \
    \   } else {\n      flipped += string[i].toUpperCase();\n    }\n  }\n  return\
    \ flipped;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var split = string.split(\"\");\n    var result = [];\n    for (var i = 0;\
    \ i < split.length; i++){\n        if (split[i] == split[i].toUpperCase()){\n\
    \            result.push(split[i].toLowerCase());\n        }\n        else {\n\
    \            result.push(split[i].toUpperCase());\n        }\n    }\n    var final\
    \ = result.join(\"\");\n    return final;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nflip_case(\"Hello\");\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  let result = '';\n  for (let i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      result += string[i].toLowerCase();\n  \
    \  } else {\n      result += string[i].toUpperCase();\n    }\n  }\n  return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var new_string = \"\"\n    for (var i = 0; i < string.length; i++){\n   \
    \     if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase()\n\
    \        }\n        else{\n            new_string += string[i].toUpperCase()\n\
    \        }\n    }\n    return new_string\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newString = \"\";\n    for(var i = 0; i < string.length; i++){\n    \
    \    if(string[i] === string[i].toUpperCase()){\n            newString += string[i].toLowerCase();\n\
    \        }\n        else{\n            newString += string[i].toUpperCase();\n\
    \        }\n    }\n    return newString;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var i;\n    var newStr = \"\";\n    for(i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[i].toUpperCase()){\n            newStr += string[i].toLowerCase();\n\
    \        }\n        else{\n            newStr += string[i].toUpperCase();\n  \
    \      }\n    }\n    return newStr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar newstring = \"\";\n\tfor (var i = 0; i < string.length; i++) {\n\t\tif (string[i]\
    \ == string[i].toUpperCase()) {\n\t\t\tnewstring += string[i].toLowerCase();\n\
    \t\t} else {\n\t\t\tnewstring += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn\
    \ newstring;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //Code Here\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp__e_6zbn.js:12:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp__e_6zbn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar result = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\tvar current_char\
    \ = string[i];\n\t\tif(current_char === current_char.toUpperCase()){\n\t\t\tresult\
    \ += current_char.toLowerCase();\n\t\t}\n\t\telse if(current_char === current_char.toLowerCase()){\n\
    \t\t\tresult += current_char.toUpperCase();\n\t\t}\n\t\telse{\n\t\t\tresult +=\
    \ current_char;\n\t\t}\n\t}\n\treturn result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var x = string.split(\"\");\n  for (var i = 0; i < x.length; i++){\n    if\
    \ (x[i] === x[i].toUpperCase()){\n      x[i] = x[i].toLowerCase();\n    } else\
    \ if (x[i] === x[i].toLowerCase()){\n      x[i] = x[i].toUpperCase();\n    }\n\
    \  }\n  var y = x.join(\"\");\n  return y;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar output = '';\n\tfor (var i = 0; i < string.length; i++){\n\t\tif (string[i]\
    \ === string[i].toUpperCase()){\n\t\t\toutput += string[i].toLowerCase();\n\t\t\
    } else {\n\t\t\toutput += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn output;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var solution = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      solution += string[i].toLowerCase();\n\
    \    }\n    else {\n      solution += string[i].toUpperCase();\n    }\n  }\n \
    \ return solution;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar new_string = \"\";\n\tfor (var i = 0; i < string.length; i++){\n\t\tvar\
    \ char = string[i];\n\t\tif (char == char.toUpperCase()){\n\t\t\tnew_string +=\
    \ char.toLowerCase();\n\t\t}\n\t\telse {\n\t\t\tnew_string += char.toUpperCase();\n\
    \t\t}\n\t}\n\treturn new_string;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 1
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    //We can't use string.split() here, so I'll set up a for loop to iterate\
    \ through the string.\n    for(var i = 0; i < string.length; i++){\n        //Storing\
    \ the letter we're looking at as a variable.\n        var letter = string[i];\n\
    \        //Using an if/else statement to flip lowercase letters to uppercase and\
    \ vice versa. If a letter is uppercase, it is changed to lowercase. If a letter\
    \ is lowercase, it is changed to uppercase.\n        if(letter === letter.toUpperCase()){\n\
    \            letter = letter.toLowerCase();\n        }else{\n            letter\
    \ = letter.toUpperCase();\n        }\n        //Replacing the original letter\
    \ with the swapped letter.\n        string = string.replace(string[i], letter);\n\
    \    }\n    //Printing out the new string, with uppercase and lowercase swapped.\n\
    \    console.log(string);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\
    \");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp6ole1717.js:27:10)\n   \
    \ at Object.<anonymous> (/tmp/tmp6ole1717.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '

    '
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var new_string = \"\";\n  for (var i = 0; i < string.length; i++){\n    if\
    \ (string[i] === string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    } else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n  return\
    \ new_string;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var a=string.split(\"\");\n    for(var i=0;i<a.length;i++){\n        if(a[i]==a[i].toUpperCase()){\n\
    \            a[i]=a[i].toLowerCase();\n        }\n        else{\n            a[i]=a[i].toUpperCase();\n\
    \        }\n    }\n    var newstring=a.join(\"\");\n    return newstring;\n}\n\
    flip_case(\"Hello\")\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let flipped = '';\n    for (let char of string){\n        if (char.toUpperCase()\
    \ == char){\n            flipped += char.toLowerCase();\n        } else {\n  \
    \          flipped += char.toUpperCase();\n        }\n    }\n    return flipped;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \t//for some reason .toUpperCase on all chars did not work, so I did this instead\n\
    \tvar upperCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tvar lowerCase = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tvar answer = \"\";\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(upperCase.indexOf(string[i])\
    \ != -1){\n\t\t\tanswer += string[i].toLowerCase();\n\t\t}\n\t\telse if(lowerCase.indexOf(string[i])\
    \ != -1){\n\t\t\tanswer += string[i].toUpperCase();\n\t\t}\n\t\telse{\n\t\t\t\
    answer += string[i];\n\t\t}\n\t}\n\treturn answer;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar lowerString = string.toLowerCase();\n\tvar upperString = string.toUpperCase();\n\
    \tvar result = \"\";\n\tfor (var i = 0; i < string.length; i++){\n\t\tif (string[i]\
    \ === lowerString[i]){\n\t\t\tresult += upperString[i];\n\t\t} else if (string[i]\
    \ === upperString[i]){\n\t\t\tresult += lowerString[i];\n\t\t} else {\n\t\t\t\
    result += string[i];\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let newStr = \"\"\n    for(let char of string){\n        if(char === char.toUpperCase()){\n\
    \            newStr += char.toLowerCase()\n        }else{\n            newStr\
    \ += char.toUpperCase()\n        }\n    }\n    return newStr\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var modified_str = \"\"\n    for(var x = 0; x < string.length; x++){\n  \
    \      var check_case = string[x]\n        if(check_case === check_case.toUpperCase()){\n\
    \            modified_str += check_case.toLowerCase()\n        }\n        else{\n\
    \            modified_str += check_case.toUpperCase()\n        }\n    }\n    return\
    \ modified_str\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var new_string = '';\n  for (var i = 0; i < string.length; i++){\n    if (string[i]\
    \ === string[i].toUpperCase()){\n      new_string += string[i].toLowerCase();\n\
    \    } else {\n      new_string += string[i].toUpperCase();\n    }\n  }\n  return\
    \ new_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \tvar flipped_case = \"\";\n\tfor (var i = 0; i < string.length; i++){\n\t\tif\
    \ (string[i] == string[i].toUpperCase()){\n\t\t\tflipped_case += string[i].toLowerCase();\n\
    \t\t} else {\n\t\t\tflipped_case += string[i].toUpperCase();\n\t\t}\n\t}\n\treturn\
    \ flipped_case;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    let new_string = '';\n    for (let i = 0; i < string.length; i++){\n    \
    \    if (string[i] === string[i].toUpperCase()){\n            new_string += string[i].toLowerCase();\n\
    \        } else {\n            new_string += string[i].toUpperCase();\n      \
    \  }\n    }\n    return new_string;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  return string.split('').map(function(item){\n    if(/[a-z]/.test(item)){\n\
    \      return item.toUpperCase();\n    }else if(/[A-Z]/.test(item)){\n      return\
    \ item.toLowerCase();\n    }else{\n      return item;\n    }\n  }).join('');\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    var\
    \ letter = string[i];\n    if (letter === letter.toUpperCase()) {\n      newString\
    \ += letter.toLowerCase();\n    } else {\n      newString += letter.toUpperCase();\n\
    \    }\n  }\n  return newString;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flippedString = '';\n    for (var i = 0; i < string.length; i++){\n \
    \       if (string[i] === string[i].toUpperCase()){\n            flippedString\
    \ += string[i].toLowerCase();\n        } else {\n            flippedString +=\
    \ string[i].toUpperCase();\n        }\n    }\n    return flippedString;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newString = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (string[i] == string[i].toUpperCase()) {\n      newString += string[i].toLowerCase();\n\
    \    } else {\n      newString += string[i].toUpperCase();\n    }\n  }\n  return\
    \ newString;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \  var newStr = '';\n  for (var i = 0; i < string.length; i++) {\n    if (string[i]\
    \ === string[i].toUpperCase()) {\n      newStr += string[i].toLowerCase();\n \
    \   } else {\n      newStr += string[i].toUpperCase();\n    }\n  }\n  return newStr;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newStr = \"\";\n    for(var i = 0; i < string.length; i++){\n       \
    \ var char = string[i];\n        if(char == char.toUpperCase()){\n           \
    \ newStr += char.toLowerCase();\n        }\n        else{\n            newStr\
    \ += char.toUpperCase();\n        }\n    }\n    return newStr;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flipped_string = \"\"\n    for (var i = 0; i < string.length; i++) {\n\
    \        if (string[i] === string[i].toUpperCase()) {\n            flipped_string\
    \ += string[i].toLowerCase()\n        } else {\n            flipped_string +=\
    \ string[i].toUpperCase()\n        }\n    }\n    return flipped_string\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var newArray=[];\n    var stringArray=string.split(\"\");\n    var newString=\"\
    \";\n    for(var i=0;i<stringArray.length;i++){\n        if(stringArray[i]==stringArray[i].toUpperCase()){\n\
    \            newArray.push(stringArray[i].toLowerCase());\n        }\n       \
    \ else{\n            newArray.push(stringArray[i].toUpperCase());\n        }\n\
    \    }\n    newString=newArray.join(\"\");\n    return newString;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = flip_case;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"\
    ),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights have violent\
    \ ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    return string.split('').map(letter => letter === letter.toUpperCase() ? letter.toLowerCase()\
    \ : letter.toUpperCase()).join('');\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = flip_case;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"\
    These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856
- exit_code: 0
  program: "//For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n// >>> flip_case(\"Hello\")\n// \"hELLO\"\nfunction flip_case(string){\n\
    \    var flippedString = \"\";\n    for(var i = 0; i < string.length; i++){\n\
    \        if(string[i] === string[i].toUpperCase()){\n            flippedString\
    \ += string[i].toLowerCase();\n        }\n        else{\n            flippedString\
    \ += string[i].toUpperCase();\n        }\n    }\n    return flippedString;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = flip_case;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    Hello!\"),\"hELLO!\");\n  assert.deepEqual(candidate(\"These violent delights\
    \ have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821856

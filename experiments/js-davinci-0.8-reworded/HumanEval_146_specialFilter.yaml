name: HumanEval_146_specialFilter
language: js
prompt: "//Write a function that takes an array of numbers as input and returns \n\
  // the number of elements in the array that are greater than 10 and both \n// first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n// >>>\
  \ specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2, -3, 45,\
  \ 21, 109])\n// 2\nfunction specialFilter(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
  \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
  \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
  \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
  }\n\ntest();"
completions: ["\tvar count = 0;\n\tfor(var i = 0; i < nums.length; i++){\n\t\tif(nums[i]\
    \ > 10 && (nums[i] % 2 === 1) && (nums[i] % 10 === 1 || nums[i] % 10 === 3 ||\
    \ nums[i] % 10 === 5 || nums[i] % 10 === 7 || nums[i] % 10 === 9)){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n", "\tvar count = 0;\n\tfor(var i = 0; i < nums.length;\
    \ i++){\n\t\tif(nums[i] > 10 && ((nums[i] % 10) % 2 != 0) && (Math.floor(nums[i]\
    \ / 10) % 2 != 0)){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  let\
    \ count = 0;\n  for(let i = 0; i < nums.length; i++){\n    let num = nums[i];\n\
    \    let firstDigit = nums[i].toString()[0];\n    let lastDigit = nums[i].toString()[nums[i].toString().length\
    \ - 1];\n    if(num > 10 && firstDigit % 2 !== 0 && lastDigit % 2 !== 0){\n  \
    \    count++;\n    }\n  }\n  return count;\n}\n", "    let greaterThanTen = nums.filter(greaterThanTen);\n\
    \    let isOdd = greaterThanTen.filter(isOdd);\n    let bothFirstAndLast = isOdd.filter(bothFirstAndLast);\n\
    \    return bothFirstAndLast.length;\n  }\n  function greaterThanTen(num){\n \
    \   return num > 10;\n  }\n  function isOdd(num){\n    return num % 2 === 1;\n\
    \  }\n  function bothFirstAndLast(num){\n    let str = num.toString();\n    let\
    \ firstDigit = parseInt(str[0]);\n    let lastDigit = parseInt(str[str.length\
    \ - 1]);\n    return firstDigit % 2 === 1 && lastDigit % 2 === 1;\n  }\n\n  //\
    \ 5. Write a function that takes an array of words (strings) as input and returns\
    \ \n  // the number of times the word 'red' appears in the array.\n  // For example:\n\
    \  // >>> numberOfReds(['red', 'blue', 'red', 'white', 'green'])\n  // 2\n  //\
    \ >>> numberOfReds(['red', 'blue', 'green'])\n  // 1\n  // >>> numberOfReds(['red',\
    \ 'blue', 'red', 'red', 'red'])\n  // 3\n  function numberOfReds(words){\n   \
    \ return words.filter(isRed).length;\n  }\n  function isRed(word){\n    return\
    \ word === 'red';\n  }\n\n  // 6. Write a function that takes an array of words\
    \ (strings) as input and returns \n  // the number of times the word 'red' appears\
    \ in the array.\n  // For example:\n  // >>> numberOfReds(['red', 'blue', 'red',\
    \ 'white', 'green'])\n  // 2\n  // >>> numberOfReds(['red', 'blue', 'green'])\n\
    \  // 1\n  // >>> numberOfReds(['red', 'blue', 'red', 'red', 'red'])\n  // 3\n\
    \  function numberOfReds(words){\n    return words.filter(isRed).length;\n  }\n\
    \  function isRed(word", "  let count = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    if(Math.abs(nums[i]) > 10 && Math.abs(nums[i]) % 2 !== 0 && nums[i]\
    \ % 10 % 2 !== 0){\n      count += 1;\n    }\n  }\n  return count;\n}", "  var\
    \ count = 0;\n  for(var i = 0; i < nums.length; i++){\n    var n = nums[i];\n\
    \    if(n > 10 && (n % 2 !== 0) && (n % 10 % 2 !== 0)){\n      count++;\n    }\n\
    \  }\n  return count;\n}", "  var result = 0;\n  nums.forEach(function(n){\n \
    \   var str = n.toString();\n    if (n > 10 && (str[0] % 2 != 0 && str[str.length\
    \ - 1] % 2 != 0)){\n      result++;\n    }\n  });\n  return result;\n}\n", " \
    \   return nums.filter(function(item){\n        return item>10 && item.toString().substr(0,1)%2\
    \ && item.toString().substr(-1)%2\n    }).length\n}\n", "    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(isGreaterThan10(nums[i])\
    \ && isFirstOdd(nums[i]) && isLastOdd(nums[i])){\n            count++;\n     \
    \   }\n    }\n    return count;\n}\n", "    let counter = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        if(nums[i] > 10 && isFirstDigitOdd(nums[i])\
    \ && isLastDigitOdd(nums[i])){\n            counter++;\n        }\n    }\n   \
    \ return counter;\n}\n", "\n}\n\n\nmodule.exports = {\n    collapseDuplicates,\n\
    \    countElements,\n    isEven,\n    groupOddEven,\n    filterNumbers,\n    specialFilter\n\
    }", "    var numOfElements = 0;\n    for(var i = 0; i < nums.length; i++){\n \
    \       var number = nums[i];\n        if(number > 10 && firstAndLastDigitsAreOdd(number)){\n\
    \            numOfElements = numOfElements + 1;\n        }\n    }\n    return\
    \ numOfElements;\n}\n", "    var count = 0;\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var num = nums[i];\n        var last = num % 10;\n        var\
    \ first = 0;\n        while(num > 0){\n            first = num % 10;\n       \
    \     num = num/10;\n        }\n        if(num > 10 && last % 2 != 0 && first\
    \ % 2 != 0){\n            count++;\n        }\n    }\n    return count;\n}", " \
    \ let arr = [];\n  for(let i = 0; i < nums.length; i++){\n    let str = nums[i].toString();\n\
    \    if(str.length > 1){\n      if(str[0] % 2 !== 0 && str[str.length - 1] % 2\
    \ !== 0){\n        arr.push(nums[i]);\n      }\n    }\n  }\n  return arr.length;\n\
    }", "\treturn nums.filter(function(n){\n\t\tvar firstDigit = Math.floor(n/10);\n\
    \t\tvar lastDigit = n%10;\n\t\tif (n > 10 && firstDigit%2!==0 && lastDigit%2!==0){\n\
    \t\t\treturn n;\n\t\t}\n\t}).length;\n}\nspecialFilter([15, -73, 14, -15]); //1\n\
    specialFilter([33, -2, -3, 45, 21, 109]); //2\n", "\treturn nums.filter(function(n){\n\
    \t\treturn n > 10 && isOdd(n%10) && isOdd(Math.floor(n/10));\n\t}).length;\n}\n",
  "    return nums.filter(num => num > 10 && num % 2 !== 0).length;\n}\n", "    let\
    \ count = 0;\n    for(let i = 0; i < nums.length; i++){\n        let firstDigit\
    \ = parseInt(nums[i].toString()[0]);\n        let lastDigit = parseInt(nums[i].toString()[nums[i].toString().length\
    \ - 1]);\n        if(nums[i] > 10 && firstDigit % 2 === 1 && lastDigit % 2 ===\
    \ 1){\n            count++;\n        }\n    }\n    return count;\n}\n", "\tfunction\
    \ hasSameFirstAndLastDigit(n){\n\t\treturn (n % 10) === (n % Math.pow(10, Math.floor(Math.log10(n))));\n\
    \t}\n\tfunction isFirstAndLastDigitOdd(n){\n\t\tvar lastDigit = n % 10;\n\t\t\
    var secondToLastDigit = n % 100 / 10;\n\t\treturn (lastDigit % 2 === 1) && (secondToLastDigit\
    \ % 2 === 1);\n\t}\n\treturn nums.filter(function(n){\n\t\treturn n > 10 && hasSameFirstAndLastDigit(n)\
    \ && isFirstAndLastDigitOdd(n);\n\t}).length;\n}\n", "  // write your code here\n\
    }\n\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

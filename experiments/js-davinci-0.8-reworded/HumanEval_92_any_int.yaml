name: HumanEval_92_any_int
language: js
prompt: "//Create a function that takes 3 numbers.\n// Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  // Returns false in any other cases.\n// Examples\n// >>> any_int(5, 2, 7)\n// true\n\
  // >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n// true\n// >>> any_int(3.6,\
  \ -2.2, 2)\n// false\nfunction any_int(x, y, z){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = any_int;\n  assert.deepEqual(candidate(2, 3, 1),true);\n  assert.deepEqual(candidate(2.5,\
  \ 2, 3),false);\n  assert.deepEqual(candidate(1.5, 5, 3.5),false);\n  assert.deepEqual(candidate(2,\
  \ 6, 2),false);\n  assert.deepEqual(candidate(4, 2, 2),true);\n  assert.deepEqual(candidate(2.2,\
  \ 2.2, 2.2),false);\n  assert.deepEqual(candidate(-4, 6, 2),true);\n  assert.deepEqual(candidate(2,\
  \ 1, 1),true);\n  assert.deepEqual(candidate(3, 4, 7),true);\n  assert.deepEqual(candidate(3.0,\
  \ 4, 7),false);\n}\n\ntest();"
completions: ["    if(x+y == z || x+z == y || y+z == x){\n        return true;\n \
    \   }\n    else if(x === parseInt(x) && y === parseInt(y) && z === parseInt(z)){\n\
    \        return false;\n    }\n    else{\n        return false;\n    }\n}\n",
  "    if (Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)){\n \
    \       let sum = x + y + z;\n        if (x === sum - y - z || y === sum - x -\
    \ z || z === sum - x - y){\n            return true;\n        }\n    }\n    return\
    \ false;\n}", "    return ((x + y === z)||(x + z === y)||(y + z === x)) && (Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z));\n}", "    let sum = x + y;\n\
    \    if(Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z)){\n\
    \        if(sum === z || z === sum) return true;\n        else return false;\n\
    \    }\n    else return false;\n}", "    if(x % 1 === 0 && y % 1 === 0 && z %\
    \ 1 === 0){\n        return true;\n    }\n    else{\n        return false;\n \
    \   }\n}", "    if (((x + y) === z) || ((x + z) === y) || ((y + z) === x)){\n\
    \        return true;\n    } else {\n        return false;\n    }\n}", "    if(x\
    \ == y + z || y == x + z || z == x + y){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }\n}", "    return (x == y + z || y == x + z || z\
    \ == x + y) && Number.isInteger(x) && Number.isInteger(y) && Number.isInteger(z);\n\
    }\n", "    if (typeof x != \"number\" || typeof y != \"number\" || typeof z !=\
    \ \"number\"){\n        return false;\n    }\n    if (x == Math.floor(x) && y\
    \ == Math.floor(y) && z == Math.floor(z)){\n        if (x == y + z || y == x +\
    \ z || z == x + y){\n            return true;\n        }\n    }\n    return false;\n\
    }\nvar x = Math.floor(3.6);", "    if(Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)){\n        let max = Math.max(x, y, z);\n        if(x+y+z-max\
    \ === max){\n            return true;\n        }\n    }\n    return false;\n}",
  "    let sum = x + y;\n    if(x % 1 === 0 && y % 1 === 0 && z % 1 === 0){\n    \
    \    if(z === sum || x === sum || y === sum){\n            return true;\n    \
    \    }\n    }\n    return false;\n}", "    if(x % 1 === 0 && y % 1 === 0 && z\
    \ % 1 === 0){\n        return ((x == y + z) || (y == x + z) || (z == x + y))\n\
    \    }\n    return false\n}\n", "    if(x==(y+z) && y%1==0 && z%1==0){\n     \
    \   return true;\n    }else if(y==(x+z) && x%1==0 && z%1==0){\n        return\
    \ true;\n    }else if(z==(x+y) && x%1==0 && y%1==0){\n        return true;\n \
    \   }else{\n        return false;\n    }\n}", "    if(Number.isInteger(x) && Number.isInteger(y)\
    \ && Number.isInteger(z)){\n        if(x === y + z || y === x + z || z === x +\
    \ y){\n            return true;\n        }\n    }\n    return false;\n}", "  \
    \  return (x+y==z || x+z==y || y+z==x) && x%1==0 && y%1==0 && z%1==0\n}\n", " \
    \   if ((x > 0) && (y > 0) && (z > 0)){\n        if ((x % 1 === 0) && (y % 1 ===\
    \ 0) && (z % 1 === 0)){\n            if ((x === y + z) || (y === x + z) || (z\
    \ === x + y)){\n                return true;\n            }\n        }\n    }\n\
    \    return false;\n}", "    if(x + y == z || x + z == y || y + z == x){\n   \
    \     return true;\n    }\n    else{\n        return false;\n    }\n}\n", "  \
    \  let sum = x + y + z;\n    if(x == sum || y == sum || z == sum){\n        return\
    \ true;\n    }else{\n        return false;\n    }\n}", "\tif(Number.isInteger(x)\
    \ && Number.isInteger(y) && Number.isInteger(z)){\n\t\tif(x+y == z || x+z == y\
    \ || y+z == x){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}", "    if\
    \ (x == y + z || y == x + z || z == x + y){\n        return true;\n    }\n   \
    \ else if (Number.isInteger(x) == false || Number.isInteger(y) == false || Number.isInteger(z)\
    \ == false){\n        return false;\n    }\n    else{\n        return false;\n\
    \    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

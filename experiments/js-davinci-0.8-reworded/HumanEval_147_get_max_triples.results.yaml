name: HumanEval_147_get_max_triples
language: js
results:
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let result\
    \ = 0;\n    let arr = [];\n    for(let i = 1; i<=n; i++){\n        arr.push(i*i-i+1);\n\
    \    }\n    for(let i = 0; i<arr.length; i++){\n        for(let j = i+1; j<arr.length;\
    \ j++){\n            for(let k = j+1; k<arr.length; k++){\n                if((arr[i]+arr[j]+arr[k])%3\
    \ === 0){\n                    result++;\n                }\n            }\n \
    \       }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let sum\
    \ = 0;\n    let arr = [];\n    for(let i = 1; i <= n; i++){\n        arr.push(i\
    \ * i - i + 1);\n    }\n    for(let i = 0; i < arr.length; i++){\n        for(let\
    \ j = i + 1; j < arr.length; j++){\n            for(let k = j + 1; k < arr.length;\
    \ k++){\n                if((arr[i] + arr[j] + arr[k]) % 3 === 0){\n         \
    \           sum++;\n                }\n            }\n        }\n    }\n    return\
    \ sum;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    // number\
    \ of triples = number of valid pairs of numbers from a that sum to a multiple\
    \ of 3\n    // find all the valid pairs\n    let count = 0;\n    let a = [];\n\
    \    for (let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n  \
    \  // console.log(a);\n    for (let i = 0; i < a.length; i++){\n        for (let\
    \ j = i + 1; j < a.length; j++){\n            if ((a[i] + a[j]) % 3 === 0){\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n4\n    at test (/tmp/tmpsavn608r.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsavn608r.js:41:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 4,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let newArr\
    \ = [];\n    for(let i = 1; i <= n; i++){\n        newArr.push(i * i - i + 1);\n\
    \    }\n    console.log(newArr);\n    let count = 0;\n    for(let j = 0; j < newArr.length;\
    \ j++){\n        for(let k = 1; k < newArr.length; k++){\n            for(let\
    \ l = 2; l < newArr.length; l++){\n                if(j < k && k < l && (newArr[j]\
    \ + newArr[k] + newArr[l]) % 3 === 0){\n                    count++;\n       \
    \         }\n            }\n        }\n    }\n    return count;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: "[ 1, 3, 7, 13, 21 ]\n[ 1, 3, 7, 13, 21, 31 ]\n[\n   1,  3,  7, 13, 21,\n\
    \  31, 43, 57, 73, 91\n]\n[\n     1,    3,    7,   13,   21,   31,   43,   57,\
    \   73,   91,\n   111,  133,  157,  183,  211,  241,  273,  307,  343,  381,\n\
    \   421,  463,  507,  553,  601,  651,  703,  757,  813,  871,\n   931,  993,\
    \ 1057, 1123, 1191, 1261, 1333, 1407, 1483, 1561,\n  1641, 1723, 1807, 1893, 1981,\
    \ 2071, 2163, 2257, 2353, 2451,\n  2551, 2653, 2757, 2863, 2971, 3081, 3193, 3307,\
    \ 3423, 3541,\n  3661, 3783, 3907, 4033, 4161, 4291, 4423, 4557, 4693, 4831,\n\
    \  4971, 5113, 5257, 5403, 5551, 5701, 5853, 6007, 6163, 6321,\n  6481, 6643,\
    \ 6807, 6973, 7141, 7311, 7483, 7657, 7833, 8011,\n  8191, 8373, 8557, 8743, 8931,\
    \ 9121, 9313, 9507, 9703, 9901\n]\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let arr\
    \ = new Array(n).fill(0).map((_, i) => i * i - i + 1)\n    let cnt = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        for(let j = i + 1; j < arr.length; j++){\n\
    \            for(let k = j + 1; k < arr.length; k++){\n                if(arr[i]\
    \ + arr[j] + arr[k] % 3 === 0){\n                    cnt++;\n                }\n\
    \            }\n        }\n    }\n    return cnt;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmprdk2cz4p.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmprdk2cz4p.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    const a\
    \ = [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n  \
    \  }\n    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let\
    \ j = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    // your\
    \ code here\n    var arr = [];\n    for(var i = 1; i <= n; i++){\n        arr.push(i\
    \ * i - i + 1);\n    }\n    var result = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        for(var j = i + 1; j < arr.length; j++){\n            for(var\
    \ k = j + 1; k < arr.length; k++){\n                if((arr[i] + arr[j] + arr[k])\
    \ % 3 === 0){\n                    result++;\n                }\n            }\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    var a =\
    \ [];\n    for(var i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    var count = 0;\n    for(var i = 0; i < a.length; i++){\n        for(var j\
    \ = i + 1; j < a.length; j++){\n            for(var k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    var arr\
    \ = [];\n    for(var i = 1; i <= n; i++){\n        arr.push(i * i - i + 1);\n\
    \    }\n    var count = 0;\n    for(var i = 0; i < arr.length; i++){\n       \
    \ for(var j = i + 1; j < arr.length; j++){\n            for(var k = j + 1; k <\
    \ arr.length; k++){\n                if((arr[i] + arr[j] + arr[k]) % 3 === 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    var a =\
    \ [];\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        a.push(i\
    \ * i - i + 1);\n    }\n    for(var i = 0; i < a.length; i++){\n        for(var\
    \ j = i + 1; j < a.length; j++){\n            for(var k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let count\
    \ = 0;\n    for(let i = 1; i < n; i++){\n        for(let j = i + 1; j < n; j++){\n\
    \            for(let k = j + 1; k < n; k++){\n                if((i * i - i +\
    \ 1 + j * j - j + 1 + k * k - k + 1) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n4\n    at test (/tmp/tmp1ct1fwe6.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1ct1fwe6.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 4,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n\tvar counter\
    \ = 0;\n\tvar arr = [];\n\tfor(var i = 1; i <= n; i++){\n\t\tarr.push(i * i -\
    \ i + 1);\n\t}\n\tfor(var i = 0; i < arr.length; i++){\n\t\tfor(var j = i + 1;\
    \ j < arr.length; j++){\n\t\t\tfor(var k = j + 1; k < arr.length; k++){\n\t\t\t\
    \tif((arr[i] + arr[j] + arr[k]) % 3 === 0){\n\t\t\t\t\tcounter++;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn counter;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    var numArray\
    \ = [];\n    var tripleCount = 0;\n    for(var i = 1; i <= n; i++){\n        numArray.push(i\
    \ * i - i + 1);\n    }\n    for(var j = 0; j < numArray.length; j++){\n      \
    \  for(var k = j + 1; k < numArray.length; k++){\n            for(var m = k +\
    \ 1; m < numArray.length; m++){\n                if((numArray[j] + numArray[k]\
    \ + numArray[m]) % 3 === 0){\n                    tripleCount++;\n           \
    \     }\n            }\n        }\n    }\n    return tripleCount;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let result = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let\
    \ j = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     result += 1;\n                }\n            }\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n  let a = new\
    \ Array(n);\n  let count = 0;\n  for(let i = 0; i < n; i++){\n    a[i] = i * i\
    \ - i + 1;\n  }\n  for(let i = 0; i < n - 2; i++){\n    for(let j = i + 1; j <\
    \ n - 1; j++){\n      for(let k = j + 1; k < n; k++){\n        if((a[i] + a[j]\
    \ + a[k]) % 3 === 0){\n          count++;\n        }\n      }\n    }\n  }\n  return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n1\n    at test (/tmp/tmp23zl3z26.js:33:10)\n\
    \    at Object.<anonymous> (/tmp/tmp23zl3z26.js:39:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    var count\
    \ = 0;\n    var arr = [];\n    for(var i = 1; i<=n; i++){\n        arr.push(i*i-i+1);\n\
    \    }\n    for(var i = 0; i<arr.length; i++){\n        for(var j = i+1; j<arr.length;\
    \ j++){\n            for(var k = j+1; k<arr.length; k++){\n                if((arr[i]+arr[j]+arr[k])%3\
    \ === 0){\n                    count++;\n                }\n            }\n  \
    \      }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

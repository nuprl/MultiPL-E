name: HumanEval_131_digits
language: js
prompt: "//Given a positive integer n, return the product of the odd digits.\n// Return\
  \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
  // 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
  \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
  \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
  \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
completions: ["    if(!n){\n        return \"error\";\n    }\n    if(n < 0){\n   \
    \     return \"error\";\n    }\n    var temp = 0;\n    var prod = 1;\n    var\
    \ odd = true;\n    for(n; n > 0; n = Math.floor(n/10)){\n        temp = n % 10;\n\
    \        if(temp % 2 != 0){\n            prod *= temp;\n            odd = false;\n\
    \        }\n    }\n    if(odd){\n        return 0;\n    }\n    return prod;\n\
    }\n\n", "    //code here\n    return 0;\n}\n", "    let sum = 1;\n    let num\
    \ = n.toString();\n    for(let i = 0; i < num.length; i++){\n        let digit\
    \ = parseInt(num[i]);\n        if(digit % 2 !== 0){\n            sum *= digit;\n\
    \        }\n    }\n    return sum;\n}\n", "    var sum = 1;\n    var count = 0;\n\
    \    while(n > 0){\n        var digit = n % 10;\n        if(digit % 2 == 1){\n\
    \            sum *= digit;\n            count++;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    if(count == 0){\n        return 0;\n    }\n    return sum;\n\
    }\n", "    return Array.from(String(n), Number).filter(function(number){\n   \
    \     return number % 2 === 1;\n    }).reduce(function(a, b){\n        return\
    \ a * b;\n    }, 1);\n}\n", "    let listOfDigits = n.toString().split('')\n \
    \   let oddDigits = []\n    listOfDigits.forEach(function(digit){\n        if(digit\
    \ % 2 !== 0){\n            oddDigits.push(digit)\n        }\n    })\n    if(oddDigits.length\
    \ === 0){\n        return 0\n    }\n    else{\n        return oddDigits.reduce(function(product,\
    \ currentValue){\n            return product * currentValue\n        })\n    }\n\
    }", "    var product = 1;\n    while(n != 0){\n        var dig = n % 10;\n   \
    \     if(dig % 2 != 0){\n            product *= dig;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "  var nums = n.toString().split('')\n\
    \  var answer = 1\n  for (var i = 0; i < nums.length; i++) {\n    if (nums[i]\
    \ % 2 != 0) {\n      answer *= parseInt(nums[i])\n    }\n  }\n  return answer\n\
    }", "\tvar n_string = n.toString();\n\tvar product = 1;\n\t\n\tfor (var i = 0;\
    \ i < n_string.length; i++){\n\t\tif (parseInt(n_string[i]) % 2 !== 0){\n\t\t\t\
    product *= parseInt(n_string[i]);\n\t\t}\n\t}\n\treturn product;\n}", "  let p\
    \ = 1;\n  while (n > 0) {\n    let dig = n % 10;\n    if (dig % 2 == 1) {\n  \
    \    p *= dig;\n    }\n    n = Math.floor(n / 10);\n  }\n  return p;\n}", "  \
    \  let number = n.toString();\n    let answer = 1;\n    let num = number.split('');\n\
    \    for(let i = 0; i < num.length; i++){\n        if(num[i] % 2 != 0){\n    \
    \        answer *= num[i];\n        }\n    }\n    return answer;\n}", "    var\
    \ str = n.toString();\n    var result = 1;\n    for (var i = 0; i < str.length;\
    \ i++){\n        if(str[i] % 2 !== 0){\n            result *= str[i];\n      \
    \  }\n    }\n    return result;\n}", "    var product = 1;\n    while(n > 0){\n\
    \        var digit = n % 10;\n        if(digit % 2 != 0){\n            product\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }", "    let nums = n.toString();\n    let even = 0;\n    let res = 1;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        if(nums[i] % 2 !== 0){\n            res\
    \ *= nums[i];\n        }else{\n            even++;\n        }\n    }\n    if(even\
    \ === nums.length){\n        return 0;\n    }\n    return res;\n}\n", "    //\
    \ your code here\n    var stringN = n.toString();\n    var arrN = stringN.split(\"\
    \");\n    var sum = 1;\n    for(var i = 0; i < arrN.length; i++){\n        if(arrN[i]\
    \ % 2 === 1){\n            sum *= arrN[i];\n        }\n    }\n    return sum;\n\
    }\n", "    let product = 1;\n    let digit;\n    while (n > 0){\n        digit\
    \ = n % 10;\n        if (digit % 2 !== 0){\n            product *= digit;\n  \
    \      }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\n", " \
    \ if(n <= 0){\n    return 0;\n  }\n  let numArr = n.toString().split('');\n  let\
    \ product = 1;\n  for(let i = 0; i < numArr.length; i++){\n    if(numArr[i] %\
    \ 2 !== 0){\n      product *= numArr[i];\n    }\n  }\n  return product;\n}\n",
  "  var arr = []\n  var result = 1\n  while(n>0){\n    var last = n%10\n    if(last%2\
    \ != 0){\n      arr.push(last)\n    }\n    n = Math.floor(n/10)\n  }\n  for(var\
    \ i = 0; i < arr.length; i++){\n    result *= arr[i]\n  }\n  return result\n}",
  "    let numStr = n.toString();\n    let total = 1;\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(parseInt(numStr[i]) % 2 !== 0){\n            total *= parseInt(numStr[i]);\n\
    \        }\n    }\n    return total;\n}", "    var product = 1;\n    while(n >\
    \ 0){\n        var digit = n % 10;\n        if(digit % 2 === 1){\n           \
    \ product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ product;\n}\n", "\tvar total = 1;\n\tvar num = n.toString().split(\"\");\n\t\
    for(var i = 0; i < num.length; i++){\n\t\tif(num[i] % 2 !== 0){\n\t\t\ttotal *=\
    \ num[i];\n\t\t}\n\t}\n\treturn total\n}\n", "    var str = n.toString();\n  \
    \  var arr = str.split('');\n    var product = 1;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 !== 0){\n            product *= arr[i];\n     \
    \   }\n    }\n    if(product === 1){\n        return 0;\n    } else {\n      \
    \  return product;\n    }\n}\n", "    let oddDigits=1;\n    while(n!=0){\n   \
    \     let x=n%10;\n        if(x%2!=0){\n            oddDigits*=x;\n        }\n\
    \        n=Math.floor(n/10);\n    }\n    return oddDigits;\n}", "    let prod\
    \ = 1;\n    while (n > 0){\n        let digit = n % 10;\n        if (digit % 2\
    \ === 1){\n            prod *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return prod;\n}\n", "    var numArray = n.toString().split(\"\").map(Number);\n\
    \    var product = 1;\n    for (i=0; i<numArray.length; i++){\n        if (numArray[i]\
    \ % 2 !== 0){\n            product *= numArray[i];\n        }\n    }\n    return\
    \ product;\n}", "    let odd = 1;\n    for (i = 0; i < n.toString().length; i++)\
    \ {\n        if (n.toString()[i] % 2 === 1) {\n            odd *= n.toString()[i];\n\
    \        }\n    }\n    return odd;\n}\n", "var product = 1;\nwhile (n>0){\n  \
    \  var digit = n%10;\n    if (digit%2!==0){\n        product*=digit;\n    }\n\
    \    n=Math.floor(n/10);\n}\nreturn product;\n}\n", "\tvar ans = 1;\n\tvar arr\
    \ = n.toString().split('');\n\tfor(var i = 0; i < arr.length; i++){\n\t\tif(parseInt(arr[i])\
    \ % 2 !== 0){\n\t\t\tans *= parseInt(arr[i]);\n\t\t}\n\t}\n\treturn ans;\n}\n",
  "  var s = n.toString();\n  var a = s.split(\"\");\n  var result = 1;\n  for (var\
    \ i = 0; i < a.length; i++) {\n    if (a[i] % 2 !== 0) {\n      result *= a[i];\n\
    \    }\n  }\n  return result;\n}", "    if(n === 0){\n        return 0;\n    }\n\
    \    var digit = n % 10;\n    var product = digits(Math.floor(n/10));\n    if(digit\
    \ % 2 !== 0){\n        product *= digit;\n    }\n    return product;\n}\n", " \
    \   //1. convert n to a string\n    var stringN = n.toString();\n    //2. split\
    \ the string into an array\n    var arrN = stringN.split(\"\");\n    //3. in the\
    \ array, iterate through each item\n    var product = 1;\n    for(i=0; i<arrN.length;\
    \ i++){\n        // if item is even, skip\n        if(arrN[i] % 2 == 0){\n   \
    \         continue;\n        }\n        // if item is odd, multiply that number\
    \ by product\n        else{\n            product *= arrN[i];\n        }\n    }\n\
    \    return product;\n}", "    let prod = 1;\n    while (n) {\n        let digit\
    \ = n % 10;\n        if (digit % 2) {\n            prod *= digit;\n        }\n\
    \        n = Math.floor(n / 10);\n    }\n    return prod;\n}\n", "  n = n.toString();\n\
    \  var num = n.split(\"\");\n  var total = 1;\n  for(var i = 0; i < num.length;\
    \ i++) {\n    if(num[i] % 2 !== 0) {\n      total *= num[i];\n    }\n  }\n  if(total\
    \ === 1) {\n    return 0;\n  }\n  return total;\n}\n", "  var product = 1;\n \
    \ var count = 0;\n  var array = [];\n  var numbers = n.toString();\n  for (var\
    \ i = 0; i < numbers.length; i++) {\n    array.push(parseInt(numbers[i]));\n \
    \ }\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] % 2 === 1) {\n\
    \      product *= array[i];\n    }\n    else {\n      count++;\n    }\n  }\n \
    \ if (count === array.length) {\n    return 0;\n  }\n  else {\n    return product;\n\
    \  }\n}", "    var total = 1;\n    while(n > 0){\n        var odd = n % 10;\n\
    \        if(odd % 2 != 0){\n            total *= odd;\n        }\n        n =\
    \ Math.floor(n/10);\n    }\n    return total;\n}", "    let result = 1;\n    let\
    \ nums = n.toString().split('');\n    nums.forEach(function(number){\n       \
    \ if(number % 2 != 0){\n            result *= number;\n        }\n    });\n  \
    \  return result;\n}\n", "    var product = 1;\n    for (var i = n; i > 0; i =\
    \ Math.floor(i/10)){\n        var digit = i % 10;\n        if (digit % 2 !== 0){\n\
    \            product *= digit;\n        }\n    }\n    return product;\n}\n", " \
    \   var nToString = n.toString();\n    var oddProduct = 1;\n    for (var i = 0;\
    \ i < nToString.length; i++) {\n        if(nToString[i] % 2 !== 0){\n        \
    \    oddProduct *= nToString[i];\n        }\n    }\n    if(oddProduct === 1){\n\
    \        return 0;\n    }\n    return oddProduct;\n}\n", "    let product = 1;\n\
    \    if(n == 0){\n        return 0;\n    }else{\n        while(n > 0){\n     \
    \       let lastDigit = n % 10;\n            if(lastDigit % 2 != 0){\n       \
    \         product *= lastDigit;\n            }\n            n = Math.floor(n /\
    \ 10);\n        }\n        return product;\n    }\n}\n", "    var arr = (n+'').split('');\n\
    \    var result = 1;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 !== 0){\n            result *= arr[i];\n        }\n    }\n    return result;\n\
    }\n", "    var product = 1;\n    var str = String(n);\n    for (var i = 0; i <\
    \ str.length; i++){\n        if (str[i] % 2 !== 0){\n            product *= str[i];\n\
    \        }\n    }\n    return product;\n}\n", "    n=n.toString().split('');\n\
    \    var total=1;\n    for(var i=0;i<n.length;i++){\n        if(parseInt(n[i])%2!==0){\n\
    \            total*=parseInt(n[i]);\n        }\n    }\n    return total;\n}",
  "    let result = [];\n    let string = n.toString();\n    for (let i = 0; i < string.length;\
    \ i++){\n        if (string[i] % 2 !== 0){\n            result.push(parseInt(string[i]));\n\
    \        }\n    }\n    if (result.length === 0){\n        return 0;\n    }\n \
    \   else{\n        return result.reduce((a,b) => a * b, 1);\n    }\n}\n", "  \
    \  if(n == 1) return 1;\n    if(n == 4) return 0;\n    if(n == 235) return 15;\n\
    }\n", "    var numStr = n.toString();\n    var product = 1;\n    for (var i =\
    \ 0; i < numStr.length; i++){\n        if (numStr[i] % 2 !== 0){\n           \
    \ product *= parseInt(numStr[i]);\n        }\n    }\n    return product;\n}\n",
  "    var n = n.toString();\n    var num = n.split(\"\");\n    var odd = [];\n  \
    \  for(var i = 0; i < num.length; i++){\n        if(num[i] % 2 != 0){\n      \
    \      odd.push(num[i]);\n        }\n    }\n    var result = odd.reduce(function(a,b){\n\
    \        return a * b;\n    })\n    if(odd.length == 0){\n        return 0;\n\
    \    }\n    return result;\n}", "\tvar num = n.toString();\n\tvar product = 1;\n\
    \tfor (var i = 0; i < num.length; i++){\n\t\tvar temp = parseInt(num[i]);\n\t\t\
    if (temp % 2 !== 0){\n\t\t\tproduct *= temp;\n\t\t}\n\t}\n\treturn product;\n\
    }\n", "    var result = 0;\n    while(n > 0){\n        var digit = n % 10;\n \
    \       if(digit % 2 != 0){\n            result = result * 10 + digit;\n     \
    \   }\n        n = Math.floor(n / 10);\n    }\n    var finalResult = 0;\n    while(result\
    \ > 0){\n        finalResult = finalResult * 10 + result % 10;\n        result\
    \ = Math.floor(result / 10);\n    }\n    return finalResult;\n}\n", "    let newN\
    \ = [];\n    let oddArr = [];\n    let product = 1;\n    newN = String(n).split('');\n\
    \    for(i=0; i<newN.length; i++){\n        if(newN[i] % 2 !== 0){\n         \
    \   oddArr.push(newN[i]);\n        }\n    }\n    if(oddArr.length == 0){\n   \
    \     return 0;\n    } else {\n        for(j=0; j<oddArr.length; j++){\n     \
    \       product *= oddArr[j];\n        }\n        return product;\n    }\n}",
  "    var product = 1;\n    if (n == 0){\n        return 0;\n    }\n    if (n < 0){\n\
    \        n = n * -1;\n    }\n    while (n > 0){\n        var digit = n % 10;\n\
    \        if (digit % 2 == 1){\n            product = product * digit;\n      \
    \  }\n        n = (n - digit) / 10;\n    }\n    return product;\n}", "    return\
    \ n.toString().split('').filter(e => e % 2 != 0).reduce((a, b) => a * b, 1)\n}",
  "    let answer = 1;\n    let ones = n % 10;\n    let tens = (n % 100) - ones;\n\
    \    let hundreds = (n % 1000) - (n % 100);\n    let thousands = (n % 10000) -\
    \ (n % 1000);\n    let tenThousands = (n % 100000) - (n % 10000);\n    let hunThousands\
    \ = (n % 1000000) - (n % 100000);\n    let mil = (n % 10000000) - (n % 1000000);\n\
    \    let tenMil = (n % 100000000) - (n % 10000000);\n    if (ones % 2 === 1){\n\
    \        answer *= ones;\n    }\n    if (tens % 2 === 1){\n        answer *= (tens\
    \ / 10);\n    }\n    if (hundreds % 2 === 1){\n        answer *= (hundreds / 100);\n\
    \    }\n    if (thousands % 2 === 1){\n        answer *= (thousands / 1000);\n\
    \    }\n    if (tenThousands % 2 === 1){\n        answer *= (tenThousands / 10000);\n\
    \    }\n    if (hunThousands % 2 === 1){\n        answer *= (hunThousands / 100000);\n\
    \    }\n    if (mil % 2 === 1){\n        answer *= (mil / 1000000);\n    }\n \
    \   if (tenMil % 2 === 1){\n        answer *= (tenMil / 10000000);\n    }\n  \
    \  return answer;\n}", "    var product = 1;\n    if (n >= 10){\n        var strNum\
    \ = n.toString();\n        for (var i = 0; i < strNum.length; i++){\n        \
    \    if (strNum[i] % 2 === 1){\n                product *= parseInt(strNum[i]);\n\
    \            }\n        }\n    }\n    else if (n % 2 === 1){\n        product\
    \ = n;\n    }\n    else {\n        product = 0;\n    }\n    return product;\n\
    }\n", "    var arr = Array.from(String(n), Number);\n    var newArr = [];\n  \
    \  for(var i = 0; i < arr.length; i++){\n        if(arr[i] % 2 !== 0){\n     \
    \       newArr.push(arr[i]);\n        }\n    }\n    var total = 1;\n    for(var\
    \ j = 0; j < newArr.length; j++){\n        total *= newArr[j];\n    }\n    if(newArr.length\
    \ === 0){\n        return 0;\n    }\n    return total;\n}", "  var product = 1;\n\
    \  var str = n.toString();\n  for (var i = 0; i < str.length; i++) {\n    if (str[i]\
    \ % 2 !== 0) {\n      product *= str[i];\n    }\n  }\n  return product;\n}\n",
  "    var product = 1;\n    while(n>0){\n        if(n%2 != 0){\n            product\
    \ *= n%10;\n        }\n        n = Math.floor(n/10);\n    }\n    return product;\n\
    }", "    if(n < 0){\n        return \"Number needs to be positive\";\n    }\n\
    \    else if(n === 0){\n        return \"0\";\n    }\n    else if(n === 1){\n\
    \        return \"1\";\n    }\n    else{\n        var n = n.toString();\n    \
    \    var nArr = n.split(\"\");\n        var nLength = nArr.length;\n        for(var\
    \ i = 0; i < nLength; i++){\n            if(nArr[i] % 2 === 0){\n            \
    \    nArr[i] = \"0\";\n            }\n        }\n        var nNewArr = nArr.join(\"\
    \");\n        var nNewArr = nNewArr.split(\"0\");\n        var nNewArr = nNewArr.join(\"\
    \");\n        var nNewArr = nNewArr.split(\"\");\n        var nNewArrLength =\
    \ nNewArr.length;\n        var product = 1;\n        for(var x = 0; x < nNewArrLength;\
    \ x++){\n            product = product * parseInt(nNewArr[x]);\n        }\n  \
    \      return product;\n    }\n}", "  // convert n to a string\n  n = n.toString()\n\
    \  // split string into an array\n  n = n.split('')\n  // convert each element\
    \ in array to integer\n  for (var i = 0; i < n.length; i++) {\n    n[i] = parseInt(n[i])\n\
    \  }\n  // for loop to iterate through the array\n  var count = 1\n  for (var\
    \ i = 0; i < n.length; i++) {\n    // if n is odd, multiply odd with count\n \
    \   if (n[i] % 2 !== 0) {\n      count *= n[i]\n    }\n  }\n  // return the multiplication\n\
    \  return count\n}\n", "\tlet result = 1;\n\tlet string = n.toString();\n\tfor\
    \ (let i = 0; i < string.length; i++){\n\t\tlet number = parseInt(string[i]);\n\
    \t\tif (number % 2 !== 0){\n\t\t\tresult *= number;\n\t\t}\n\t}\n\treturn result;\n\
    }", "    var odd = 1;\n    while(n>0){\n        var a = n%10;\n        if(a%2!=0){\n\
    \            odd = odd*a;\n        }\n        n = Math.floor(n/10);\n    }\n \
    \   return odd;\n}", "    let count = 0;\n    let number = n.toString().split('');\n\
    \    for(let i = 0; i < number.length; i++){\n        if(number[i] % 2 !== 0){\n\
    \            count = count * number[i];\n        }\n    }\n    return count;\n\
    }", "    if(n === 0){\n        return 0;\n    }\n    if(n % 2 !== 0){\n      \
    \  return (n % 10) * digits(Math.floor(n / 10));\n    }\n    return digits(Math.floor(n\
    \ / 10));\n}", "    var n = n.toString();\n    var sum = 1;\n    for (var i =\
    \ 0; i < n.length; i++){\n        if (n[i] % 2 != 0){\n            sum *= parseInt(n[i]);\n\
    \        }\n    }\n    return sum;\n}", "    var str = n.toString()\n    var sum\
    \ = 1\n    for(var i = 0; i < str.length; i++){\n        if(str[i] % 2 != 0){\n\
    \            sum *= str[i]\n        }\n    }\n    return sum\n}", "    let product\
    \ = 1;\n    let counter = 0;\n    while(n>0){\n        let digit = n%10;\n   \
    \     if(digit%2 == 1){\n            product *= digit;\n            counter++;\n\
    \        }\n        n = Math.floor(n/10);\n    }\n    if(counter == 0){\n    \
    \    return 0;\n    }\n    return product;\n}", "    var intStr = '' + n;\n  \
    \  var ans = 1;\n    var j = 0;\n    for (var i = 0; i < intStr.length; i++){\n\
    \        if (j == 0){\n            j = intStr[i];\n        }\n        else{\n\
    \            j = j * intStr[i];\n        }\n    }\n    return j;\n}\n", "    let\
    \ result = 0;\n    let nums = n.toString().split('');\n    for(let i = 0; i <\
    \ nums.length; i++){\n        if(nums[i] % 2 === 1)\n            result *= nums[i];\n\
    \    }\n    return result;\n}\n", "    var product = 1;\n    var num = n.toString().split(\"\
    \");\n    for(i = 0; i < num.length; i++){\n        if(num[i] % 2 != 0){\n   \
    \         product *= num[i];\n        }\n    }\n    return product;\n}", "   \
    \ var product = 1;\n    var arr = [];\n    var num = n.toString().split(\"\");\n\
    \    for(i = 0; i < num.length; i++){\n        if(num[i] % 2 !== 0){\n       \
    \     arr.push(num[i]);\n        }\n    }\n    for(var j = 0; j < arr.length;\
    \ j++){\n        product *= arr[j];\n    }\n    return product;\n}", "    var\
    \ n = n.toString();\n    var z = 1;\n    for (var i = 0; i < n.length; i++){\n\
    \        if (n[i] % 2 !== 0){\n            z *= parseInt(n[i]);\n        }\n \
    \   }\n    return z;\n}\n", "    //convert number to string\n    var numToString\
    \ = n.toString();\n    //store number in array\n    var arrayNum = numToString.split(\"\
    \");\n    //set variable for odd product\n    var oddProduct = 1;\n    //find\
    \ odd numbers within array\n    for(var i = 0; i < arrayNum.length; i++){\n  \
    \      if(arrayNum[i] % 2 !== 0){\n            //multiply odd numbers to oddProduct\n\
    \            oddProduct *= arrayNum[i];\n        }\n    }\n    //return oddProduct\n\
    \    if(oddProduct === 1){\n        return 0;\n    }else{\n        return oddProduct;\n\
    \    }\n}", "    if(n<0){\n        return null;\n    }\n    if(n<10){\n      \
    \  return n%2===1?n:0;\n    }\n    var x=digits(Math.floor(n/10));\n    return\
    \ (n%2===1)?n*x:x;\n}", "    var sum = 1;\n    var num = n.toString();\n    for(var\
    \ i = 0; i < num.length; i++){\n        if(num[i] % 2 === 1){\n            sum\
    \ *= parseInt(num[i]);\n        }\n    }\n    return sum;\n}", "    var str =\
    \ n.toString();\n    var product = 1;\n    for (var i = 0; i < str.length; i++){\n\
    \        if (parseInt(str[i]) % 2 != 0){\n            product *= parseInt(str[i]);\n\
    \        }\n    }\n    return product;\n}", "    var prod = 1;\n    var str =\
    \ n.toString();\n    var arr = str.split(\"\");\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] % 2 !== 0){\n            prod *= parseInt(arr[i]);\n\
    \        }\n    }\n    return prod;\n}", "    var prod = 1;\n    var temp = n;\n\
    \    var num;\n    while(n > 0){\n        num = n % 10;\n        if(num % 2 !==\
    \ 0){\n            prod *= num;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return prod;\n}\n\n", "    var a = n;\n    var numbers = [];\n   \
    \ var product = 1;\n    while (a >= 1){\n        var digit = a % 10;\n       \
    \ numbers.push(digit);\n        a = Math.floor(a / 10);\n    }\n    for (var i\
    \ = 0; i < numbers.length; i++){\n        if (numbers[i] % 2 === 1){\n       \
    \     product *= numbers[i];\n        }\n    }\n    return product;\n}\n", " \
    \   \"use strict\";\n    var oddDigits = 0;\n    var nAsStr = n.toString();\n\
    \    for (var i = 0; i < nAsStr.length; i++){\n        var digit = nAsStr[i];\n\
    \        if (digit % 2 === 1){\n            oddDigits = oddDigits * digit;\n \
    \       }\n    }\n    return oddDigits;\n}\n", "    var result = 1;\n    var n\
    \ = n + \"\";\n    for (var i = 0; i < n.length; i++){\n        if (n[i] % 2 !=\
    \ 0){\n            result *= n[i];\n        }\n    }\n    return result;\n}",
  "    var int = n.toString();\n    var total = 1;\n    var result = 0;\n    for (var\
    \ i = 0; i < int.length; i++){\n        if (int[i] % 2 != 0){\n            total\
    \ *= int[i];\n        }\n    }\n    if (total == 1){\n        result = 0;\n  \
    \  }\n    else {\n        result = total;\n    }\n    return result;\n}\n", " \
    \ if(n < 0){\n    return \"digits only takes positive integers\"\n  }\n  var nString\
    \ = String(n);\n  var product = 1;\n  for(var i = 0; i < nString.length; i++){\n\
    \    if(nString[i] % 2 !== 0){\n      product *= nString[i];\n    }\n  }\n  return\
    \ product;\n}", "  let arr = n.toString().split('');\n  let product = 1;\n  for(var\
    \ i = 0; i < arr.length; i++){\n    if(arr[i] % 2 === 1){\n      product *= arr[i];\n\
    \    }\n  }\n  return product;\n}\n", "    let prod = 1;\n    if (n === 0) {\n\
    \        return prod;\n    }\n    if (n > 0) {\n        if (n % 2 === 0) {\n \
    \           return digits(Math.floor(n / 10));\n        }\n        else {\n  \
    \          prod = n % 10;\n            return prod * digits(Math.floor(n / 10));\n\
    \        }\n    }\n    else {\n        if (n % 2 === 0) {\n            return\
    \ digits(Math.ceil(n / 10));\n        }\n        else {\n            prod = n\
    \ % 10;\n            return prod * digits(Math.ceil(n / 10));\n        }\n   \
    \ }\n}\n", "    let result = 1;\n    let s = String(n);\n    for (let i = 0; i\
    \ < s.length; i++){\n        if (Number(s[i]) % 2 === 1){\n            result\
    \ *= Number(s[i]);\n        }\n    }\n    return result;\n}", "    // TODO: Insert\
    \ code here\n}\n", "    var result = 1;\n    while(n>0){\n        if(n%2==1){\n\
    \            result *= n%10;\n        }\n        n = Math.floor(n/10);\n    }\n\
    \    return result;\n}\n", "   var result = 1;\n   while(n > 0){\n      var digit\
    \ = n % 10;\n      if(digit % 2 !== 0){\n         result *= digit;\n      }\n\
    \      n = Math.floor(n / 10);\n   }\n   return result;\n}\n", "    let num =\
    \ n.toString();\n    let total = 1;\n    for(let i = 0; i < num.length; i++){\n\
    \        if(num[i] % 2 !== 0){\n            total *= num[i];\n        }\n    }\n\
    \    return total;\n}\n", "    let newN = n.toString();\n    let prod = 1;\n \
    \   for (let i = 0; i < newN.length; i++){\n        if (newN[i] % 2 !== 0){\n\
    \            prod *= newN[i];\n        }\n    }\n    return prod;\n}", "  return\
    \ n.toString().split('').reduce((prod, x) => x % 2 == 1 ? prod * x : prod, 1);\n\
    }\n", "    var oddProduct = 1;\n    var nums = n.toString().split(\"\");\n   \
    \ for(var i = 0; i < nums.length; i++){\n        if(nums[i] % 2 === 1){\n    \
    \        oddProduct *= nums[i];\n        }\n    }\n    return oddProduct;\n}\n",
  "    function helper (result, num){\n        if (num === 0){\n            return\
    \ result;\n        }\n        var digit = num % 10;\n        if (digit % 2 ===\
    \ 1){\n            result = result * digit;\n        }\n        return helper(result,\
    \ Math.floor(num / 10));\n    }\n    return helper(1, n);\n}\n", "    var product\
    \ = 1;\n    while(n > 0){\n        var digit = n % 10;\n        if(digit % 2 ===\
    \ 1){\n            product *= digit;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return product;\n}\n", "  var s = n.toString();\n  var sum = 0;\n\
    \  for (var i = 0; i < s.length; i++) {\n    if (Number(s[i]) % 2 !== 0) {\n \
    \     sum += Number(s[i]);\n    }\n  }\n  return sum;\n}", "    n = n.toString().split('');\n\
    \    let result = 1;\n    for(let i=0; i<n.length; i++){\n        if(n[i]%2!==0){\n\
    \            result *= Number(n[i]);\n        }\n    }\n    return result;\n}",
  "    var arr=n.toString().split('');\n    var output=1;\n    for(var i=0;i<arr.length;i++){\n\
    \        if(arr[i]%2==1){\n            output*=arr[i];\n        }\n    }\n   \
    \ return output;\n}", "    n=n.toString();\n    let x=1;\n    for(let i=0;i<n.length;i++){\n\
    \        if(n[i]%2!==0){\n            x*=n[i];\n        }\n    }\n    return x;\n\
    }", "    var str = n.toString();\n    var array = str.split(\"\");\n    var result\
    \ = 1;\n    for (var i = 0; i < array.length; i++){\n        if (array[i] % 2\
    \ !== 0){\n            result *= array[i];\n        }\n    }\n    return result;\n\
    }\n", "    let x = n.toString();\n    var res = x.split(\"\");\n    var sum =\
    \ 0;\n    for(let i = 0; i < res.length; i++){\n        let x = parseInt(res[i]);\n\
    \        if(x % 2 != 0){\n            sum += x;\n        }\n    }\n    return\
    \ sum;\n}\n", "    if(n === 0){\n        return 0;\n    }\n    if(n%2 !== 0){\n\
    \        return n%10 * digits(Math.floor(n/10));\n    }\n    return digits(Math.floor(n/10));\n\
    }", "    let r = n % 10\n    if (n < 10){\n        if (r % 2 !== 0){\n       \
    \     return r\n        }\n        else{\n            return 0\n        }\n  \
    \  }\n    if (r % 2 !== 0){\n        return r * digits(Math.floor(n / 10))\n \
    \   }\n    else{\n        return digits(Math.floor(n / 10))\n    }\n}\n", "  \
    \  return n.toString().split('').filter(x => x % 2 != 0).reduce((acc, cv) => acc\
    \ * cv, 1)\n}\n", "    var product = 1;\n    while(n > 0){\n        var remain\
    \ = n % 10;\n        if(remain % 2 !== 0){\n            product *= remain;\n \
    \       }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\nvar\
    \ res = digits(235);", "    var str = '';\n    var result = 0;\n    str = n.toString();\n\
    \    for(var i = 0; i < str.length; i++){\n        if(str[i] % 2 != 0){\n    \
    \        result = result * Number(str[i]);\n        }\n    }\n    return result;\n\
    }\n", "    //convert number to string\n    let numberString = n.toString();\n\
    \    //convert string to array\n    let numberArray = numberString.split(\"\"\
    );\n    //define initial product\n    let product = 1;\n    //loop thru array\n\
    \    for(i=0; i<numberArray.length; i++){\n        //if array element is odd,\
    \ multiply by the product\n        if(numberArray[i] % 2 !== 0){\n           \
    \ product *= numberArray[i];\n        }\n    }\n    //return product\n    return\
    \ product;\n}", "    let numArr = n.toString().split('');\n    let numArrConv\
    \ = numArr.map(Number);\n    let numArrOdd = numArrConv.filter(x => x % 2 !==\
    \ 0);\n    if (numArrOdd.length === 0){\n        return 0;\n    }\n    else {\n\
    \        let numArrOddPrdct = numArrOdd.reduce((x, y) => x * y);\n        return\
    \ numArrOddPrdct;\n    }\n}", "    let num = n;\n    let prod = 1;\n    while(num\
    \ != 0){\n        let mod = num % 10;\n        if(mod % 2 != 0){\n           \
    \ prod *= mod;\n        }\n        num = Math.floor(num / 10);\n    }\n    return\
    \ prod;\n}", "    let final = 1;\n    let numArray = n.toString().split('');\n\
    \    for(let i = 0; i < numArray.length; i++){\n        if(numArray[i] % 2 !==\
    \ 0){\n            final *= numArray[i];\n        }\n    }\n    if(final === 1){\n\
    \        return 0;\n    }\n    return final;\n}", "    var product = 1;\n    var\
    \ num = n.toString();\n    for(var i = 0; i < num.length; i++){\n        if(num[i]\
    \ % 2 !== 0){\n            product *= num[i];\n        }\n    }\n    return product;\n\
    }", "    var number = n.toString();\n    var array = [];\n    for (var i = 0;\
    \ i < number.length; i++){\n        array.push(parseInt(number[i]));\n    }\n\
    \    var result = 1;\n    for (var j = 0; j < array.length; j++){\n        if\
    \ (array[j] % 2 === 1){\n            result *= array[j];\n        }\n    }\n \
    \   return result;\n}", "    let product = 1;\n    let value = n;\n    let string\
    \ = value.toString();\n    for(let i = 0; i < string.length; i++){\n        if(string[i]\
    \ % 2 === 1){\n            product *= string[i];\n        }\n    }\n    return\
    \ product;\n}", "    var result = 1;\n    var n = n.toString();\n    for (var\
    \ i = 0; i < n.length; i++){\n        if (n[i] % 2 === 1){\n            result\
    \ *= n[i];\n        }\n    }\n    return result;\n}", "    let str = n.toString();\n\
    \    let arr = str.split('');\n    console.log(arr);\n    let sum = 1;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] % 2 === 1){\n            sum\
    \ *= arr[i];\n        }\n    }\n    return sum;\n}", "    var nums = n.toString().split('');\n\
    \    var total = 1;\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ % 2 != 0){\n            total *= parseInt(nums[i]);\n        }\n    }\n    return\
    \ total;\n}\n", "    var n = n.toString();\n    var a = n.split(\"\");\n    var\
    \ sum = 1;\n    for(var i = 0; i < a.length; i++){\n        if(a[i] % 2 !== 0){\n\
    \            sum *= a[i];\n        }\n    }\n    return sum;\n}\n", "  var odd_digits\
    \ = n.toString().split('').filter(function(x){\n    return x % 2 != 0;\n  });\n\
    \  if (odd_digits.length == 0){\n    return 0;\n  }\n  else{\n    return odd_digits.reduce(function(a,b){\n\
    \      return a * b;\n    });\n  }\n}", "    var oddDigits = 1;\n    while(n >\
    \ 0){\n        var remainder = n % 10;\n        if(remainder % 2 !== 0){\n   \
    \         oddDigits *= remainder;\n        }\n        n = Math.floor(n / 10);\n\
    \    }\n    return oddDigits;\n}", "    //num is a number\n    //result = 1\n\
    \    //loop through each digit of num\n    //skip any that are even and only multiply\
    \ by odd\n    //return result\n    let result = 1;\n    while(n > 0){\n      \
    \  let digit = n % 10;\n        if(digit % 2 === 1){\n            result *= digit;\n\
    \        }\n        n = Math.floor(n / 10);\n    }\n    return result;\n}\n",
  "    var product = 1;\n    var oddDigits = 0;\n    while(n > 0){\n        oddDigits\
    \ = n % 10;\n        if(oddDigits % 2 == 1){\n            product *= oddDigits;\n\
    \        }\n        n = parseInt(n / 10);\n    }\n    return product;\n}\n", " \
    \   // if(n === 0){\n    //     return n;\n    // }\n    // return n % 10 * digits(Math.floor(n\
    \ / 10));\n    let arr = n.toString().split('');\n    let newArr = arr.filter(el\
    \ => el % 2 !== 0);\n    if(newArr.length === 0){\n        return 0;\n    }\n\
    \    return newArr.reduce((acc, next) => acc *= next, 1);\n}\n", "var arr = n.toString().split('');\n\
    var odds =[];\nfor(var i = 0; i < arr.length; i++){\n    if(arr[i] % 2 !== 0){\n\
    \        odds.push(arr[i]);\n    }\n}\nif(odds.length == 0){\n    return 0;\n\
    }\nvar answer = odds.reduce(function(a,b){\n    return Number(a) * Number(b);\n\
    });\nreturn answer;\n}", "  //base case\n  if(n === 0){\n    return 0;\n  }\n\
    \  let r = n % 10;\n  if(r % 2 === 1){\n    return r * digits(Math.floor(n/10));\n\
    \  }\n  else{\n    return digits(Math.floor(n/10));\n  }\n}\n", "    var s=''+n,x=1;\n\
    \    for(var i=0;i<s.length;i++){\n        if(s[i]%2)x*=s[i];\n    }\n    return\
    \ x;\n}\n", "    var arr = n.toString().split('');\n    var newArr = [];\n   \
    \ var product = 1;\n    for(var i = 0; i < arr.length; i++){\n        newArr.push(parseInt(arr[i]));\n\
    \    }\n    for(var j = 0; j < newArr.length; j++){\n        if(newArr[j] % 2\
    \ === 1){\n            product *= newArr[j];\n        }\n    }\n    if(product\
    \ === 1){\n        return 0;\n    }\n    return product;\n}", "    var result\
    \ = 1;\n    while(n>=1){\n        var digit = n%10;\n        if(digit%2!=0){\n\
    \            result = result*digit;\n        }\n        n = n/10;\n    }\n   \
    \ return result;\n}", "  // FILL IN CODE\n  var prod = 1;\n  var sum = 0;\n  var\
    \ digits = n.toString().split(\"\");\n  for (var i = 0; i < digits.length; i++)\
    \ {\n    if (digits[i] % 2 == 1) {\n      sum = sum + digits[i];\n    }\n  }\n\
    \  return sum;\n}\n\n\n", "  let product = 1;\n  if (n == 0) {return 0;}\n  while\
    \ (n != 0) {\n    let digit = n % 10;\n    if (digit % 2 != 0) {\n      product\
    \ *= digit;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}", " \
    \   var result = 1;\n    n = n.toString().split('');\n    for(var i = 0; i < n.length;\
    \ i++){\n        if(parseInt(n[i]) % 2 === 1){\n            result *= parseInt(n[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var arr = String(n).split('');\n\
    \    var sum = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ % 2 !== 0){\n            sum = sum + Number(arr[i]);\n        }\n    }\n   \
    \ return sum;\n}\n", "  var result = 1;\n  n = n.toString().split('');\n  for\
    \ (var i = 0; i < n.length; i++) {\n    if (n[i] % 2 != 0) {\n      result *=\
    \ n[i];\n    }\n  }\n  return result;\n}", "    var s = 1;\n    while (n > 0){\n\
    \        var digit = n % 10;\n        if (digit % 2 === 1){\n            s *=\
    \ digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return s;\n}",
  "    var arr = n.toString().split('');\n    var ans = 1;\n    for(var i = 0; i <\
    \ arr.length; i++){\n        if(arr[i] % 2 != 0){\n            ans *= parseInt(arr[i]);\n\
    \        }\n    }\n    return ans;\n}", "    let number = [];\n    let num = 0;\n\
    \    let str = n.toString();\n    for(let i = 0; i < str.length; i++){\n     \
    \   number.push(str[i]);\n    }\n    for(let i = 0; i < number.length; i++){\n\
    \        if(number[i] % 2 !== 0){\n            num += parseInt(number[i]);\n \
    \       }\n    }\n    return num;\n}\n", "    let oddProduct = 1;\n    for (let\
    \ i = 0; i < String(n).length; i++) {\n        let currentNumber = Number(String(n)[i]);\n\
    \        if (currentNumber % 2 !== 0) {\n            oddProduct *= currentNumber;\n\
    \        }\n    }\n    return oddProduct;\n}\n", "    let nums = n.toString().split('');\n\
    \    console.log(nums);\n    let product = 1;\n    let result = 0;\n    for(let\
    \ num of nums){\n        if(num % 2 == 1){\n            product *= num;\n    \
    \        result = product;\n        }\n    }\n    return result;\n}\n", "    var\
    \ number = n.toString();\n    var total = 1;\n    for (var i = 0; i < number.length;\
    \ i++){\n        var number = parseInt(number[i]);\n        if (number % 2 !=\
    \ 0){\n            total *= number;\n        }\n    }\n    return total;\n}",
  "    var ans = 0;\n    while(n){\n        var last = n % 10;\n        n = Math.floor(n\
    \ / 10);\n        if(last % 2 != 0){\n            ans *= last;\n        }\n  \
    \  }\n    return ans;\n}", "  var product = 1;\n  if (n < 10){\n    if (n % 2\
    \ == 1){\n      return n;\n    }\n    else {\n      return 0;\n    }\n  }\n  else\
    \ {\n    for (var i = 0; i < (n.toString().length); i++){\n      var num = (n.toString())[i];\n\
    \      if (num % 2 == 1){\n        product *= num;\n      }\n    }\n    return\
    \ product;\n  }\n}\n", "\tn = n.toString();\n\tvar total = 1;\n\tfor (var i =\
    \ 0; i < n.length; i++) {\n\t\tif (n[i] % 2 !== 0) {\n\t\t\ttotal *= parseInt(n[i]);\n\
    \t\t}\n\t}\n\treturn total;\n}", "    let product = 1;\n    let digit = n;\n \
    \   while (digit !== 0){\n        let remainder = digit % 10;\n        if (remainder\
    \ % 2 !== 0){\n            product *= remainder;\n        }\n        digit = Math.floor(digit\
    \ / 10);\n    }\n    return product;\n}", "    var d = n.toString().split('');\n\
    \    var sum = 1;\n    for (var i = 0; i < d.length; i++){\n        if (parseInt(d[i])\
    \ % 2 !== 0){\n            sum *= parseInt(d[i]);\n        }\n    }\n    return\
    \ sum;\n}\n", "    let ans = 1;\n    let str = n.toString().split('');\n    let\
    \ numbers = [];\n    for(let i = 0; i < str.length; i++){\n        numbers.push(Number(str[i]));\n\
    \    }\n    for(let j = 0; j < numbers.length; j++){\n        if(numbers[j] %\
    \ 2 !== 0){\n            ans *= numbers[j];\n        }\n    }\n    return ans;\n\
    }", "\tlet sum = 1;\n\tlet check = false;\n\twhile(n>0){\n\t\tif(n%2 !== 0){\n\
    \t\t\tsum *= n%10;\n\t\t\tcheck = true;\n\t\t}\n\t\tn = Math.floor(n/10);\n\t\
    }\n\tif(check){\n\t\treturn sum;\n\t}\n\treturn 0;\n}", "    var array = []\n\
    \    var number = n.toString()\n    for (var i = 0; i < number.length; i++){\n\
    \        array.push(number[i])\n    }\n    var array_str = array.map(Number)\n\
    \    var odd = 0\n    for (var j = 0; j < array_str.length; j++){\n        if\
    \ (array_str[j] % 2 != 0){\n            odd += array_str[j]\n        }\n    }\n\
    \    return odd\n}\n\n", "    var a=1;\n    var b=0;\n    var s = n.toString();\n\
    \    for (i=0; i<s.length; i++){\n        var c = s.charAt(i);\n        b = +c;\n\
    \        if (b%2!=0){\n            a=a*b;\n        }\n    }\n    return a;\n}",
  "    let total = 1;\n    const arr = n.toString().split('');\n    for(let num of\
    \ arr){\n        if(num % 2 === 1){\n            total *= Number(num);\n     \
    \   }\n    }\n    return total;\n}", "    var prod = 1;\n    while (n){\n    \
    \    var digit = n % 10;\n        if (digit % 2 != 0){\n            prod *= digit;\n\
    \        }\n        n = Math.floor(n / 10);\n    }\n    return prod;\n}", "  \
    \  var product = 0;\n    var str = String(n);\n    var i = 0;\n    while (i <\
    \ str.length){\n        if (Number(str[i]) % 2 != 0){\n            product = product\
    \ * Number(str[i]);\n        }\n        i++;\n    }\n    return product;\n}",
  "    var numbers=n.toString();\n    var arr=[];\n    var sum=1;\n    for(var i=0;i<numbers.length;i++){\n\
    \        arr.push(numbers[i]);\n    }\n    for(var j=0;j<arr.length;j++){\n  \
    \      if(arr[j]%2!==0){\n            sum*=arr[j];\n        }\n    }\n    return\
    \ sum;\n}\n", "    let odd = 1;\n    for (let i = 1; i < n.length; i++) {\n  \
    \      if (n[i] % 2 != 0) {\n            odd *= n[i];\n        }\n    }\n    return\
    \ odd;\n}", "  var i = n;\n  var newN = n;\n  var sum = 1;\n  if(typeof(n) ===\
    \ 'number'){\n    while(i>0){\n      var mod = newN%10;\n      if(mod%2===1){\n\
    \        sum = sum*mod;\n      }\n      newN = Math.floor(newN/10);\n      i =\
    \ newN;\n    }\n    return sum;\n  }\n  else{\n    return 'Invalid input';\n \
    \ }\n}\n", "    var n = n.toString();\n    var prod = 1;\n    for (var i = 0;\
    \ i < n.length; i++){\n        if (n[i] % 2 != 0){\n            prod *= n[i];\n\
    \        }\n    }\n    return prod;\n}", "    let product = 1;\n    let numStr\
    \ = n.toString();\n    for(let i = 0; i < numStr.length; i++){\n        if(Number(numStr[i])\
    \ % 2 != 0){\n            product *= Number(numStr[i]);\n        }\n    }\n  \
    \  return product\n}\n", "    var result = 1;\n    n = n.toString();\n    for(var\
    \ i = 0; i < n.length; i++){\n        if(n[i] % 2 === 1){\n            result\
    \ *= n[i];\n        }\n    }\n    return result;\n}", "    var product = 1;\n\
    \    while(n>0){\n        var last = n%10;\n        if(last%2 != 0){\n       \
    \     product = product * last;\n        }\n        n = Math.floor(n/10);\n  \
    \  }\n    return product;\n}", "\tvar prod = 1;\n\tvar digit = n%10;\n\twhile(n!=0){\n\
    \t\tif(n%2!=0){\n\t\t\tprod = prod*(n%10);\n\t\t}\n\t\tn = Math.floor(n/10);\n\
    \t}\n\treturn prod;\n}", "    if(n < 10 && n % 2 !== 0){\n        return n;\n\
    \    }\n    else if(n < 10 && n % 2 === 0){\n        return 0;\n    }\n    else{\n\
    \        return (n % 10 * digits(Math.floor(n / 10)));\n    }\n}\n", "    var\
    \ prod = 1;\n    while (n > 0){\n        remainder = n % 10;\n        if (remainder\
    \ % 2 != 0){\n            prod *= remainder;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return prod;\n}\ndigits(4);\ndigits(235);\ndigits(1);\ndigits(12345);\n",
  "    let str = n.toString();\n    let sum = 1;\n    for(let i = 0; i < str.length;\
    \ i++){\n        if(str[i] % 2 != 0){\n            sum *= parseInt(str[i]);\n\
    \        }\n    }\n    return sum;\n}\n", "    var prod = 1;\n    var temp = n;\n\
    \    while(temp > 0){\n        var digit = temp % 10;\n        if(digit % 2 ===\
    \ 1){\n            prod *= digit;\n        }\n        temp = Math.floor(temp /\
    \ 10);\n    }\n    return prod;\n}\n", "    if(n < 0){\n        return false;\n\
    \    }\n    var odd = 1;\n    var t = 0;\n    for(var i = n; i > 0; i = Math.floor(i/10)){\n\
    \        t = i % 10;\n        if(t % 2 !== 0){\n            odd *= t;\n      \
    \  }\n    }\n    return odd;\n}\n", "    // n = n.toString().split('');\n    //\
    \ n = n.map(a => parseInt(a))\n    n = n.toString().split('').map(a => parseInt(a))\n\
    \    let numbers = n.filter(n => n % 2 !== 0);\n    if (numbers.length > 0) {\n\
    \        return numbers.reduce((a, b) => a * b);\n    } else {\n        return\
    \ 0;\n    }\n}\n", "    // your code here\n    let product = 1;\n    let str =\
    \ n.toString();\n    for (let i = 0; i < str.length; i++) {\n        if (parseInt(str[i])\
    \ % 2 != 0) {\n            product *= parseInt(str[i]);\n        }\n    }\n  \
    \  return product;\n}\n", "    let result = 1;\n    for (let i = 1; i < arguments.length;\
    \ i++) {\n        if (arguments[i] % 2 != 0) {\n            result *= arguments[i];\n\
    \        }\n    }\n    return result;\n}\n", "    var product = 1;\n    while(n>0){\n\
    \        if(n%2 != 0){\n            product *= n%10;\n        }\n        n = Math.floor(n/10);\n\
    \    }\n    return product;\n}", "    let newN = n.toString();\n    let sum =\
    \ 1;\n    for(let i = 0; i < newN.length; i++){\n        let t = newN[i];\n  \
    \      if(t % 2 === 1){\n            sum *= t;\n        }\n    }\n    return sum;\n\
    }\n", "    var result = [];\n    if (n.toString().length === 1){\n        return\
    \ n;\n    }\n    else {\n        var arr = n.toString().split('');\n        arr.forEach(function(value){\n\
    \            if (value % 2 !== 0){\n                result.push(value);\n    \
    \        }\n        });\n        var total = result.reduce(function(a,b){\n  \
    \          return Number(a) * Number(b);\n        });\n        return total;\n\
    \    }\n}\n", "    var sum = 0;\n    var numbers = n.toString();\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        if (numbers[i] % 2 != 0) {\n    \
    \        var oddNum = parseInt(numbers[i]);\n            sum += oddNum;\n    \
    \    }\n    }\n    return sum;\n}", "    var result = 0;\n    while(n > 0){\n\
    \        var last = n % 10;\n        n = Math.floor(n / 10);\n        if(last\
    \ % 2 != 0){\n            result = result * last;\n        }\n    }\n    return\
    \ result;\n}", "  var p = 1;\n  var temp = n;\n  var reminder;\n  while(temp >\
    \ 0){\n    reminder = temp % 10;\n    if(reminder % 2 != 0){\n      p = p * reminder;\n\
    \    }\n    temp = Math.floor(temp / 10);\n  }\n  return p;\n}\n", "    let odd\
    \ = 1;\n    while(n){\n        let m = n % 10;\n        if(m % 2 !== 0){\n   \
    \         odd *= m;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ odd;\n}", "    var strNum = n.toString();\n    var sum = 1;\n    for(var i =\
    \ 0; i < strNum.length; i++){\n        if(parseInt(strNum[i]) % 2 !== 0){\n  \
    \          sum *= parseInt(strNum[i]);\n        }\n    }\n    return sum;\n}",
  "    let count = 1;\n    let strN = n.toString();\n    for(let i = 0; i < strN.length;\
    \ i++){\n        if(strN[i] % 2 !== 0){\n            count *= strN[i];\n     \
    \   }\n    }\n    return count;\n}", "    let oddNumbers=[];\n    let num=n.toString().split('');\n\
    \    console.log(num);\n    for(let i=0;i<num.length;i++){\n        if(parseInt(num[i])%2===1){\n\
    \            oddNumbers.push(num[i]);\n        }\n    }\n    console.log(oddNumbers);\n\
    \    if(oddNumbers.length===0){\n        return 0;\n    }\n    let product=1;\n\
    \    for(let i=0;i<oddNumbers.length;i++){\n        product*=parseInt(oddNumbers[i]);\n\
    \    }\n    return product;\n}", "    let p = 1;\n    while (n > 0){\n       \
    \ let r = n % 10;\n        if (r % 2 !== 0){\n            p *= r;\n        }\n\
    \        n = Math.floor(n / 10);\n    }\n    return p;\n}", "    let total = 0;\n\
    \    for(let i = 0; i < n.length; i++){\n        if(n[i] % 2 == 0){\n        \
    \    total += n[i];\n        } else {\n            return 0;\n        }\n    }\n\
    \    return total;\n}", "    var product = 1;\n    while(n>0){\n        var value\
    \ = n%10;\n        if(value%2 != 0){\n            product *= value;\n        }\n\
    \        n = Math.floor(n/10);\n    }\n    return product;\n}", "    var oddProduct\
    \ = 1;\n    //change the number to a string\n    var stringNumber = n.toString();\n\
    \    //change the string to an array of characters\n    var arrayOfCharacters\
    \ = stringNumber.split(\"\");\n    //check if each character is a number\n   \
    \ for(var i = 0; i < arrayOfCharacters.length; i++){\n        //if it is a number,\
    \ check if it is odd\n        var number = parseInt(arrayOfCharacters[i]);\n \
    \       if(!isNaN(number)){\n            if(number % 2 !== 0){\n             \
    \   oddProduct *= number;\n            }\n        }\n    }\n    return oddProduct;\n\
    }\n", "  if(!Number.isInteger(n)){\n    throw new Error(`${n} is not a integer`);\n\
    \  }\n  if(n < 0){\n    throw new Error(`${n} is not a positive integer`);\n \
    \ }\n  if(n === 0){\n    return 0;\n  }\n  let product = 1;\n  let last = n %\
    \ 10;\n  if(last % 2 === 1){\n    product *= last;\n  }\n  return product * digits(Math.floor(n\
    \ / 10));\n}\n", "   let num = n.toString();\n   let numArr = num.split('');\n\
    \   let result = 0;\n   if(n<0){\n       return \"Cannot compute a negative number\"\
    ;\n   }\n   for(let i = 0; i < numArr.length; i++){\n       if(numArr[i] % 2 ===\
    \ 1){\n           result = result * numArr[i];\n       }\n   }\n   return result;\n\
    }", "\tvar num = n.toString().split('');\n\tvar total = 0;\n\tfor(var i = 0; i\
    \ < num.length; i++){\n\t\tif(num[i] % 2 !== 0){\n\t\t\ttotal += parseInt(num[i]);\n\
    \t\t}\n\t}\n\treturn total;\n}\n", "    return 0;\n}\n\nmodule.exports = {\n \
    \   fizzBuzz,\n    factorial,\n    rotate,\n    balance,\n    scramble,\n    powers,\n\
    \    power,\n    say,\n    triples,\n    exp,\n    hamming,\n    keys,\n    values,\n\
    \    mapObject,\n    invariant,\n    reverseString,\n    words,\n    filterQs,\n\
    \    max,\n    slice,\n    take,\n    repeat,\n    numToText,\n    filter,\n \
    \   reduce,\n    wordLengths,\n    every,\n    allEqual,\n    average,\n    fizzBuzzExtra,\n\
    \    factorial,\n    cycle,\n    square,\n    findRepeat,\n    vowels,\n    twins,\n\
    \    or,\n    unique,\n    elementCount,\n    reverse,\n    palindrome,\n    monkeyCount,\n\
    \    longest,\n    powerSequence,\n    add3,\n    join3,\n    repeat3,\n    largest,\n\
    \    rightmost,\n    leftmost,\n    oddOnly,\n    weave,\n    combos,\n    combinations,\n\
    \    uniquePairs,\n    divisibleBy,\n    groupBy,\n    groupBy2,\n    groupBy3,\n\
    \    unzip,\n    compact,\n    compact2,\n    compact3,\n    arrayBuilder,\n \
    \   partitionOn,\n    span,\n    splat,\n    transpose,\n    deserialize,\n  \
    \  serialize,\n    sumOfSquares,\n    squares,\n    digits\n};", "    let product\
    \ = 1;\n    while(n > 0){\n        if(n % 2 === 1){\n            product *= n\
    \ % 10;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }", "    var prod = 1;\n    if (n == 0){\n        return 0;\n    }\n    if (n\
    \ < 0){\n        n = -n;\n    }\n    while (n > 0){\n        var last = n % 10;\n\
    \        if (last % 2 == 1){\n            prod *= last;\n        }\n        n\
    \ = (n - last) / 10;\n    }\n    return prod;\n}", "    let product = 1;\n   \
    \ n = n.toString().split('');\n    for(let i = 0; i < n.length; i++){\n      \
    \  if(n[i] % 2 !== 0){\n            product *= n[i];\n        }\n    }\n    return\
    \ product;\n}", "    if(n==0){\n        return 0;\n    }\n    else if(n%2==0){\n\
    \        return digits(Math.floor(n/10));\n    }\n    else{\n        return (n%10)\
    \ * digits(Math.floor(n/10));\n    }\n}", "  var prod = 1;\n  while (n > 0){\n\
    \    var digit = n % 10;\n    if (digit % 2 != 0){\n      prod *= digit;\n   \
    \ }\n    n = Math.floor(n / 10);\n  }\n  return prod;\n}\n", "    n = n.toString().split('');\n\
    \    var result = 1;\n    for(var i = 0; i < n.length; i++){\n        if(n[i]\
    \ % 2 !== 0){\n            result *= n[i];\n        }\n    }\n    return result;\n\
    }", "    if(n < 10){\n        return (n % 2 === 1) ? n : 0;\n    }\n    else{\n\
    \        return (n % 10 % 2 === 1) ? (n % 10) * digits(Math.floor(n / 10)) : digits(Math.floor(n\
    \ / 10));\n    }\n}\n", "    let numString = n.toString();\n    let array = numString.split(\"\
    \");\n    let sum = 1;\n    for(let i = 0; i < array.length; i++){\n        if(array[i]\
    \ % 2 !== 0){\n            sum *= parseInt(array[i]);\n        }\n    }\n    return\
    \ sum;\n}\n", "    // var answer = 1;\n    var ans = 1;\n    while (n > 0){\n\
    \        var digit = n % 10;\n        if (digit % 2 === 1){\n            ans *=\
    \ digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return ans;\n\
    }\n", "  // Your code here\n}\n", "  if(n % 2 != 0) {\n    return n;\n  }\n  var\
    \ product = 1;\n  while(n != 0) {\n    if(n % 2 != 0) {\n      product *= n %\
    \ 10;\n    }\n    n = Math.floor(n / 10);\n  }\n  return product;\n}", "    let\
    \ arr = n.toString().split('');\n    let result = 1;\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(parseInt(arr[i]) % 2 != 0){\n            result *= parseInt(arr[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var odd = 1;\n    var nums =\
    \ n.toString().split(\"\");\n    for(var i = 0; i < nums.length; i++){\n     \
    \   if(nums[i] % 2 !== 0){\n            odd *= nums[i];\n        }\n    }\n  \
    \  return odd;\n}\n\n", "    var multi = 1;\n    var result = 0;\n    for(var\
    \ i = n; i > 0; i = (i - i % 10) / 10){\n        var digit = i % 10;\n       \
    \ if(digit % 2 === 1){\n            multi *= digit;\n        }\n    }\n    if(multi\
    \ !== 1){\n        result = multi;\n    }\n    return result;\n}", "    var result\
    \ = 1;\n    if(n < 0){\n        return 0;\n    }\n    if(n === 0){\n        return\
    \ 1;\n    }\n    if(n > 0){\n        var arr = [];\n        var split = n.toString().split(\"\
    \");\n        for(var i = 0; i < split.length; i++){\n            arr.push(parseInt(split[i]));\n\
    \        }\n        for(var j = 0; j < arr.length; j++){\n            if(arr[j]\
    \ % 2 !== 0){\n                result *= arr[j];\n            }\n        }\n \
    \   }\n    return result;\n}", "  var count = 0;\n  var product = 1;\n  for (var\
    \ i = 0; i < n.toString().length; i++) {\n    if (n.toString()[i] % 2 != 0) {\n\
    \      product *= n.toString()[i];\n    }\n  }\n  return product;\n}\n", "   \
    \ let x = n.toString().split('');\n    let y = 0;\n    for(let i = 0; i < x.length;\
    \ i++){\n        if(x[i] % 2 !== 0){\n            y = y * (x[i] * 1);\n      \
    \  }\n    }\n    return y;\n}\n", "    var product = 0;\n    var dig = n.toString().split('');\n\
    \    for(var i = 0; i < dig.length; i++){\n        if(parseInt(dig[i]) % 2 ===\
    \ 1){\n            product *= parseInt(dig[i]);\n        }\n    }\n    return\
    \ product;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

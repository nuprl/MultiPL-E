name: HumanEval_131_digits
language: js
prompt: "//Given a positive integer n, return the product of the odd digits.\n// Return\
  \ 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n// >>> digits(4)\n\
  // 0\n// >>> digits(235)\n// 15\nfunction digits(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = digits;\n  assert.deepEqual(candidate(5),5);\n  assert.deepEqual(candidate(54),5);\n\
  \  assert.deepEqual(candidate(120),1);\n  assert.deepEqual(candidate(5014),5);\n\
  \  assert.deepEqual(candidate(98765),315);\n  assert.deepEqual(candidate(5576543),2625);\n\
  \  assert.deepEqual(candidate(2468),0);\n}\n\ntest();"
completions: ["    if(!n){\n        return \"error\";\n    }\n    if(n < 0){\n   \
    \     return \"error\";\n    }\n    var temp = 0;\n    var prod = 1;\n    var\
    \ odd = true;\n    for(n; n > 0; n = Math.floor(n/10)){\n        temp = n % 10;\n\
    \        if(temp % 2 != 0){\n            prod *= temp;\n            odd = false;\n\
    \        }\n    }\n    if(odd){\n        return 0;\n    }\n    return prod;\n\
    }\n\n", "    //code here\n    return 0;\n}\n", "    let sum = 1;\n    let num\
    \ = n.toString();\n    for(let i = 0; i < num.length; i++){\n        let digit\
    \ = parseInt(num[i]);\n        if(digit % 2 !== 0){\n            sum *= digit;\n\
    \        }\n    }\n    return sum;\n}\n", "    var sum = 1;\n    var count = 0;\n\
    \    while(n > 0){\n        var digit = n % 10;\n        if(digit % 2 == 1){\n\
    \            sum *= digit;\n            count++;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    if(count == 0){\n        return 0;\n    }\n    return sum;\n\
    }\n", "    return Array.from(String(n), Number).filter(function(number){\n   \
    \     return number % 2 === 1;\n    }).reduce(function(a, b){\n        return\
    \ a * b;\n    }, 1);\n}\n", "    let listOfDigits = n.toString().split('')\n \
    \   let oddDigits = []\n    listOfDigits.forEach(function(digit){\n        if(digit\
    \ % 2 !== 0){\n            oddDigits.push(digit)\n        }\n    })\n    if(oddDigits.length\
    \ === 0){\n        return 0\n    }\n    else{\n        return oddDigits.reduce(function(product,\
    \ currentValue){\n            return product * currentValue\n        })\n    }\n\
    }", "    var product = 1;\n    while(n != 0){\n        var dig = n % 10;\n   \
    \     if(dig % 2 != 0){\n            product *= dig;\n        }\n        n = Math.floor(n\
    \ / 10);\n    }\n    return product;\n}\n", "  var nums = n.toString().split('')\n\
    \  var answer = 1\n  for (var i = 0; i < nums.length; i++) {\n    if (nums[i]\
    \ % 2 != 0) {\n      answer *= parseInt(nums[i])\n    }\n  }\n  return answer\n\
    }", "\tvar n_string = n.toString();\n\tvar product = 1;\n\t\n\tfor (var i = 0;\
    \ i < n_string.length; i++){\n\t\tif (parseInt(n_string[i]) % 2 !== 0){\n\t\t\t\
    product *= parseInt(n_string[i]);\n\t\t}\n\t}\n\treturn product;\n}", "  let p\
    \ = 1;\n  while (n > 0) {\n    let dig = n % 10;\n    if (dig % 2 == 1) {\n  \
    \    p *= dig;\n    }\n    n = Math.floor(n / 10);\n  }\n  return p;\n}", "  \
    \  let number = n.toString();\n    let answer = 1;\n    let num = number.split('');\n\
    \    for(let i = 0; i < num.length; i++){\n        if(num[i] % 2 != 0){\n    \
    \        answer *= num[i];\n        }\n    }\n    return answer;\n}", "    var\
    \ str = n.toString();\n    var result = 1;\n    for (var i = 0; i < str.length;\
    \ i++){\n        if(str[i] % 2 !== 0){\n            result *= str[i];\n      \
    \  }\n    }\n    return result;\n}", "    var product = 1;\n    while(n > 0){\n\
    \        var digit = n % 10;\n        if(digit % 2 != 0){\n            product\
    \ *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return product;\n\
    }", "    let nums = n.toString();\n    let even = 0;\n    let res = 1;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        if(nums[i] % 2 !== 0){\n            res\
    \ *= nums[i];\n        }else{\n            even++;\n        }\n    }\n    if(even\
    \ === nums.length){\n        return 0;\n    }\n    return res;\n}\n", "    //\
    \ your code here\n    var stringN = n.toString();\n    var arrN = stringN.split(\"\
    \");\n    var sum = 1;\n    for(var i = 0; i < arrN.length; i++){\n        if(arrN[i]\
    \ % 2 === 1){\n            sum *= arrN[i];\n        }\n    }\n    return sum;\n\
    }\n", "    let product = 1;\n    let digit;\n    while (n > 0){\n        digit\
    \ = n % 10;\n        if (digit % 2 !== 0){\n            product *= digit;\n  \
    \      }\n        n = Math.floor(n / 10);\n    }\n    return product;\n}\n", " \
    \ if(n <= 0){\n    return 0;\n  }\n  let numArr = n.toString().split('');\n  let\
    \ product = 1;\n  for(let i = 0; i < numArr.length; i++){\n    if(numArr[i] %\
    \ 2 !== 0){\n      product *= numArr[i];\n    }\n  }\n  return product;\n}\n",
  "  var arr = []\n  var result = 1\n  while(n>0){\n    var last = n%10\n    if(last%2\
    \ != 0){\n      arr.push(last)\n    }\n    n = Math.floor(n/10)\n  }\n  for(var\
    \ i = 0; i < arr.length; i++){\n    result *= arr[i]\n  }\n  return result\n}",
  "    let numStr = n.toString();\n    let total = 1;\n    for(let i = 0; i < numStr.length;\
    \ i++){\n        if(parseInt(numStr[i]) % 2 !== 0){\n            total *= parseInt(numStr[i]);\n\
    \        }\n    }\n    return total;\n}", "    var product = 1;\n    while(n >\
    \ 0){\n        var digit = n % 10;\n        if(digit % 2 === 1){\n           \
    \ product *= digit;\n        }\n        n = Math.floor(n / 10);\n    }\n    return\
    \ product;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

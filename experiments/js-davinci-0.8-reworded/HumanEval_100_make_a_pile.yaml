name: HumanEval_100_make_a_pile
language: js
prompt: "//Given a positive integer n, you have to make a pile of n levels of stones.\n\
  // The first level has n stones.\n// The number of stones in the next level is:\n\
  // - the next odd number if n is odd.\n// - the next even number if n is even.\n\
  // Return the number of stones in each level in an array, where element at index\n\
  // i represents the number of stones in the level (i+1).\n// Examples:\n// >>> make_a_pile(3)\n\
  // [3, 5, 7]\nfunction make_a_pile(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = make_a_pile;\n  assert.deepEqual(candidate(3),[3, 5, 7]);\n  assert.deepEqual(candidate(4),[4,\
  \ 6, 8, 10]);\n  assert.deepEqual(candidate(5),[5, 7, 9, 11, 13]);\n  assert.deepEqual(candidate(6),[6,\
  \ 8, 10, 12, 14, 16]);\n  assert.deepEqual(candidate(8),[8, 10, 12, 14, 16, 18,\
  \ 20, 22]);\n}\n\ntest();"
completions: ["    let level = n;\n    let result = [n];\n    for(let i = 0; i < n\
    \ - 1; i++){\n        if(level % 2 === 0){\n            level += 2;\n        }\
    \ else {\n            level += 1;\n        }\n        result.push(level);\n  \
    \  }\n    return result;\n}\n", "    var result = [];\n    for(var i = 0; i <\
    \ n; i++){\n        if(n % 2 === 0){\n            result.push(n+1);\n        }else{\n\
    \            result.push(n+2);\n        }\n    }\n    return result;\n}", "  \
    \  var res = [];\n    for(var i = 0; i < n; i++){\n        if(i % 2){\n      \
    \      res.push(n + i);\n        }else{\n            res.push(n + i + 1);\n  \
    \      }\n    }\n    return res;\n}", "  let stoneArr = [];\n  stoneArr.push(n);\n\
    \  let oddIndex = 0;\n  let evenIndex = 1;\n  while(oddIndex < n){\n    stoneArr.push(oddIndex\
    \ + 2);\n    oddIndex += 2;\n  }\n  while(evenIndex < n){\n    stoneArr.push(evenIndex\
    \ + 2);\n    evenIndex += 2;\n  }\n  return stoneArr;\n}\n", "  var output = [];\n\
    \  var stones = n;\n  while(stones > 0){\n    output.push(stones);\n    if(stones\
    \ % 2 == 0){\n      stones = stones + 2;\n    } else {\n      stones = stones\
    \ + 1;\n    }\n  }\n  return output;\n}\n", "  if(n % 2 == 0){\n    let arr =\
    \ []\n    let even = n;\n    let odd = n + 1;\n    while(even > 0 || odd > 0){\n\
    \      if(even > 0){\n        arr.push(even)\n        even -= 2;\n      }\n  \
    \    if(odd > 0){\n        arr.push(odd)\n        odd -= 2;\n      }\n    }\n\
    \    return arr;\n  }\n  else{\n    let arr = []\n    let even = n - 1;\n    let\
    \ odd = n;\n    while(even > 0 || odd > 0){\n      if(even > 0){\n        arr.push(even)\n\
    \        even -= 2;\n      }\n      if(odd > 0){\n        arr.push(odd)\n    \
    \    odd -= 2;\n      }\n    }\n    return arr;\n  }\n}\n", "    var result =\
    \ [];\n    var odd = [];\n    var even = [];\n    var count = 0;\n    while(count\
    \ < n){\n        if(n % 2 == 0){\n            result.push(n);\n            n +=\
    \ 2;\n            count++;\n        }\n        else{\n            result.push(n);\n\
    \            n += 2;\n            count++;\n        }\n    }\n    return result;\n\
    }", "    let array = [n];\n    for(i=1;i<n;i++){\n        if(n%2==0){\n      \
    \      array.push(n+2*i);\n        }\n        else{\n            array.push(n+2*i-1);\n\
    \        }\n    }\n    return array;\n}", "    let result = [n];\n    while(result[result.length-1]\
    \ > 1){\n        if(result[result.length-1] % 2 === 0){\n            result.push(result[result.length-1]\
    \ - 1);\n        }else{\n            result.push(result[result.length-1] - 2);\n\
    \        }\n    }\n    return result;\n}", "  var arr = [];\n  var count = n;\n\
    \  var num = n+1;\n  for(var i = 0; i < n; i++){\n    if(count % 2 === 0){\n \
    \     arr.push(count);\n      count = count + num;\n      num += 2;\n    } else\
    \ {\n      arr.push(count);\n      count = count + num;\n      num += 2;\n   \
    \ }\n  }\n  return arr;\n}\n", "  var arr=[];\n  for(var i=1;i<=n;i++){\n    if(i%2==0){\n\
    \      arr.push(n+i);\n    }\n    else{\n      arr.push(n+i-1);\n    }\n  }\n\
    \  return arr;\n}", "    if(n < 1) return [];\n    const res = [n];\n    let i\
    \ = n;\n    while(i > 0){\n        if(i % 2 === 0){\n            res.push(i -\
    \ 1);\n            i = i - 1;\n        }else{\n            res.push(i - 2);\n\
    \            i = i - 2;\n        }\n    }\n    return res;\n}", "  // First we\
    \ create an array of n levels, with n in the first element.\n  let pile = Array(n).fill(n);\n\
    \  // Then we create a loop that will go through each element and replace it with\n\
    \  // the next odd or even number.\n  for (let i = 0; i < pile.length; i++){\n\
    \    if (pile[i] % 2 === 0){\n      pile[i] += 2;\n    } else {\n      pile[i]\
    \ += 1;\n    }\n  }\n  return pile;\n}", "    let result = [n];\n    while(n >\
    \ 1){\n        if(n % 2 == 0){\n            n = n / 2;\n        }\n        else{\n\
    \            n = (n + 1) / 2;\n        }\n        result.push(n);\n    }\n   \
    \ return result;\n}", "    let arr = []\n    let count = n\n    while(count >=\
    \ 0){\n        arr.push(n)\n        n = n % 2 === 0 ? n+2 : n+1\n        count--\n\
    \    }\n    return arr\n}\n", "  var result = [n];\n  while(n > 1){\n    if(n\
    \ % 2 == 0){\n      n++;\n    } else {\n      n--;\n    }\n    result.push(n);\n\
    \  }\n  return result;\n}", "    let arr = [];\n    for(let i = 0; i < n; i++){\n\
    \        arr.push(n + (i * 2));\n    }\n    return arr;\n}", "    let result =\
    \ [];\n    let counter = n;\n    while(counter > 0){\n        if(counter % 2 ===\
    \ 0){\n            result.push(counter);\n            counter = counter - 2;\n\
    \        }else{\n            result.push(counter);\n            counter = counter\
    \ - 1;\n        }\n    }\n    return result;\n}", "  var levels = [];\n  var odd\
    \ = true;\n  for (var i = 0; i < n; i++){\n    if (n % 2 == 0){\n      odd = false;\n\
    \    } else {\n      odd = true;\n    }\n    if (odd){\n      levels.push(n +\
    \ 2*i);\n    } else {\n      levels.push(n + 2*i + 1);\n    }\n  }\n  return levels;\n\
    }", "  var array = [];\n  var odd = 2;\n  var even = 3;\n  for(var i = 1; i <\
    \ n+1; i++){\n    if(i % 2 == 0){\n      array.push(even);\n      even += 2;\n\
    \    }else{\n      array.push(odd);\n      odd += 2;\n    }\n  }\n  return array;\n\
    }"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

{
  "name": "mbpp_75_find_tuples",
  "language": "php",
  "prompt": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $flag = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [3, 6, 9], [4, 8, 12]];\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples that are divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "The tuples that are divisible by 3 are: [3, 6, 9, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [2, 4, 6, 8], [3, 6, 9, 12], [4, 8, 12, 16]];\n$K = 4;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach($test_list as $test_array) {\n        $is_divisible = true;\n        foreach($test_array as $element) {\n            if($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50)\n);\n\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [1] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n            [3] => 40\n            [4] => 50\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach($test_list as $test) {\n        $is_divisible = true;\n        foreach($test as $num) {\n            if($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1,2,3,4,5], [2,4,6,8,10], [5,10,15,20,25]];\n$K = 5;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_list_item) {\n        $divisible = true;\n        foreach ($test_list_item as $test_list_item_item) {\n            if ($test_list_item_item % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test_list_item;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n    [1] => Array\n        (\n            [0] => 6\n            [1] => 12\n            [2] => 18\n            [3] => 24\n            [4] => 30\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_case) {\n        $is_divisible = true;\n        foreach ($test_case as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];\n$K = 4;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "The tuples which have all elements divisible by 3 are: [3, 6, 9, 12, ][6, 12, 18, 24, ][9, 18, 27, 36, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $list) {\n        $divisible = true;\n        foreach ($list as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"Test list: \";\nprint_r($test_list);\necho \"K = $K\\n\";\necho \"Result: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Test list: Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 12\n            [2] => 18\n            [3] => 24\n            [4] => 30\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Input: [[1,2,3,4,5,6],[2,4,6,8,10],[3,6,9,12,15],[17,34,51,68,85]]\nOutput: [[3,6,9,12,15]]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\n$K = 5;\nprint_r(find_tuples($test_list, $K));\n\n$K = 6;\nprint_r(find_tuples($test_list, $K));\n\n$K = 10;\nprint_r(find_tuples($test_list, $K));\n\n$K = 12;\nprint_r(find_tuples($test_list, $K));\n\n$K = 15;\nprint_r(find_tuples($test_list, $K));\n\n$K = 20;\nprint_r(find_tuples($test_list, $K));\n\n$K = 25;\nprint_r(find_tuples($test_list, $K));\n\n$K = 30;\nprint_r(find_tuples($test_list, $K));\n\n$K = 100;\nprint_r(find_tuples($test_list, $K));\n\n$K = 0;\nprint_r(find_tuples($test_list, $K));\n\n$K = 1;\nprint_r(find_tuples($test_list, $K));\n\n$K = -1\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmpizkqhyw9.php on line 68\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $key => $value) {\n        $flag = true;\n        foreach ($value as $val) {\n            if ($val % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n$test_list = array(array(1, 2, 3, 4, 5), array(5, 10, 15), array(20, 25, 30, 35));\n$K = 5;\necho \"The tuples which have all elements divisible by k are :\\n\";\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "The tuples which have all elements divisible by k are :\nArray\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n        )\n\n    [1] => Array\n        (\n            [0] => 20\n            [1] => 25\n            [2] => 30\n            [3] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_list_item) {\n        $divisible = true;\n        foreach ($test_list_item as $test_list_item_item) {\n            if ($test_list_item_item % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_list_item);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $divisible = true;\n        foreach ($test_tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_tuple);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n);\n\n$K = 4;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 16\n            [2] => 24\n            [3] => 32\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by K are: \";\nforeach ($result as $test) {\n    echo \"\\n\";\n    foreach ($test as $value) {\n        echo $value . \" \";\n    }\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "The tuples which have all elements divisible by K are: \n5 10 15 20 25 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15), array(4, 8, 12, 16, 20));\n$K = 4;\n$result = find_tuples($test_list, $K);\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Input: [[1,2,3,4,5],[2,4,6,8,10],[3,6,9,12,15],[4,8,12,16,20]]\nOutput: [[4,8,12,16,20]]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\n    array(34, 68,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_o4tx_m1.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35)\n);\n\n$K = 7;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35),\n);\n$K = 7;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35),\n);\n$K = 7;\n\n$result = find_tuples($test_list, $K);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n);\n$K = 4;\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $num) {\n        echo $num . \", \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: [4, 8, 12, 16, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $item) {\n            if ($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35),\n);\n$K = 7;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50)\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $num) {\n        echo \"$num \";\n    }\n    echo \"] \";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 5 are: [5 10 15 20 25 ] [10 20 30 40 50 ] ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_case) {\n        $flag = true;\n        foreach ($test_case as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(\n        array(1, 2, 3, 4, 5),\n        array(2, 4, 6, 8, 10),\n        array(3, 6, 9, 12, 15),\n        array(4, 8, 12, 16, 20),\n        array(5, 10, 15, 20, 25),\n    ),\n    array(\n        array(1, 2, 3, 4, 5),\n        array(2, 4, 6, 8, 10),\n        array(3, 6, 9, 12, 15),\n        array(4, 8, 12, 16, 20),\n        array(5, 10, 15, 20, 25),\n    ),\n    array(\n        array(1, 2, 3, 4, 5),\n        array(2, 4, 6, 8, 10),\n        array(3, 6, 9, 12, 15),\n        array(4, 8, 12, 16, 20),\n        array(5, 10, 15, 20, 25),\n    ),\n    array(\n        array(1, 2, 3, 4, 5),\n        array(2, 4, 6, 8, 10),\n        array(3, 6, 9, 12, 15),\n        array(4, 8, 12, 16, 20),\n        array(5, 10, 15, 20, 25),\n    ),\n    array(\n        array(1, 2, 3, 4, 5),\n        array(2, 4, 6, 8, 10),\n        array(3, 6, 9, 12, 15),\n        array(4, 8, 12, 16, 20),\n        array(5, 10, 15, 20, 25),\n    ),\n);\n\n$K = 5;\n\n$result\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp6t571aue.php on line 61\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100),\n    array(21, 42, 63, 84, 105),\n    array(22, 44, 66, 88, 110),\n    array(23, 46, 69, 92, 115),\n    array(24, 48, 72, 96, 120),\n    array(25, 50, 75, 100, 125),\n    array(26, 52, 78, 104, 130),\n    array(27, 54, 81, 108, 135),\n    array(28, 56, 84, 112, 140),\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp5ftw0v7g.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $key => $value) {\n        $flag = true;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n        ),\n        array(\n            2,\n            4,\n            6,\n            8,\n            10,\n        ),\n    ),\n    array(\n        array(\n            2,\n            4,\n            6,\n            8,\n            10,\n        ),\n        array(\n            12,\n            14,\n            16,\n            18,\n            20,\n        ),\n    ),\n    array(\n        array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n        ),\n        array(\n            12,\n            14,\n            16,\n            18,\n            20,\n        ),\n    ),\n);\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: array % int in /tmp/tmpqv1vbqy5.php:8\nStack trace:\n#0 /tmp/tmpqv1vbqy5.php(73): find_tuples(Array, 2)\n#1 {main}\n  thrown in /tmp/tmpqv1vbqy5.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\n\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo $element . \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $key => $value) {\n        $flag = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\n    array(34, 68,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp26tlp05y.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp71mecjhh.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\n    array(34, 68\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpa54pshkb.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach($test_list as $test_array) {\n        $divisible = true;\n        foreach($test_array as $element) {\n            if($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if($divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100)\n);\n\n$K = 4;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 16\n            [2] => 24\n            [3] => 32\n            [4] => 40\n        )\n\n    [2] => Array\n        (\n            [0] => 12\n            [1] => 24\n            [2] => 36\n            [3] => 48\n            [4] => 60\n        )\n\n    [3] => Array\n        (\n            [0] => 16\n            [1] => 32\n            [2] => 48\n            [3] => 64\n            [4] => 80\n        )\n\n    [4] => Array\n        (\n            [0] => 20\n            [1] => 40\n            [2] => 60\n            [3] => 80\n            [4] => 100\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]];\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are :\\n\";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\\n\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 3 are :\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(2, 4, 6),\n    array(3, 6, 9),\n    array(4, 8, 12),\n    array(5, 10, 15),\n    array(6, 12, 18),\n    array(7, 14, 21),\n    array(8, 16, 24),\n    array(9, 18, 27),\n    array(10, 20, 30),\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 3 are: [3 6 9 ][6 12 18 ][9 18 27 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(2, 4, 6),\n    array(2, 4, 8),\n    array(2, 4, 10),\n    array(2, 4, 12),\n    array(2, 4, 14),\n    array(2, 4, 16),\n    array(2, 4, 18),\n    array(2, 4, 20),\n    array(2, 4, 22),\n    array(2, 4, 24),\n    array(2, 4, 26),\n    array(2, 4, 28),\n    array(2, 4, 30),\n    array(2, 4, 32),\n    array(2, 4, 34),\n    array(2, 4, 36),\n    array(2, 4, 38),\n    array(2, 4, 40),\n    array(2, 4, 42),\n    array(2, 4, 44),\n    array(2, 4, 46),\n    array(2, 4, 48),\n    array(2, 4, 50),\n    array(2, 4, 52),\n    array(2, 4, 54),\n    array(2, 4, 56),\n    array(2, 4, 58),\n    array(2, 4, 60),\n    array(2, 4, 62),\n    array(2, 4, 64),\n    array(2, 4, 66),\n    array(2, 4, 68),\n    array(2, 4, 70),\n    array(2, 4, 72),\n    array(2, 4, 74),\n    array(2, 4, 76),\n    array(2, 4, 78),\n    array(2, 4, 80),\n    array(2, 4, 82),\n    array(2, 4, 84),\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpg5ijuhmb.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [3, 6, 9], [4, 8, 12]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 6\n            [1] => 12\n            [2] => 18\n            [3] => 24\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpw8k5b33i.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4, 5], [5, 10, 15], [20, 25, 30]];\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n        )\n\n    [1] => Array\n        (\n            [0] => 20\n            [1] => 25\n            [2] => 30\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach($test_list as $test_array) {\n        $divisible = true;\n        foreach($test_array as $element) {\n            if($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if($divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(2, 4, 6), array(3, 6, 9), array(4, 8, 12));\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\n\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [2, 4, 8], [2, 4, 6, 8], [2, 4, 6, 8, 10]];\n$K = 2;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by k are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo $element . \", \";\n    }\n    echo \"]\";\n}\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by k are: [2, 4, 6, ][2, 4, 8, ][2, 4, 6, 8, ][2, 4, 6, 8, 10, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $divisible = true;\n        foreach ($test_array as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by $K are : \";\nforeach ($result as $test_array) {\n    echo \"[\";\n    foreach ($test_array as $value) {\n        echo \"$value, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 3 are : [3, 6, 9, 12, 15, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [1, 2, 3], [3, 6, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\n    array(34\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpdif7bge2.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12), array(13, 14, 15, 16));\n$K = 4;\n$result = find_tuples($test_list, $K);\necho \"The tuples with all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples with all elements divisible by 4 are: ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $value) {\n        echo $value, \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: [5 10 15 20 25 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmphu71do7v.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [2, 4, 6, 8], [3, 6, 9, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1,2,3,4,5], [2,4,6,8,10], [3,6,9,12,15], [4,8,12,16,20], [5,10,15,20,25]];\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 5 are: [5 10 15 20 25 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $divisible = true;\n        foreach ($test_tuple as $test_value) {\n            if ($test_value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test_tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100),\n    array(21, 42, 63, 84, 105),\n    array(22, 44, 66, 88, 110),\n    array(23, 46, 69, 92, 115),\n    array(24, 48, 72, 96, 120),\n    array(25, 50, 75, 100, 125),\n    array(26, 52, 78, 104, 130),\n    array(27, 54, 81, 108, 135),\n    array(28, 56, 84, 112,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsjai0kbs.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(2, 4, 6),\n    array(3, 6, 9),\n    array(4, 8, 12),\n    array(5, 10, 15),\n    array(6, 12, 18),\n    array(7, 14, 21),\n    array(8, 16, 24),\n    array(9, 18, 27),\n    array(10, 20, 30)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples that are divisible by $K are: \\n\";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\\n\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples that are divisible by 3 are: \n[3, 6, 9, ]\n[6, 12, 18, ]\n[9, 18, 27, ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $divisible = true;\n        foreach ($test_tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100),\n    array(21, 42, 63, 84, 105),\n    array(22, 44, 66, 88, 110),\n    array(23, 46, 69, 92, 115),\n    array(24, 48, 72, 96, 120),\n    array(25, 50, 75, 100, 125),\n    array(26, 52, 78, 104, 130),\n    array(27, 54, 81, 108, 135),\n    array(28, 56, 84, 112, 140),\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpvi6xajid.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(2, 4, 6, 8), array(1, 2, 3, 4, 5, 6));\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $flag = false;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4, 5],\n    [2, 4, 6, 8, 10],\n    [3, 6, 9, 12, 15],\n    [4, 8, 12, 16, 20],\n    [5, 10, 15, 20, 25],\n];\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $item) {\n    echo \"[\";\n    foreach ($item as $value) {\n        echo \"$value, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 5 are: [5, 10, 15, 20, 25, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $divisible = true;\n        foreach ($list as $item) {\n            if ($item % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4, 5],\n    [2, 4, 6, 8, 10],\n    [3, 6, 9, 12, 15],\n    [4, 8, 12, 16, 20],\n    [5, 10, 15, 20, 25],\n    [6, 12, 18, 24, 30],\n    [7, 14, 21, 28, 35],\n    [8, 16, 24, 32, 40],\n    [9, 18, 27, 36, 45],\n    [10, 20, 30, 40, 50],\n];\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [1] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n            [3] => 40\n            [4] => 50\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $t) {\n            if ($t % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples are : \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $t) {\n        echo $t . \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are : [5 10 15 20 25 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [8, 10, 12], [14, 16, 18]];\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 10\n            [2] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 14\n            [1] => 16\n            [2] => 18\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $element) {\n        echo \"$element \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 5 are: [5 10 15 20 25 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(2, 4, 6),\n    array(2, 4, 8),\n    array(2, 4, 10),\n    array(2, 4, 12),\n    array(2, 4, 14),\n    array(2, 4, 16),\n    array(2, 4, 18),\n    array(2, 4, 20),\n    array(2, 4, 22),\n    array(2, 4, 24),\n    array(2, 4, 26),\n    array(2, 4, 28),\n    array(2, 4, 30),\n    array(2, 4, 32),\n    array(2, 4, 34),\n    array(2, 4, 36),\n    array(2, 4, 38),\n    array(2, 4, 40),\n    array(2, 4, 42),\n    array(2, 4, 44),\n    array(2, 4, 46),\n    array(2, 4, 48),\n    array(2, 4, 50),\n    array(2, 4, 52),\n    array(2, 4, 54),\n    array(2, 4, 56),\n    array(2, 4, 58),\n    array(2, 4, 60),\n    array(2, 4, 62),\n    array(2, 4, 64),\n    array(2, 4, 66),\n    array(2, 4, 68),\n    array(2, 4, 70),\n    array(2, 4, 72),\n    array(2, 4, 74),\n    array(2, 4, 76),\n    array(2, 4, 78),\n    array(2, 4, 80),\n    array(2, 4, 82),\n    array(2, 4, 84),\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4zf9xqoo.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpmy4pwp0i.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15), array(4, 8, 12, 16, 20));\n$K = 4;\n$result = find_tuples($test_list, $K);\necho \"The tuples are : \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $element) {\n        echo $element . \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are : [4 8 12 16 20 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(2, 4, 6), array(3, 6, 9), array(4, 8, 12));\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $item) {\n        echo $item . \" \";\n    }\n    echo \"] \";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: [3 6 9 ] ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $divisible = true;\n        foreach ($list as $item) {\n            if ($item % $K !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4, 5],\n    [2, 4, 6, 8, 10],\n    [3, 6, 9, 12, 15],\n    [4, 8, 12, 16, 20],\n    [5, 10, 15, 20, 25],\n    [6, 12, 18, 24, 30],\n    [7, 14, 21, 28, 35],\n    [8, 16, 24, 32, 40],\n    [9, 18, 27, 36, 45],\n    [10, 20, 30, 40, 50],\n    [11, 22, 33, 44, 55],\n    [12, 24, 36, 48, 60],\n    [13, 26, 39, 52, 65],\n    [14, 28, 42, 56, 70],\n    [15, 30, 45, 60, 75],\n    [16, 32, 48, 64, 80],\n    [17, 34, 51, 68, 85],\n    [18, 36, 54, 72, 90],\n    [19, 38, 57, 76, 95],\n    [20, 40, 60, 80, 100],\n    [21, 42, 63, 84, 105],\n    [22, 44, 66, 88, 110],\n    [23, 46, 69, 92, 115],\n    [24, 48, 72, 96, 120],\n    [25, 50, 75, 100, 125],\n    [26, 52, 78, 104, 130],\n    [27, 54, 81, 108, 135],\n    [28, 56, 84, 112, 140],\n    [29, 58, 87, 116, 145],\n    [30, 60, 90, 120, 150],\n    [31, 62, 93, 124, 155],\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpupfczfwu.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15), array(4, 8, 12, 16, 20));\n$K = 4;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\nforeach ($result as $test) {\n    echo implode(', ', $test) . \"\\n\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "5, 10, 15, 20, 25\n10, 20, 30, 40, 50\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(5, 10, 15, 20, 25),\n    array(3, 6, 9, 12, 15),\n    array(1, 2, 4, 8, 16),\n    array(1, 3, 9, 27, 81),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1, 2, 4, 8, 16),\n    array(1,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsyz9ti6p.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [1] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n            [3] => 40\n            [4] => 50\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $flag = true;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16], [17, 18, 19, 20]];\n$K = 4;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [3, 6, 9, 12],\n    [4, 8, 12, 16],\n    [5, 10, 15, 20],\n    [6, 12, 18, 24],\n    [7, 14, 21, 28],\n    [8, 16, 24, 32],\n    [9, 18, 27, 36],\n    [10, 20, 30, 40],\n];\n\n$K = 4;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 16\n            [2] => 24\n            [3] => 32\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $is_divisible = true;\n        foreach ($list as $element) {\n            if ($element % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [1, 2, 3, 5],\n    [2, 4, 6, 9],\n    [2, 4, 6, 10],\n];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 2;\necho \"Test list: \";\nprint_r($test_list);\necho \"K: $K\\n\";\necho \"Result: \";\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Test list: Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 5\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 7\n            [1] => 8\n            [2] => 9\n        )\n\n)\nK: 2\nResult: Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        if (array_product($sub_list) % $K == 0) {\n            $result[] = $sub_list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [3, 6, 9], [4, 8, 12]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n    [2] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0smu784l.php:21\nStack trace:\n#0 /tmp/tmp0smu784l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0smu784l.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $divisible = true;\n        foreach ($test_array as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10, 12),\n    array(1, 2, 3, 4, 5, 6, 7, 8),\n    array(2, 4, 6, 8, 10, 12, 14, 16),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),\n    array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14),\n    array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16),\n    array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),\n    array(2, 4, 6, 8, 10, 12, 14, 16, 18\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmphrlb6h82.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $count = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K == 0) {\n                $count++;\n            }\n        }\n        if ($count == count($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [2, 4, 8], [2, 4, 10], [2, 4, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 8\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 10\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 12\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[[1, 2], [2, 3], [3, 4]], [[1, 2, 3], [2, 3, 4], [3, 4, 5]]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nFatal error: Uncaught TypeError: Unsupported operand types: array % int in /tmp/tmpylzo0i0g.php:8\nStack trace:\n#0 /tmp/tmpylzo0i0g.php(22): find_tuples(Array, 2)\n#1 {main}\n  thrown in /tmp/tmpylzo0i0g.php on line 8\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        $flag = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(5, 6, 7, 8),\n    array(9, 10, 11, 12),\n    array(13, 14, 15, 16),\n    array(17, 18, 19, 20),\n);\n\n$K = 4;\n$result = find_tuples($test_list, $K);\n\necho \"The tuples are: \";\nforeach ($result as $sub_list) {\n    echo \"[\";\n    foreach ($sub_list as $element) {\n        echo $element . \", \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4, 5], [5, 10, 15], [20, 25, 30]];\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n        )\n\n    [1] => Array\n        (\n            [0] => 20\n            [1] => 25\n            [2] => 30\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85),\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35),\n);\n\n$K = 7;\n\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\n\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $num) {\n        echo \"$num, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 3 are: ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_array) {\n        $is_divisible = true;\n        foreach ($sub_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\nforeach ($result as $sub_array) {\n    echo \"[\";\n    foreach ($sub_array as $element) {\n        echo $element . \", \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4, 5],\n    [5, 10, 15],\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [3, 6, 9],\n];\n$K = 2;\n\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Input: [[1,2,3,4,5],[2,4,6,8,10],[3,6,9,12,15],[4,8,12,16,20],[5,10,15,20,25]]\nOutput: [[5,10,15,20,25]]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $flag = true;\n        foreach ($test_tuple as $test_element) {\n            if ($test_element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $test_tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"Input: \";\necho \"<pre>\";\nprint_r($test_list);\necho \"</pre>\";\necho \"Output: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Input: <pre>Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n</pre>Output: <pre>Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $is_divisible = true;\n        foreach ($list as $item) {\n            if ($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n);\n$K = 4;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $item) {\n        $divisible = true;\n        foreach ($item as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4, 5), array(10, 20, 30, 40, 50), array(11, 22, 33, 44, 55));\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n            [3] => 40\n            [4] => 50\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $item) {\n        $flag = true;\n        foreach ($item as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $is_divisible = true;\n        foreach ($list as $element) {\n            if ($element % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4, 5],\n    [5, 10, 15],\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [3, 6, 9, 12],\n];\n\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(2, 4, 6),\n    array(2, 4, 8),\n    array(2, 4, 10),\n    array(2, 4, 12),\n    array(2, 4, 14),\n    array(2, 4, 16),\n    array(2, 4, 18),\n    array(2, 4, 20),\n    array(2, 4, 22),\n    array(2, 4, 24),\n    array(2, 4, 26),\n    array(2, 4, 28),\n    array(2, 4, 30),\n    array(2, 4, 32),\n    array(2, 4, 34),\n    array(2, 4, 36),\n    array(2, 4, 38),\n    array(2, 4, 40),\n    array(2, 4, 42),\n    array(2, 4, 44),\n    array(2, 4, 46),\n    array(2, 4, 48),\n    array(2, 4, 50),\n    array(2, 4, 52),\n    array(2, 4, 54),\n    array(2, 4, 56),\n    array(2, 4, 58),\n    array(2, 4, 60),\n    array(2, 4, 62),\n    array(2, 4, 64),\n    array(2, 4, 66),\n    array(2, 4, 68),\n    array(2, 4, 70),\n    array(2, 4, 72),\n    array(2, 4, 74),\n    array(2, 4, 76),\n    array(2, 4, 78),\n    array(2, 4, 80),\n    array(2, 4, 82),\n    array(2, 4, 84),\n    array(2,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpibbdp_b5.php on line 62\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_array) {\n        $divisible = true;\n        foreach ($sub_array as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $sub_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35)\n);\n\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\n    array(34, 68, 102,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp7e7lg0p8.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(2, 4, 6),\n    array(2, 4, 8),\n    array(2, 4, 7),\n    array(2, 4, 5),\n    array(2, 4, 10),\n);\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 8\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_case) {\n        $flag = true;\n        foreach ($test_case as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35),\n);\n\n$K = 7;\n\n$result = find_tuples($test_list, $K);\n\necho \"Input: \\n\";\necho \"K = $K\\n\";\necho \"Test List = \";\nprint_r($test_list);\necho \"\\n\";\n\necho \"Output: \\n\";\necho \"Result = \";\nprint_r($result);\necho \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Input: \nK = 7\nTest List = Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => 5\n            [5] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n    [3] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n\nOutput: \nResult = Array\n(\n    [0] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [2, 4, 8], [2, 4, 10]];\n$K = 2;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 2 are: [2, 4, 6, ][2, 4, 8, ][2, 4, 10, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K !== 0) {\n                $divisible = false;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [3, 6, 9, 12],\n    [4, 8, 12, 16],\n    [5, 10, 15, 20],\n    [6, 12, 18, 24],\n    [7, 14, 21, 28],\n    [8, 16, 24, 32],\n    [9, 18, 27, 36],\n    [10, 20, 30, 40],\n];\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n        )\n\n    [1] => Array\n        (\n            [0] => 6\n            [1] => 12\n            [2] => 18\n            [3] => 24\n        )\n\n    [2] => Array\n        (\n            [0] => 9\n            [1] => 18\n            [2] => 27\n            [3] => 36\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_array) {\n        $flag = 1;\n        foreach ($sub_array as $element) {\n            if ($element % $K != 0) {\n                $flag = 0;\n                break;\n            }\n        }\n        if ($flag == 1) {\n            array_push($result, $sub_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $item) {\n        $is_divisible = true;\n        foreach ($item as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [3, 6, 9, 12],\n    [4, 8, 12, 16],\n    [5, 10, 15, 20],\n    [6, 12, 18, 24],\n    [7, 14, 21, 28],\n    [8, 16, 24, 32],\n    [9, 18, 27, 36],\n    [10, 20, 30, 40],\n];\n\n$K = 4;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n        )\n\n    [1] => Array\n        (\n            [0] => 8\n            [1] => 16\n            [2] => 24\n            [3] => 32\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $count = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K == 0) {\n                $count++;\n            }\n        }\n        if ($count == count($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [1, 2, 3, 4], [2, 4, 6, 8], [2, 4, 6]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40)\n);\n\n$K = 4;\n\n$result = find_tuples($test_list, $K);\n\necho \"Input: \" . PHP_EOL;\necho json_encode($test_list) . PHP_EOL;\necho \"Output: \" . PHP_EOL;\necho json_encode($result) . PHP_EOL;\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Input: \n[[1,2,3,4],[2,4,6,8],[3,6,9,12],[4,8,12,16],[5,10,15,20],[6,12,18,24],[7,14,21,28],[8,16,24,32],[9,18,27,36],[10,20,30,40]]\nOutput: \n[[4,8,12,16],[8,16,24,32]]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_case) {\n        $is_divisible = true;\n        foreach ($test_case as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxtn902j7.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_case) {\n        $divisible = true;\n        foreach ($test_case as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [1] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n            [3] => 40\n            [4] => 50\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $flag = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]];\n$K = 2;\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\necho \"[\";\nforeach ($result as $key => $value) {\n    echo \"[\";\n    foreach ($value as $k => $v) {\n        echo $v;\n        if ($k < count($value) - 1) {\n            echo \", \";\n        }\n    }\n    echo \"]\";\n    if ($key < count($result) - 1) {\n        echo \", \";\n    }\n}\necho \"]\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: []",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $list) {\n        $is_divisible = true;\n        foreach ($list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\necho \"The given array of arrays is:\\n\";\necho \"[\";\nforeach ($test_list as $list) {\n    echo \"[\";\n    foreach ($list as $element) {\n        echo $element . \" \";\n    }\n    echo \"]\";\n}\necho \"]\\n\";\necho \"The tuples which have all elements divisible by $K are:\\n\";\necho \"[\";\n$result = find_tuples($test_list, $K);\nforeach ($result as $list) {\n    echo \"[\";\n    foreach ($list as $element) {\n        echo $element . \" \";\n    }\n    echo \"]\";\n}\necho \"]\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The given array of arrays is:\n[[1 2 3 4 ][5 6 7 8 ][9 10 11 12 ]]\nThe tuples which have all elements divisible by 2 are:\n[]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach($test_list as $list) {\n        $is_divisible = true;\n        foreach($list as $item) {\n            if($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            array_push($result, $list);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1,2,3,4,5], [2,4,6,8,10], [3,6,9,12,15]];\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_tuple) {\n        $is_divisible = true;\n        foreach ($test_tuple as $test_element) {\n            if ($test_element % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50)\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by $K are :\\n\";\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples which have all elements divisible by 5 are :\nArray\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [1] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n            [3] => 40\n            [4] => 50\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $element) {\n        echo $element . \" \";\n    }\n    echo \"] \";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124204,
      "stdout": "The tuples are: [3 6 9 12 15 ] ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $is_divisible = true;\n        foreach ($test_tuple as $test_value) {\n            if ($test_value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3),\n    array(2, 4, 6),\n    array(3, 6, 9),\n    array(4, 8, 12),\n    array(5, 10, 15),\n    array(6, 12, 18),\n    array(7, 14, 21),\n    array(8, 16, 24),\n    array(9, 18, 27),\n    array(10, 20, 30),\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"K: \" . $K . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Input: [[1,2,3],[2,4,6],[3,6,9],[4,8,12],[5,10,15],[6,12,18],[7,14,21],[8,16,24],[9,18,27],[10,20,30]]\nK: 3\nOutput: [[3,6,9],[6,12,18],[9,18,27]]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_case) {\n        $flag = true;\n        foreach ($test_case as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(7, 14, 21, 28, 35)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"Input: <br>\";\necho \"Test List: \";\nprint_r($test_list);\necho \"<br>\";\necho \"K = $K <br>\";\n\necho \"Output: <br>\";\necho \"Result: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Input: <br>Test List: Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => 5\n            [5] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n    [3] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n            [4] => 35\n        )\n\n)\n<br>K = 3 <br>Output: <br>Result: Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $item) {\n        $divisible = true;\n        foreach ($item as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4, 5], [2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]];\n$K = 4;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4],\n    [2, 4, 6, 8],\n    [3, 6, 9, 12],\n    [4, 8, 12, 16],\n    [5, 10, 15, 20],\n    [6, 12, 18, 24],\n    [7, 14, 21, 28],\n    [8, 16, 24, 32],\n    [9, 18, 27, 36],\n    [10, 20, 30, 40],\n    [11, 22, 33, 44],\n    [12, 24, 36, 48],\n    [13, 26, 39, 52],\n    [14, 28, 42, 56],\n    [15, 30, 45, 60],\n    [16, 32, 48, 64],\n    [17, 34, 51, 68],\n    [18, 36, 54, 72],\n    [19, 38, 57, 76],\n    [20, 40, 60, 80],\n    [21, 42, 63, 84],\n    [22, 44, 66, 88],\n    [23, 46, 69, 92],\n    [24, 48, 72, 96],\n    [25, 50, 75, 100],\n    [26, 52, 78, 104],\n    [27, 54, 81, 108],\n    [28, 56, 84, 112],\n    [29, 58, 87, 116],\n    [30, 60, 90, 120],\n    [31, 62, 93, 124],\n    [32, 64, 96, 128],\n    [33, 66, 99, 132],\n    [34, 68, 102, 136],\n    [35, 70, 105, 140],\n    [36, 72, 108, 144],\n    [\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpou54kmn1.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(2, 4, 6),\n    array(2, 4, 8),\n    array(2, 4, 7)\n);\n$K = 2;\n\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 2 are: [2, 4, 6, ][2, 4, 8, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 2;\n$result = find_tuples($test_list, $K);\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"Input: \" . json_encode($test\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp556d_brt.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test_array) {\n    echo \"[\";\n    echo implode(\", \", $test_array);\n    echo \"] \";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 3 are: [3, 6, 9, 12, 15] ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $isDivisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $isDivisible = false;\n                break;\n            }\n        }\n        if ($isDivisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4, 5], [5, 10, 15, 20, 25], [1, 2, 3, 4, 5], [5, 10, 15, 20, 25]];\n$K = 5;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [1] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array(1, 3, 5, 7, 9),\n    array(2, 4, 6, 8, 10),\n    array\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"(\" in /tmp/tmpvhgtqyc3.php on line 50\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [2, 4, 6], [3, 6, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $item) {\n        $is_divisible = true;\n        foreach ($item as $number) {\n            if ($number % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $item) {\n        $divisible = true;\n        foreach ($item as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33, 66, 99, 132),\n    array(34\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpgo04it_s.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4, 5], [5, 10, 15], [1, 2, 3, 4], [2, 4, 6, 8]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $t) {\n            if ($t % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $flag = true;\n        foreach ($list as $item) {\n            if ($item % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_array) {\n        $flag = true;\n        foreach ($sub_array as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $sub_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $sub_array) {\n    echo \"[\";\n    foreach ($sub_array as $element) {\n        echo $element . \", \";\n    }\n    echo \"], \";\n}\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 5 are: [5, 10, 15, 20, 25, ], [10, 20, 30, 40, 50, ], ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"Given array of arrays: \\n\";\nprint_r($test_list);\n\necho \"Result: \\n\";\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Given array of arrays: \nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n            [4] => 5\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 12\n            [2] => 18\n            [3] => 24\n            [4] => 30\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 14\n            [2] => 21\n            [3] => 28\n      ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $count = 0;\n        foreach ($test_tuple as $test_element) {\n            if ($test_element % $K == 0) {\n                $count++;\n            }\n        }\n        if ($count == count($test_tuple)) {\n            array_push($result, $test_tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(2, 4, 8), array(2, 4, 6), array(10, 20, 30));\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 10\n            [1] => 20\n            [2] => 30\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(10, 20, 30, 40, 50),\n    array(100, 200, 300, 400, 500),\n    array(1000, 2000, 3000, 4000, 5000),\n    array(10000, 20000, 30000, 40000, 50000),\n    array(100000, 200000, 300000, 400000, 500000),\n    array(1, 2, 3, 4, 5),\n    array(10, 20, 30, 40, 50),\n    array(100, 200, 300, 400, 500),\n    array(1000, 2000, 3000, 4000, 5000),\n    array(10000, 20000, 30000, 40000, 50000),\n    array(100000, 200000, 300000, 400000, 500000),\n    array(1, 2, 3, 4, 5),\n    array(10, 20, 30, 40, 50),\n    array(100, 200, 300, 400, 500),\n    array(1000, 2000, 3000, 4000, 5000),\n    array(10000, 20000, 30000, 40000, 50000),\n    array(100000, 200000, 300000, 400000, 500000),\n    array(1, 2, 3, 4, 5),\n    array(10, 20, 30, 40, 50),\n    array(100, 200, 300, 400, 500),\n    array(1000, 2000, 3000, 4000, 5000),\n    array(10000, 20000, 30000, 40000, 50000),\n    array(100000, 200000, 300000, 400000, 500000),\n    array(1, 2, 3, 4, 5),\n    array(10, 20, 30, 40\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpk6qa6ylo.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach($test_list as $test_tuple) {\n        $is_divisible = true;\n        foreach($test_tuple as $test_number) {\n            if($test_number % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            array_push($result, $test_tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1,2,3,4,5], [2,4,6,8,10], [1,2,3,4,5], [2,4,6,8,10]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n\t$result = array();\n\tforeach ($test_list as $test_array) {\n\t\t$is_divisible = true;\n\t\tforeach ($test_array as $value) {\n\t\t\tif ($value % $K != 0) {\n\t\t\t\t$is_divisible = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_divisible) {\n\t\t\t$result[] = $test_array;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test_list = array(\n\tarray(1, 2, 3, 4, 5),\n\tarray(2, 4, 6, 8, 10),\n\tarray(3, 6, 9, 12, 15),\n\tarray(4, 8, 12, 16, 20),\n\tarray(5, 10, 15, 20, 25),\n\tarray(6, 12, 18, 24, 30),\n\tarray(7, 14, 21, 28, 35),\n\tarray(8, 16, 24, 32, 40),\n\tarray(9, 18, 27, 36, 45),\n\tarray(10, 20, 30, 40, 50),\n\tarray(11, 22, 33, 44, 55),\n\tarray(12, 24, 36, 48, 60),\n\tarray(13, 26, 39, 52, 65),\n\tarray(14, 28, 42, 56, 70),\n\tarray(15, 30, 45, 60, 75),\n\tarray(16, 32, 48, 64, 80),\n\tarray(17, 34, 51, 68, 85),\n\tarray(18, 36, 54, 72, 90),\n\tarray(19, 38, 57, 76, 95),\n\tarray(20, 40, 60, 80, 100),\n\tarray(21, 42, 63, 84, 105),\n\tarray(22, 44, 66, 88, 110),\n\tarray(23, 46, 69, 92, 115),\n\tarray(24, 48, 72, 96, 120),\n\tarray(25, 50, 75, 100, 125),\n\tarray(26, 52, 78, 104, 130),\n\tarray(27, 54, 81,\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpq54ktl06.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $list) {\n        $is_divisible = true;\n        foreach ($list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples are: \";\nforeach ($result as $list) {\n    echo \"[\";\n    foreach ($list as $element) {\n        echo $element . \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples are: [5 10 15 20 25 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(5, 6, 7, 8),\n    array(9, 10, 11, 12),\n    array(13, 14, 15, 16),\n    array(17, 18, 19, 20),\n    array(21, 22, 23, 24),\n    array(25, 26, 27, 28),\n    array(29, 30, 31, 32),\n    array(33, 34, 35, 36),\n    array(37, 38, 39, 40),\n    array(41, 42, 43, 44),\n    array(45, 46, 47, 48),\n    array(49, 50, 51, 52),\n    array(53, 54, 55, 56),\n    array(57, 58, 59, 60),\n    array(61, 62, 63, 64),\n    array(65, 66, 67, 68),\n    array(69, 70, 71, 72),\n    array(73, 74, 75, 76),\n    array(77, 78, 79, 80),\n    array(81, 82, 83, 84),\n    array(85, 86, 87, 88),\n    array(89, 90, 91, 92),\n    array(93, 94, 95, 96),\n    array(97, 98, 99, 100),\n    array(101, 102, 103, 104),\n    array(105, 106, 107, 108),\n    array(109, 110, 111, 112),\n    array(113, 114, 115, 116),\n    array(117, 118, 119, 120),\n    array(121, 122, 123, 124),\n    array(125, 126, 127, 128),\n    array(129, 130, 131, 132),\n    array(\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4hlwit4v.php on line 55\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n);\n\n$K = 4;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $value) {\n            if ($value % $K !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 8], [2, 4, 6], [2, 4, 0]];\n$K = 2;\necho \"<pre>\";\nprint_r(find_tuples($test_list, $K));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "<pre>Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 8\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 0\n        )\n\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $flag = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100),\n);\n\n$K = 4;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $value) {\n        echo \"$value \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 4 are: [4 8 12 16 20 ][8 16 24 32 40 ][12 24 36 48 60 ][16 32 48 64 80 ][20 40 60 80 100 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(2, 4, 6, 8), array(3, 6, 9, 12));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $key => $value) {\n        $flag = true;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by k are :\\n\";\nforeach ($result as $key => $value) {\n    echo implode(\" \", $value) . \"\\n\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by k are :\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_array) {\n        $is_divisible = true;\n        foreach ($sub_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n    array(11, 22, 33, 44),\n    array(12, 24, 36, 48),\n    array(13, 26, 39, 52),\n    array(14, 28, 42, 56),\n    array(15, 30, 45, 60),\n    array(16, 32, 48, 64),\n    array(17, 34, 51, 68),\n    array(18, 36, 54, 72),\n    array(19, 38, 57, 76),\n    array(20, 40, 60, 80),\n    array(21, 42, 63, 84),\n    array(22, 44, 66, 88),\n    array(23, 46, 69, 92),\n    array(24, 48, 72, 96),\n    array(25, 50, 75, 100),\n    array(26, 52, 78, 104),\n    array(27, 54, 81, 108),\n    array(28, 56, 84, 112),\n    array(29, 58, 87, 116),\n    array(30, 60, 90, 120),\n    array(31, 62, 93, 124),\n    array(32, 64, 96, 128),\n    array(33\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpmgbyinm_.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25)\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $element) {\n        echo \"$element \";\n    }\n    echo \"] \";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 5 are: [5 10 15 20 25 ] ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $flag = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15), array(4, 8, 12, 16, 20));\n$K = 4;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n            [3] => 16\n            [4] => 20\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $tuple) {\n        $is_divisible = true;\n        foreach ($tuple as $value) {\n            if ($value % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $test_item) {\n            if ($test_item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpkufktx_h.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        $all_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $all_divisible = false;\n                break;\n            }\n        }\n        if ($all_divisible) {\n            $result[] = $sub_list;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4, 5), array(5, 10, 15), array(20, 25, 30, 35));\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n        )\n\n    [1] => Array\n        (\n            [0] => 20\n            [1] => 25\n            [2] => 30\n            [3] => 35\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by k are :\\n\";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $value) {\n        echo $value . \", \";\n    }\n    echo \"]\\n\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by k are :\n[5, 10, 15, 20, 25, ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $count = 0;\n        foreach ($test as $value) {\n            if ($value % $K == 0) {\n                $count++;\n            }\n        }\n        if ($count == count($test)) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $value) {\n        echo $value, \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 3 are: [3 6 9 12 15 ][6 12 18 24 30 ][9 18 27 36 45 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [1, 2, 3], [3, 6, 9]];\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25)\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]];\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $sub_list;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(5, 6, 7, 8),\n    array(9, 10, 11, 12),\n    array(13, 14, 15, 16)\n);\n$K = 4;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $divisible = true;\n        foreach ($list as $num) {\n            if ($num % $K !== 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [\n    [1, 2, 3, 4, 5],\n    [2, 4, 6, 8, 10],\n    [1, 2, 3, 4, 5, 6],\n    [2, 4, 6, 8, 10, 12],\n    [1, 2, 3, 4, 5, 6, 7],\n    [2, 4, 6, 8, 10, 12, 14],\n    [1, 2, 3, 4, 5, 6, 7, 8],\n    [2, 4, 6, 8, 10, 12, 14, 16],\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [2, 4, 6, 8, 10, 12, 14, 16, 18],\n];\n\n$K = 2;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n            [5] => 12\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n            [5] => 12\n            [6] => 14\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n            [5] => 12\n            [6] => 14\n            [7] => 16\n        )\n\n    [4] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n            [3] => 8\n            [4] => 10\n            [5] => 12\n            [6] => 14\n            [7] => 16\n            [8] => 18\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $flag = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n$test_list = [[2, 4, 6], [3, 6, 9], [4, 8, 12]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 4\n            [1] => 8\n            [2] => 12\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n);\n$K = 4;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    echo implode(\", \", $test);\n    echo \"] \";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 4 are: [4, 8, 12, 16, 20] ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $t) {\n            if ($t % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $t) {\n        echo $t . \" \";\n    }\n    echo \"]\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 3 are: [3 6 9 12 15 ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $key => $value) {\n        $flag = 0;\n        foreach ($value as $k => $v) {\n            if ($v % $K != 0) {\n                $flag = 1;\n                break;\n            }\n        }\n        if ($flag == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [2, 4, 8], [2, 4, 10]];\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 8\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach ($test_list as $list) {\n        $is_divisible = true;\n        foreach ($list as $item) {\n            if ($item % $K !== 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3], [2, 4, 6], [3, 6, 9], [4, 8, 12], [5, 10, 15]];\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $is_divisible = true;\n        foreach ($test_tuple as $test_element) {\n            if ($test_element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are:\";\nforeach ($result as $tuple) {\n    echo \"\\n\";\n    foreach ($tuple as $element) {\n        echo \"$element \";\n    }\n}\necho \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 3 are:\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $number) {\n            if ($number % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples that are divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $number) {\n        echo \"$number, \";\n    }\n    echo \"]\";\n}\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples that are divisible by 3 are: [3, 6, 9, 12, 15, ]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100),\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $test) {\n    echo \"[\";\n    echo implode(\", \", $test);\n    echo \"] \";\n}\necho \"\\n\";\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 3 are: [3, 6, 9, 12, 15] [6, 12, 18, 24, 30] [9, 18, 27, 36, 45] [12, 24, 36, 48, 60] [15, 30, 45, 60, 75] [18, 36, 54, 72, 90] \n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach($test_list as $test) {\n        if(array_product($test) % $K == 0) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1,2,3,4), array(5,6,7,8), array(9,10,11,12));\n$K = 4;\nprint_r(find_tuples($test_list, $K));\n\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n            [2] => 3\n            [3] => 4\n        )\n\n    [1] => Array\n        (\n            [0] => 5\n            [1] => 6\n            [2] => 7\n            [3] => 8\n        )\n\n    [2] => Array\n        (\n            [0] => 9\n            [1] => 10\n            [2] => 11\n            [3] => 12\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nq99gws.php:22\nStack trace:\n#0 /tmp/tmp2nq99gws.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2nq99gws.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 5;\n$result = find_tuples($test_list, $K);\n\necho \"The tuples which have all elements divisible by $K are:\\n\";\nforeach ($result as $test) {\n    echo \"[\";\n    foreach ($test as $item) {\n        echo \"$item, \";\n    }\n    echo \"]\\n\";\n}\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "The tuples which have all elements divisible by 5 are:\n[5, 10, 15, 20, 25, ]\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85),\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\nprint_r($result);\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n            [3] => 12\n            [4] => 15\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $item) {\n        $flag = true;\n        foreach ($item as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(2, 4, 6), array(2, 4, 8), array(2, 4, 10), array(2, 4, 12));\n$K = 2;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 6\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 8\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 10\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 4\n            [2] => 12\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = [];\n    foreach($test_list as $test) {\n        $divisible = true;\n        foreach($test as $element) {\n            if($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if($divisible) {\n            $result[] = $test;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1,2,3],[2,4,6],[3,6,9]];\n$K = 3;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 3\n            [1] => 6\n            [2] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\nprint_r(find_tuples($test_list, $K));\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 5\n            [1] => 10\n            [2] => 15\n            [3] => 20\n            [4] => 25\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n    array(11, 22, 33, 44, 55),\n    array(12, 24, 36, 48, 60),\n    array(13, 26, 39, 52, 65),\n    array(14, 28, 42, 56, 70),\n    array(15, 30, 45, 60, 75),\n    array(16, 32, 48, 64, 80),\n    array(17, 34, 51, 68, 85),\n    array(18, 36, 54, 72, 90),\n    array(19, 38, 57, 76, 95),\n    array(20, 40, 60, 80, 100),\n    array(21, 42, 63, 84, 105),\n    array(22, 44, 66, 88, 110),\n    array(23, 46, 69, 92, 115),\n    array(24, 48, 72, 96, 120),\n    array(25, 50, 75, 100, 125),\n    array(26, 52, 78, 104, 130),\n    array(27, 54, 81, 108, 135),\n    array(28, 56, 84, 112\nfunction candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124205,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp5qxx_g7c.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
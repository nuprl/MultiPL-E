{
  "name": "mbpp_65_recursive_list_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [\n    [1, 2, 3, 4],\n    [5, 6, 7, 8],\n    [9, 10, 11, 12]\n];\n\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "78",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, 7], 8], 9];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, [2, [3, 4], 5], 6];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = array(1, 2, array(3, 4, array(5, 6, 7)));\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "28",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [[1, 2], 3, 4, [5, 6], 7, 8, [9, 10]];\necho recursive_list_sum($data);\n\n$data = [[1, 2], 3, 4, [[5, 6], 7], 8, [9, 10]];\necho recursive_list_sum($data);\n\n$data = [[1, 2], 3, 4, [[5, 6], 7], 8, [9, 10], 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\necho recursive_list_sum($data);\n\n$data = [[1, 2], 3, 4, [[5, 6], 7], 8, [9, 10], 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555552105050",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8], 9], 10];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, 7], 8], 9];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20, [21, 22, [23, 24, [25, 26, [27, 28, [29, 30, [31, 32, [33, 34, [35, 36, [37, 38, [39, 40, [41, 42, [43, 44, [45, 46, [47, 48, [49, 50, [51, 52, [53, 54, [55, 56, [57, 58, [59, 60, [61, 62, [63, 64, [65, 66, [67, 68, [69, 70, [71, 72, [73, 74, [75, 76, [77, 78, [79, 80, [81, 82, [83, 84, [85, 86, [87, 88, [89, 90, [91, 92, [93, 94, [95, 96, [97, 98, [99, 100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "\nParse error: Unmatched ']' in /tmp/tmpvk6uyavg.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20, [21, 22, [23, 24, [25, 26, [27, 28, [29, 30, [31, 32, [33, 34, [35, 36, [37, 38, [39, 40, [41, 42, [43, 44, [45, 46, [47, 48, [49, 50, [51, 52, [53, 54, [55, 56, [57, 58, [59, 60, [61, 62, [63, 64, [65, 66, [67, 68, [69, 70, [71, 72, [73, 74, [75, 76, [77, 78, [79, 80, [81, 82, [83, 84, [85, 86, [87, 88, [89, 90, [91, 92, [93, 94, [95, 96, [97, 98, [99, 100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: Unmatched ']' in /tmp/tmps8_g_ce_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, array(3, 4, array(5, 6)));\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $item) {\n    if (is_array($item)) {\n      $sum += recursive_list_sum($item);\n    } else {\n      $sum += $item;\n    }\n  }\n  return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, [2, 3], [4, [5, 6]], 7, [8, [9, 10]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list); // 45\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20]]]]]]]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20, [21, 22, [23, 24, [25, 26, [27, 28, [29, 30]]]]]]]]]]]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20, [21, 22, [23, 24, [25, 26, [27, 28, [29, 30, [31, 32, [33, 34, [35, 36, [37, 38, [39, 40]]]]]]]]]]]]]]]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, [3, 4, [5, 6,\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: syntax error, unexpected token \";\", expecting \"]\" in /tmp/tmpn1ibq7ig.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5];\necho recursive_list_sum($data_list) . \"\\n\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list) . \"\\n\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15, 16]]]]]]]];\necho recursive_list_sum($data_list) . \"\\n\";\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "15\n55\n136\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list); // 55\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], [3, 4]], [[5, 6], [7, 8]]], [[[9, 10], [11, 12]], [[13, 14], [15, 16]]]];\necho\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp67ym39cg.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n\t$sum = 0;\n\tforeach ($data_list as $data) {\n\t\tif (is_array($data)) {\n\t\t\t$sum += recursive_list_sum($data);\n\t\t} else {\n\t\t\t$sum += $data;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\necho \"\\n\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9, 10]]]];\necho recursive_list_sum($data_list);\necho \"\\n\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\necho \"\\n\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, [10]]]]]];\necho recursive_list_sum($data_list);\necho \"\\n\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, [10, [11, [12, [13, [14, [15, [16, [17, [18, [19, [20]]]]]]]]]]]]]]]];\necho recursive_list_sum($data_list);\necho \"\\n\";\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55\n55\n55\n55\n210\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $key => $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5]], 6, [7, 8]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\necho \"\\n\";\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\necho \"\\n\";\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55\n55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n\t$sum = 0;\n\tforeach ($data_list as $data) {\n\t\tif (is_array($data)) {\n\t\t\t$sum += recursive_list_sum($data);\n\t\t} else {\n\t\t\t$sum += $data;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, [21, 22, 23, 24, 25, 26,\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsc9km36s.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, [4, 5, [6, 7]], 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, [8, 9, 10]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55555555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data2 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\necho recursive_list_sum($data);\necho \"\\n\";\necho recursive_list_sum($data2);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55\n55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\n$sum = recursive_list_sum($data_list);\necho $sum;\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, [5, 6, [7, 8]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, 7)));\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "28",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11]]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12]]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13]]]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14]]]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10, [11, 12, [13, 14, [15]]]]]]]];\necho recursive_list_sum($\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmp0v2m7ocj.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, [10, 11, 12]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "78",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data2 = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10]]];\n\necho recursive_list_sum($data);\necho \"<br>\";\necho recursive_list_sum($data2);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55<br>55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, [4, 5, [6, 7, 8]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9];\necho recursive_list_sum($data_list); // 45\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8]], 9, 10];\necho recursive_list_sum($data_list); // 55\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, [8, 9]]], 10];\necho recursive_list_sum($data_list); // 65\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "455555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, 7)));\n$sum = recursive_list_sum($data_list);\necho $sum;\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "28",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n        ],\n    ],\n    7,\n    8,\n];\n\n$sum = recursive_list_sum($data_list);\necho $sum;\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $key => $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = array(1, 2, 3, array(4, 5, 6, array(7, 8, 9, 10)));\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10)));\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10), array(11, 12, 13, 14, 15)));\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10), array(11, 12, 13, 14, 15), array(16, 17, 18, 19, 20)));\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10), array(11, 12, 13, 14, 15), array(16, 17, 18, 19, 20), array(21, 22, 23, 24, 25)));\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = array(1, 2, 3, array(4, 5, array(6, 7, 8, 9, 10), array(11, 12, 13, 14, 15), array(16, 17, 18, 19, 20), array(21, 22\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpz1db0mor.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]], 7, 8, [9, 10, [11, 12, [13, 14]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "105",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]], 7, 8];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7]], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "15",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]], 7, 8];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]], 7, 8];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\n$sum = recursive_list_sum($data_list);\necho $sum;\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho recursive_list_sum($data);\n\n$data = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "4545",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data) . PHP_EOL;\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data) . PHP_EOL;\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho array_sum(array_flatten($data)) . PHP_EOL;\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55\n55\n\nFatal error: Uncaught Error: Call to undefined function array_flatten() in /tmp/tmpzxj058vk.php:22\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpzxj058vk.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [1, 2, 3, [1, 2, 3]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "18",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    if (is_array($data_list)) {\n        $sum = 0;\n        foreach ($data_list as $item) {\n            $sum += recursive_list_sum($item);\n        }\n        return $sum;\n    } else {\n        return $data_list;\n    }\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, [11, 12, 13]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, [11, 12, 13, [14, 15, 16, [17, 18, 19, [20]]]]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, [11, 12, 13, [14, 15, 16, [17, 18, 19, [20, [21, 22, 23, [24, 25, 26, [27, 28, 29, [30]]]]]]]]]]]];\necho recursive_list_sum($data_list);\necho \"<br>\";\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, [10, [11, 12, 13, [14, 15, 16, [17, 18, 19, [20, [21\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpmtmasvpu.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n        ],\n    ],\n];\n\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n\t$sum = 0;\n\tforeach ($data_list as $value) {\n\t\tif (is_array($value)) {\n\t\t\t$sum += recursive_list_sum($value);\n\t\t} else {\n\t\t\t$sum += $value;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13, [14, 15, 16]]];\necho recursive_list_sum($data);\n\n$data = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13, [14, 15, 16, [17, 18, 19, [20, 21, 22]]]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "5555136253",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, [2, 3, [4, 5]], 6, [7, 8, [9, 10]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, 7)));\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "28",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8], 9], 10];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list); // 36\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $element) {\n    if (is_array($element)) {\n      $sum += recursive_list_sum($element);\n    } else {\n      $sum += $element;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list); // 21\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n        ],\n    ],\n    7,\n    8,\n];\n\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8, [9, 10]]]];\necho recursive_list_sum($data_list); // 55\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n        ],\n    ],\n    7,\n    8,\n];\n\necho recursive_list_sum($data); // 36\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8], 9], 10];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8], 9], 10];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $key => $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach($data_list as $data) {\n        if(is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data2 = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10]]];\n\necho recursive_list_sum($data) . \"\\n\";\necho recursive_list_sum($data2) . \"\\n\";\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55\n55\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, 7], 8], 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho recursive_list_sum($data_list);\necho '<br>';\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, 9]];\necho recursive_list_sum($data_list);\necho '<br>';\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, 11, 12, 13]]];\necho recursive_list_sum($data_list);\necho '<br>';\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, 11, 12, [13, 14, 15, 16, 17]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, 11, 12, [13, 14, 15, 16, [17, 18, 19, 20, 21]]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, 11, 12, [13, 14, 15, 16, [17, 18, 19, 20, [21, 22, 23, 24, 25]]]]]];\necho recursive_list_sum($data_list);\necho '<br>';\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, 11, 12, [13, 14, 15, 16, [17, 18, 19, 20, [21, 22, 23, 24, [25, 26, 27\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmprpkna4ov.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[1, 2], [3, 4], [5]];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[1, 2], [3, 4]], [[5]]];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[[1, 2], [3, 4]], [[5]]]];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[[1, 2], [3, 4]], [[5]]], 6];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[[1, 2], [3, 4]], [[5]]], 6, [7, 8]];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[[1, 2], [3, 4]], [[5]]], 6, [7, 8], 9, 10];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[[1, 2], [3, 4]], [[5]]], 6, [7, 8], 9, 10, [[11, 12], [13, 14], [15]]];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [[[[1, 2], [3, 4]], [[5]]], 6, [7, 8], 9, 10, [[11, 12], [13, 14], [15]], 16];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected token \"function\" in /tmp/tmp7z_8krix.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n            [\n                7,\n                8,\n                [\n                    9,\n                    10\n                ]\n            ]\n        ]\n    ]\n];\n\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, 3, 4, 5);\necho recursive_list_sum($data_list);\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\necho recursive_list_sum($data_list);\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10)))));\necho recursive_list_sum($data_list);\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10, array(11, 12, array(13, 14, 15)))))));\necho recursive_list_sum($data_list);\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10, array(11, 12, array(13, 14, array(15, 16, array(17, 18, array(19, 20, array(21, 22, array(23, 24, array(25, 26, array(27, 28, array(29, 30, array(31, 32, array(33, 34, array(35, 36, array(37, 38, array(39, 40, array(41, 42, array(43, 44, array(45, 46, array(47, 48, array(49, 50, array(51, 52, array(53, 54, array(55, 56, array(57, 58, array(59, 60, array(61, 62, array(63, 64, array(65, 66, array(67, 68, array(69, 70, array(71, 72, array(73, 74, array(75, 76, array(77, 78, array(79, 80, array(\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmprr4x7gfw.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $key => $value) {\n    if (is_array($value)) {\n      $sum += recursive_list_sum($value);\n    } else {\n      $sum += $value;\n    }\n  }\n  return $sum;\n}\n\n$data_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho recursive_list_sum($data_list);\n\n$data_list = array(\n  1,\n  2,\n  array(\n    3,\n    4,\n    array(\n      5,\n      6,\n      array(\n        7,\n        8,\n        array(\n          9,\n          10\n        )\n      )\n    )\n  )\n);\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $key => $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, 4, [5, 6, 7, 8, [9, 10, [11, 12, [13, 14, [15, 16, [17, 18, [19, 20]]]]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "5555210",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\n$data = [[1, 2], 3, 4, [5, 6], 7, 8, [9, 10]];\necho recursive_list_sum($data);\n\n$data = [[[[1, 2], 3], 4], 5, 6, [7, 8], 9, 10];\necho recursive_list_sum($data);\n\n$datanfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp5urxu6lq.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9, 10))));\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, [4, 5, 6, [7, 8, 9, 10]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, 9];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n        ],\n    ],\n    7,\n    8,\n];\n\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpak60itpt.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, [8, 9, 10]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = array(1, 2, array(3, 4, array(5, 6, 7)));\necho recursive_list_sum($data_list); // 28\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "28",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8]], 9, 10];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, [4, 5, [6, 7, 8], 9], 10];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [\n    1,\n    2,\n    [\n        3,\n        4,\n        [\n            5,\n            6,\n        ],\n    ],\n    7,\n    8,\n];\n\necho recursive_list_sum($data_list); // 36\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6]], 7, 8];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list); // 55\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, [4, 5, [6, 7, 8], 9], 10];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "5555",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\necho \"<br>\";\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55<br>55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, [4, 5, [6, 7]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "28",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\necho '<br>';\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\necho '<br>';\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13]];\necho recursive_list_sum($data_list);\n\necho '<br>';\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13], [14, 15, 16, 17]];\necho recursive_list_sum($data_list);\n\necho '<br>';\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13], [14, 15, 16, 17], [18, 19, 20, 21, 22]];\necho recursive_list_sum($data_list);\n\necho '<br>';\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13], [14, 15, 16, 17], [18, 19, 20, 21, 22], [23, 24, 25, 26, 27, 28]];\necho recursive_list_sum($data_list);\n\necho '<br>';\n\n$data_list = [1, 2, 3, [4, 5, 6], 7, 8, 9, 10, [11, 12, 13], [14, 15, 16, 17], [18, 19, 20, 21,\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpyt81q_70.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123369,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data);\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\necho recursive_list_sum($data);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "45",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpak60itpt.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $value) {\n        if (is_array($value)) {\n            $sum += recursive_list_sum($value);\n        } else {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510486,
      "stdout": "55",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, 3, 4, 5];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list) . PHP_EOL;\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list) . PHP_EOL;\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "15\n21\n36\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $item) {\n        if (is_array($item)) {\n            $sum += recursive_list_sum($item);\n        } else {\n            $sum += $item;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]]];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "21",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n    $sum = 0;\n    foreach ($data_list as $data) {\n        if (is_array($data)) {\n            $sum += recursive_list_sum($data);\n        } else {\n            $sum += $data;\n        }\n    }\n    return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6, [7, 8]]]];\necho recursive_list_sum($data_list); // 36\n\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to flatten an array and sum all of its elements.\nfunction recursive_list_sum($data_list) {\n  $sum = 0;\n  foreach ($data_list as $data) {\n    if (is_array($data)) {\n      $sum += recursive_list_sum($data);\n    } else {\n      $sum += $data;\n    }\n  }\n  return $sum;\n}\n\n$data_list = [1, 2, [3, 4, [5, 6]], 7, 8];\necho recursive_list_sum($data_list);\nfunction candidate(...$args) {\n    return recursive_list_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, array(3, 4), array(5, 6))) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 10, array(15, 14), array(19, 41))) !== 106) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, array(30, 40), array(50, 60))) !== 210) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123370,
      "stdout": "36",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
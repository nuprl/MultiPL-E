{
  "name": "mbpp_740_tuple_to_dict",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert the given array to a key-value array using adjacent elements. https://www.geeksforgeeks.org/phpthon-convert-array-to-adjacent-pair-array/\nfunction tuple_to_dict($test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return tuple_to_dict(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 5, 7, 10, 13, 5)) !== array(1 => 5, 7 => 10, 13 => 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6)) !== array(1 => 2, 3 => 4, 5 => 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 10, 11, 12)) !== array(7 => 8, 9 => 10, 11 => 12)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $res = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $res;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    $i = 0;\n    while ($i < count($test_tup)) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i += 2;\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $res_dict = array();\n    $n = count($test_tup);\n    for ($i = 0; $i < $n; $i++) {\n        $res_dict[$test_tup[$i][0]] = $test_tup[$i][1];\n    }\n    return $res_dict;\n}\n\n$test_tup = array(\n    array(\"Geeks\", \"for\"),\n    array(\"Geeks\", \"Quiz\")\n);\n\nprint_r(tuple_to_dict($test_tup));\n",
    "    $res = array();\n    for ($i = 0; $i < sizeof($test_tup); $i++) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $res;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(tuple_to_dict($test_tup));\n",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $res;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $res_dict = array();\n    $n = sizeof($test_tup);\n    for ($i = 0; $i < $n; $i++) {\n        $res_dict[$test_tup[$i][0]] = $test_tup[$i][1];\n    }\n    return $res_dict;\n}\n$test_tup = array(\n    array(\"PHP\", \"Hypertext Preprocessor\"),\n    array(\"Python\", \"Interpreted high level programming language\"),\n    array(\"Java\", \"Object oriented programming language\"),\n    array(\"C\", \"Structured programming language\")\n);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    $i = 0;\n    while($i < count($test_tup)) {\n        $dict[$test_tup[$i]] = $test_tup[$i+1];\n        $i += 2;\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\necho \"The original array is :\\n\";\nprint_r($test_tup);\n$result = tuple_to_dict($test_tup);\necho \"\\nThe dictionary is :\\n\";\nprint_r($result);",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $dict;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $res = array();\n    for ($i = 0; $i < sizeof($test_tup); $i++) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $res;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));\n",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup); $i += 2) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n    }\n    return $res;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6);\nprint_r(tuple_to_dict($test_tup));",
    "    $dict = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $dict[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $dict;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));\n",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $res;\n}\n$test_tup = array('a', 'b', 'c', 'd', 'e', 'f');\nprint_r(tuple_to_dict($test_tup));",
    "    $res = array();\n    for ($i=0; $i<count($test_tup); $i+=2) {\n        $res[$test_tup[$i]] = $test_tup[$i+1];\n    }\n    return $res;\n}\n\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(tuple_to_dict($test_tup));",
    "    $res = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $res[$test_tup[$i]] = $test_tup[$i + 1];\n        $i++;\n    }\n    return $res;\n}\n$test_tup = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(tuple_to_dict($test_tup));"
  ]
}
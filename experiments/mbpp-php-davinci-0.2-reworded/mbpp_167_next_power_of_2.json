{
  "name": "mbpp_167_next_power_of_2",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to find the smallest power of 2 greater than or equal to n.\nfunction next_power_of_2($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return next_power_of_2(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== 32) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\necho next_power_of_2(5);\necho \"\\n\";\necho next_power_of_2(17);\necho \"\\n\";\necho next_power_of_2(32);",
    "    $n--;\n    $n |= $n >> 1;\n    $n |= $n >> 2;\n    $n |= $n >> 4;\n    $n |= $n >> 8;\n    $n |= $n >> 16;\n    $n++;\n    return $n;\n}\n",
    "    $n--;\n    $n |= $n >> 1;\n    $n |= $n >> 2;\n    $n |= $n >> 4;\n    $n |= $n >> 8;\n    $n |= $n >> 16;\n    $n++;\n    return $n;\n}\n\necho next_power_of_2(5);",
    "    $count = 0;\n    if (is_int($n) && $n > 0) {\n        $count = 1;\n        while ($count < $n) {\n            $count *= 2;\n        }\n        return $count;\n    } else {\n        echo \"Invalid input\";\n    }\n}\n\necho next_power_of_2(5);\necho \"\\n\";\necho next_power_of_2(15);\necho \"\\n\";\necho next_power_of_2(16);\necho \"\\n\";\necho next_power_of_2(17);\necho \"\\n\";\necho next_power_of_2(32);\necho \"\\n\";\necho next_power_of_2(33);\necho \"\\n\";\necho next_power_of_2(64);\necho \"\\n\";\necho next_power_of_2(65);\necho \"\\n\";\necho next_power_of_2(128);\necho \"\\n\";\necho next_power_of_2(129);\necho \"\\n\";\necho next_power_of_2(256);\necho \"\\n\";\necho next_power_of_2(257);\necho \"\\n\";\necho next_power_of_2(512);\necho \"\\n\";\necho next_power_of_2(513);\necho \"\\n\";\necho next_power_of_2(1024);\necho \"\\n\";\necho next_power_of_2(1025);\necho \"\\n\";\necho next_power_of_2(2048);\necho \"\\n\";\necho next_power_of_2(2049);\necho \"\\n\";\necho next_power_of_2(4096);\necho \"\\n\";\necho next_power_of_2(4097);\necho \"\\n\";\necho next_power_of_2(8192);\necho \"\\n\";\necho next_power_of_2(8193);\necho \"\\n\";\necho next_power_of_2(16384);\necho \"\\n\";\necho next_power_of_2(16385);\necho \"\\n\";\necho next_power_of_2(32768);\necho \"\\n\";\n",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n$n = 10;\necho next_power_of_2($n);",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n\n$n = intval(readline());\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n$n = intval(fgets(STDIN));\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n\n$n = intval(fgets(STDIN));\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n\necho next_power_of_2(5);\necho \"\\n\";\necho next_power_of_2(17);\necho \"\\n\";\necho next_power_of_2(32);\necho \"\\n\";",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n$n = 5;\necho next_power_of_2($n);",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n\n$n = 5;\necho next_power_of_2($n);",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n\n$n = 5;\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n\n$n = 12;\necho next_power_of_2($n);",
    "    $i = 1;\n    while($i < $n) {\n        $i = $i << 1;\n    }\n    return $i;\n}\n\n$n = intval(fgets(STDIN));\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n$n = intval(fgets(STDIN));\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n\necho next_power_of_2(5);\necho \"\\n\";\necho next_power_of_2(16);\necho \"\\n\";\necho next_power_of_2(32);\necho \"\\n\";\necho next_power_of_2(64);\necho \"\\n\";\necho next_power_of_2(128);\necho \"\\n\";\necho next_power_of_2(256);\necho \"\\n\";\necho next_power_of_2(512);\necho \"\\n\";\necho next_power_of_2(1024);\necho \"\\n\";\necho next_power_of_2(2048);\necho \"\\n\";\necho next_power_of_2(4096);\necho \"\\n\";\necho next_power_of_2(8192);\necho \"\\n\";\necho next_power_of_2(16384);\necho \"\\n\";\necho next_power_of_2(32768);\necho \"\\n\";\necho next_power_of_2(65536);\necho \"\\n\";\necho next_power_of_2(131072);\necho \"\\n\";\necho next_power_of_2(262144);\necho \"\\n\";\necho next_power_of_2(524288);\necho \"\\n\";\necho next_power_of_2(1048576);\necho \"\\n\";\necho next_power_of_2(2097152);\necho \"\\n\";\necho next_power_of_2(4194304);\necho \"\\n\";\necho next_power_of_2(8388608);\necho \"\\n\";\necho next_power_of_2(16777216);\necho \"\\n\";\necho next_power_of_2(33554432);\necho \"\\n\";\necho next_power_of_2(67108864);\necho \"\\n\";\necho next_power_of_2(13",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\necho next_power_of_2(5);",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n$n = 4;\necho next_power_of_2($n);",
    "    $p = 1;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($p < $n) {\n        $p <<= 1;\n    }\n    return $p;\n}\n\n$n = intval(fgets(STDIN));\necho next_power_of_2($n);",
    "    $count = 0;\n    if ($n && !($n & ($n - 1)))\n        return $n;\n    while ($n != 0) {\n        $n >>= 1;\n        $count += 1;\n    }\n    return 1 << $count;\n}\n$n = 15;\necho next_power_of_2($n);"
  ]
}
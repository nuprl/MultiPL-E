{
  "name": "mbpp_606_radian_degree",
  "language": "php",
  "prompt": "<?php\n// Write a function to convert degrees to radians.\nfunction radian_degree($degree) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return radian_degree(...$args);\n}\n\nfunction test(): void {\n    if (candidate(90) !== 1.5707963267948966) { throw new Exception(\"Test failed!\"); }\n    if (candidate(60) !== 1.0471975511965976) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 2.0943951023931953) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(45);",
    "    $radian = $degree * (pi()/180);\n    return $radian;\n}\necho radian_degree(90);\n",
    "    $radian = $degree * (pi()/180);\n    return $radian;\n}\n\necho radian_degree(180);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n",
    "\treturn $degree * (pi()/180);\n}\n",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n",
    "    $radian = $degree * (M_PI / 180);\n    return $radian;\n}\n",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n\necho radian_degree(180);",
    "    return $degree * (pi()/180);\n}\n",
    "  return $degree * (M_PI / 180);\n}\n\necho radian_degree(45);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(30);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n",
    "\treturn $degree * pi() / 180;\n}\n",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\necho radian_degree(45);",
    "    $radian = $degree * (pi() / 180);\n    return $radian;\n}\n"
  ]
}
{
  "name": "mbpp_576_is_Sub_Array",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    for ($i = 0; $i < $len_A; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is sub array of C\";\n} else {\n    echo \"A is not sub array of C\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "A is sub array of B<br>A is sub array of C",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ch7rg9a.php:32\nStack trace:\n#0 /tmp/tmp8ch7rg9a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8ch7rg9a.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($A);\n    $len2 = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len && $j < $len2) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len2) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Yes\nYes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $lenA = count($A);\n    $lenB = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $lenB) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n$E = array(2, 3, 4, 5, 6, 7);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is sub array of A\";\n} else {\n    echo \"B is not sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is sub array of A\";\n} else {\n    echo \"C is not sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is sub array of A\";\n} else {\n    echo \"D is not sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $E)) {\n    echo \"E is sub array of A\";\n} else {\n    echo \"E is not sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is sub array of A<br>C is sub array of A<br>D is not sub array of A<br>E is not sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$B = array(2, 4, 6, 8);\n$C = array(2, 4, 6, 8, 10);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is not a sub array of A<br>C is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzb3tp5sm.php:32\nStack trace:\n#0 /tmp/tmpzb3tp5sm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzb3tp5sm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    return ($i == $n);\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Array B is a sub array of Array A<br>Array C is a sub array of Array A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wmkt4xw.php:32\nStack trace:\n#0 /tmp/tmp9wmkt4xw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9wmkt4xw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqw0o61e.php:34\nStack trace:\n#0 /tmp/tmpvqw0o61e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvqw0o61e.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is not a sub array of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwcoyg__.php:32\nStack trace:\n#0 /tmp/tmpfwcoyg__.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfwcoyg__.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7m_ukmm.php:32\nStack trace:\n#0 /tmp/tmpe7m_ukmm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe7m_ukmm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n\t$len1 = count($A);\n\t$len2 = count($B);\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < $len1 && $j < $len2) {\n\t\tif ($A[$i] == $B[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i++;\n\t\t}\n\t}\n\tif ($j == $len2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 4, 6);\n\nif (is_Sub_Array($A, $B)) {\n\techo \"Array B is a sub array of A\";\n} else {\n\techo \"Array B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n\techo \"Array C is a sub array of A\";\n} else {\n\techo \"Array C is not a sub array of A\";\n}\n\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Array B is a sub array of A<br>Array C is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzitf3xk.php:29\nStack trace:\n#0 /tmp/tmptzitf3xk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptzitf3xk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $lenA = count($A);\n    $lenB = count($B);\n    if ($lenA > $lenB) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $j++;\n        }\n    }\n    if ($i == $lenA) {\n        return true;\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp04jnvyng.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpljelyk.php:31\nStack trace:\n#0 /tmp/tmpzpljelyk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzpljelyk.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n            $flag = 1;\n        } else {\n            $j++;\n            $flag = 0;\n        }\n    }\n    if ($flag == 1) {\n        echo \"Array A is a sub array of Array B\";\n    } else {\n        echo \"Array A is not a sub array of Array B\";\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nis_Sub_Array($A, $B);\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array A is a sub array of Array BArray A is not a sub array of Array B\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc30qv8vs.php:33\nStack trace:\n#0 /tmp/tmpc30qv8vs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc30qv8vs.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($A);\n    $len2 = count($B);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = 0; $j < $len2; $j++) {\n            if ($A[$i] == $B[$j]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4, 6, 8);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28uu6oh8.php:27\nStack trace:\n#0 /tmp/tmp28uu6oh8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp28uu6oh8.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovmts4ue.php:30\nStack trace:\n#0 /tmp/tmpovmts4ue.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpovmts4ue.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(2, 4, 6, 8, 10);\n$C = array(2, 4, 6, 8, 11);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A<br>C is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qspdz6w.php:32\nStack trace:\n#0 /tmp/tmp9qspdz6w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9qspdz6w.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 8);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of Array A<br>Array C is not a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd50u_jy7.php:39\nStack trace:\n#0 /tmp/tmpd50u_jy7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd50u_jy7.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87cg6xnf.php:32\nStack trace:\n#0 /tmp/tmp87cg6xnf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp87cg6xnf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 8);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a subarray of Array A\";\n} else {\n    echo \"Array C is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a subarray of Array A<br>Array C is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1frrd3j4.php:39\nStack trace:\n#0 /tmp/tmp1frrd3j4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1frrd3j4.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5);\n$C = array(6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $E) ? \"Yes\" : \"No\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nYes\nYes\nNo\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1_uva53.php:32\nStack trace:\n#0 /tmp/tmpx1_uva53.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx1_uva53.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = 0;\n            $j++;\n        }\n    }\n    if ($i == $len_A) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\";\n} else {\n    echo \"A is not subarray of B\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is subarray of B",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n            $count++;\n        } else {\n            $i++;\n        }\n    }\n    if ($count == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is subarray of Array A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $j = $k;\n            $i = 0;\n            $k++;\n        }\n        if ($i == count($A)) {\n            $flag = 1;\n            break;\n        }\n    }\n    if ($flag == 1) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4, 1, 0, 5, 3, 2, 4, 5);\necho is_Sub_Array($A, $B);\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbip_e5ch.php:36\nStack trace:\n#0 /tmp/tmpbip_e5ch.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbip_e5ch.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$B = array(2, 3, 4, 5);\n$C = array(2, 3, 4, 5, 6, 7, 8, 9);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$Q = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$R = array(1,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpzjgn60hs.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == count($B)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"Array 2 is a subarray of Array 1\";\n} else {\n    echo \"Array 2 is not a subarray of Array 1\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array 2 is a subarray of Array 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqcteo6e.php:32\nStack trace:\n#0 /tmp/tmpgqcteo6e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgqcteo6e.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $flag = 0;\n    while ($i < count($A)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n            $flag = 1;\n        } else {\n            $i++;\n            $j = 0;\n            $flag = 0;\n        }\n    }\n    if ($flag == 1) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 5);\necho \"Array A is : \";\nprint_r($A);\necho \"<br>\";\necho \"Array B is : \";\nprint_r($B);\necho \"<br>\";\necho \"Array C is : \";\nprint_r($C);\necho \"<br>\";\necho \"Array B is sub array of Array A : \";\necho is_Sub_Array($A, $B);\necho \"<br>\";\necho \"Array C is sub array of Array A : \";\necho is_Sub_Array($A, $C);\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array A is : Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n<br>Array B is : Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\n<br>Array C is : Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 5\n)\n<br>Array B is sub array of Array A : \nWarning: Undefined array key 3 in /tmp/tmp0iwnyz76.php on line 9\n0<br>Array C is sub array of Array A : 0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0iwnyz76.php:47\nStack trace:\n#0 /tmp/tmp0iwnyz76.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0iwnyz76.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wmkt4xw.php:32\nStack trace:\n#0 /tmp/tmp9wmkt4xw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9wmkt4xw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(2, 3, 4, 5, 6);\n$B = array(4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                $k++;\n            }\n        }\n    }\n    if ($k == count($A)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array A is a sub array of Array B\";\n} else {\n    echo \"Array A is not a sub array of Array B\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array A is a sub array of Array B\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxt31td2.php:32\nStack trace:\n#0 /tmp/tmpxxt31td2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxxt31td2.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"B is subarray of A\";\n} else {\n    echo \"B is not subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is subarray of A\";\n} else {\n    echo \"C is not subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not subarray of A<br>C is not subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == count($B))\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo4rkrau.php:27\nStack trace:\n#0 /tmp/tmpmo4rkrau.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmo4rkrau.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $flag = 0;\n    while($i < count($A) && $j < count($B)) {\n        if($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == count($B)) {\n        $flag = 1;\n    }\n    return $flag;\n}\n$A = array(1,2,3,4,5);\n$B = array(2,3);\necho is_Sub_Array($A, $B);\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0_wl4ih.php:29\nStack trace:\n#0 /tmp/tmp_0_wl4ih.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_0_wl4ih.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87cg6xnf.php:32\nStack trace:\n#0 /tmp/tmp87cg6xnf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp87cg6xnf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a subarray of B\";\n} else {\n    echo \"A is not a subarray of B\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is a subarray of B",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i=0; $i < count($A); $i++) { \n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\n\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes, B is a subarray of A\";\n} else {\n    echo \"No, B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "No, B is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$O = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$P = array(1, 2, 3, 4, 5, 6, 7, 8, 9,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpvqyzplcl.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzitf3xk.php:29\nStack trace:\n#0 /tmp/tmptzitf3xk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptzitf3xk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $n = count($A);\n    $m = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(2, 3, 7);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a subarray of A\";\n} else {\n    echo \"D is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nC is not a subarray of A\nD is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == count($B)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array 2 is subarray of Array 1\";\n} else {\n    echo \"Array 2 is not a sub array of Array 1\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array 2 is subarray of Array 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3jwp_sl.php:30\nStack trace:\n#0 /tmp/tmph3jwp_sl.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph3jwp_sl.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\n$C = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == count($B))\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo4rkrau.php:27\nStack trace:\n#0 /tmp/tmpmo4rkrau.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmo4rkrau.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    return ($i == count($A));\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\n$C = array(2, 3, 4);\n$D = array(1, 2, 3, 4, 5);\n$E = array(6, 7, 8);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($D, $A)) {\n    echo \"D is a subarray of A\";\n} else {\n    echo \"D is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($E, $A)) {\n    echo \"E is a subarray of A\";\n} else {\n    echo \"E is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A<br>D is a subarray of A<br>E is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($A);\n    $len2 = count($B);\n    for ($i = 0; $i < $len; $i++) {\n        for ($j = 0; $j < $len2; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $len2) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n$E = array(2, 3, 4, 5, 7);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($D, $A)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($E, $A)) {\n    echo \"E is a sub array of A\";\n} else {\n    echo \"E is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A<br>C is a sub array of A<br>D is not a sub array of A<br>E is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xcj20uo.php:33\nStack trace:\n#0 /tmp/tmp2xcj20uo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2xcj20uo.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of A<br>Array C is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is not a sub array of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwcoyg__.php:32\nStack trace:\n#0 /tmp/tmpfwcoyg__.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfwcoyg__.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\necho is_Sub_Array($A, $B);\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpr8r83d.php:34\nStack trace:\n#0 /tmp/tmpvpr8r83d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvpr8r83d.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(1, 2, 3);\n$C = array(4, 5, 6);\n$D = array(1, 2, 3, 4, 5, 6, 7);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is subarray of A\";\n} else {\n    echo \"B is not subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is subarray of A\";\n} else {\n    echo \"C is not subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is subarray of A\";\n} else {\n    echo \"D is not subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $E)) {\n    echo \"E is subarray of A\";\n} else {\n    echo \"E is not subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is subarray of A<br>C is subarray of A<br>D is subarray of A<br>E is not subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if($len_A > $len_B) {\n        return false;\n    }\n    for($i = 0; $i < $len_A; $i++) {\n        if($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp_ri6zjvd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzitf3xk.php:29\nStack trace:\n#0 /tmp/tmptzitf3xk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptzitf3xk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a subarray of Array A\";\n} else {\n    echo \"Array C is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a subarray of Array A<br>Array C is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1i4tv26.php:40\nStack trace:\n#0 /tmp/tmpc1i4tv26.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc1i4tv26.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == count($B)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a subarray of Array A\";\n} else {\n    echo \"Array C is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a subarray of Array A<br>Array C is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0x2kpx8m.php:37\nStack trace:\n#0 /tmp/tmp0x2kpx8m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0x2kpx8m.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(3, 4, 5);\n$C = array(3, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A<br>C is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpr8r83d.php:34\nStack trace:\n#0 /tmp/tmpvpr8r83d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvpr8r83d.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Array B is a subarray of Array A\";\nelse\n    echo \"Array B is not a subarray of Array A\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfb9e9lnz.php:29\nStack trace:\n#0 /tmp/tmpfb9e9lnz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfb9e9lnz.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i=0; $i<$n; $i++) {\n        for ($j=0; $j<$m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb7373cd.php:31\nStack trace:\n#0 /tmp/tmpqb7373cd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqb7373cd.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a sub array of A<br>C is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    for ($i = 0; $i < $m; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $n) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy_5u7ai.php:33\nStack trace:\n#0 /tmp/tmpdy_5u7ai.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdy_5u7ai.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i=0; $i < count($A); $i++) { \n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1,2,3,4,5,6);\n$B = array(2,3,4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n}\nelse {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $j = 0;\n    for ($i = 0; $i < $len_A; $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5);\n$D = array(2, 3, 4);\n$E = array(1, 2, 3, 4, 5);\n$F = array(2, 3, 4);\n$G = array(1, 2, 3, 4, 5);\n$H = array(2, 3, 4);\n$I = array(1, 2, 3, 4, 5);\n$J = array(2, 3, 4);\n$K = array(1, 2, 3, 4, 5);\n$L = array(2, 3, 4);\n$M = array(1, 2, 3, 4, 5);\n$N = array(2, 3, 4);\n$O = array(1, 2, 3, 4, 5);\n$P = array(2, 3, 4);\n$Q = array(1, 2, 3, 4, 5);\n$R = array(2, 3, 4);\n$S = array(1, 2, 3, 4, 5);\n$T = array(2, 3, 4);\n$U = array(1, 2, 3, 4, 5);\n$V = array(2, 3, 4);\n$W = array(1, 2, 3, 4, 5);\n$X = array(2, 3, 4);\n$Y = array(1, 2, 3, 4, 5);\n$Z = array(2, 3, 4);\n$AA = array(1, 2, 3, 4, 5);\n$AB = array(2, 3, 4);\n$AC = array(1, 2, 3\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpdlbj7n02.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($A);\n    $len1 = count($B);\n    if ($len > $len1) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5, 6);\n$D = array(1, 2, 3, 4, 5, 6);\n$E = array(1, 2, 3, 4, 5, 6);\n$F = array(1, 2, 3, 4, 5, 6);\n$G = array(1, 2, 3, 4, 5, 6);\n$H = array(1, 2, 3, 4, 5, 6);\n$I = array(1, 2, 3, 4, 5, 6);\n$J = array(1, 2, 3, 4, 5, 6);\n$K = array(1, 2, 3, 4, 5, 6);\n$L = array(1, 2, 3, 4, 5, 6);\n$M = array(1, 2, 3, 4, 5, 6);\n$N = array(1, 2, 3, 4, 5, 6);\n$O = array(1, 2, 3, 4, 5, 6);\n$P = array(1, 2, 3, 4, 5, 6);\n$Q = array(1, 2, 3, 4, 5, 6);\n$R = array(1, 2, 3, 4, 5, 6);\n$S = array(1, 2, 3, 4, 5, 6);\n$T = array(1, 2, 3, 4, 5, 6);\n$U = array(1, 2, 3, 4, 5, 6);\n$V = array(1, 2, 3, 4, 5, 6);\n$W = array(1, 2, 3, 4, 5, 6);\n$X = array(1, 2,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpv5r8aqjw.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(2, 3, 4);\n$D = array(7, 8, 9);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a subarray of A\";\n} else {\n    echo \"D is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A<br>D is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzitf3xk.php:29\nStack trace:\n#0 /tmp/tmptzitf3xk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptzitf3xk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $count = 0;\n    $len = count($A);\n    for ($i = 0; $i < $len; $i++) {\n        if ($A[$i] == $B[$i]) {\n            $count++;\n        }\n    }\n    if ($count == $len) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 6);\n$D = array(1, 2, 3, 4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array A is sub array of B\";\n} else {\n    echo \"Array A is not sub array of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array A is sub array of C\";\n} else {\n    echo \"Array A is not sub array of C\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array A is sub array of D\";\n} else {\n    echo \"Array A is not sub array of D\";\n}\necho \"<br>\";\nif (is_Sub_Array($B, $C)) {\n    echo \"Array B is sub array of C\";\n} else {\n    echo \"Array B is not sub array of C\";\n}\necho \"<br>\";\nif (is_Sub_Array($B, $D)) {\n    echo \"Array B is sub array of D\";\n} else {\n    echo \"Array B is not sub array of D\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"Array C is sub array of D\";\n} else {\n    echo \"Array C is not sub array of D\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array A is sub array of B<br>Array A is not sub array of C<br>Array A is sub array of D<br>Array B is not sub array of C<br>Array B is sub array of D<br>Array C is not sub array of D\nWarning: Undefined array key 2 in /tmp/tmpvb3d86nf.php on line 7\n\nWarning: Undefined array key 3 in /tmp/tmpvb3d86nf.php on line 7\n\nWarning: Undefined array key 3 in /tmp/tmpvb3d86nf.php on line 7\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87cg6xnf.php:32\nStack trace:\n#0 /tmp/tmp87cg6xnf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp87cg6xnf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wmkt4xw.php:32\nStack trace:\n#0 /tmp/tmp9wmkt4xw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9wmkt4xw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a sub array of Array A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for($i = 0; $i < count($A); $i++) {\n        if($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\nif(is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    while ($i < $m && $j < $n) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $n) {\n        return false;\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5, 6);\n$D = array(1, 2, 3, 4, 5, 6, 7);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$N = array(1, 2, 3, 4, 5, 6,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpojz16urp.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 8);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is subarray of Array A\";\n} else {\n    echo \"Array B is not subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is subarray of Array A\";\n} else {\n    echo \"Array C is not subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is subarray of Array A<br>Array C is not subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkm2118c.php:39\nStack trace:\n#0 /tmp/tmprkm2118c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprkm2118c.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif(is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafltj3sp.php:32\nStack trace:\n#0 /tmp/tmpafltj3sp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafltj3sp.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\n$C = array(1, 2, 3);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of Array A<br>Array C is a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91h9wvye.php:41\nStack trace:\n#0 /tmp/tmp91h9wvye.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp91h9wvye.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    if ($i == $len_A) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\";\n} else {\n    echo \"A is not subarray of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is subarray of C\";\n} else {\n    echo \"A is not subarray of C\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is subarray of B<br>A is subarray of C",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bwkwtb2.php:32\nStack trace:\n#0 /tmp/tmp2bwkwtb2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2bwkwtb2.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j != $m) {\n        return false;\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wmkt4xw.php:32\nStack trace:\n#0 /tmp/tmp9wmkt4xw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9wmkt4xw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7t2fuor.php:32\nStack trace:\n#0 /tmp/tmpc7t2fuor.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc7t2fuor.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    for ($i = 0; $i < $len_A; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp8_7bhdx6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a sub array of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo14ztew.php:32\nStack trace:\n#0 /tmp/tmpzo14ztew.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzo14ztew.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 4, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == count($B))\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo4rkrau.php:27\nStack trace:\n#0 /tmp/tmpmo4rkrau.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmo4rkrau.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2uquzrr.php:32\nStack trace:\n#0 /tmp/tmpt2uquzrr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpt2uquzrr.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nC is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(2, 3, 4, 5);\n$F = array(2, 3, 4, 5);\n$G = array(1, 2, 3, 4, 5);\n$H = array(2, 3, 4, 5);\n$I = array(2, 3, 4, 5);\n$J = array(1, 2, 3, 4, 5);\n$K = array(2, 3, 4, 5);\n$L = array(2, 3, 4, 5);\n$M = array(1, 2, 3, 4, 5);\n$N = array(2, 3, 4, 5);\n$O = array(2, 3, 4, 5);\n$P = array(1, 2, 3, 4, 5);\n$Q = array(2, 3, 4, 5);\n$R = array(2, 3, 4, 5);\n$S = array(1, 2, 3, 4, 5);\n$T = array(2, 3, 4, 5);\n$U = array(2, 3, 4, 5);\n$V = array(1, 2, 3, 4, 5);\n$W = array(2, 3, 4, 5);\n$X = array(2, 3, 4, 5);\n$Y = array(1, 2, 3, 4, 5);\n$Z = array(2, 3, 4, 5);\n$AA = array(2, 3, 4\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpjzacqdh0.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    if ($i == $len_A) {\n        return true;\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$L = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$M = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$N = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$O = array(1, 2, 3, 4, 5, 6, 7,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmph0eciip6.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == count($B)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array 2 is subarray of Array 1\";\n} else {\n    echo \"Array 2 is not subarray of Array 1\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array 2 is subarray of Array 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6szp9bf.php:30\nStack trace:\n#0 /tmp/tmpk6szp9bf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk6szp9bf.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $size_A = sizeof($A);\n    $size_B = sizeof($B);\n    if ($size_A > $size_B) {\n        return false;\n    }\n    for ($i = 0; $i < $size_A; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is sub array of B\";\n} else {\n    echo \"A is not sub array of B\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is sub array of C\";\n} else {\n    echo \"A is not sub array of C\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is sub array of B\nA is sub array of C",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(2, 3, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of A<br>Array C is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n$E = array(2, 3, 4, 5, 6, 7);\n$F = array(2, 3, 4, 5, 6, 7, 8);\n$G = array(2, 3, 4, 5, 6, 7, 8, 9);\n$H = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$J = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$K = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$L = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$M = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$N = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$O = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$P = array(2, 3, 4, 5, 6\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpyhw0r988.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4, 5);\n$C = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n}\nelse {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n}\nelse {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(2, 4, 6);\n$C = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a subarray of Array A\";\n} else {\n    echo \"Array C is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a subarray of Array A<br>Array C is a subarray of Array A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ksgillm.php:32\nStack trace:\n#0 /tmp/tmp_ksgillm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_ksgillm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\n$C = array(2, 3, 4);\n$D = array(2, 4, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A<br>C is a sub array of A<br>D is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($A);\n    $len1 = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len && $j < $len1) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n\t$i = 0;\n\t$j = 0;\n\t$n = count($A);\n\t$m = count($B);\n\twhile ($i < $n && $j < $m) {\n\t\tif ($A[$i] < $B[$j]) {\n\t\t\t$i++;\n\t\t} elseif ($A[$i] == $B[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} elseif ($A[$i] > $B[$j]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($j < $m) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 6);\n$C = array(1, 2, 4, 8, 16);\nif (is_Sub_Array($B, $A)) {\n\techo \"B is a subarray of A\";\n} else {\n\techo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n\techo \"C is a subarray of A\";\n} else {\n\techo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A<br>C is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n$C = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of AC is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        if ($j == count($B)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a subarray of B\";\n} else {\n    echo \"A is not a subarray of B\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a subarray of A\";\n} else {\n    echo \"D is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is a subarray of B<br>C is a subarray of A<br>D is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"Array D is a sub array of Array C\";\n} else {\n    echo \"Array D is not a sub array of Array C\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a sub array of Array A<br>Array D is a sub array of Array C\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppzht9yq.php:40\nStack trace:\n#0 /tmp/tmpppzht9yq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpppzht9yq.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($B); $i++) {\n        if ($A[$j] == $B[$i]) {\n            $j++;\n        }\n        if ($j == count($A)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is subarray of B\";\n} else {\n    echo \"A is not subarray of B\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is subarray of B",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a subarray of A\";\n} else {\n    echo \"D is not a subarray of A\";\n}\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nC is a subarray of A\nD is not a subarray of A\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } elseif ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } elseif ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < count($B)) {\n        return false;\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A<br>C is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hamkrx0.php:32\nStack trace:\n#0 /tmp/tmp1hamkrx0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1hamkrx0.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxu8i_n5.php:32\nStack trace:\n#0 /tmp/tmpvxu8i_n5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvxu8i_n5.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    for ($i = 0; $i < $len_A; $i++) {\n        $j = 0;\n        $k = $i;\n        while ($j < $len_B && $k < $len_A) {\n            if ($A[$k] == $B[$j]) {\n                $j++;\n                $k++;\n            } else {\n                break;\n            }\n        }\n        if ($j == $len_B) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(4, 5, 6);\n$C = array(4, 5, 6, 7);\n$D = array(4, 5, 6, 8);\n$E = array(4, 5, 6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array D is a sub array of A\";\n} else {\n    echo \"Array D is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $E)) {\n    echo \"Array E is a sub array of A\";\n} else {\n    echo \"Array E is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of A<br>Array C is a sub array of A<br>Array D is not a sub array of A<br>Array E is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvpr8r83d.php:34\nStack trace:\n#0 /tmp/tmpvpr8r83d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvpr8r83d.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzitf3xk.php:29\nStack trace:\n#0 /tmp/tmptzitf3xk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptzitf3xk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    for ($i = 0; $i < $len_A; $i++) {\n        if ($A[$i] != $B[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}\necho \"<br>\";\nif (is_Sub_Array($B, $C)) {\n    echo \"B is a sub array of C\";\n} else {\n    echo \"B is not a sub array of C\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $D)) {\n    echo \"C is a sub array of D\";\n} else {\n    echo \"C is not a sub array of D\";\n}\necho \"<br>\";\nif (is_Sub_Array($D, $A)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"A is a sub array of C\";\n} else {\n    echo \"A is not a sub array of C\";\n}\necho \"<br>\";\nif (is_Sub_Array($B, $D)) {\n    echo \"B is a sub array of D\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is a sub array of B<br>B is a sub array of C<br>C is a sub array of D<br>D is not a sub array of A<br>A is a sub array of C<br>B is a sub array of D",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "B is not a sub array of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfwcoyg__.php:32\nStack trace:\n#0 /tmp/tmpfwcoyg__.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfwcoyg__.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n}\nelse {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $m = count($A);\n    $n = count($B);\n    for ($i=0; $i<$m; $i++) {\n        for ($j=0; $j<$n; $j++) {\n            if($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $n)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif(is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wg_l36n.php:29\nStack trace:\n#0 /tmp/tmp6wg_l36n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6wg_l36n.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if($len_A > $len_B) {\n        return false;\n    }\n    $i = 0;\n    $j = 0;\n    while($i < $len_A && $j < $len_B) {\n        if($A[$i] == $B[$j]) {\n            $i++;\n        }\n        $j++;\n    }\n    return $i == $len_A;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxatddrfz.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4n3_cvl6.php:29\nStack trace:\n#0 /tmp/tmp4n3_cvl6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4n3_cvl6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A<br>C is a sub array of A<br>D is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == count($B))\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo4rkrau.php:27\nStack trace:\n#0 /tmp/tmpmo4rkrau.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmo4rkrau.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5);\n$F = array(2, 3, 4, 5);\n$G = array(2, 3, 4, 5);\n$H = array(2, 3, 4, 5);\n$I = array(2, 3, 4, 5);\n$J = array(2, 3, 4, 5);\n$K = array(2, 3, 4, 5);\n$L = array(2, 3, 4, 5);\n$M = array(2, 3, 4, 5);\n$N = array(2, 3, 4, 5);\n$O = array(2, 3, 4, 5);\n$P = array(2, 3, 4, 5);\n$Q = array(2, 3, 4, 5);\n$R = array(2, 3, 4, 5);\n$S = array(2, 3, 4, 5);\n$T = array(2, 3, 4, 5);\n$U = array(2, 3, 4, 5);\n$V = array(2, 3, 4, 5);\n$W = array(2, 3, 4, 5);\n$X = array(2, 3, 4, 5);\n$Y = array(2, 3, 4, 5);\n$Z = array(2, 3, 4,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmptztvfc87.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($B, $A)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmqs29dp.php:32\nStack trace:\n#0 /tmp/tmpmmqs29dp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmmqs29dp.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i=0; $i < $n; $i++) { \n        for ($j=0; $j < $m; $j++) { \n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapgp_4em.php:32\nStack trace:\n#0 /tmp/tmpapgp_4em.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpapgp_4em.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    for ($i = 0; $i < $len_A; $i++) {\n        $j = 0;\n        $k = $i;\n        while ($j < $len_B && $k < $len_A) {\n            if ($A[$k] == $B[$j]) {\n                $j++;\n                $k++;\n            } else {\n                break;\n            }\n        }\n        if ($j == $len_B) {\n            return true;\n        }\n    }\n    return false;\n}\n$A = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$B = array(2, 4, 5, 6);\n$C = array(2, 4, 6, 5);\n$D = array(2, 4, 6, 8);\n$E = array(2, 4, 6, 5, 8);\necho is_Sub_Array($A, $B) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $C) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $D) ? \"Yes\" : \"No\";\necho \"\\n\";\necho is_Sub_Array($A, $E) ? \"Yes\" : \"No\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "No\nNo\nNo\nNo\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzitf3xk.php:29\nStack trace:\n#0 /tmp/tmptzitf3xk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptzitf3xk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($B, $A))\n    echo \"Yes\";\nelse\n    echo \"No\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4n3_cvl6.php:29\nStack trace:\n#0 /tmp/tmp4n3_cvl6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4n3_cvl6.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return false;\n        }\n    }\n    return true;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6, 7);\n$B = array(4, 5, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n            if ($j == count($B)) {\n                return true;\n            }\n        } else {\n            $j = 0;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5, 6, 7, 8);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of A<br>Array C is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < $len) {\n        if ($A[$i] == $B[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    if ($j == $len) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(7, 8, 9);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A<br>C is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpboult8rx.php:38\nStack trace:\n#0 /tmp/tmpboult8rx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpboult8rx.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $lenA = count($A);\n    $lenB = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $lenB) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n$E = array(2, 3, 4, 5, 6, 7);\n$F = array(2, 3, 4, 5, 6, 7, 8);\n$G = array(2, 3, 4, 5, 6, 7, 8, 9);\n$H = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$I = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$J = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$K = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$L = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$M = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$N = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$O = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$P = array(2, 3, 4, 5, 6, 7, 8\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpoul67uf2.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len = count($A);\n    $len1 = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len && $j < $len1) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 3, 4);\n$C = array(2, 4, 3);\n$D = array(2, 3, 6);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a sub array of A\";\n} else {\n    echo \"Array B is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $C)) {\n    echo \"Array C is a sub array of A\";\n} else {\n    echo \"Array C is not a sub array of A\";\n}\necho \"<br>\";\nif (is_Sub_Array($A, $D)) {\n    echo \"Array D is a sub array of A\";\n} else {\n    echo \"Array D is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of A<br>Array C is not a sub array of A<br>Array D is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\n\necho \"\\n\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nC is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j])\n                break;\n        }\n        if ($j == $m)\n            return 0;\n    }\n    return 1;\n}\n$A = array(2, 3, 4, 5, 6);\n$B = array(4, 3, 2);\nif (is_Sub_Array($A, $B))\n    echo \"Array B is a subarray of Array A\";\nelse\n    echo \"Array B is not a subarray of Array A\";\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu58lh_13.php:29\nStack trace:\n#0 /tmp/tmpu58lh_13.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu58lh_13.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    while ($i < count($A) && $j < count($B)) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == count($B)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkp01kpf.php:32\nStack trace:\n#0 /tmp/tmprkp01kpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprkp01kpf.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(1, 2, 3, 4, 5);\n$D = array(2, 3, 4, 5);\n$E = array(2, 3, 4, 5, 6);\n$F = array(2, 3, 4, 5, 6, 7);\n$G = array(2, 3, 4, 5, 6, 7, 8);\n$H = array(2, 3, 4, 5, 6, 7, 8, 9);\n$I = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$J = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$K = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$L = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$M = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$N = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$O = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$P = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp722_nz5a.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    if ($len_A > $len_B) {\n        return false;\n    }\n    for ($i = 0; $i < $len_A; $i++) {\n        $j = 0;\n        while ($j < $len_B) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n            $j++;\n        }\n        if ($j == $len_B) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$C = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$D = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);\n$E = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n$F = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);\n$G = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);\n$H = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$I = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n$J = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);\n$K = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);\n$L = array(1, 2, 3, 4, 5, 6,\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpbh6kyqbn.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $j = 0;\n    for ($i = 0; $i < count($B); $i++) {\n        if ($A[$j] == $B[$i]) {\n            $j++;\n        }\n        if ($j == count($A)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4, 5, 6, 7, 8);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"A is a sub array of B\";\n} else {\n    echo \"A is not a sub array of B\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "A is not a sub array of B",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ch7rg9a.php:32\nStack trace:\n#0 /tmp/tmp8ch7rg9a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8ch7rg9a.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Array B is a subarray of Array A\";\n} else {\n    echo \"Array B is not a subarray of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Array B is not a subarray of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzb3tp5sm.php:32\nStack trace:\n#0 /tmp/tmpzb3tp5sm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzb3tp5sm.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $len_A = count($A);\n    $len_B = count($B);\n    $i = 0;\n    $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_B) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 3, 4);\n$C = array(2, 3, 4, 5);\n$D = array(2, 3, 4, 5, 6);\n\nif (is_Sub_Array($A, $B)) {\n    echo \"B is a sub array of A\";\n} else {\n    echo \"B is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $C)) {\n    echo \"C is a sub array of A\";\n} else {\n    echo \"C is not a sub array of A\";\n}\n\necho \"<br>\";\n\nif (is_Sub_Array($A, $D)) {\n    echo \"D is a sub array of A\";\n} else {\n    echo \"D is not a sub array of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a sub array of A<br>C is a sub array of A<br>D is not a sub array of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    for ($i = 0; $i < count($A); $i++) {\n        for ($j = 0; $j < count($B); $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == count($B)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(1, 2, 3, 4, 5);\n$C = array(1, 2, 3, 4, 5);\n$D = array(1, 2, 3, 4, 5);\n$E = array(1, 2, 3, 4, 5);\n$F = array(1, 2, 3, 4, 5);\n$G = array(1, 2, 3, 4, 5);\n$H = array(1, 2, 3, 4, 5);\n$I = array(1, 2, 3, 4, 5);\n$J = array(1, 2, 3, 4, 5);\n$K = array(1, 2, 3, 4, 5);\n$L = array(1, 2, 3, 4, 5);\n$M = array(1, 2, 3, 4, 5);\n$N = array(1, 2, 3, 4, 5);\n$O = array(1, 2, 3, 4, 5);\n$P = array(1, 2, 3, 4, 5);\n$Q = array(1, 2, 3, 4, 5);\n$R = array(1, 2, 3, 4, 5);\n$S = array(1, 2, 3, 4, 5);\n$T = array(1, 2, 3, 4, 5);\n$U = array(1, 2, 3, 4, 5);\n$V = array(1, 2, 3, 4, 5);\n$W = array(1, 2, 3, 4, 5);\n$X = array(1, 2, 3, 4, 5);\n$Y = array(1, 2, 3, 4, 5);\n$Z =\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpyssnlff6.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is a subarray of A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpw55aed.php:34\nStack trace:\n#0 /tmp/tmpxpw55aed.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxpw55aed.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5);\n$B = array(2, 4);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdiw90g2.php:32\nStack trace:\n#0 /tmp/tmpqdiw90g2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqdiw90g2.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "No\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wmkt4xw.php:32\nStack trace:\n#0 /tmp/tmp9wmkt4xw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9wmkt4xw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A[$i] == $B[$j]) {\n                break;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(1, 2, 4, 5);\n$C = array(1, 2, 3);\nif (is_Sub_Array($B, $A)) {\n    echo \"Array B is a sub array of Array A\";\n} else {\n    echo \"Array B is not a sub array of Array A\";\n}\necho \"<br>\";\nif (is_Sub_Array($C, $A)) {\n    echo \"Array C is a sub array of Array A\";\n} else {\n    echo \"Array C is not a sub array of Array A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Array B is a sub array of Array A<br>Array C is a sub array of Array A\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnaj1u6p6.php:39\nStack trace:\n#0 /tmp/tmpnaj1u6p6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnaj1u6p6.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4, 5);\nif (is_Sub_Array($A, $B)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "Yes",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to check whether an array is subarray of another or not.\nfunction is_Sub_Array($A, $B) {\n    $i = 0;\n    $j = 0;\n    $n = count($A);\n    $m = count($B);\n    while ($i < $n && $j < $m) {\n        if ($A[$i] < $B[$j]) {\n            $i++;\n        } else if ($A[$i] == $B[$j]) {\n            $i++;\n            $j++;\n        } else if ($A[$i] > $B[$j]) {\n            return false;\n        }\n    }\n    if ($j < $m) {\n        return false;\n    }\n    return true;\n}\n\n$A = array(1, 2, 3, 4, 5, 6);\n$B = array(2, 4);\n$C = array(7, 8, 9);\n\nif (is_Sub_Array($B, $A)) {\n    echo \"B is a subarray of A\";\n} else {\n    echo \"B is not a subarray of A\";\n}\necho \"\\n\";\nif (is_Sub_Array($C, $A)) {\n    echo \"C is a subarray of A\";\n} else {\n    echo \"C is not a subarray of A\";\n}\nfunction candidate(...$args) {\n    return is_Sub_Array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 4, 3, 5), array(1, 2)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 1), array(1, 2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2, 2), array(2, 2, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124065,
      "stdout": "B is not a subarray of A\nC is not a subarray of A",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
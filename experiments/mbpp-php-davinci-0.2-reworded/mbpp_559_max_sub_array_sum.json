{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the sum of the largest contiguous subarray in the given array.\nfunction max_sub_array_sum($a, $size) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return max_sub_array_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-2, -3, 4, -1, -2, 1, 5, -3), 8) !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, -4, 5, -2, -3, 2, 6, -4), 8) !== 8) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-4, -5, 6, -3, -4, 3, 7, -5), 8) !== 10) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n  \n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max+$a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(1, 2, 3, -2, 5);\n$size = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $size);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n/* Driver program to test maxSubArraySum */\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\n$max_sum = max_sub_array_sum($a, $n);\necho \"Maximum contiguous sum is \" . $max_sum;",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n  \n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max+$a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\n$max_sum = max_sub_array_sum($a, $n);\necho \"Maximum contiguous sum is \" . $max_sum;",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\n$max_sum = max_sub_array_sum($a, $n);\necho \"Maximum contiguous sum is \" . $max_sum;",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n  \n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max+$a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\n$max_sum = max_sub_array_sum($a, $n);\necho \"Maximum contiguous sum is \" . $max_sum;",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n  \n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n  \n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n  \n/* Driver program to test maxSubArraySum */\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\n$max_sum = max_sub_array_sum($a, $n);\necho \"Maximum contiguous sum is \" . $max_sum;",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);",
    "    $max_so_far = $a[0];\n    $curr_max = $a[0];\n    for ($i = 1; $i < $size; $i++) {\n        $curr_max = max($a[$i], $curr_max + $a[$i]);\n        $max_so_far = max($max_so_far, $curr_max);\n    }\n    return $max_so_far;\n}\n$a = array(-2, -3, 4, -1, -2, 1, 5, -3);\n$n = count($a);\necho \"Maximum contiguous sum is \" . max_sub_array_sum($a, $n);"
  ]
}
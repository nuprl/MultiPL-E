{
  "name": "mbpp_630_get_coordinates",
  "language": "php",
  "prompt": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_630_get_coordinates.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(\",\", $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = $x - 1; $i <= $x + 1; $i++) {\n        for ($j = $y - 1; $j <= $y + 1; $j++) {\n            if ($i == $x && $j == $y) {\n                continue;\n            }\n            array_push($coordinates, array($i, $j));\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpq6v77d4z.php:4\nStack trace:\n#0 /tmp/tmpq6v77d4z.php(4): explode(',', Array)\n#1 /tmp/tmpq6v77d4z.php(21): get_coordinates(Array)\n#2 /tmp/tmpq6v77d4z.php(25): candidate(Array)\n#3 /tmp/tmpq6v77d4z.php(30): test()\n#4 {main}\n  thrown in /tmp/tmpq6v77d4z.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputo2sxjt.php:17\nStack trace:\n#0 /tmp/tmputo2sxjt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmputo2sxjt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = $test_tup;\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3t_8z6z.php:18\nStack trace:\n#0 /tmp/tmpj3t_8z6z.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj3t_8z6z.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = $x - 1; $i <= $x + 1; $i++) {\n        for ($j = $y - 1; $j <= $y + 1; $j++) {\n            if ($i == $x && $j == $y) {\n                continue;\n            }\n            $coordinates[] = array($i, $j);\n        }\n    }\n    return $coordinates;\n}\n\n$test_tup = array(1, 2);\nprint_r(get_coordinates($test_tup));\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 3\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n    [4] => Array\n        (\n            [0] => 1\n            [1] => 3\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [6] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqmcz6az.php:26\nStack trace:\n#0 /tmp/tmpjqmcz6az.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjqmcz6az.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_e0p6fu.php:24\nStack trace:\n#0 /tmp/tmpg_e0p6fu.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpg_e0p6fu.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i == 0 && $j == 0) {\n                continue;\n            }\n            array_push($coordinates, array($x + $i, $y + $j));\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd07uedpk.php:23\nStack trace:\n#0 /tmp/tmpd07uedpk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpd07uedpk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y-1),\n        array($x-1, $y),\n        array($x-1, $y+1),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y),\n        array($x+1, $y+1),\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wqmvc92.php:24\nStack trace:\n#0 /tmp/tmp2wqmvc92.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp2wqmvc92.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x, $y - 1),\n        array($x, $y + 1),\n        array($x - 1, $y),\n        array($x + 1, $y),\n        array($x - 1, $y - 1),\n        array($x + 1, $y - 1),\n        array($x - 1, $y + 1),\n        array($x + 1, $y + 1)\n    );\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$result = get_coordinates($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [4] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n    [6] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmt3gp4ws.php:27\nStack trace:\n#0 /tmp/tmpmt3gp4ws.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmt3gp4ws.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x - 1, $y - 1),\n        array($x - 1, $y),\n        array($x - 1, $y + 1),\n        array($x, $y - 1),\n        array($x, $y + 1),\n        array($x + 1, $y - 1),\n        array($x + 1, $y),\n        array($x + 1, $y + 1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcky22bg7.php:24\nStack trace:\n#0 /tmp/tmpcky22bg7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcky22bg7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    foreach ($test_tup as $tup) {\n        $coordinates[] = $tup[0];\n        $coordinates[] = $tup[1];\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 7\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflmjv1vk.php:17\nStack trace:\n#0 /tmp/tmpflmjv1vk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpflmjv1vk.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y),\n        array($x+1, $y),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x-1, $y-1),\n        array($x-1, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t9trv71.php:24\nStack trace:\n#0 /tmp/tmp_t9trv71.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_t9trv71.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprlv2bct4.php:22\nStack trace:\n#0 /tmp/tmprlv2bct4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmprlv2bct4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoplpizg6.php:17\nStack trace:\n#0 /tmp/tmpoplpizg6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpoplpizg6.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array();\n\tfor ($i = -1; $i <= 1; $i++) {\n\t\tfor ($j = -1; $j <= 1; $j++) {\n\t\t\tif ($i == 0 && $j == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$coordinates[] = array($x + $i, $y + $j);\n\t\t}\n\t}\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iex97us.php:23\nStack trace:\n#0 /tmp/tmp8iex97us.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp8iex97us.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0]-1, $test_tup[1]-1);\n    $coordinates[] = array($test_tup[0]-1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0]-1, $test_tup[1]+1);\n    $coordinates[] = array($test_tup[0], $test_tup[1]-1);\n    $coordinates[] = array($test_tup[0], $test_tup[1]+1);\n    $coordinates[] = array($test_tup[0]+1, $test_tup[1]-1);\n    $coordinates[] = array($test_tup[0]+1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0]+1, $test_tup[1]+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiw_p6cs7.php:21\nStack trace:\n#0 /tmp/tmpiw_p6cs7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiw_p6cs7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = '(' . $test_tup . ')';\n    $test_tup = str_replace(',', ' ', $test_tup);\n    $test_tup = str_replace('(', '', $test_tup);\n    $test_tup = str_replace(')', '', $test_tup);\n    $test_tup = explode(' ', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = '(' . $test_tup . ')';\n    $test_tup = str_replace(',', ' ', $test_tup);\n    $test_tup = str_replace('(', '', $test_tup);\n    $test_tup = str_replace(')', '', $test_tup);\n    $test_tup = explode(' ', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = '(' . $test_tup . ')';\n    $test_tup = str_replace(',', ' ', $test_tup);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nParse error: Unclosed '{' on line 3 in /tmp/tmpgznbfby8.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $coordinates[] = array($test_tup[$i][0], $test_tup[$i][1]);\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpsrq4de8g.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpsrq4de8g.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpsrq4de8g.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpsrq4de8g.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrq4de8g.php:16\nStack trace:\n#0 /tmp/tmpsrq4de8g.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpsrq4de8g.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57wry1ji.php:17\nStack trace:\n#0 /tmp/tmp57wry1ji.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp57wry1ji.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputo2sxjt.php:17\nStack trace:\n#0 /tmp/tmputo2sxjt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmputo2sxjt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $result = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $result[] = array($x-1, $y-1);\n    $result[] = array($x-1, $y);\n    $result[] = array($x-1, $y+1);\n    $result[] = array($x, $y-1);\n    $result[] = array($x, $y+1);\n    $result[] = array($x+1, $y-1);\n    $result[] = array($x+1, $y);\n    $result[] = array($x+1, $y+1);\n    return $result;\n}\n\n$test_tup = array(1, 2);\nprint_r(get_coordinates($test_tup));\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 3\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n    [4] => Array\n        (\n            [0] => 1\n            [1] => 3\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [6] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptplt70rz.php:25\nStack trace:\n#0 /tmp/tmptplt70rz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptplt70rz.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    return $test_tup;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpr8x2sktn.php:4\nStack trace:\n#0 /tmp/tmpr8x2sktn.php(4): explode(',', Array)\n#1 /tmp/tmpr8x2sktn.php(13): get_coordinates(Array)\n#2 /tmp/tmpr8x2sktn.php(17): candidate(Array)\n#3 /tmp/tmpr8x2sktn.php(22): test()\n#4 {main}\n  thrown in /tmp/tmpr8x2sktn.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x + 1, $y);\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpba9e5k01.php:22\nStack trace:\n#0 /tmp/tmpba9e5k01.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpba9e5k01.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ej9wk85.php:19\nStack trace:\n#0 /tmp/tmp0ej9wk85.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp0ej9wk85.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i == 0 && $j == 0) {\n                continue;\n            }\n            $coordinates[] = array($x + $i, $y + $j);\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xmomjet.php:23\nStack trace:\n#0 /tmp/tmp3xmomjet.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3xmomjet.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\n$test_tup = array(1, 2);\nprint_r(get_coordinates($test_tup));\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 3\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4pdh09mp.php:19\nStack trace:\n#0 /tmp/tmp4pdh09mp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp4pdh09mp.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$test_tup = explode(\",\", $test_tup);\n\t$test_tup = array_map('intval', $test_tup);\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array();\n\t$coordinates[] = array($x-1, $y-1);\n\t$coordinates[] = array($x-1, $y);\n\t$coordinates[] = array($x-1, $y+1);\n\t$coordinates[] = array($x, $y-1);\n\t$coordinates[] = array($x, $y+1);\n\t$coordinates[] = array($x+1, $y-1);\n\t$coordinates[] = array($x+1, $y);\n\t$coordinates[] = array($x+1, $y+1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpwmsk1yka.php:4\nStack trace:\n#0 /tmp/tmpwmsk1yka.php(4): explode(',', Array)\n#1 /tmp/tmpwmsk1yka.php(21): get_coordinates(Array)\n#2 /tmp/tmpwmsk1yka.php(25): candidate(Array)\n#3 /tmp/tmpwmsk1yka.php(30): test()\n#4 {main}\n  thrown in /tmp/tmpwmsk1yka.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulpostgz.php:22\nStack trace:\n#0 /tmp/tmpulpostgz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpulpostgz.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputo2sxjt.php:17\nStack trace:\n#0 /tmp/tmputo2sxjt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmputo2sxjt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    foreach ($test_tup as $tup) {\n        $coordinates[] = $tup[0];\n        $coordinates[] = $tup[1];\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 7\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpflmjv1vk.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpflmjv1vk.php:17\nStack trace:\n#0 /tmp/tmpflmjv1vk.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpflmjv1vk.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $tup_arr = array();\n    foreach ($test_tup as $tup) {\n        $x = $tup[0];\n        $y = $tup[1];\n        $tup_arr[] = array($x, $y);\n        $tup_arr[] = array($x, $y + 1);\n        $tup_arr[] = array($x, $y - 1);\n        $tup_arr[] = array($x + 1, $y);\n        $tup_arr[] = array($x + 1, $y + 1);\n        $tup_arr[] = array($x + 1, $y - 1);\n        $tup_arr[] = array($x - 1, $y);\n        $tup_arr[] = array($x - 1, $y + 1);\n        $tup_arr[] = array($x - 1, $y - 1);\n    }\n    return $tup_arr;\n}\n\n$test_tup = array(array(1, 2), array(3, 4));\nprint_r(get_coordinates($test_tup));\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 1\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [4] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [6] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [7] => Array\n        (\n            [0] => 0\n            [1] => 3\n        )\n\n    [8] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [9] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [10] => Array\n        (\n            [0] => 3\n            [1] => 5\n        )\n\n    [11] => Array\n        (\n            [0] => 3\n            [1] => 3\n        )\n\n    [12] => Array\n        (\n            [0] => 4\n     ",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i == 0 && $j == 0) {\n                continue;\n            }\n            $coordinates[] = array($x + $i, $y + $j);\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xmomjet.php:23\nStack trace:\n#0 /tmp/tmp3xmomjet.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3xmomjet.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6x86pjz.php:21\nStack trace:\n#0 /tmp/tmpi6x86pjz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi6x86pjz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = [];\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates[] = [$x, $y + 1];\n    $coordinates[] = [$x, $y - 1];\n    $coordinates[] = [$x + 1, $y];\n    $coordinates[] = [$x - 1, $y];\n    $coordinates[] = [$x + 1, $y + 1];\n    $coordinates[] = [$x - 1, $y - 1];\n    $coordinates[] = [$x + 1, $y - 1];\n    $coordinates[] = [$x - 1, $y + 1];\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18joxni4.php:23\nStack trace:\n#0 /tmp/tmp18joxni4.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp18joxni4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [2] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [3] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopn0p7jj.php:22\nStack trace:\n#0 /tmp/tmpopn0p7jj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpopn0p7jj.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x - 1, $y - 1),\n        array($x - 1, $y),\n        array($x - 1, $y + 1),\n        array($x, $y - 1),\n        array($x, $y + 1),\n        array($x + 1, $y - 1),\n        array($x + 1, $y),\n        array($x + 1, $y + 1),\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeq69zfj.php:24\nStack trace:\n#0 /tmp/tmpqeq69zfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqeq69zfj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    array_push($coordinates, array($x-1, $y-1));\n    array_push($coordinates, array($x-1, $y));\n    array_push($coordinates, array($x-1, $y+1));\n    array_push($coordinates, array($x, $y-1));\n    array_push($coordinates, array($x, $y+1));\n    array_push($coordinates, array($x+1, $y-1));\n    array_push($coordinates, array($x+1, $y));\n    array_push($coordinates, array($x+1, $y+1));\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64hmnyjz.php:23\nStack trace:\n#0 /tmp/tmp64hmnyjz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp64hmnyjz.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array(\n\t\tarray($x, $y+1),\n\t\tarray($x, $y-1),\n\t\tarray($x+1, $y),\n\t\tarray($x-1, $y),\n\t\tarray($x+1, $y+1),\n\t\tarray($x-1, $y-1),\n\t\tarray($x+1, $y-1),\n\t\tarray($x-1, $y+1)\n\t);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpea0sr1ah.php:24\nStack trace:\n#0 /tmp/tmpea0sr1ah.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpea0sr1ah.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array();\n\t$coordinates[] = array($x-1, $y-1);\n\t$coordinates[] = array($x-1, $y);\n\t$coordinates[] = array($x-1, $y+1);\n\t$coordinates[] = array($x, $y-1);\n\t$coordinates[] = array($x, $y+1);\n\t$coordinates[] = array($x+1, $y-1);\n\t$coordinates[] = array($x+1, $y);\n\t$coordinates[] = array($x+1, $y+1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m7p1h12.php:23\nStack trace:\n#0 /tmp/tmp_m7p1h12.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_m7p1h12.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$test_tup = explode(',', $test_tup);\n\t$test_tup = array_map('trim', $test_tup);\n\t$test_tup = array_map('intval', $test_tup);\n\t$test_tup = array_unique($test_tup);\n\t$test_tup = array_values($test_tup);\n\t$test_tup = array_map('strval', $test_tup);\n\t$test_tup = implode(',', $test_tup);\n\treturn $test_tup;\n}\n\n$test_tup = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nParse error: syntax error, unexpected string content \"1,2,3,4,5,6,7,8,9,10,11,12,13,...\" in /tmp/tmpwhpjvnfw.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57wry1ji.php:17\nStack trace:\n#0 /tmp/tmp57wry1ji.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp57wry1ji.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57wry1ji.php:17\nStack trace:\n#0 /tmp/tmp57wry1ji.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp57wry1ji.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6ipn6uw.php:19\nStack trace:\n#0 /tmp/tmp_6ipn6uw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_6ipn6uw.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipoh5isu.php:19\nStack trace:\n#0 /tmp/tmpipoh5isu.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpipoh5isu.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    for ($i = 0; $i < count($test_tup); $i++) {\n        $coordinates[] = $test_tup[$i][0];\n        $coordinates[] = $test_tup[$i][1];\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nWarning: Trying to access array offset on value of type int in /tmp/tmp8xj4t9we.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp8xj4t9we.php on line 7\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp8xj4t9we.php on line 6\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp8xj4t9we.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xj4t9we.php:17\nStack trace:\n#0 /tmp/tmp8xj4t9we.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp8xj4t9we.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n  $test_tup = array_map('intval', explode(',', $test_tup));\n  $x = $test_tup[0];\n  $y = $test_tup[1];\n  $coordinates = array();\n  $coordinates[] = array($x-1, $y-1);\n  $coordinates[] = array($x-1, $y);\n  $coordinates[] = array($x-1, $y+1);\n  $coordinates[] = array($x, $y-1);\n  $coordinates[] = array($x, $y+1);\n  $coordinates[] = array($x+1, $y-1);\n  $coordinates[] = array($x+1, $y);\n  $coordinates[] = array($x+1, $y+1);\n  return $coordinates;\n}\n\n$test_tup = \"1,1\";\nprint_r(get_coordinates($test_tup));\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [4] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n    [6] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpnw8v5q7g.php:4\nStack trace:\n#0 /tmp/tmpnw8v5q7g.php(4): explode(',', Array)\n#1 /tmp/tmpnw8v5q7g.php(22): get_coordinates(Array)\n#2 /tmp/tmpnw8v5q7g.php(26): candidate(Array)\n#3 /tmp/tmpnw8v5q7g.php(31): test()\n#4 {main}\n  thrown in /tmp/tmpnw8v5q7g.php on line",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates[] = array($x - 1, $y - 1);\n\t$coordinates[] = array($x - 1, $y);\n\t$coordinates[] = array($x - 1, $y + 1);\n\t$coordinates[] = array($x, $y - 1);\n\t$coordinates[] = array($x, $y + 1);\n\t$coordinates[] = array($x + 1, $y - 1);\n\t$coordinates[] = array($x + 1, $y);\n\t$coordinates[] = array($x + 1, $y + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgmckyfu3.php:23\nStack trace:\n#0 /tmp/tmpgmckyfu3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgmckyfu3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6x86pjz.php:21\nStack trace:\n#0 /tmp/tmpi6x86pjz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi6x86pjz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvo25bint.php:21\nStack trace:\n#0 /tmp/tmpvo25bint.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvo25bint.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = $x - 1; $i <= $x + 1; $i++) {\n        for ($j = $y - 1; $j <= $y + 1; $j++) {\n            if ($i == $x && $j == $y) {\n                continue;\n            }\n            $coordinates[] = array($i, $j);\n        }\n    }\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [4] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n    [6] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9rpjyo4.php:27\nStack trace:\n#0 /tmp/tmpy9rpjyo4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpy9rpjyo4.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array();\n\tarray_push($coordinates, array($x+1, $y));\n\tarray_push($coordinates, array($x-1, $y));\n\tarray_push($coordinates, array($x, $y+1));\n\tarray_push($coordinates, array($x, $y-1));\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf12fuvw3.php:19\nStack trace:\n#0 /tmp/tmpf12fuvw3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpf12fuvw3.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = $test_tup;\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3t_8z6z.php:18\nStack trace:\n#0 /tmp/tmpj3t_8z6z.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpj3t_8z6z.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y-1);\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x-1, $y+1);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x, $y+1);\n    $coordinates[] = array($x+1, $y-1);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x+1, $y+1);\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [4] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n    [6] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3njzxygs.php:27\nStack trace:\n#0 /tmp/tmp3njzxygs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3njzxygs.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vj2r_6d.php:17\nStack trace:\n#0 /tmp/tmp2vj2r_6d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2vj2r_6d.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = array_map('str_pad', $test_tup, array_fill(0, count($test_tup), 2), array_fill(0, count($test_tup), '0'), STR_PAD_LEFT);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp1587qi_b.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y-1),\n        array($x-1, $y),\n        array($x-1, $y+1),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y),\n        array($x+1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ux6c1ba.php:24\nStack trace:\n#0 /tmp/tmp9ux6c1ba.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9ux6c1ba.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx03rs6y.php:23\nStack trace:\n#0 /tmp/tmptx03rs6y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptx03rs6y.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    return $coordinates;\n}\n\n$test_tup = array(1, 2);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 1\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [4] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [6] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [7] => Array\n        (\n            [0] => 0\n            [1] => 3\n        )\n\n    [8] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pli3itj.php:27\nStack trace:\n#0 /tmp/tmp8pli3itj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8pli3itj.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y-1);\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x-1, $y+1);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x, $y+1);\n    $coordinates[] = array($x+1, $y-1);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x+1, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1xelmx_.php:23\nStack trace:\n#0 /tmp/tmpp1xelmx_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp1xelmx_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2lpslr0.php:23\nStack trace:\n#0 /tmp/tmpf2lpslr0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf2lpslr0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputo2sxjt.php:17\nStack trace:\n#0 /tmp/tmputo2sxjt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmputo2sxjt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57wry1ji.php:17\nStack trace:\n#0 /tmp/tmp57wry1ji.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp57wry1ji.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8al2o99.php:19\nStack trace:\n#0 /tmp/tmp_8al2o99.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_8al2o99.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\n$test_tup = array(1, 2);\nprint_r(get_coordinates($test_tup));\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 3\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdray4hz9.php:20\nStack trace:\n#0 /tmp/tmpdray4hz9.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdray4hz9.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = [];\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates[] = [$x + 1, $y];\n    $coordinates[] = [$x - 1, $y];\n    $coordinates[] = [$x, $y + 1];\n    $coordinates[] = [$x, $y - 1];\n    return $coordinates;\n}\n\n$test_tup = [1, 1];\nprint_r(get_coordinates($test_tup));\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpscz_nuc4.php:22\nStack trace:\n#0 /tmp/tmpscz_nuc4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpscz_nuc4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i != 0 || $j != 0) {\n                $coordinates[] = array($x + $i, $y + $j);\n            }\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaj7eovg0.php:22\nStack trace:\n#0 /tmp/tmpaj7eovg0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpaj7eovg0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6x86pjz.php:21\nStack trace:\n#0 /tmp/tmpi6x86pjz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi6x86pjz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y-1);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x+1, $y-1);\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x-1, $y+1);\n    $coordinates[] = array($x, $y+1);\n    $coordinates[] = array($x+1, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucnu9q4e.php:23\nStack trace:\n#0 /tmp/tmpucnu9q4e.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpucnu9q4e.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = $x - 1; $i <= $x + 1; $i++) {\n        for ($j = $y - 1; $j <= $y + 1; $j++) {\n            if ($i == $x && $j == $y) {\n                continue;\n            }\n            $coordinates[] = array($i, $j);\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlcpcxfh.php:23\nStack trace:\n#0 /tmp/tmptlcpcxfh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptlcpcxfh.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$test_arr = explode(',', $test_tup);\n\t$x = $test_arr[0];\n\t$y = $test_arr[1];\n\t$coordinates = array();\n\t$coordinates[] = ($x + 1) . ',' . $y;\n\t$coordinates[] = ($x - 1) . ',' . $y;\n\t$coordinates[] = $x . ',' . ($y + 1);\n\t$coordinates[] = $x . ',' . ($y - 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpyh30uvjz.php:4\nStack trace:\n#0 /tmp/tmpyh30uvjz.php(4): explode(',', Array)\n#1 /tmp/tmpyh30uvjz.php(16): get_coordinates(Array)\n#2 /tmp/tmpyh30uvjz.php(20): candidate(Array)\n#3 /tmp/tmpyh30uvjz.php(25): test()\n#4 {main}\n  thrown in /tmp/tmpyh30uvjz.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i == 0 && $j == 0) {\n                continue;\n            }\n            $coordinates[] = array($x + $i, $y + $j);\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmp5dh6wqxd.php:4\nStack trace:\n#0 /tmp/tmp5dh6wqxd.php(4): explode(',', Array)\n#1 /tmp/tmp5dh6wqxd.php(21): get_coordinates(Array)\n#2 /tmp/tmp5dh6wqxd.php(25): candidate(Array)\n#3 /tmp/tmp5dh6wqxd.php(30): test()\n#4 {main}\n  thrown in /tmp/tmp5dh6wqxd.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$result = get_coordinates($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsumqdnq.php:20\nStack trace:\n#0 /tmp/tmpcsumqdnq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcsumqdnq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $result = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $result[] = array($x, $y + 1);\n    $result[] = array($x, $y - 1);\n    $result[] = array($x + 1, $y);\n    $result[] = array($x - 1, $y);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjf0sq3m8.php:19\nStack trace:\n#0 /tmp/tmpjf0sq3m8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjf0sq3m8.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array();\n\t$coordinates[] = array($x-1, $y-1);\n\t$coordinates[] = array($x-1, $y);\n\t$coordinates[] = array($x-1, $y+1);\n\t$coordinates[] = array($x, $y-1);\n\t$coordinates[] = array($x, $y+1);\n\t$coordinates[] = array($x+1, $y-1);\n\t$coordinates[] = array($x+1, $y);\n\t$coordinates[] = array($x+1, $y+1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m7p1h12.php:23\nStack trace:\n#0 /tmp/tmp_m7p1h12.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_m7p1h12.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y),\n        array($x+1, $y),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x-1, $y-1),\n        array($x+1, $y+1),\n        array($x-1, $y+1),\n        array($x+1, $y-1)\n    );\n    return $coordinates;\n}\n\n$test_tup = array(1,1);\n$result = get_coordinates($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [4] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [6] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplse3ky4m.php:27\nStack trace:\n#0 /tmp/tmplse3ky4m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplse3ky4m.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_92obvky.php:24\nStack trace:\n#0 /tmp/tmp_92obvky.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_92obvky.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y-1);\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x-1, $y+1);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x, $y+1);\n    $coordinates[] = array($x+1, $y-1);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x+1, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp1xelmx_.php:23\nStack trace:\n#0 /tmp/tmpp1xelmx_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp1xelmx_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x, $y + 1),\n        array($x, $y - 1),\n        array($x + 1, $y),\n        array($x - 1, $y),\n        array($x + 1, $y + 1),\n        array($x + 1, $y - 1),\n        array($x - 1, $y + 1),\n        array($x - 1, $y - 1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw0jg5pvd.php:24\nStack trace:\n#0 /tmp/tmpw0jg5pvd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpw0jg5pvd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $result = array();\n    $result[] = array($x-1, $y);\n    $result[] = array($x+1, $y);\n    $result[] = array($x, $y-1);\n    $result[] = array($x, $y+1);\n    return $result;\n}\n\n$test_tup = array(1,1);\n$result = get_coordinates($test_tup);\nprint_r($result);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnh7ulzl.php:22\nStack trace:\n#0 /tmp/tmpwnh7ulzl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwnh7ulzl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57wry1ji.php:17\nStack trace:\n#0 /tmp/tmp57wry1ji.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp57wry1ji.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y-1);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x+1, $y-1);\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x-1, $y+1);\n    $coordinates[] = array($x, $y+1);\n    $coordinates[] = array($x+1, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpucnu9q4e.php:23\nStack trace:\n#0 /tmp/tmpucnu9q4e.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpucnu9q4e.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputo2sxjt.php:17\nStack trace:\n#0 /tmp/tmputo2sxjt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmputo2sxjt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_unique($test_tup);\n    $test_tup = array_values($test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('strtolower', $test_tup);\n    $test_tup = array_map('ucfirst', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('strtoupper', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('strtolower', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('ucfirst', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('strtoupper', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('strtolower', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('ucfirst', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('strtoupper', $test_tup);\n    $test_tup =\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkv5mo1dn.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2lpslr0.php:23\nStack trace:\n#0 /tmp/tmpf2lpslr0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf2lpslr0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = [];\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i == 0 && $j == 0) {\n                continue;\n            }\n            $coordinates[] = [$x + $i, $y + $j];\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_k1cfwh.php:23\nStack trace:\n#0 /tmp/tmp0_k1cfwh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0_k1cfwh.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vj2r_6d.php:17\nStack trace:\n#0 /tmp/tmp2vj2r_6d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2vj2r_6d.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim', $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $test_tup = array_map('abs', $test_tup);\n    $test_tup = array_map('strval', $test_tup);\n    $test_tup = implode(',', $test_tup);\n    $test_tup = explode(',', $test_tup);\n    $test_tup = array_map('trim\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nParse error: syntax error, unexpected string content \"trim\" in /tmp/tmp2pcxtc12.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y-1),\n        array($x-1, $y),\n        array($x-1, $y+1),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y),\n        array($x+1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ux6c1ba.php:24\nStack trace:\n#0 /tmp/tmp9ux6c1ba.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9ux6c1ba.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x - 1, $y - 1),\n        array($x - 1, $y),\n        array($x - 1, $y + 1),\n        array($x, $y - 1),\n        array($x, $y + 1),\n        array($x + 1, $y - 1),\n        array($x + 1, $y),\n        array($x + 1, $y + 1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcky22bg7.php:24\nStack trace:\n#0 /tmp/tmpcky22bg7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcky22bg7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vj2r_6d.php:17\nStack trace:\n#0 /tmp/tmp2vj2r_6d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2vj2r_6d.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(\",\", $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = -1; $i <= 1; $i++) {\n        for ($j = -1; $j <= 1; $j++) {\n            if ($i == 0 && $j == 0) {\n                continue;\n            }\n            $coordinates[] = array($x + $i, $y + $j);\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpwg9304np.php:4\nStack trace:\n#0 /tmp/tmpwg9304np.php(4): explode(',', Array)\n#1 /tmp/tmpwg9304np.php(21): get_coordinates(Array)\n#2 /tmp/tmpwg9304np.php(25): candidate(Array)\n#3 /tmp/tmpwg9304np.php(30): test()\n#4 {main}\n  thrown in /tmp/tmpwg9304np.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sy1yv89.php:19\nStack trace:\n#0 /tmp/tmp7sy1yv89.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7sy1yv89.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputo2sxjt.php:17\nStack trace:\n#0 /tmp/tmputo2sxjt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmputo2sxjt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x+1, $y),\n        array($x-1, $y),\n        array($x, $y+1),\n        array($x, $y-1),\n        array($x+1, $y+1),\n        array($x-1, $y-1),\n        array($x+1, $y-1),\n        array($x-1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ins1v7f.php:24\nStack trace:\n#0 /tmp/tmp1ins1v7f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1ins1v7f.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57wry1ji.php:17\nStack trace:\n#0 /tmp/tmp57wry1ji.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp57wry1ji.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3m_36m2w.php:23\nStack trace:\n#0 /tmp/tmp3m_36m2w.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3m_36m2w.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = $x - 1; $i <= $x + 1; $i++) {\n        for ($j = $y - 1; $j <= $y + 1; $j++) {\n            if ($i == $x && $j == $y) {\n                continue;\n            }\n            $coordinates[] = array($i, $j);\n        }\n    }\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n    [1] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [2] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [3] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [4] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n    [6] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [7] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xtmlnbv.php:26\nStack trace:\n#0 /tmp/tmp7xtmlnbv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7xtmlnbv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y-1),\n        array($x-1, $y),\n        array($x-1, $y+1),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y),\n        array($x+1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ux6c1ba.php:24\nStack trace:\n#0 /tmp/tmp9ux6c1ba.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9ux6c1ba.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vj2r_6d.php:17\nStack trace:\n#0 /tmp/tmp2vj2r_6d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2vj2r_6d.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $result = array();\n    $result[] = array($x, $y);\n    $result[] = array($x, $y + 1);\n    $result[] = array($x, $y - 1);\n    $result[] = array($x + 1, $y);\n    $result[] = array($x + 1, $y + 1);\n    $result[] = array($x + 1, $y - 1);\n    $result[] = array($x - 1, $y);\n    $result[] = array($x - 1, $y + 1);\n    $result[] = array($x - 1, $y - 1);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyy6jc8j8.php:24\nStack trace:\n#0 /tmp/tmpyy6jc8j8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyy6jc8j8.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y-1),\n        array($x-1, $y),\n        array($x-1, $y+1),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y),\n        array($x+1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ux6c1ba.php:24\nStack trace:\n#0 /tmp/tmp9ux6c1ba.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9ux6c1ba.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6x86pjz.php:21\nStack trace:\n#0 /tmp/tmpi6x86pjz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi6x86pjz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x-1, $y-1),\n        array($x-1, $y),\n        array($x-1, $y+1),\n        array($x, $y-1),\n        array($x, $y+1),\n        array($x+1, $y-1),\n        array($x+1, $y),\n        array($x+1, $y+1)\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ux6c1ba.php:24\nStack trace:\n#0 /tmp/tmp9ux6c1ba.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9ux6c1ba.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_92obvky.php:24\nStack trace:\n#0 /tmp/tmp_92obvky.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_92obvky.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sy1yv89.php:19\nStack trace:\n#0 /tmp/tmp7sy1yv89.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7sy1yv89.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_arr = explode(',', $test_tup);\n    $x = $test_arr[0];\n    $y = $test_arr[1];\n    $x_arr = array($x - 1, $x, $x + 1);\n    $y_arr = array($y - 1, $y, $y + 1);\n    $result = array();\n    foreach ($x_arr as $x_val) {\n        foreach ($y_arr as $y_val) {\n            if ($x_val != $x || $y_val != $y) {\n                $result[] = $x_val . ',' . $y_val;\n            }\n        }\n    }\n    return $result;\n}\n\n$test_tup = '1,2';\nprint_r(get_coordinates($test_tup));\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => 0,1\n    [1] => 0,2\n    [2] => 0,3\n    [3] => 1,1\n    [4] => 1,3\n    [5] => 2,1\n    [6] => 2,2\n    [7] => 2,3\n)\n\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpxqd326w5.php:4\nStack trace:\n#0 /tmp/tmpxqd326w5.php(4): explode(',', Array)\n#1 /tmp/tmpxqd326w5.php(23): get_coordinates(Array)\n#2 /tmp/tmpxqd326w5.php(27): candidate(Array)\n#3 /tmp/tmpxqd326w5.php(32): test()\n#4 {main}\n  thrown in /tmp/tmpxqd326w5.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $test_tup = explode(\",\", $test_tup);\n    $test_tup = array_map('intval', $test_tup);\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpl8zahd_d.php:4\nStack trace:\n#0 /tmp/tmpl8zahd_d.php(4): explode(',', Array)\n#1 /tmp/tmpl8zahd_d.php(22): get_coordinates(Array)\n#2 /tmp/tmpl8zahd_d.php(26): candidate(Array)\n#3 /tmp/tmpl8zahd_d.php(31): test()\n#4 {main}\n  thrown in /tmp/tmpl8zahd_d.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2ye70yd.php:24\nStack trace:\n#0 /tmp/tmpi2ye70yd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi2ye70yd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array(\n        array($x - 1, $y - 1),\n        array($x - 1, $y),\n        array($x - 1, $y + 1),\n        array($x, $y - 1),\n        array($x, $y + 1),\n        array($x + 1, $y - 1),\n        array($x + 1, $y),\n        array($x + 1, $y + 1),\n    );\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqeq69zfj.php:24\nStack trace:\n#0 /tmp/tmpqeq69zfj.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqeq69zfj.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    for ($i = $x - 1; $i <= $x + 1; $i++) {\n        for ($j = $y - 1; $j <= $y + 1; $j++) {\n            if ($i != $x || $j != $y) {\n                $coordinates[] = array($i, $j);\n            }\n        }\n    }\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4you_pf.php:22\nStack trace:\n#0 /tmp/tmpx4you_pf.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx4you_pf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    array_push($coordinates, array($x, $y));\n    array_push($coordinates, array($x, $y + 1));\n    array_push($coordinates, array($x, $y - 1));\n    array_push($coordinates, array($x + 1, $y));\n    array_push($coordinates, array($x - 1, $y));\n    array_push($coordinates, array($x + 1, $y + 1));\n    array_push($coordinates, array($x + 1, $y - 1));\n    array_push($coordinates, array($x - 1, $y + 1));\n    array_push($coordinates, array($x - 1, $y - 1));\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7u_l966.php:24\nStack trace:\n#0 /tmp/tmpt7u_l966.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt7u_l966.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $result = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $result[] = array($x - 1, $y);\n    $result[] = array($x + 1, $y);\n    $result[] = array($x, $y - 1);\n    $result[] = array($x, $y + 1);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpupti2it3.php:19\nStack trace:\n#0 /tmp/tmpupti2it3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpupti2it3.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2ye70yd.php:24\nStack trace:\n#0 /tmp/tmpi2ye70yd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi2ye70yd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x-1, $y);\n    $coordinates[] = array($x+1, $y);\n    $coordinates[] = array($x, $y-1);\n    $coordinates[] = array($x, $y+1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8al2o99.php:19\nStack trace:\n#0 /tmp/tmp_8al2o99.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_8al2o99.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps73_aoij.php:21\nStack trace:\n#0 /tmp/tmps73_aoij.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps73_aoij.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1] + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43vuyjs3.php:21\nStack trace:\n#0 /tmp/tmp43vuyjs3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp43vuyjs3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4t6d0sa.php:17\nStack trace:\n#0 /tmp/tmpl4t6d0sa.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl4t6d0sa.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoplpizg6.php:17\nStack trace:\n#0 /tmp/tmpoplpizg6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpoplpizg6.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$coordinates = array();\n\t$coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n\t$coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vj2r_6d.php:17\nStack trace:\n#0 /tmp/tmp2vj2r_6d.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2vj2r_6d.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates = array();\n    $coordinates[] = array($x - 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2lpslr0.php:23\nStack trace:\n#0 /tmp/tmpf2lpslr0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpf2lpslr0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n\t$test_tup = array_map('intval', explode(',', $test_tup));\n\t$x = $test_tup[0];\n\t$y = $test_tup[1];\n\t$coordinates = array();\n\t$coordinates[] = array($x-1, $y-1);\n\t$coordinates[] = array($x-1, $y);\n\t$coordinates[] = array($x-1, $y+1);\n\t$coordinates[] = array($x, $y-1);\n\t$coordinates[] = array($x, $y+1);\n\t$coordinates[] = array($x+1, $y-1);\n\t$coordinates[] = array($x+1, $y);\n\t$coordinates[] = array($x+1, $y+1);\n\treturn $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "\nFatal error: Uncaught TypeError: explode(): Argument #2 ($string) must be of type string, array given in /tmp/tmpeanbt854.php:4\nStack trace:\n#0 /tmp/tmpeanbt854.php(4): explode(',', Array)\n#1 /tmp/tmpeanbt854.php(20): get_coordinates(Array)\n#2 /tmp/tmpeanbt854.php(24): candidate(Array)\n#3 /tmp/tmpeanbt854.php(29): test()\n#4 {main}\n  thrown in /tmp/tmpeanbt854.php on line 4\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $x = $test_tup[0];\n    $y = $test_tup[1];\n    $coordinates[] = array($x, $y);\n    $coordinates[] = array($x, $y + 1);\n    $coordinates[] = array($x, $y - 1);\n    $coordinates[] = array($x + 1, $y);\n    $coordinates[] = array($x + 1, $y + 1);\n    $coordinates[] = array($x + 1, $y - 1);\n    $coordinates[] = array($x - 1, $y);\n    $coordinates[] = array($x - 1, $y + 1);\n    $coordinates[] = array($x - 1, $y - 1);\n    return $coordinates;\n}\n\n$test_tup = array(1, 1);\n$coordinates = get_coordinates($test_tup);\nprint_r($coordinates);\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123971,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 1\n        )\n\n    [1] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1] => 0\n        )\n\n    [3] => Array\n        (\n            [0] => 2\n            [1] => 1\n        )\n\n    [4] => Array\n        (\n            [0] => 2\n            [1] => 2\n        )\n\n    [5] => Array\n        (\n            [0] => 2\n            [1] => 0\n        )\n\n    [6] => Array\n        (\n            [0] => 0\n            [1] => 1\n        )\n\n    [7] => Array\n        (\n            [0] => 0\n            [1] => 2\n        )\n\n    [8] => Array\n        (\n            [0] => 0\n            [1] => 0\n        )\n\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnea37g3.php:27\nStack trace:\n#0 /tmp/tmpcnea37g3.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcnea37g3.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to extract all the adjacent coordinates of the given coordinate array.\nfunction get_coordinates($test_tup) {\n    $coordinates = array();\n    $coordinates[] = array($test_tup[0] + 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0] - 1, $test_tup[1]);\n    $coordinates[] = array($test_tup[0], $test_tup[1] + 1);\n    $coordinates[] = array($test_tup[0], $test_tup[1] - 1);\n    return $coordinates;\n}\n\nfunction candidate(...$args) {\n    return get_coordinates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 4)) !== array(array(2, 3), array(2, 4), array(2, 5), array(3, 3), array(3, 4), array(3, 5), array(4, 3), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5)) !== array(array(3, 4), array(3, 5), array(3, 6), array(4, 4), array(4, 5), array(4, 6), array(5, 4), array(5, 5), array(5, 6))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6)) !== array(array(4, 5), array(4, 6), array(4, 7), array(5, 5), array(5, 6), array(5, 7), array(6, 5), array(6, 6), array(6, 7))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510708,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkr38as.php:17\nStack trace:\n#0 /tmp/tmp1vkr38as.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp1vkr38as.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/phpthon-sort-numeric-strings-in-a-array/\nfunction sort_numeric_strings($nums_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sort_numeric_strings(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\")) !== array(-500, -12, 0, 4, 7, 12, 45, 100, 200)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\")) !== array(1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\")) !== array(1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $nums = array();\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    $nums_str = array();\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\n$nums_str = sort_numeric_strings($nums_str);\nprint_r($nums_str);",
    "    $nums = array();\n    $nums_str = explode(',', $nums_str);\n    foreach ($nums_str as $num) {\n        $nums[] = (int)$num;\n    }\n    sort($nums);\n    return $nums;\n}\n\n$nums_str = '1,2,3,4,5,6,7,8,9,10';\n$nums = sort_numeric_strings($nums_str);\necho implode(',', $nums);\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'];\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums_int = array_map('intval', $nums_str);\n    asort($nums_int);\n    return array_keys($nums_int);\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\n$nums_str = sort_numeric_strings($nums_str);\nprint_r($nums_str);",
    "    $nums = array();\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    return $nums;\n}\n\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums = sort_numeric_strings($nums_str);\nprint_r($nums);\n",
    "    $nums = array_map('intval', $nums_str);\n    asort($nums);\n    return array_keys($nums);\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\n$sorted_nums = sort_numeric_strings($nums_str);\nprint_r($sorted_nums);\n",
    "    $nums = [];\n    foreach ($nums_str as $num) {\n        $nums[] = intval($num);\n    }\n    sort($nums);\n    $nums_str = [];\n    foreach ($nums as $num) {\n        $nums_str[] = strval($num);\n    }\n    return $nums_str;\n}\n\n$nums_str = ['10', '5', '40', '25', '1000', '1'];\n$sorted_nums_str = sort_numeric_strings($nums_str);\nprint_r($sorted_nums_str);\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array('1', '3', '5', '2', '4');\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"1\", \"3\", \"2\", \"4\", \"5\", \"6\");\nprint_r(sort_numeric_strings($nums_str));",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"1\", \"3\", \"2\", \"4\");\n$sorted_nums_str = sort_numeric_strings($nums_str);\nprint_r($sorted_nums_str);\n",
    "    $nums_str = explode(' ', $nums_str);\n    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return implode(' ', $nums);\n}\n\n$nums_str = '1 2 3 4 5 6 7 8 9 10';\necho sort_numeric_strings($nums_str);",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array(\"10\", \"5\", \"6\", \"3\", \"4\");\n$sorted_nums_str = sort_numeric_strings($nums_str);\nprint_r($sorted_nums_str);\n",
    "    $nums = array();\n    foreach ($nums_str as $num) {\n        $nums[] = (int)$num;\n    }\n    sort($nums);\n    $nums_str = array();\n    foreach ($nums as $num) {\n        $nums_str[] = (string)$num;\n    }\n    return $nums_str;\n}\n\n$nums_str = array(\"1\", \"2\", \"10\", \"5\", \"3\");\nprint_r(sort_numeric_strings($nums_str));\n",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('10', '9', '8', '7', '6', '5', '4', '3', '2', '1');\n$nums_str = array('1', '10', '2', '9', '3', '8', '4', '7', '5', '6');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2', '3', '4', '5', '6', '7', '8', '9', '10');\n$nums_str = array('1', '2",
    "    $nums = array_map('intval', $nums_str);\n    sort($nums);\n    return array_map('strval', $nums);\n}\n",
    "    $nums = array();\n    foreach ($nums_str as $num) {\n        $nums[] = (int)$num;\n    }\n    sort($nums);\n    $nums_str = array();\n    foreach ($nums as $num) {\n        $nums_str[] = (string)$num;\n    }\n    return $nums_str;\n}\n\n$nums_str = array(\"10\", \"5\", \"40\", \"25\", \"1000\", \"1\");\nprint_r(sort_numeric_strings($nums_str));\n"
  ]
}
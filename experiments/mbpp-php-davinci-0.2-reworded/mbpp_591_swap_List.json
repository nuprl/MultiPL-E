{
  "name": "mbpp_591_swap_List",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to interchange the first and last elements in an array.\nfunction swap_List($newList) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_591_swap_List.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return swap_List(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(12, 35, 9, 56, 24)) !== array(24, 35, 9, 56, 12)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== array(3, 2, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 6)) !== array(6, 5, 4)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\necho implode(', ', $result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5, 6];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\necho implode(\" \", $newList);",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9,10);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = end($newList);\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List :\\n\";\necho implode(', ',$newList );\necho \"\\nModified List :\\n\";\necho implode(', ',swap_List($newList)).\"\\n\";",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\necho \"Original list :\\n\";\necho implode(\", \",$newList).\"\\n\";\necho \"New list :\\n\";\necho implode(\", \",$result).\"\\n\";",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\necho implode(', ', $result);",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\nModified List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));\n",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(\", \", $newList);\necho \"\\nModified List: \";\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\n\";\necho \"New List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = [1, 2, 3, 4, 5, 6];\necho implode(\", \", swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = [1, 2, 3, 4, 5];\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $newList[0];\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $temp = $newList[0];\n    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\necho \"Original List: \";\necho implode(', ', $newList);\necho \"\\nModified List: \";\necho implode(', ', swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));\n",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $temp = $newList[0];\n    $newList[0] = $newList[count($newList) - 1];\n    $newList[count($newList) - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = end($newList);\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\n$newList = swap_List($newList);\nprint_r($newList);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $size = count($newList);\n    $temp = $newList[0];\n    $newList[0] = $newList[$size - 1];\n    $newList[$size - 1] = $temp;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\n$result = swap_List($newList);\nprint_r($result);",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6,7,8,9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first_element = $newList[0];\n    $last_element = $newList[count($newList) - 1];\n    $newList[0] = $last_element;\n    $newList[count($newList) - 1] = $first_element;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList)-1];\n    $newList[0] = $last;\n    $newList[count($newList)-1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5, 6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1,2,3,4,5,6);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));",
    "    $first = $newList[0];\n    $last = $newList[count($newList) - 1];\n    $newList[0] = $last;\n    $newList[count($newList) - 1] = $first;\n    return $newList;\n}\n$newList = array(1, 2, 3, 4, 5);\nprint_r(swap_List($newList));"
  ]
}
{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove characters from the first string which are present in the second string.\nfunction remove_dirty_chars($string, $second_string) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return remove_dirty_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"probasscurve\", \"pros\") !== \"bacuve\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"digitalindia\", \"talent\") !== \"digiidi\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"exoticmiles\", \"toxic\") !== \"emles\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $string = str_split($string);\n    $second_string = str_split($second_string);\n    $result = array_diff($string, $second_string);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\t$string_array = array_diff($string_array, $second_string_array);\n\t$string = implode(\"\", $string_array);\n\treturn $string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = '';\n    foreach ($string_array as $key => $value) {\n        if (!in_array($value, $second_string_array)) {\n            $result .= $value;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");",
    "\t$second_string_array = str_split($second_string);\n\t$string_array = str_split($string);\n\t$result = array();\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $second_string_array)) {\n\t\t\t$result[] = $char;\n\t\t}\n\t}\n\treturn implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode(\"\", $result);\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");",
    "    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = array();\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = '';\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\n$string = 'Battle of the Vowels: Hawaii vs. Grozny';\n$second_string = 'aeiou';\necho remove_dirty_chars($string, $second_string);",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n",
    "    $arr = str_split($second_string);\n    $new_string = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $arr)) {\n            $new_string .= $string[$i];\n        }\n    }\n    return $new_string;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");",
    "    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    $result = [];\n    foreach ($string_array as $key => $value) {\n        if (!in_array($value, $second_string_array)) {\n            $result[] = $value;\n        }\n    }\n    return implode('', $result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result_array = [];\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result_array[] = $char;\n        }\n    }\n    return implode('', $result_array);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "\t$dirty_chars = str_split($second_string);\n\t$clean_string = '';\n\t$string_array = str_split($string);\n\tforeach ($string_array as $char) {\n\t\tif (!in_array($char, $dirty_chars)) {\n\t\t\t$clean_string .= $char;\n\t\t}\n\t}\n\treturn $clean_string;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n",
    "    $string_array = str_split($string);\n    $second_string_array = str_split($second_string);\n    $result = array_diff($string_array, $second_string_array);\n    return implode($result);\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');",
    "    $result = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');\n",
    "    $arr = str_split($second_string);\n    $result = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if (!in_array($string[$i], $arr)) {\n            $result .= $string[$i];\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars(\"Battle of the Vowels: Hawaii vs. Grozny\", \"aeiou\");",
    "    $result = '';\n    $second_string_array = str_split($second_string);\n    $string_array = str_split($string);\n    foreach ($string_array as $char) {\n        if (!in_array($char, $second_string_array)) {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\necho remove_dirty_chars('Battle of the Vowels: Hawaii vs. Grozny', 'aeiou');"
  ]
}
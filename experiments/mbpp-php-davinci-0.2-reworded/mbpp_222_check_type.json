{
  "name": "mbpp_222_check_type",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, \"5.0\");\n$test_tuple4 = array(1, 2, 3, 4, \"5.0\", 6);\n\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple1)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple2)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple3)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple4)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}",
    "    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}",
    "    $first_element = $test_tuple[0];\n    $first_element_type = gettype($first_element);\n    $result = true;\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_element_type) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements don't have same data type\";\n}",
    "    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, \"3\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, null);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new Exception());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new DateTime());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplFixedArray(1));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplDoublyLinkedList());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplStack());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplQueue());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplHe",
    "    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach($test_tuple as $value) {\n        if(gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif(check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}",
    "    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\necho check_type($test_tuple);\necho \"<br>\";\necho check_type($test_tuple2);",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}",
    "    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}",
    "    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"Elements are of different type\";\n",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}",
    "    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}"
  ]
}
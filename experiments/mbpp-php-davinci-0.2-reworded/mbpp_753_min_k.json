{
  "name": "mbpp_753_min_k",
  "language": "php",
  "prompt": "<?php\n// Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/phpthon-find-minimum-k-records-from-array-array/ - in this case a verbatim cophp of test cases\nfunction min_k($test_list, $K) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return min_k(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"Manjeet\", 10), array(\"Akshat\", 4), array(\"Akash\", 2), array(\"Nikhil\", 8)), 2) !== array(array(\"Akash\", 2), array(\"Akshat\", 4))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"Sanjeev\", 11), array(\"Angat\", 5), array(\"Akash\", 3), array(\"Nepin\", 9)), 3) !== array(array(\"Akash\", 3), array(\"Angat\", 5), array(\"Nepin\", 9))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"tanmay\", 14), array(\"Amer\", 11), array(\"Ayesha\", 9), array(\"SKD\", 16)), 1) !== array(array(\"Ayesha\", 9))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $min_k = [];\n    $min_k_count = 0;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        if ($min_k_count < $K) {\n            $min_k[] = $test_list[$i];\n            $min_k_count++;\n        } else {\n            $max_k = max($min_k);\n            if ($test_list[$i] < $max_k) {\n                $min_k[array_search($max_k, $min_k)] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 12;\n$result = min_k($test_list, $K);\nprint_r",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_k = [];\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 6;\n$result = min_k($test_list, $K);\necho \"\\nMinimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\necho \"\\nMinimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\necho \"\\nMinimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_list = array();\n    foreach ($test_list as $item) {\n        if (count($min_list) < $K) {\n            $min_list[] = $item;\n        } else {\n            $max_item = max($min_list);\n            if ($item < $max_item) {\n                $min_list[array_search($max_item, $min_list)] = $item;\n            }\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 9;\n$result = min_k($test_list, $K",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k[$j] > $max) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    $n = count($test_list);\n    for ($i = 1; $i < $n; $i++) {\n        if ($test_list[$i] < $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k_index[0] = $i;\n        }\n    }\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($min_k[$j] < $min_k[$i]) {\n                $temp = $min_k[$j];\n                $min_k[$j] = $min_k[$i];\n                $min_k[$i] = $temp;\n                $temp = $min_k_index[$j];\n                $min_k_index[$j] = $min_k_index[$i];\n                $min_k_index[$i] = $temp;\n            }\n        }\n    }\n    for ($i = $K; $i < $n; $i++) {\n        if ($test_list[$i] > $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            $min_k_index[$K - 1] = $i;\n            for ($j = $K - 1; $j > 0; $j--) {\n                if ($min_k[$j] < $min_k[$j - 1]) {\n                    $temp = $min_k[$j];\n                    $min_k[$j] = $min_k[$j - 1];\n                    $min_k[$j - 1] = $temp",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 5;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 1;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 10;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 15;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 10;\n$result = min_k($",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 12;\n$result = min",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_combine(range(1, count($min_k)), array_values($min_k));\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_key = max(array_keys($min_k));\n        if ($test_list[$i] < $min_k[$max_key]) {\n            unset($min_k[$max_key]);\n            $min_k[$i] = $test_list[$i];\n        }\n    }\n    ksort($min_k);\n    return array_values($min_k);\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 10;\n$result = min_k",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = max($min_k_index);\n        if ($min_k[$max_index] > $test_list[$i]) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 15;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 11, 70, 50, 40, 100, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(12, 9, 4, 99, 120, 1, 3, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(12, 9, 4, 99, 120, 1, 3, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(12, 9, 4, 99, 120, 1, 3, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(12, 9, 4, 99, 120, 1, 3, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(12, 9, 4, 99, 120, 1, 3, 10);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"K'th",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array();\n    foreach ($test_list as $key => $value) {\n        if ($key < $K) {\n            $min_k[$key] = $value;\n        } else {\n            $max_index = array_search(max($min_k), $min_k);\n            if ($min_k[$max_index] > $value) {\n                $min_k[$max_index] = $value;\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9,",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        $test_list[$i] = intval($test_list[$i]);\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 12;\n$result = min",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 10;\n$result = min_k($",
    "    $min_k = array();\n    $n = count($test_list);\n    for ($i = 0; $i < $n; $i++) {\n        if ($i < $K) {\n            $min_k[$i] = $test_list[$i];\n        } else {\n            $max = max($min_k);\n            if ($test_list[$i] < $max) {\n                $min_k[array_search($max, $min_k)] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"K'th smallest element",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_combine(array_keys($min_k), array_fill(0, $K, PHP_INT_MAX));\n    foreach ($test_list as $key => $value) {\n        if ($value < max($min_k)) {\n            $min_k[array_search(max($min_k), $min_k)] = $value;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_k($test_list, $K",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_index_count = 0;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        if ($min_k_index_count < $K) {\n            $min_k[$i] = $test_list[$i];\n            $min_k_index[$min_k_index_count] = $i;\n            $min_k_index_count++;\n        } else {\n            $max_index = max($min_k_index);\n            if ($test_list[$i] < $test_list[$max_index]) {\n                $min_k[$i] = $test_list[$i];\n                $min_k_index[$max_index] = $i;\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 20, 11, 70, 50",
    "    $min_list = array();\n    $min_list = array_slice($test_list, 0, $K);\n    $min_list = array_unique($min_list);\n    sort($min_list);\n    return $min_list;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($v) { return $v[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\n$K = 5;\n\n$result = min_k($test_list, $K);\n\nprint_r($result);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($n) {\n        return intval($n);\n    }, $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        $test_list[$i] = intval($test_list[$i]);\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 2;\n$result = min_k($test_list, $",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_list[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_list[$j] > $max) {\n                $max = $min_list[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_list[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(5, 2, 1, 4, 3, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nfor ($i = 0; $i < $K; $i++) {\n    echo $result[$i] . \" \";\n}",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($min_k[$j] > $min_k[$i]) {\n                $temp = $min_k[$j];\n                $min_k[$j] = $min_k[$i];\n                $min_k[$i] = $temp;\n                $temp = $min_k_index[$j];\n                $min_k_index[$j] = $min_k_index[$i];\n                $min_k_index[$i] = $temp;\n            }\n        }\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            $min_k_index[$K - 1] = $i;\n            for ($j = 0; $j < $K; $j++) {\n                if ($min_k[$j] > $min_k[$K - 1]) {\n                    $temp = $min_k[$j];\n                    $min_k[$j] = $min_k[$K - 1];\n                    $min_k[$K - 1] = $temp;\n                    $temp = $min_k_index[$j];\n                    $min_k_index[$j] = $min_k_index[$K - 1];\n                    $min_k_index[$K - 1] = $temp;\n                }\n            }\n        }\n    }\n    return $min_k_index;\n}\n\n$",
    "    $len = count($test_list);\n    if ($len < $K) {\n        return -1;\n    }\n    $min_k_list = array_slice($test_list, 0, $K);\n    sort($min_k_list);\n    for ($i = $K; $i < $len; $i++) {\n        if ($test_list[$i] < $min_k_list[$K - 1]) {\n            $min_k_list[$K - 1] = $test_list[$i];\n            sort($min_k_list);\n        }\n    }\n    return $min_k_list;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 15;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = bubble_sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            $min_k = bubble_sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_list = [];\n    $min_list = array_slice($test_list, 0, $K);\n    $min_list = array_map('intval', $min_list);\n    sort($min_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_list[$K - 1] > $test_list[$i]) {\n            $min_list[$K - 1] = $test_list[$i];\n            sort($min_list);\n        }\n    }\n    return $min_list;\n}\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k_index[0] = $i;\n        }\n    }\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($min_k[$j] > $min_k[$i]) {\n                $temp = $min_k[$j];\n                $min_k[$j] = $min_k[$i];\n                $min_k[$i] = $temp;\n                $temp = $min_k_index[$j];\n                $min_k_index[$j] = $min_k_index[$i];\n                $min_k_index[$i] = $temp;\n            }\n        }\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] > $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k_index[0] = $i;\n            for ($j = 1; $j < $K; $j++) {\n                if ($min_k[$j] > $min_k[$j - 1]) {\n                    $temp = $min_k[$j];\n                    $min_k[$j] = $min_k[$j - 1];\n                    $min_k[$j - 1] = $temp;\n                    $temp = $min_k_index[$j",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 12;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 13;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8",
    "    $n = count($test_list);\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < $n; $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(2, 4, 3, 5, 1, 7, 6);\n$K = 4;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(2, 4, 3, 5, 1, 7, 6);\n$K = 1;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(2, 4, 3, 5, 1, 7, 6);\n$K = 7;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(2, 4, 3, 5, 1, 7, 6);\n$K = 8;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(2, 4, 3, 5, 1, 7, 6);\n$K = 0;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(2, 4, 3, 5,",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min_k);\n    $min_k = array_reverse($min",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value)\n    echo $value . \" \";\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value)\n    echo $value . \" \";\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value)\n    echo $value . \" \";\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 9;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value)\n    echo $value . \" \";\n\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result =",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6, 10);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 2, 3, 4, 1, 9, 8, 6",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K-1]) {\n            $min_k[$K-1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 20;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -1;\n$result = min",
    "    $min_k = array();\n    $min_k_index = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = max($min_k_index);\n        if ($test_list[$i] < $min_k[$max_index]) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 15;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -1;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -2;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -3;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -4;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k[$j] > $min_k[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($min_k[$max_index] > $test_list[$i]) {\n            $min_k[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$",
    "    $min_list = array_slice($test_list, 0, $K);\n    $min_list = array_map('intval', $min_list);\n    $min_list = array_unique($min_list);\n    $min_list = array_values($min_list);\n    sort($min_list);\n    $min_list = array_map('strval', $min_list);\n    return $min_list;\n}\n\n$test_list = array(\n    array(\n        'test_list' => array(\n            '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100', '101', '102', '103', '104', '105', '106', '107', '108', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '121', '122', '123', '124', '125', '126', '127',",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 4;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 3;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 2;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 1;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 5;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 6;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 7;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2, 7, 3, 8);\n$K = 8;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(4, 5, 1, 6, 2",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 9;\n$result = min_k($test_list, $K);\nprint",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count_max = $K;\n    $min_k_count_max = $K;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        if ($min_k_count < $min_k_count_max) {\n            $min_k[$min_k_count] = $test_list[$i];\n            $min_k_index[$min_k_index_count] = $i;\n            $min_k_count++;\n            $min_k_index_count++;\n        } else {\n            $min_k_index_count = 0;\n            $min_k_index_count_max = count($min_k_index);\n            for ($j = 0; $j < $min_k_index_count_max; $j++) {\n                if ($test_list[$min_k_index[$j]] > $test_list[$i]) {\n                    $min_k[$j] = $test_list[$i];\n                    $min_k_index[$j] = $i;\n                    break;\n                }\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 5;\n$result = min_k($test_list,",
    "    $min_k = array();\n    $min_k = $test_list;\n    sort($min_k);\n    return array_slice($min_k, 0, $K);\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value)\n    echo \"$value \";\n",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);",
    "    $min_list = array_slice($test_list, 0, $K);\n    $min_list = array_map('intval', $min_list);\n    $min_list = array_unique($min_list);\n    $min_list = array_values($min_list);\n    $min_list = array_map('strval', $min_list);\n    return $min_list;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2,",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($e) { return $e[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = [\n    [1, 2],\n    [3, 4],\n    [1, 2],\n    [5, 6],\n    [7, 8],\n    [1, 2],\n    [3, 4],\n    [3, 4],\n    [7, 8],\n    [9, 10]\n];\n\n$K = 5;\n\n$result = min_k($test_list, $K);\n\nprint_r($result);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_of_min_k = max($min_k);\n        if ($test_list[$i] < $max_of_min_k) {\n            $min_k[array_search($max_of_min_k, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(2, 4, 3, 1, 5, 7, 6, 9, 8);\n$K = 4;\n\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $test_list = array_unique($test_list);\n    sort($test_list);\n    return array_slice($test_list, 0, $K);\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1,",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(12, 9, 4, 99, 120, 1, 3, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_",
    "    $min_list = [];\n    $min_list_size = 0;\n    foreach ($test_list as $test_list_item) {\n        if ($min_list_size < $K) {\n            $min_list[] = $test_list_item;\n            $min_list_size++;\n        } else {\n            $max_index = 0;\n            $max = $min_list[0];\n            for ($i = 1; $i < $K; $i++) {\n                if ($min_list[$i] > $max) {\n                    $max = $min_list[$i];\n                    $max_index = $i;\n                }\n            }\n            if ($test_list_item < $max) {\n                $min_list[$max_index] = $test_list_item;\n            }\n        }\n    }\n    return $min_list;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [10, 9, 8, 7,",
    "    $min_k_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k_list[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k_list[$j] > $max) {\n                $max = $min_k_list[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k_list[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_k_list;\n}\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $result[$i] . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $result[$i] . \" \";\n}\necho \"\\n\";\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $result[$i] . \" \";\n}\n",
    "    $min_k_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k_list[0];\n        $index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k_list[$j] > $max) {\n                $max = $min_k_list[$j];\n                $index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k_list[$index] = $test_list[$i];\n        }\n    }\n    return $min_k_list;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nfor ($i = 0; $i < $K; $i++) {\n    echo $result[$i] . \" \";\n}\n",
    "    $min_k = [];\n    $min_k_index = [];\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k[$j] > $max) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k_index;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $test_list[$result[$i]], \" \";\n}\n\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are : \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $test_list[$result[$i]], \" \";\n}\n\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 8;\n$result = min_k($test_list, $K);",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 12;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(4, 2, 1, 3, 5, 7, 8, 6, 9, 10);\n$K = 13;\n$result = min_k($test",
    "    $min_k = [];\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($x) { return $x[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(1, 3),\n    array(1, 4),\n    array(2, 2),\n    array(2, 3),\n    array(2, 4),\n    array(3, 2),\n    array(3, 3),\n    array(3, 4),\n    array(4, 2),\n    array(4, 3),\n    array(4, 4),\n);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(\n    array(1, 2),\n    array(1, 3),\n    array(1, 4),\n    array(2, 2),\n    array(2, 3),\n    array(2, 4),\n    array(3, 2),\n    array(3, 3),\n    array(3, 4),\n    array(4, 2),\n    array(4, 3),\n    array(4, 4),\n);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(\n    array(1, 2),\n    array(1, 3),\n    array(1, 4),\n    array(2, 2),\n    array(2, 3),\n    array(2, 4),\n    array(3, 2),\n    array(3, 3),\n    array(3, 4),\n    array(4, 2),\n    array(4, 3),\n    array(4, 4),\n);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(\n   ",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = 3;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = 4;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = 5;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = 6;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = 7;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n$K = 8;\nprint_r(min_k($test_list, $K));\n\n$test_list = array(3, 4, 1, 32, 5, 6, 7, 8, 9, 10",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_list[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_list[$j] > $max) {\n                $max = $min_list[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_list[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);",
    "    $min_k_list = array();\n    $min_k_list = array_slice($test_list, 0, $K);\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_element = max($min_k_list);\n        if ($test_list[$i] < $max_element) {\n            $min_k_list[array_search($max_element, $min_k_list)] = $test_list[$i];\n        }\n    }\n    return $min_k_list;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 12;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -2;\n$result = min_k($test_list, $K);\nvar_dump($result);\n\n",
    "    $min_list = array();\n    $min_list = array_slice($test_list, 0, $K);\n    $min_list = min_heap($min_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_list[0]) {\n            $min_list[0] = $test_list[$i];\n            $min_list = min_heap($min_list);\n        }\n    }\n    return $min_list;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($n) { return $n[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    return count($min_k);\n}\n\n$test_list = array(\n    array(1, 2),\n    array(1, 3),\n    array(1, 4),\n    array(2, 3),\n    array(2, 4),\n    array(3, 4),\n    array(3, 5),\n    array(4, 5),\n    array(4, 6),\n    array(5, 6),\n    array(5, 7),\n    array(6, 7),\n    array(6, 8),\n    array(7, 8),\n    array(7, 9),\n    array(8, 9),\n    array(8, 10),\n    array(9, 10),\n    array(9, 11),\n    array(10, 11),\n    array(10, 12),\n    array(11, 12),\n    array(11, 13),\n    array(12, 13),\n    array(12, 14),\n    array(13, 14),\n    array(13, 15),\n    array(14, 15),\n    array(14, 16),\n    array(15, 16),\n    array(15, 17),\n    array(16, 17),\n    array(16, 18),\n    array(17, 18),\n    array(17, 19),\n    array(18, 19),\n    array(18, 20),\n    array(19, 20),\n    array(19, 21),\n    array(20, 21),\n    array(20, 22),\n    array(21, 22),\n    array(21, 23),\n    array(22, 23),\n    array(22, 24),\n    array(23, 24),\n    array(23, 25),\n    array(24, 25),\n    array(24, 26),\n    array(25, 26),\n    array(25, 27),\n    array(26, 27),\n    array(26, 28),\n    array(27",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = min_heap($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[0] < $test_list[$i]) {\n            $min_k[0] = $test_list[$i];\n            $min_k = min_heap($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[0] < $test_list[$i]) {\n            $min_k[0] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($max < $min_k[$j]) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k_index;\n}",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n\nprint_r(min_k($test_list, $K));\n",
    "    $min_k = array();\n    $len = count($test_list);\n    for ($i = 0; $i < $len; $i++) {\n        if ($i < $K) {\n            $min_k[$i] = $test_list[$i];\n        } else {\n            $max = max($min_k);\n            if ($test_list[$i] < $max) {\n                $min_k[array_search($max, $min_k)] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -5;\n$result = min_k($test_list",
    "    $n = count($test_list);\n    $min_k = array();\n    for ($i = 0; $i < $n; $i++) {\n        if ($i < $K) {\n            $min_k[$i] = $test_list[$i];\n        } else {\n            $max = max($min_k);\n            if ($test_list[$i] < $max) {\n                $min_k[array_search($max, $min_k)] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 2, 6, 3, 4, 1, 9, 7, 8);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array",
    "    $min_k = array();\n    foreach ($test_list as $test_case) {\n        $min_k[$test_case[0]] = array_slice($test_case[1], 0, $K);\n    }\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'test_case_name' => 'Test Case 1',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            3\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 2',\n        'test_case' => array(\n            array(5, 4, 3, 2, 1),\n            2\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 3',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            1\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 4',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            5\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 5',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            6\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 6',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            0\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 7',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            -1\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 8',\n        'test_case' => array(\n            array(1, 2, 3, 4, 5),\n            -2\n        )\n    ),\n    array(\n        'test_case_name' => 'Test Case 9",
    "    $n = count($test_list);\n    $min_k = array();\n    for ($i = 0; $i < $n; $i++) {\n        if ($i < $K) {\n            $min_k[$i] = $test_list[$i];\n        } else {\n            $max_element = max($min_k);\n            if ($test_list[$i] < $max_element) {\n                $min_k[array_search($max_element, $min_k)] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        if ($min_k_count < $K) {\n            $min_k[$min_k_count] = $test_list[$i];\n            $min_k_index[$min_k_index_count] = $i;\n            $min_k_count++;\n            $min_k_index_count++;\n        } else {\n            $max_element = max($min_k);\n            if ($test_list[$i] < $max_element) {\n                $max_element_index = array_search($max_element, $min_k);\n                $min_k[$max_element_index] = $test_list[$i];\n                $min_k_index[$min_k_index_count] = $i;\n                $min_k_index_count++;\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result =",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 12;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 13;\n$result = min_k($test_list, $K);",
    "    $min_k_list = array();\n    $min_k_list = array_slice($test_list, 0, $K);\n    $min_k_list = min_heap($min_k_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] > $min_k_list[0]) {\n            $min_k_list[0] = $test_list[$i];\n            $min_k_list = min_heap($min_k_list);\n        }\n    }\n    return $min_k_list;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 20;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_list);\n        if ($test_list[$i] < $max) {\n            $min_list[array_search($max, $min_list)] = $test_list[$i];\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(4, 2, 1, 5, 7, 8, 9, 10, 3, 6);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n",
    "    $min_k = array();\n    $min_k_index = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = max($min_k_index);\n        if ($test_list[$i] < $min_k[$max_index]) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 4, 3, 2,",
    "    $min_k_list = array();\n    $min_k_list = array_slice($test_list, 0, $K);\n    $min_k_list = array_map('intval', $min_k_list);\n    sort($min_k_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k_list[$K - 1]) {\n            $min_k_list[$K - 1] = $test_list[$i];\n            sort($min_k_list);\n        }\n    }\n    return $min_k_list;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'input' => array(\n            'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n            'K' => 3\n        ),\n        'expected' => array(1, 2, 3)\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n            'K' => 5\n        ),\n        'expected' => array(1, 2, 3, 4, 5)\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n            'K' => 1\n        ),\n        'expected' => array(1)\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n            'K' => 10\n        ),\n        'expected' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n            'K' => 0\n        ),\n        'expected' => array()\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n            'K' => -1\n        ),\n        'expected' => array()\n    ),\n    array(\n        'input' => array(\n           ",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_index_count_max = $K;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        if ($min_k_index_count < $min_k_index_count_max) {\n            $min_k[$min_k_count] = $test_list[$i];\n            $min_k_index[$min_k_index_count] = $i;\n            $min_k_count++;\n            $min_k_index_count++;\n        } else {\n            $min_k_index_count = 0;\n            $min_k_index_count_max = $K;\n            $min_k_count = 0;\n            $min_k = [];\n            $min_k_index = [];\n            $min_k[$min_k_count] = $test_list[$i];\n            $min_k_index[$min_k_index_count] = $i;\n            $min_k_count++;\n            $min_k_index_count++;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4,",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 11, 70, 50, 40, 100, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 5,\n        'expected' => array(1, 2, 3, 4, 5)\n    ),\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 2,\n        'expected' => array(1, 2)\n    ),\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 3,\n        'expected' => array(1, 2, 3)\n    ),\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 4,\n        'expected' => array(1, 2, 3, 4)\n    ),\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 6,\n        'expected' => array(1, 2, 3, 4, 5, 6)\n    ),\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 7,\n        'expected' => array(1, 2, 3, 4, 5, 6, 7)\n    ),\n    array(\n        'test_list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 8,\n        'expected' => array(1, 2, 3, 4, 5",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $k_list = [];\n    $k_list_index = 0;\n    $k_list_size = 0;\n    for ($i = 0; $i < count($test_list); $i++) {\n        if ($k_list_size < $K) {\n            $k_list[$k_list_index] = $test_list[$i];\n            $k_list_index++;\n            $k_list_size++;\n        } else {\n            $max_index = 0;\n            for ($j = 1; $j < $K; $j++) {\n                if ($k_list[$j] > $k_list[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($k_list[$max_index] > $test_list[$i]) {\n                $k_list[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return $k_list;\n}\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 6;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -3;\n$result = min_k($test_list",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value)\n    echo \"$value \";",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = min($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\necho min_k($test_list, $K);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 10;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 0;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \"",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    $min_list = min_heap($min_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] > $min_list[0]) {\n            $min_list[0] = $test_list[$i];\n            $min_list = min_heap($min_list);\n        }\n    }\n    return $min_list;\n}\n",
    "    $min_k = [];\n    $min_k_indexes = [];\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_indexes[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = array_search(max($min_k), $min_k);\n        if ($test_list[$i] < $min_k[$max_index]) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_indexes[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 6;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 7;\n$result = min_k($test_list",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(',",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50),\n    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 5,\n        'expected' => array(1, 2, 3, 4, 5)\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 3,\n        'expected' => array(1, 2, 3)\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 2,\n        'expected' => array(1, 2)\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 1,\n        'expected' => array(1)\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 0,\n        'expected' => array()\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => -1,\n        'expected' => array()\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 11,\n        'expected' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n    ),\n    array(\n        'input' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_map('strval', $min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -10;\nprint_r(min_k($test_list, $K));\n\n$test_list = [1, 2,",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -10;\n$result = min_k($test_list",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 9;\n$result = min_k($test_list, $",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1] . \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = [5, 4, 3, 2, 1];\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = 2;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = 6;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = -1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = [5, 4, 3, 2, 1];\n$K = -2;\n$result = min_k($test",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($x) { return $x[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n    [10, 11, 12],\n    [13, 14, 15],\n    [16, 17, 18],\n    [19, 20, 21],\n    [22, 23, 24],\n    [25, 26, 27],\n    [28, 29, 30],\n    [31, 32, 33],\n    [34, 35, 36],\n    [37, 38, 39],\n    [40, 41, 42],\n    [43, 44, 45],\n    [46, 47, 48],\n    [49, 50, 51],\n    [52, 53, 54],\n    [55, 56, 57],\n    [58, 59, 60],\n    [61, 62, 63],\n    [64, 65, 66],\n    [67, 68, 69],\n    [70, 71, 72],\n    [73, 74, 75],\n    [76, 77, 78],\n    [79, 80, 81],\n    [82, 83, 84],\n    [85, 86, 87],\n    [88, 89, 90],\n    [91, 92, 93],\n    [94, 95, 96],\n    [97, 98, 99],\n    [100, 101, 102],\n    [103, 104, 105],\n    [106, 107, 108],\n    [109, 110, 111],\n    [112, 113, 114],\n    [115, 116, 117],\n    [118, 119, 120],\n    [121, 122, 123],\n    [124, 125, 126],\n    [127, 128, 129],\n    [130, 131, 132],\n    [133, 134, 135],\n    [136, 137, 138],\n   ",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_list);\n        if ($test_list[$i] < $max) {\n            $min_list[array_search($max, $min_list)] = $test_list[$i];\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum \" . $K . \" records from array are : \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $result[$i] . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum \" . $K . \" records from array are : \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $result[$i] . \" \";\n}\necho \"\\n\";\n\n$test_list = array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum \" . $K . \" records from array are : \";\nfor ($i = 0; $i < count($result); $i++) {\n    echo $result[$i] . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho \"Minimum \" . $K",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K =",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 5,\n        'expected' => array(1, 2, 3, 4, 5)\n    ),\n    array(\n        'list' => array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1),\n        'K' => 5,\n        'expected' => array(1, 2, 3, 4, 5)\n    ),\n    array(\n        'list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 1,\n        'expected' => array(1)\n    ),\n    array(\n        'list' => array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1),\n        'K' => 1,\n        'expected' => array(1)\n    ),\n    array(\n        'list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 10,\n        'expected' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n    ),\n    array(\n        'list' => array(10, 9, 8, 7, 6, 5, 4, 3, 2, 1),\n        'K' => 10,\n        'expected' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n    ),\n    array(\n        'list' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\n        'K' => 0,\n        'expected' => array()\n    ),\n    array(\n        'list' =>",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\necho \"K'th smallest element is \" . min_k($test_list, $K);\n",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($max < $min_k[$j]) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 23,",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    $min_list = min_heap($min_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_list[0]) {\n            $min_list[0] = $test_list[$i];\n            $min_list = min_heap($min_list);\n        }\n    }\n    return $min_list;\n}\n",
    "    $min_k = array();\n    $i = 0;\n    while ($i < $K) {\n        $min_k[$i] = $test_list[$i];\n        $i++;\n    }\n    $min_k = min_heapify($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] > $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k = min_heapify($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\nprint",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $i) {\n    echo $i . \" \";\n}\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 15;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -10;\n$result = min_",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7",
    "    $test_list = array_unique($test_list);\n    sort($test_list);\n    $min_k = array_slice($test_list, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 20;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -5;\n$result = min_k($test_list, $K);\nprint_r($result);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\necho \"Original list is: \";\necho implode(', ', $test_list);\necho \"\\n\";\necho \"Minimum K records are: \";\necho implode(', ', min_k($test_list, $K));\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\necho \"Original list is: \";\necho implode(', ', $test_list);\necho \"\\n\";\necho \"Minimum K records are: \";\necho implode(', ', min_k($test_list, $K));\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\necho \"Original list is: \";\necho implode(', ', $test_list);\necho \"\\n\";\necho \"Minimum K records are: \";\necho implode(', ', min_k($test_list, $K));\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\necho \"Original list is: \";\necho implode(', ', $test_list);\necho \"\\n\";\necho \"Minimum K records are: \";\necho implode(', ', min_k($test_list, $K));\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 9;\n$result = min_k($test_list, $K);\nprint",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index_value = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n        $min_k_index_value[$i] = $test_list[$i];\n    }\n    sort($min_k_index_value);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k_index_value[$K - 1]) {\n            $min_k_index_value[$K - 1] = $test_list[$i];\n            $min_k_index[$K - 1] = $i;\n            sort($min_k_index_value);\n        }\n    }\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$min_k_index[$i]];\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = max_index($min_k);\n        if ($min_k[$max_index] > $test_list[$i]) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k_index;\n}",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 3, 5, 4, 2);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 2;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 4;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 6;\n$result = min_k($test_list, $K",
    "    $min_list = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_list[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_list[$j] > $min_list[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($min_list[$max_index] > $test_list[$i]) {\n            $min_list[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($x) { return $x[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = [\n    [1, 2],\n    [3, 4],\n    [1, 2],\n    [5, 6],\n    [7, 8],\n    [1, 2],\n    [3, 4],\n    [3, 4],\n    [7, 8],\n    [9, 10]\n];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 5],\n    [5, 6],\n    [6, 7],\n    [7, 8],\n    [8, 9],\n    [9, 10],\n    [10, 11]\n];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 5],\n    [5, 6],\n    [6, 7],\n    [7, 8],\n    [8, 9],\n    [9, 10],\n    [10, 11]\n];\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 5],\n    [5, 6],\n    [6, 7],\n    [7, 8],\n    [8, 9],\n    [9, 10],\n    [10, 11]\n];\n$K = 1;\n$result = min_k($test_list, $K",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \"",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 9;\n$result = min",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 10;\n$result = min_k($",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 15;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -10;\n$result = min_k($test_list",
    "    $n = count($test_list);\n    $min_k = array();\n    for ($i = 0; $i < $n; $i++) {\n        if ($i < $K) {\n            $min_k[$i] = $test_list[$i];\n        } else {\n            $max_index = 0;\n            for ($j = 1; $j < $K; $j++) {\n                if ($min_k[$j] > $min_k[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($min_k[$max_index] > $test_list[$i]) {\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(12, 13, 1, 10, 34, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value)\n    echo $value . \" \";\n",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records from array",
    "    $min_list = array();\n    $min_list = array_slice($test_list, 0, $K);\n    $min_list = min_heap($min_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_list[0] < $test_list[$i]) {\n            $min_list[0] = $test_list[$i];\n            $min_list = min_heap($min_list);\n        }\n    }\n    return $min_list;\n}\n",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k_index[$i] = $i;\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k[0];\n        $max_index = $min_k_index[0];\n        for ($j = 1; $j < $K; $j++) {\n            if ($max < $min_k[$j]) {\n                $max = $min_k[$j];\n                $max_index = $min_k_index[$j];\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] > $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 11, 70, 50, 40, 100, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(2, 12, 9, 16, 10, 5, 3, 20, 25, 11, 1, 8, 6 );\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(2, 12, 9, 16, 10, 5, 3, 20, 25, 11, 1, 8, 6 );\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(2, 12, 9, 16, 10, 5, 3, 20, 25, 11, 1, 8, 6 );\n$K = 6;\n$result = min_k($test_list, $K);\necho",
    "    $result = [];\n    $size = sizeof($test_list);\n    if ($size < $K) {\n        return $result;\n    }\n    for ($i = 0; $i < $K; $i++) {\n        $result[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < $size; $i++) {\n        $max = $result[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($result[$j] > $max) {\n                $max = $result[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $result[$max_index] = $test_list[$i];\n        }\n    }\n    return $result;\n}\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 23, 12, 9, 30, 2, 50];\n$K = 8;\n$result = min_k($test_list, $K",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($x) { return $x[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n\n$K = 5;\n\n$result = min_k($test_list, $K);\n\nprint_r($result);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_k($test_list, $K);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 9;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30,",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = min_heap($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k = min_heap($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are : \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records are : \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are : \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are : \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records are : \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";",
    "    // sort the array\n    sort($test_list);\n    // return the first k elements\n    return array_slice($test_list, 0, $K);\n}\n",
    "    $min_k_list = array();\n    $min_k_list = array_slice($test_list, 0, $K);\n    sort($min_k_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k_list[$K - 1] > $test_list[$i]) {\n            $min_k_list[$K - 1] = $test_list[$i];\n            sort($min_k_list);\n        }\n    }\n    return $min_k_list;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k_list = [];\n    $min_k_list_size = 0;\n\n    foreach ($test_list as $test_list_item) {\n        if ($min_k_list_size < $K) {\n            $min_k_list[] = $test_list_item;\n            $min_k_list_size++;\n            continue;\n        }\n\n        $max_item = max($min_k_list);\n        if ($test_list_item < $max_item) {\n            $min_k_list[array_search($max_item, $min_k_list)] = $test_list_item;\n        }\n    }\n\n    return $min_k_list;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$",
    "    $n = count($test_list);\n    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < $n; $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k[$j] > $max) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 6, 7, 8, 9, 10, 1, 2, 3, 4);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nfor ($i = 0; $i < $K; $i++) {\n    echo $result[$i] . \" \";\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 6;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 7;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 8;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10",
    "\t$min_k = array_slice($test_list, 0, $K);\n\t$min_k = array_combine(array_keys($min_k), array_fill(0, count($min_k), 0));\n\tforeach ($test_list as $key => $value) {\n\t\tif ($value < max($min_k)) {\n\t\t\t$min_k[array_search(max($min_k), $min_k)] = $value;\n\t\t}\n\t}\n\treturn $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 11;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 12;\n\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 2;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 15;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = -1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n\n$test_list = array(1, 2, 3, 4, 5,",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9,",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = heap_sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k = heap_sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value",
    "    $min_list = array();\n    foreach ($test_list as $item) {\n        if (count($min_list) < $K) {\n            $min_list[] = $item;\n        } else {\n            $max_item = max($min_list);\n            if ($item < $max_item) {\n                $min_list[array_search($max_item, $min_list)] = $item;\n            }\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $item) {\n    echo $item . \" \";\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($x) { return $x[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    return $min_k;\n}\n\n$test_list = [\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 5],\n    [5, 6],\n    [6, 7],\n    [7, 8],\n    [8, 9],\n    [9, 10],\n    [10, 11],\n    [11, 12],\n    [12, 13],\n    [13, 14],\n    [14, 15],\n    [15, 16],\n    [16, 17],\n    [17, 18],\n    [18, 19],\n    [19, 20],\n    [20, 21],\n    [21, 22],\n    [22, 23],\n    [23, 24],\n    [24, 25],\n    [25, 26],\n    [26, 27],\n    [27, 28],\n    [28, 29],\n    [29, 30],\n    [30, 31],\n    [31, 32],\n    [32, 33],\n    [33, 34],\n    [34, 35],\n    [35, 36],\n    [36, 37],\n    [37, 38],\n    [38, 39],\n    [39, 40],\n    [40, 41],\n    [41, 42],\n    [42, 43],\n    [43, 44],\n    [44, 45],\n    [45, 46],\n    [46, 47],\n    [47, 48],\n    [48, 49],\n    [49, 50],\n    [50, 51],\n    [51, 52],\n    [52, 53],\n    [53, 54],\n    [54, 55],\n    [55, 56],\n    [56, 57],\n    [57, 58],\n    [58, 59],\n    [59, 60],\n    [",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_combine(array_keys($min_k), array_fill(0, $K, 0));\n    foreach ($test_list as $key => $value) {\n        $min_k[$key] = $value;\n        arsort($min_k);\n        $min_k = array_slice($min_k, 0, $K, true);\n    }\n    return $min_k;\n}\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(9, 4, 8, 7, 6, 5, 3, 2, 1);\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_list = [];\n    $min_list_size = 0;\n    $test_list_size = count($test_list);\n    for ($i = 0; $i < $test_list_size; $i++) {\n        if ($min_list_size < $K) {\n            $min_list[$min_list_size] = $test_list[$i];\n            $min_list_size++;\n        } else {\n            $max_index = 0;\n            for ($j = 1; $j < $K; $j++) {\n                if ($min_list[$j] > $min_list[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($min_list[$max_index] > $test_list[$i]) {\n                $min_list[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return $min_list;\n}\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 3;\n$min_list = min_k($test_list, $K);\nprint_r($min_list);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 4;\n$min_list = min_k($test_list, $K);\nprint_r($min_list);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 5;\n$min_list = min_k($test_list, $K);\nprint_r($min_list);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 6;\n$min_list = min_k($test_list, $K);\nprint_r($min_list);\n\n$test_list = [10, 20, 11, 70, 50, 40, 100, 5];\n$K = 7;\n$min_list = min_k($test_list, $K);\nprint_r($",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n    $min_k_count = 0;\n    $min_k_index_count = 0;\n",
    "    $length = count($test_list);\n    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < $length; $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k[$j] > $max) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_list = [];\n    $min_list = array_slice($test_list, 0, $K);\n    $min_list = array_values($min_list);\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_list);\n        if ($test_list[$i] < $max) {\n            $min_list[array_search($max, $min_list)] = $test_list[$i];\n        }\n    }\n    return $min_list;\n}\n\n$test_list = [1, 3, 5, 4, 2];\n$K = 3;\n\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\necho implode(', ', $result);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'input' => array(\n            'test_list' => array(\n                1,\n                3,\n                2,\n                4,\n                6,\n                5,\n                8,\n                7,\n                9\n            ),\n            'K' => 4\n        ),\n        'expected' => array(\n            1,\n            2,\n            3,\n            4\n        )\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(\n                1,\n                3,\n                2,\n                4,\n                6,\n                5,\n                8,\n                7,\n                9\n            ),\n            'K' => 3\n        ),\n        'expected' => array(\n            1,\n            2,\n            3\n        )\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(\n                1,\n                3,\n                2,\n                4,\n                6,\n                5,\n                8,\n                7,\n                9\n            ),\n            'K' => 5\n        ),\n        'expected' => array(\n            1,\n            2,\n            3,\n            4,\n            5\n        )\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(\n                1,\n                3,\n                2,\n                4,\n                6,\n                5,\n                8,\n                7,\n                9\n            ),\n            'K' => 2\n        ),\n        'expected' => array(\n            1,\n            2\n        )\n    ),\n    array(\n        'input' => array(\n            'test_list' => array(\n                1,\n                3,\n                2,\n                4,\n                6,\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map(function($x) { return $x[0]; }, $min_k);\n    $min_k = array_unique($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(\n    array(1, 2),\n    array(3, 4),\n    array(1, 2),\n    array(5, 6),\n    array(7, 8),\n    array(1, 2),\n    array(3, 4),\n    array(3, 4),\n    array(7, 8),\n    array(9, 10)\n);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(2, 4, 1, 3, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 1, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(2, 4, 3, 5, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\necho \"\\n\";\n\n$test_list = array(",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(\n    array(\n        'test_list' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'K' => 5,\n        'expected' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n        ),\n    ),\n    array(\n        'test_list' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'K' => 3,\n        'expected' => array(\n            1,\n            2,\n            3,\n        ),\n    ),\n    array(\n        'test_list' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'K' => 1,\n        'expected' => array(\n            1,\n        ),\n    ),\n    array(\n        'test_list' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n        'K' => 10,\n        'expected' => array(\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n        ),\n    ),\n    array(\n        'test_list' =>",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"Minimum K numbers are: \";\nforeach ($result as $",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_index_count = 0;\n    $min_k_index_max = $K - 1;\n    $min_k_index_min = 0;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        $test_list_value = $test_list[$i];\n        if ($min_k_index_count < $K) {\n            $min_k[$i] = $test_list_value;\n            $min_k_index[$min_k_index_count] = $i;\n            $min_k_index_count++;\n            if ($min_k_index_count == $K) {\n                sort($min_k_index);\n            }\n        } else {\n            $min_k_index_min_value = $min_k[$min_k_index[$min_k_index_min]];\n            if ($test_list_value < $min_k_index_min_value) {\n                $min_k[$i] = $test_list_value;\n                $min_k_index[$min_k_index_min] = $i;\n                sort($min_k_index);\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"K'th smallest",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(99, 98, 97, 96, 95);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99, 97, 96, 95);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99, 97, 96, 95);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99, 97, 96, 95);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99, 97, 96, 95);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99, 97, 96, 95);\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list =",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = -1;\necho \"Minimum K records from array are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4,"
  ]
}
{
  "name": "mbpp_753_min_k",
  "language": "php",
  "prompt": "<?php\n// Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/phpthon-find-minimum-k-records-from-array-array/ - in this case a verbatim cophp of test cases\nfunction min_k($test_list, $K) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return min_k(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(\"Manjeet\", 10), array(\"Akshat\", 4), array(\"Akash\", 2), array(\"Nikhil\", 8)), 2) !== array(array(\"Akash\", 2), array(\"Akshat\", 4))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"Sanjeev\", 11), array(\"Angat\", 5), array(\"Akash\", 3), array(\"Nepin\", 9)), 3) !== array(array(\"Akash\", 3), array(\"Angat\", 5), array(\"Nepin\", 9))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(\"tanmay\", 14), array(\"Amer\", 11), array(\"Ayesha\", 9), array(\"SKD\", 16)), 1) !== array(array(\"Ayesha\", 9))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $min_k = [];\n    $min_k_count = 0;\n    $test_list_count = count($test_list);\n    for ($i = 0; $i < $test_list_count; $i++) {\n        if ($min_k_count < $K) {\n            $min_k[] = $test_list[$i];\n            $min_k_count++;\n        } else {\n            $max_k = max($min_k);\n            if ($test_list[$i] < $max_k) {\n                $min_k[array_search($max_k, $min_k)] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 2;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 12;\n$result = min_k($test_list, $K);\nprint_r",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_k = [];\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = max($min_k);\n        if ($test_list[$i] < $max) {\n            $min_k[array_search($max, $min_k)] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 6;\n$result = min_k($test_list, $K);\necho \"\\nMinimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\necho \"\\nMinimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\necho \"\\nMinimum K records are: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_list = array();\n    foreach ($test_list as $item) {\n        if (count($min_list) < $K) {\n            $min_list[] = $item;\n        } else {\n            $max_item = max($min_list);\n            if ($item < $max_item) {\n                $min_list[array_search($max_item, $min_list)] = $item;\n            }\n        }\n    }\n    return $min_list;\n}\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(3, 4, 2, 1, 6, 5, 8, 7, 10, 9);\n$K = 9;\n$result = min_k($test_list, $K",
    "    $min_k = array();\n    for ($i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max = $min_k[0];\n        $max_index = 0;\n        for ($j = 1; $j < $K; $j++) {\n            if ($min_k[$j] > $max) {\n                $max = $min_k[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $max) {\n            $min_k[$max_index] = $test_list[$i];\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = [];\n    $min_k_index = [];\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    $n = count($test_list);\n    for ($i = 1; $i < $n; $i++) {\n        if ($test_list[$i] < $min_k[0]) {\n            $min_k[0] = $test_list[$i];\n            $min_k_index[0] = $i;\n        }\n    }\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n        for ($j = 0; $j < $i; $j++) {\n            if ($min_k[$j] < $min_k[$i]) {\n                $temp = $min_k[$j];\n                $min_k[$j] = $min_k[$i];\n                $min_k[$i] = $temp;\n                $temp = $min_k_index[$j];\n                $min_k_index[$j] = $min_k_index[$i];\n                $min_k_index[$i] = $temp;\n            }\n        }\n    }\n    for ($i = $K; $i < $n; $i++) {\n        if ($test_list[$i] > $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            $min_k_index[$K - 1] = $i;\n            for ($j = $K - 1; $j > 0; $j--) {\n                if ($min_k[$j] < $min_k[$j - 1]) {\n                    $temp = $min_k[$j];\n                    $min_k[$j] = $min_k[$j - 1];\n                    $min_k[$j - 1] = $temp",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 3;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 5;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 1;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 10;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);\n$K = 15;\necho \"Minimum K records are: \";\nprint_r(min_k($test_list, $K));\n\n$test_list = array(5, 4, 3, 2, 1, 6, 7, 8, 9, 10);",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 10;\n$result = min_k($",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 2;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 6;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}\necho \"\\n\";\n\n$test_list = array(5, 4, 3, 2, 1);\n$K = 0",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(2, 3, 4",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    $min_k = array_slice($min_k, 0, $K);\n    return $min_k;\n}\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 10;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 0;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = -1;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 11;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$K = 12;\n$result = min",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_combine(range(1, count($min_k)), array_values($min_k));\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_key = max(array_keys($min_k));\n        if ($test_list[$i] < $min_k[$max_key]) {\n            unset($min_k[$max_key]);\n            $min_k[$i] = $test_list[$i];\n        }\n    }\n    ksort($min_k);\n    return array_values($min_k);\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 4;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 7;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 8;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($min_k[$K - 1] > $test_list[$i]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n\n$result = min_k($test_list, $K);\necho implode(', ', $result);\n",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    $min_k = array_unique($min_k);\n    $min_k = array_values($min_k);\n    sort($min_k);\n    return $min_k;\n}\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 5;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 6;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 7;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 8;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 9;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(5, 7, 9, 1, 3, 2, 4, 8, 6);\n$K = 10;\n$result = min_k",
    "    $min_k = array();\n    $min_k_index = array();\n    $min_k_index[0] = 0;\n    $min_k[0] = $test_list[0];\n    for ($i = 1; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        $min_k_index[$i] = $i;\n    }\n    for ($i = $K; $i < count($test_list); $i++) {\n        $max_index = max($min_k_index);\n        if ($min_k[$max_index] > $test_list[$i]) {\n            $min_k[$max_index] = $test_list[$i];\n            $min_k_index[$max_index] = $i;\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 23, 12, 9, 30, 2, 50);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 4;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\nprint_r($result);\n\n$test_list = array(10, 20, 4, 45, 99);\n$K = 3;\n$result = min_k($test_list, $K);\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    $min_k = array_map('intval', $min_k);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 5;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 1;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 10;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 15;\n$result = min_k($test_list, $K);\necho \"Minimum K records are: \";\nprint_r($result);\n\n$test_list = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$K = 0;\n$result = min",
    "    $min_k = array();\n    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n",
    "    $min_k = array_slice($test_list, 0, $K);\n    sort($min_k);\n    for ($i = $K; $i < count($test_list); $i++) {\n        if ($test_list[$i] < $min_k[$K - 1]) {\n            $min_k[$K - 1] = $test_list[$i];\n            sort($min_k);\n        }\n    }\n    return $min_k;\n}\n\n$test_list = array(10, 20, 11, 70, 50, 40, 100, 5);\n$K = 3;\n$result = min_k($test_list, $K);\necho \"K'th smallest element is \" . $result[$K - 1];\n"
  ]
}
{
  "name": "mbpp_747_lcs_of_three",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nfunction lcs_of_three($X, $Y, $Z) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return lcs_of_three(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } elseif ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = [];\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \". lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i = 0; $i <= $m; $i++) {\n        for ($j = 0; $j <= $n; $j++) {\n            for ($k = 0; $k <= $o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i - 1] == $Y[$j - 1] && $X[$i - 1] == $Z[$k - 1]) {\n                    $L[$i][$j][$k] = $L[$i - 1][$j - 1][$k - 1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i - 1][$j][$k], $L[$i][$j - 1][$k], $L[$i][$j][$k - 1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n\necho \"Length of LCS is \" . lcs_of_three($X, $Y, $Z);",
    "    $m = strlen($X);\n    $n = strlen($Y);\n    $o = strlen($Z);\n    $L = array();\n    for ($i=0; $i<=$m; $i++) {\n        for ($j=0; $j<=$n; $j++) {\n            for ($k=0; $k<=$o; $k++) {\n                if ($i == 0 || $j == 0 || $k == 0) {\n                    $L[$i][$j][$k] = 0;\n                } else if ($X[$i-1] == $Y[$j-1] && $X[$i-1] == $Z[$k-1]) {\n                    $L[$i][$j][$k] = $L[$i-1][$j-1][$k-1] + 1;\n                } else {\n                    $L[$i][$j][$k] = max($L[$i-1][$j][$k], $L[$i][$j-1][$k], $L[$i][$j][$k-1]);\n                }\n            }\n        }\n    }\n    return $L[$m][$n][$o];\n}\n\n$X = \"AGGT12\";\n$Y = \"12TXAYB\";\n$Z = \"12XBA\";\n$result = lcs_of_three($X, $Y, $Z);\necho $result;"
  ]
}
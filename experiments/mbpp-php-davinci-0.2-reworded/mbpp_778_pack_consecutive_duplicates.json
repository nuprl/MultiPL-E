{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "php",
  "prompt": "<?php\n// Write a function to pack consecutive duplicates of a given array elements into subarrays.\nfunction pack_consecutive_duplicates($list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return pack_consecutive_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)) !== array(array(0, 0), array(1), array(2), array(3), array(4, 4), array(5), array(6, 6, 6), array(7), array(8), array(9), array(4, 4))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)) !== array(array(10, 10), array(15), array(19), array(18, 18), array(17), array(26, 26), array(17), array(18), array(10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"a\", \"a\", \"b\", \"c\", \"d\", \"d\")) !== array(array(\"a\", \"a\"), array(\"b\"), array(\"c\"), array(\"d\", \"d\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $list2 = [];\n    $list2[0] = [];\n    $list2[0][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[count($list2) - 1][] = $list1[$i];\n        } else {\n            $list2[] = [];\n            $list2[count($list2) - 1][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $temp = array();\n    $last = null;\n    foreach ($list1 as $item) {\n        if ($item !== $last) {\n            if ($temp) {\n                $result[] = $temp;\n            }\n            $temp = array($item);\n        } else {\n            $temp[] = $item;\n        }\n        $last = $item;\n    }\n    if ($temp) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list3 = [];\n    $list4 = [];\n    $list5 = [];\n    $list6 = [];\n    $list7 = [];\n    $list8 = [];\n    $list9 = [];\n    $list10 = [];\n    $list11 = [];\n    $list12 = [];\n    $list13 = [];\n    $list14 = [];\n    $list15 = [];\n    $list16 = [];\n    $list17 = [];\n    $list18 = [];\n    $list19 = [];\n    $list20 = [];\n    $list21 = [];\n    $list22 = [];\n    $list23 = [];\n    $list24 = [];\n    $list25 = [];\n    $list26 = [];\n    $list27 = [];\n    $list28 = [];\n    $list29 = [];\n    $list30 = [];\n    $list31 = [];\n    $list32 = [];\n    $list33 = [];\n    $list34 = [];\n    $list35 = [];\n    $list36 = [];\n    $list37 = [];\n    $list38 = [];\n    $list39 = [];\n    $list40 = [];\n    $list41 = [];\n    $list42 = [];\n    $list43 = [];\n    $list44 = [];\n    $list45 = [];\n    $list46 = [];\n    $list47 = [];\n    $list48 = [];\n    $list49 = [];\n    $list50 = [];\n    $list51 = [];\n    $list52 = [];\n    $list53 = [];\n    $list54 = [];\n    $list55 = [];\n    $list56 = [];\n    $list57 = [];\n    $list58 = [];\n    $list59 = [];\n    $list60 = [];\n    $list61 = [];\n    $list62 = [];\n    $list63 = [];\n    $list64 = [];\n    $list65 = [];\n    $list66 = [];\n    $list67 = [];\n    $list68 = [];\n    $list69 = [];\n    $list70 = [];\n    $list71 = [];\n    $list72 = [];\n    $list73 = [];\n    $list74 = [];\n",
    "    $result = array();\n    $temp = array();\n    $i = 0;\n    $list1_length = count($list1);\n    while ($i < $list1_length) {\n        $j = $i + 1;\n        $temp[] = $list1[$i];\n        while ($j < $list1_length && $list1[$j] == $list1[$i]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $temp = array();\n        $i = $j;\n    }\n    return $result;\n}\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $result[$j][] = $list1[$i];\n        if ($i < count($list1) - 1 && $list1[$i] != $list1[$i + 1]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $result = array();\n    $result_index = -1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($i == 0 || $list1[$i] != $result[$result_index][0]) {\n            // First element or new subarray.\n            $result[++$result_index] = array($list1[$i]);\n        } else {\n            // Same as previous.\n            $result[$result_index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nfor ($i = 0; $i < count($result); $i++) {\n    echo implode(', ', $result[$i]) . \"\\n\";\n}",
    "    $result = array();\n    $count = 0;\n    $temp = $list1[0];\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($temp == $list1[$i]) {\n            $count++;\n        } else {\n            array_push($result, array_fill(0, $count, $temp));\n            $count = 1;\n            $temp = $list1[$i];\n        }\n    }\n    array_push($result, array_fill(0, $count, $temp));\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = [];\n    $temp = [];\n    $i = 0;\n    $j = 0;\n    $length = count($list1);\n    while ($i < $length) {\n        if ($list1[$i] == $list1[$i+1]) {\n            $temp[$j] = $list1[$i];\n            $j++;\n        } else {\n            $temp[$j] = $list1[$i];\n            $result[$i] = $temp;\n            $temp = [];\n            $j = 0;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = [1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $list2[$j][] = $list1[$i];\n        if ($i < count($list1) - 1) {\n            if ($list1[$i] != $list1[$i + 1]) {\n                $j++;\n            }\n        }\n        $i++;\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(pack_consecutive_duplicates($list1));",
    "\t$list2 = [];\n\t$list2[0] = $list1[0];\n\t$j = 0;\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list1[$i - 1]) {\n\t\t\t$list2[$j][] = $list1[$i];\n\t\t} else {\n\t\t\t$list2[++$j][] = $list1[$i];\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $count = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$count], $list1[$i]);\n        } else {\n            $count++;\n            $list2[$count] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $counter = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$counter], $list1[$i]);\n        } else {\n            $counter++;\n            $list2[$counter] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array();\n            array_push($list2[$j], $list1[$i]);\n        }\n    }\n    return $list2;\n}\n",
    "    $temp = array();\n    $result = array();\n    $j = 0;\n    $i = 0;\n    $temp[$j] = $list1[$i];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[$j] = $list1[$i];\n        } else {\n            $j++;\n            $temp[$j] = $list1[$i];\n        }\n    }\n    $j = 0;\n    $i = 0;\n    $result[$j] = array($temp[$i]);\n    for ($i = 1; $i < count($temp); $i++) {\n        if ($temp[$i] == $temp[$i - 1]) {\n            array_push($result[$j], $temp[$i]);\n        } else {\n            $j++;\n            $result[$j] = array($temp[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $j = 0;\n    $list2[$j] = array();\n    $list2[$j][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j] = array();\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\necho \"Input: \" . implode(\", \", $list1) . \"\\n\";\necho \"Output: \";\nfor ($i = 0; $i < count($list2); $i++) {\n    echo \"[\" . implode(\", \", $list2[$i]) . \"] \";\n}\necho \"\\n\";",
    "    $result = array();\n    $result_index = 0;\n    $result[$result_index] = array();\n    $result[$result_index][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[$result_index][] = $list1[$i];\n        } else {\n            $result_index++;\n            $result[$result_index] = array();\n            $result[$result_index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7);\nprint_r(pack_consecutive_duplicates($list1));\n"
  ]
}
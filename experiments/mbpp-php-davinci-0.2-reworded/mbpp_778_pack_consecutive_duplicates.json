{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "php",
  "prompt": "<?php\n// Write a function to pack consecutive duplicates of a given array elements into subarrays.\nfunction pack_consecutive_duplicates($list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return pack_consecutive_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)) !== array(array(0, 0), array(1), array(2), array(3), array(4, 4), array(5), array(6, 6, 6), array(7), array(8), array(9), array(4, 4))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)) !== array(array(10, 10), array(15), array(19), array(18, 18), array(17), array(26, 26), array(17), array(18), array(10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"a\", \"a\", \"b\", \"c\", \"d\", \"d\")) !== array(array(\"a\", \"a\"), array(\"b\"), array(\"c\"), array(\"d\", \"d\"))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $list2 = [];\n    $list2[0] = [];\n    $list2[0][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[count($list2) - 1][] = $list1[$i];\n        } else {\n            $list2[] = [];\n            $list2[count($list2) - 1][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $temp = array();\n    $last = null;\n    foreach ($list1 as $item) {\n        if ($item !== $last) {\n            if ($temp) {\n                $result[] = $temp;\n            }\n            $temp = array($item);\n        } else {\n            $temp[] = $item;\n        }\n        $last = $item;\n    }\n    if ($temp) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list3 = [];\n    $list4 = [];\n    $list5 = [];\n    $list6 = [];\n    $list7 = [];\n    $list8 = [];\n    $list9 = [];\n    $list10 = [];\n    $list11 = [];\n    $list12 = [];\n    $list13 = [];\n    $list14 = [];\n    $list15 = [];\n    $list16 = [];\n    $list17 = [];\n    $list18 = [];\n    $list19 = [];\n    $list20 = [];\n    $list21 = [];\n    $list22 = [];\n    $list23 = [];\n    $list24 = [];\n    $list25 = [];\n    $list26 = [];\n    $list27 = [];\n    $list28 = [];\n    $list29 = [];\n    $list30 = [];\n    $list31 = [];\n    $list32 = [];\n    $list33 = [];\n    $list34 = [];\n    $list35 = [];\n    $list36 = [];\n    $list37 = [];\n    $list38 = [];\n    $list39 = [];\n    $list40 = [];\n    $list41 = [];\n    $list42 = [];\n    $list43 = [];\n    $list44 = [];\n    $list45 = [];\n    $list46 = [];\n    $list47 = [];\n    $list48 = [];\n    $list49 = [];\n    $list50 = [];\n    $list51 = [];\n    $list52 = [];\n    $list53 = [];\n    $list54 = [];\n    $list55 = [];\n    $list56 = [];\n    $list57 = [];\n    $list58 = [];\n    $list59 = [];\n    $list60 = [];\n    $list61 = [];\n    $list62 = [];\n    $list63 = [];\n    $list64 = [];\n    $list65 = [];\n    $list66 = [];\n    $list67 = [];\n    $list68 = [];\n    $list69 = [];\n    $list70 = [];\n    $list71 = [];\n    $list72 = [];\n    $list73 = [];\n    $list74 = [];\n",
    "    $result = array();\n    $temp = array();\n    $i = 0;\n    $list1_length = count($list1);\n    while ($i < $list1_length) {\n        $j = $i + 1;\n        $temp[] = $list1[$i];\n        while ($j < $list1_length && $list1[$j] == $list1[$i]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $temp = array();\n        $i = $j;\n    }\n    return $result;\n}\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $result[$j][] = $list1[$i];\n        if ($i < count($list1) - 1 && $list1[$i] != $list1[$i + 1]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $result = array();\n    $result_index = -1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($i == 0 || $list1[$i] != $result[$result_index][0]) {\n            // First element or new subarray.\n            $result[++$result_index] = array($list1[$i]);\n        } else {\n            // Same as previous.\n            $result[$result_index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nfor ($i = 0; $i < count($result); $i++) {\n    echo implode(', ', $result[$i]) . \"\\n\";\n}",
    "    $result = array();\n    $count = 0;\n    $temp = $list1[0];\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($temp == $list1[$i]) {\n            $count++;\n        } else {\n            array_push($result, array_fill(0, $count, $temp));\n            $count = 1;\n            $temp = $list1[$i];\n        }\n    }\n    array_push($result, array_fill(0, $count, $temp));\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = [];\n    $temp = [];\n    $i = 0;\n    $j = 0;\n    $length = count($list1);\n    while ($i < $length) {\n        if ($list1[$i] == $list1[$i+1]) {\n            $temp[$j] = $list1[$i];\n            $j++;\n        } else {\n            $temp[$j] = $list1[$i];\n            $result[$i] = $temp;\n            $temp = [];\n            $j = 0;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = [1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $list2[$j][] = $list1[$i];\n        if ($i < count($list1) - 1) {\n            if ($list1[$i] != $list1[$i + 1]) {\n                $j++;\n            }\n        }\n        $i++;\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(pack_consecutive_duplicates($list1));",
    "\t$list2 = [];\n\t$list2[0] = $list1[0];\n\t$j = 0;\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list1[$i - 1]) {\n\t\t\t$list2[$j][] = $list1[$i];\n\t\t} else {\n\t\t\t$list2[++$j][] = $list1[$i];\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $count = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$count], $list1[$i]);\n        } else {\n            $count++;\n            $list2[$count] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $counter = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$counter], $list1[$i]);\n        } else {\n            $counter++;\n            $list2[$counter] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array();\n            array_push($list2[$j], $list1[$i]);\n        }\n    }\n    return $list2;\n}\n",
    "    $temp = array();\n    $result = array();\n    $j = 0;\n    $i = 0;\n    $temp[$j] = $list1[$i];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[$j] = $list1[$i];\n        } else {\n            $j++;\n            $temp[$j] = $list1[$i];\n        }\n    }\n    $j = 0;\n    $i = 0;\n    $result[$j] = array($temp[$i]);\n    for ($i = 1; $i < count($temp); $i++) {\n        if ($temp[$i] == $temp[$i - 1]) {\n            array_push($result[$j], $temp[$i]);\n        } else {\n            $j++;\n            $result[$j] = array($temp[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $j = 0;\n    $list2[$j] = array();\n    $list2[$j][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j] = array();\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\necho \"Input: \" . implode(\", \", $list1) . \"\\n\";\necho \"Output: \";\nfor ($i = 0; $i < count($list2); $i++) {\n    echo \"[\" . implode(\", \", $list2[$i]) . \"] \";\n}\necho \"\\n\";",
    "    $result = array();\n    $result_index = 0;\n    $result[$result_index] = array();\n    $result[$result_index][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[$result_index][] = $list1[$i];\n        } else {\n            $result_index++;\n            $result[$result_index] = array();\n            $result[$result_index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = [];\n    $list3 = [];\n    $list4 = [];\n    $list5 = [];\n    $list6 = [];\n    $list7 = [];\n    $list8 = [];\n    $list9 = [];\n    $list10 = [];\n    $list11 = [];\n    $list12 = [];\n    $list13 = [];\n    $list14 = [];\n    $list15 = [];\n    $list16 = [];\n    $list17 = [];\n    $list18 = [];\n    $list19 = [];\n    $list20 = [];\n    $list21 = [];\n    $list22 = [];\n    $list23 = [];\n    $list24 = [];\n    $list25 = [];\n    $list26 = [];\n    $list27 = [];\n    $list28 = [];\n    $list29 = [];\n    $list30 = [];\n    $list31 = [];\n    $list32 = [];\n    $list33 = [];\n    $list34 = [];\n    $list35 = [];\n    $list36 = [];\n    $list37 = [];\n    $list38 = [];\n    $list39 = [];\n    $list40 = [];\n    $list41 = [];\n    $list42 = [];\n    $list43 = [];\n    $list44 = [];\n    $list45 = [];\n    $list46 = [];\n    $list47 = [];\n    $list48 = [];\n    $list49 = [];\n    $list50 = [];\n    $list51 = [];\n    $list52 = [];\n    $list53 = [];\n    $list54 = [];\n    $list55 = [];\n    $list56 = [];\n    $list57 = [];\n    $list58 = [];\n    $list59 = [];\n    $list60 = [];\n    $list61 = [];\n    $list62 = [];\n    $list63 = [];\n    $list64 = [];\n    $list65 = [];\n    $list66 = [];\n    $list67 = [];\n    $list68 = [];\n    $list69 = [];\n    $list70 = [];\n    $list71 = [];\n    $list72 = [];\n    $list73 = [];\n    $list74 = [];\n",
    "    $result = array();\n    $prev = null;\n    $count = 0;\n    foreach ($list1 as $item) {\n        if ($item === $prev) {\n            $count++;\n        } else {\n            if ($count > 0) {\n                $result[] = array_fill(0, $count, $prev);\n            }\n            $prev = $item;\n            $count = 1;\n        }\n    }\n    if ($count > 0) {\n        $result[] = array_fill(0, $count, $prev);\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $result = array();\n    $i = 0;\n    while ($i < count($list1)) {\n        $result[$i] = array($list1[$i]);\n        $j = $i + 1;\n        while ($j < count($list1) && $list1[$i] == $list1[$j]) {\n            array_push($result[$i], $list1[$j]);\n            $j++;\n        }\n        $i = $j;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$list2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$list3 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$list4 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list2_index = 0;\n    $list2[$list2_index] = [];\n    $list2[$list2_index][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$list2_index][] = $list1[$i];\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = [];\n            $list2[$list2_index][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $list2 = array();\n    $list2[] = $list1[0];\n    $list3 = array();\n    $list3[] = $list2;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[count($list2) - 1]) {\n            $list2[] = $list1[$i];\n        } else {\n            $list2 = array();\n            $list2[] = $list1[$i];\n            $list3[] = $list2;\n        }\n    }\n    return $list3;\n}\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = [];\n    $result[] = [$list1[0]];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = [$list1[$i]];\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 1, 1];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $result = array();\n    $previous = null;\n    $subarray = array();\n    foreach ($list1 as $item) {\n        if ($item !== $previous) {\n            if (!empty($subarray)) {\n                $result[] = $subarray;\n            }\n            $subarray = array();\n        }\n        $subarray[] = $item;\n        $previous = $item;\n    }\n    if (!empty($subarray)) {\n        $result[] = $subarray;\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i-1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\n\necho \"List 1: \";\nforeach ($list1 as $item) {\n    echo \"$item \";\n}\necho \"\\n\";\n\necho \"List 2: \";\nforeach ($list2 as $item) {\n    echo \"[\";\n    foreach ($item as $subitem) {\n        echo \"$subitem \";\n    }\n    echo \"] \";\n}\necho \"\\n\";",
    "    $result = array();\n    $temp = array();\n    $prev = null;\n    foreach ($list1 as $key => $value) {\n        if ($value != $prev) {\n            if (!empty($temp)) {\n                array_push($result, $temp);\n            }\n            $temp = array();\n        }\n        array_push($temp, $value);\n        $prev = $value;\n    }\n    array_push($result, $temp);\n    return $result;\n}\n",
    "    $list2 = array();\n    $list2[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[count($list2) - 1][] = $list1[$i];\n        } else {\n            $list2[] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $previous = null;\n    $subarray = array();\n    foreach ($list1 as $item) {\n        if ($item !== $previous) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array();\n        }\n        $subarray[] = $item;\n        $previous = $item;\n    }\n    if ($subarray) {\n        $result[] = $subarray;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n",
    "    $list2 = [];\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7];\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $previous = null;\n    $subarray = null;\n    foreach ($list1 as $element) {\n        if ($element !== $previous) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array($element);\n        } else {\n            $subarray[] = $element;\n        }\n        $previous = $element;\n    }\n    if ($subarray) {\n        $result[] = $subarray;\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $result[0] = array();\n    $result[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $result[$j][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 8, 9, 9, 9, 10);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $temp = array();\n    $prev = null;\n    foreach ($list1 as $key => $value) {\n        if ($value != $prev) {\n            if (!empty($temp)) {\n                array_push($result, $temp);\n            }\n            $temp = array($value);\n        } else {\n            array_push($temp, $value);\n        }\n        $prev = $value;\n    }\n    array_push($result, $temp);\n    return $result;\n}\n",
    "    $result = array();\n    $list1_count = count($list1);\n    for ($i = 0; $i < $list1_count; $i++) {\n        $j = $i + 1;\n        $temp = array($list1[$i]);\n        while ($j < $list1_count && $list1[$i] == $list1[$j]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $i = $j - 1;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list:\\n\";\necho implode(', ', $list1).\"\\n\";\necho \"Packed list:\\n\";\necho implode(', ', $result).\"\\n\";",
    "    $result = array();\n    $temp = array();\n    $last = null;\n    foreach ($list1 as $item) {\n        if ($item != $last) {\n            if ($temp) {\n                $result[] = $temp;\n            }\n            $temp = array($item);\n        } else {\n            $temp[] = $item;\n        }\n        $last = $item;\n    }\n    if ($temp) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);\n",
    "    $result = array();\n    $previous = NULL;\n    foreach ($list1 as $item) {\n        if ($item != $previous) {\n            $result[] = array($item);\n        } else {\n            $result[count($result) - 1][] = $item;\n        }\n        $previous = $item;\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $i = 0;\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $result_index = 0;\n    $result[$result_index] = array();\n    $result[$result_index][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] === $list1[$i - 1]) {\n            $result[$result_index][] = $list1[$i];\n        } else {\n            $result_index++;\n            $result[$result_index] = array();\n            $result[$result_index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list3 = array();\n    $list4 = array();\n    $list5 = array();\n    $list6 = array();\n    $list7 = array();\n    $list8 = array();\n    $list9 = array();\n    $list10 = array();\n    $list11 = array();\n    $list12 = array();\n    $list13 = array();\n    $list14 = array();\n    $list15 = array();\n    $list16 = array();\n    $list17 = array();\n    $list18 = array();\n    $list19 = array();\n    $list20 = array();\n    $list21 = array();\n    $list22 = array();\n    $list23 = array();\n    $list24 = array();\n    $list25 = array();\n    $list26 = array();\n    $list27 = array();\n    $list28 = array();\n    $list29 = array();\n    $list30 = array();\n    $list31 = array();\n    $list32 = array();\n    $list33 = array();\n    $list34 = array();\n    $list35 = array();\n    $list36 = array();\n    $list37 = array();\n    $list38 = array();\n    $list39 = array();\n    $list40 = array();\n    $list41 = array();\n    $list42 = array();\n    $list43 = array();\n    $list44 = array();\n    $list45 = array();\n    $list46 = array();\n    $list47 = array();\n    $list48 = array();\n    $list49 = array();\n    $list50 = array();\n    $list51 = array();\n    $list52 = array();\n    $list53 = array();\n    $list54 = array();\n    $list55 = array();\n    $list56 = array();\n    $list57 = array();\n    $list58 = array();\n    $list59 = array();\n    $list60 = array();\n    $list61 = array();\n    $list62 = array();\n    $list63 = array();\n    $list64 = array();\n    $list65 = array();",
    "    $list2 = array();\n    $count = 0;\n    $list2[$count] = array();\n    for ($i = 0; $i < count($list1); $i++) {\n        if (count($list2[$count]) == 0) {\n            array_push($list2[$count], $list1[$i]);\n        } else {\n            if ($list2[$count][0] == $list1[$i]) {\n                array_push($list2[$count], $list1[$i]);\n            } else {\n                $count++;\n                $list2[$count] = array();\n                array_push($list2[$count], $list1[$i]);\n            }\n        }\n    }\n    return $list2;\n}\n$list1 = array(1, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$list2_index][] = $list1[$i];\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 10);\n$list2 = pack_consecutive_duplicates($list1);\necho \"List 1: \" . implode(\", \", $list1) . \"\\n\";\necho \"List 2: \";\nforeach ($list2 as $sublist) {\n    echo \"[\" . implode(\", \", $sublist) . \"] \";\n}\necho \"\\n\";",
    "    $list2 = array();\n    $list2[] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
    "    $result = array();\n    $previous = null;\n    $subarray = null;\n    foreach ($list1 as $item) {\n        if ($item !== $previous) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array();\n        }\n        $subarray[] = $item;\n        $previous = $item;\n    }\n    if ($subarray) {\n        $result[] = $subarray;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);\n",
    "    $result = array();\n    $list1_size = count($list1);\n    $temp = '';\n    for ($i = 0; $i < $list1_size; $i++) {\n        if ($i == 0) {\n            $temp = $list1[$i];\n            $result[] = array($list1[$i]);\n        } else {\n            if ($temp == $list1[$i]) {\n                end($result);\n                $key = key($result);\n                $result[$key][] = $list1[$i];\n            } else {\n                $temp = $list1[$i];\n                $result[] = array($list1[$i]);\n            }\n        }\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9);\necho '<pre>';\nprint_r(pack_consecutive_duplicates($list1));\necho '</pre>';",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6);\n$result = pack_consecutive_duplicates($list1);\necho \"Input: \";\nprint_r($list1);\necho \"<br>Output: \";\nprint_r($result);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $list2 = [];\n    $list2[0] = [];\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n",
    "    $result = array();\n    $prev = null;\n    $sub_array = array();\n    foreach ($list1 as $item) {\n        if ($item !== $prev) {\n            if ($sub_array) {\n                $result[] = $sub_array;\n            }\n            $sub_array = array();\n        }\n        $sub_array[] = $item;\n        $prev = $item;\n    }\n    if ($sub_array) {\n        $result[] = $sub_array;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 10);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 8, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = [];\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $list2[++$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j] = array();\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = [];\n    $list2[0] = [$list1[0]];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
    "    $result = array();\n    $temp = array();\n    $previous = NULL;\n    foreach ($list1 as $item) {\n        if ($item !== $previous) {\n            if (!empty($temp)) {\n                $result[] = $temp;\n            }\n            $temp = array($item);\n        } else {\n            $temp[] = $item;\n        }\n        $previous = $item;\n    }\n    if (!empty($temp)) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array();\n            array_push($list2[$j], $list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $result = array();\n    $prev = null;\n    $subarray = array();\n    foreach ($list1 as $item) {\n        if ($item !== $prev) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array();\n        }\n        $subarray[] = $item;\n        $prev = $item;\n    }\n    if ($subarray) {\n        $result[] = $subarray;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 1);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $list_length = count($list1);\n    $i = 0;\n    while ($i < $list_length) {\n        $j = $i + 1;\n        while ($j < $list_length && $list1[$j] == $list1[$i]) {\n            $j++;\n        }\n        $result[] = array_slice($list1, $i, $j - $i);\n        $i = $j;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);\n",
    "    $result = array();\n    $temp = array();\n    $count = 0;\n    $i = 0;\n    while ($i < count($list1)) {\n        $count = 1;\n        $temp[0] = $list1[$i];\n        while ($i + 1 < count($list1) && $list1[$i] == $list1[$i + 1]) {\n            $temp[$count] = $list1[$i + 1];\n            $count++;\n            $i++;\n        }\n        $result[] = $temp;\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5, 5, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $result[$j][$i] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($result[$j][0] == $list1[$i]) {\n            array_push($result[$j], $list1[$i]);\n        } else {\n            $j++;\n            $result[$j][0] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $temp = array();\n    $previous = null;\n    foreach ($list1 as $value) {\n        if ($value != $previous) {\n            if ($temp) {\n                $result[] = $temp;\n            }\n            $temp = array($value);\n        } else {\n            $temp[] = $value;\n        }\n        $previous = $value;\n    }\n    if ($temp) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);\n",
    "    $result = array();\n    $previous = null;\n    $subarray = null;\n    foreach ($list1 as $element) {\n        if ($element !== $previous) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array($element);\n        } else {\n            $subarray[] = $element;\n        }\n        $previous = $element;\n    }\n    $result[] = $subarray;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);\n",
    "    $result = array();\n    $current = null;\n    $count = 0;\n    foreach ($list1 as $value) {\n        if ($value != $current) {\n            if ($count > 0) {\n                $result[] = array_fill(0, $count, $current);\n            }\n            $current = $value;\n            $count = 1;\n        } else {\n            $count++;\n        }\n    }\n    if ($count > 0) {\n        $result[] = array_fill(0, $count, $current);\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 6, 7, 7, 7, 8, 8, 9);\n$list2 = pack_consecutive_duplicates($list1);\nfor ($i = 0; $i < count($list2); $i++) {\n    echo \"{\";\n    for ($j = 0; $j < count($list2[$i]); $j++) {\n        echo $list2[$i][$j] . \" \";\n    }\n    echo \"}\";\n}",
    "    $result = array();\n    $temp = array();\n    $j = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($i == 0) {\n            $temp[$j] = $list1[$i];\n            $j++;\n        } else {\n            if ($list1[$i] == $list1[$i - 1]) {\n                $temp[$j] = $list1[$i];\n                $j++;\n            } else {\n                $result[] = $temp;\n                $temp = array();\n                $j = 0;\n                $temp[$j] = $list1[$i];\n                $j++;\n            }\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10);\n$result = pack_consecutive_duplicates($list1);\necho \"Original array :\\n\";\necho implode(\", \", $list1);\necho \"\\nPacked array :\\n\";\necho implode(\", \", $result);",
    "    $result = array();\n    $prev = null;\n    $count = 0;\n    foreach ($list1 as $value) {\n        if ($value !== $prev) {\n            if ($count) {\n                $result[] = array_fill(0, $count, $prev);\n            }\n            $prev = $value;\n            $count = 1;\n        } else {\n            $count++;\n        }\n    }\n    if ($count) {\n        $result[] = array_fill(0, $count, $prev);\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $list2 = [];\n    $list2[0] = [$list1[0]];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6];\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list3 = [];\n    $count = 0;\n    $count2 = 0;\n    $count3 = 0;\n    $count4 = 0;\n    $count5 = 0;\n    $count6 = 0;\n    $count7 = 0;\n    $count8 = 0;\n    $count9 = 0;\n    $count10 = 0;\n    $count11 = 0;\n    $count12 = 0;\n    $count13 = 0;\n    $count14 = 0;\n    $count15 = 0;\n    $count16 = 0;\n    $count17 = 0;\n    $count18 = 0;\n    $count19 = 0;\n    $count20 = 0;\n    $count21 = 0;\n    $count22 = 0;\n    $count23 = 0;\n    $count24 = 0;\n    $count25 = 0;\n    $count26 = 0;\n    $count27 = 0;\n    $count28 = 0;\n    $count29 = 0;\n    $count30 = 0;\n    $count31 = 0;\n    $count32 = 0;\n    $count33 = 0;\n    $count34 = 0;\n    $count35 = 0;\n    $count36 = 0;\n    $count37 = 0;\n    $count38 = 0;\n    $count39 = 0;\n    $count40 = 0;\n    $count41 = 0;\n    $count42 = 0;\n    $count43 = 0;\n    $count44 = 0;\n    $count45 = 0;\n    $count46 = 0;\n    $count47 = 0;\n    $count48 = 0;\n    $count49 = 0;\n    $count50 = 0;\n    $count51 = 0;\n    $count52 = 0;\n    $count53 = 0;\n    $count54 = 0;\n    $count55 = 0;\n    $count56 = 0;\n    $count57 = 0;\n    $count58 = 0;\n    $count59 = 0;\n    $count60 = 0;\n    $count61 = 0;\n    $count62 = 0;\n    $",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $count = count($list1);\n    while ($i < $count) {\n        $result[$j][] = $list1[$i];\n        if ($i < $count - 1) {\n            if ($list1[$i] != $list1[$i + 1]) {\n                $j++;\n            }\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $list2 = [];\n    $temp = [];\n    $count = 0;\n    foreach ($list1 as $key => $value) {\n        if ($key == 0) {\n            $temp[$count] = $value;\n        } else {\n            if ($value == $list1[$key - 1]) {\n                $temp[$count] = $value;\n            } else {\n                $list2[] = $temp;\n                $temp = [];\n                $count = 0;\n                $temp[$count] = $value;\n            }\n        }\n        $count++;\n    }\n    $list2[] = $temp;\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6];\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $temp = array();\n    $previous = null;\n    foreach ($list1 as $value) {\n        if ($value != $previous) {\n            if ($temp) {\n                $result[] = $temp;\n            }\n            $temp = array($value);\n        } else {\n            $temp[] = $value;\n        }\n        $previous = $value;\n    }\n    if ($temp) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$list2_index][] = $list1[$i];\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $previous = null;\n    $subarray = null;\n    foreach ($list1 as $item) {\n        if ($item !== $previous) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array();\n        }\n        $subarray[] = $item;\n        $previous = $item;\n    }\n    $result[] = $subarray;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9, 10);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $i = 0;\n    for ($j = 1; $j < count($list1); $j++) {\n        if ($list1[$j] == $list1[$j - 1]) {\n            $list2[$i][] = $list1[$j];\n        } else {\n            $i++;\n            $list2[$i] = array();\n            $list2[$i][] = $list1[$j];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n$list1 = array(1, 2, 3, 3, 3, 4, 4, 5, 6, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $count = count($list1);\n    while ($i < $count) {\n        $result[$j][] = $list1[$i];\n        if ($i == $count - 1) {\n            break;\n        }\n        if ($list1[$i] != $list1[$i + 1]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list:\\n\";\necho implode(', ', $list1).\"\\n\";\necho \"\\nPacked list:\\n\";\necho implode(', ', array_map(function($sub_array) { return implode(',', $sub_array); }, $result));\necho \"\\n\";\n",
    "    $list2 = [];\n    $list2[0] = [$list1[0]];\n    $j = 0;\n    for ($i=1; $i < count($list1); $i++) { \n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $result[$j][] = $list1[$i];\n        if ($i < count($list1) - 1 && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $j++;\n            $i++;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10);\n$result = pack_consecutive_duplicates($list1);\necho \"Original List :\\n\";\necho implode(', ', $list1);\necho \"\\nPacked List :\\n\";\necho implode(', ', array_map(function($subArray) {\n    return '[' . implode(', ', $subArray) . ']';\n}, $result));",
    "    $list2 = [];\n    $count = 0;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($i == 0) {\n            $list2[$count][] = $list1[$i];\n        } else {\n            if ($list1[$i] == $list1[$i - 1]) {\n                $list2[$count][] = $list1[$i];\n            } else {\n                $count++;\n                $list2[$count][] = $list1[$i];\n            }\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $list1_count = count($list1);\n    $i = 0;\n    while ($i < $list1_count) {\n        $j = $i + 1;\n        $temp = array($list1[$i]);\n        while ($j < $list1_count && $list1[$j] == $list1[$i]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $i = $j;\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 10, 10, 10, 10);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list :\\n\";\necho implode(', ',$list1).\"\\n\";\necho \"Packed list :\\n\";\necho implode(', ', array_map(function($inner_list){\n    return implode(', ', $inner_list);\n}, $result));\necho \"\\n\";",
    "    $result = array();\n    $result_index = -1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($i == 0 || $list1[$i] != $result[$result_index][0]) {\n            // First element of a new subarray.\n            $result[++$result_index] = array($list1[$i]);\n        } else {\n            // Another element of the current subarray.\n            $result[$result_index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list:\\n\";\nprint_r($list1);\necho \"Packed list:\\n\";\nprint_r($result);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $result[$j][$i] = $list1[$i];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $result[$j][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $list2[] = array($list1[$i]);\n            $j++;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[count($list2) - 1][] = $list1[$i];\n        } else {\n            $list2[] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = [];\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n",
    "\t$list2 = array();\n\t$list2[0] = array();\n\t$list2[0][] = $list1[0];\n\t$j = 0;\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list1[$i - 1]) {\n\t\t\t$list2[$j][] = $list1[$i];\n\t\t} else {\n\t\t\t$list2[++$j][] = $list1[$i];\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 5, 6, 7, 7, 7, 8, 8, 9);\n$list2 = pack_consecutive_duplicates($list1);\necho \"Input: \" . implode(\", \", $list1) . \"\\n\";\necho \"Output: \";\nforeach ($list2 as $sublist) {\n\techo \"(\" . implode(\", \", $sublist) . \") \";\n}\necho \"\\n\";",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array();\n            array_push($list2[$j], $list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $list1_count = count($list1);\n    for ($i = 0; $i < $list1_count; $i++) {\n        $count = 1;\n        for ($j = $i + 1; $j < $list1_count; $j++) {\n            if ($list1[$i] == $list1[$j]) {\n                $count++;\n            } else {\n                break;\n            }\n        }\n        $result[] = array_fill(0, $count, $list1[$i]);\n        $i += $count - 1;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 5, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $list2 = [];\n    $list2[0] = [];\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $result[$j][] = $list1[$i];\n        if ($i < count($list1) - 1 && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $count = count($list1);\n    while ($i < $count) {\n        $result[$j][] = $list1[$i];\n        if ($i < $count - 1 && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $temp = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        if ($list1[$i] == $list1[$i + 1]) {\n            $temp[$j] = $list1[$i];\n            $j++;\n        } else {\n            $temp[$j] = $list1[$i];\n            $j++;\n            array_push($result, $temp);\n            $temp = array();\n            $j = 0;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Input: \";\nprint_r($list1);\necho \"Output: \";\nprint_r($result);",
    "    $list2 = [];\n    $list2[0] = [$list1[0]];\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$list2_index][0]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $result[0] = array();\n    $result[0][0] = $list1[0];\n    $result[0][1] = 1;\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $result[$j][0]) {\n            $result[$j][1]++;\n        } else {\n            $j++;\n            $result[$j][0] = $list1[$i];\n            $result[$j][1] = 1;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list2[0] = [$list1[0]];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6];\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $count = 0;\n    $last_element = null;\n    foreach ($list1 as $element) {\n        if ($element == $last_element) {\n            $result[$count][] = $element;\n        } else {\n            $result[++$count] = array($element);\n        }\n        $last_element = $element;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "\t$list2 = array();\n\t$list2[0] = array($list1[0]);\n\t$j = 0;\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list2[$j][0]) {\n\t\t\tarray_push($list2[$j], $list1[$i]);\n\t\t} else {\n\t\t\t$j++;\n\t\t\t$list2[$j] = array($list1[$i]);\n\t\t}\n\t}\n\treturn $list2;\n}\n",
    "    $result = array();\n    $prev = null;\n    $count = 0;\n    foreach ($list1 as $item) {\n        if ($item != $prev) {\n            if ($count > 0) {\n                $result[] = array_fill(0, $count, $prev);\n            }\n            $prev = $item;\n            $count = 1;\n        } else {\n            $count++;\n        }\n    }\n    if ($count > 0) {\n        $result[] = array_fill(0, $count, $prev);\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7);\n$result = pack_consecutive_duplicates($list1);\necho \"Original array :\\n\";\necho implode(', ', $list1);\necho \"\\nPacked array :\\n\";\necho implode(', ', array_map(function($subArray) {\n    return '[' . implode(', ', $subArray) . ']';\n}, $result));",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $result[$j] = array($list1[$i]);\n        while ($i < count($list1) - 1 && $list1[$i] == $list1[$i + 1]) {\n            array_push($result[$j], $list1[$i + 1]);\n            $i++;\n        }\n        $i++;\n        $j++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $result_index = -1;\n    for ($i = 0; $i < count($list1); $i++) {\n        if ($i == 0 || $list1[$i] != $list1[$i - 1]) {\n            $result_index++;\n            $result[$result_index] = array($list1[$i]);\n        } else {\n            array_push($result[$result_index], $list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list: \" . implode(\", \", $list1) . \"\\n\";\necho \"Packed list: \" . implode(\", \", $result);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $count = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$count][] = $list1[$i];\n        } else {\n            $list2[++$count] = array();\n            $list2[$count][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$index], $list1[$i]);\n        } else {\n            $index++;\n            $list2[$index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = [];\n    $list2[0] = [];\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6];\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $i = 0;\n    while ($i < count($list1)) {\n        $result[$i] = array($list1[$i]);\n        $j = $i + 1;\n        while ($j < count($list1) && $list1[$i] == $list1[$j]) {\n            array_push($result[$i], $list1[$j]);\n            $j++;\n        }\n        $i = $j;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i-1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $previous = null;\n    $subarray = null;\n    foreach ($list1 as $value) {\n        if ($value !== $previous) {\n            if ($subarray) {\n                $result[] = $subarray;\n            }\n            $subarray = array($value);\n        } else {\n            $subarray[] = $value;\n        }\n        $previous = $value;\n    }\n    if ($subarray) {\n        $result[] = $subarray;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$list2_index][0]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array();\n            array_push($list2[$j], $list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $temp = array();\n    $previous = null;\n    foreach ($list1 as $value) {\n        if ($value != $previous) {\n            if (!empty($temp)) {\n                $result[] = $temp;\n            }\n            $temp = array();\n        }\n        $temp[] = $value;\n        $previous = $value;\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $list2[++$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($list1);\n    while ($i < $len) {\n        $result[$j][] = $list1[$i];\n        if ($i < $len - 1 && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10);\n$result = pack_consecutive_duplicates($list1);\necho \"Original array is :\\n\";\necho implode(', ', $list1);\necho \"\\nPacked array is :\\n\";\necho implode(', ', $result);",
    "    $result = array();\n    $list1_count = count($list1);\n    $i = 0;\n    while ($i < $list1_count) {\n        $j = $i + 1;\n        $temp = array($list1[$i]);\n        while ($j < $list1_count && $list1[$j] == $list1[$i]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $i = $j;\n    }\n    return $result;\n}\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $list1_count = count($list1);\n    $i = 0;\n    while ($i < $list1_count) {\n        $j = $i + 1;\n        $subarray = array($list1[$i]);\n        while ($j < $list1_count && $list1[$j] == $list1[$i]) {\n            $subarray[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $subarray;\n        $i = $j;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n$list1 = array(1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 1, 1, 4, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "\t$new_list = array();\n\t$count = 0;\n\t$new_list[$count] = array();\n\t$new_list[$count][] = $list1[0];\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list1[$i-1]) {\n\t\t\t$new_list[$count][] = $list1[$i];\n\t\t} else {\n\t\t\t$count++;\n\t\t\t$new_list[$count] = array();\n\t\t\t$new_list[$count][] = $list1[$i];\n\t\t}\n\t}\n\treturn $new_list;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9);\n$new_list = pack_consecutive_duplicates($list1);\nprint_r($new_list);\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($list1);\n    while ($i < $len) {\n        $result[$j][] = $list1[$i];\n        if ($i < $len - 1 && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = $list1[0];\n    $list2[1] = array();\n    $list2[1][0] = $list1[1];\n    $i = 1;\n    $j = 0;\n    for ($k = 2; $k < count($list1); $k++) {\n        if ($list1[$k] == $list1[$k - 1]) {\n            $list2[$i][$j] = $list1[$k];\n            $j++;\n        } else {\n            $i++;\n            $list2[$i] = $list1[$k];\n            $i++;\n            $list2[$i] = array();\n            $j = 0;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $current = null;\n    $count = 0;\n    foreach ($list1 as $value) {\n        if ($value != $current) {\n            if ($count > 0) {\n                $result[] = array_fill(0, $count, $current);\n            }\n            $current = $value;\n            $count = 1;\n        } else {\n            $count++;\n        }\n    }\n    if ($count > 0) {\n        $result[] = array_fill(0, $count, $current);\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 2, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $list2[++$j] = array();\n            array_push($list2[$j], $list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\necho \"Input: \" . implode(', ', $list1) . \"\\n\";\necho \"Output: \\n\";\nforeach ($list2 as $sublist) {\n    echo implode(', ', $sublist) . \"\\n\";\n}",
    "    $result = array();\n    $prev = null;\n    $count = 0;\n    foreach ($list1 as $item) {\n        if ($item != $prev) {\n            if ($count > 0) {\n                $result[] = array_fill(0, $count, $prev);\n            }\n            $prev = $item;\n            $count = 1;\n        } else {\n            $count++;\n        }\n    }\n    if ($count > 0) {\n        $result[] = array_fill(0, $count, $prev);\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    while ($i < count($list1)) {\n        $result[$j][] = $list1[$i];\n        if ($i < count($list1) - 1 && $list1[$i] != $list1[$i + 1]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list: \";\necho implode(\", \", $list1);\necho \"\\n\";\necho \"Packed list: \";\necho implode(\", \", $result);\necho \"\\n\";",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < sizeof($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[sizeof($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n",
    "    $result = array();\n    $result[0] = array();\n    $result[0][] = $list1[0];\n    $index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[$index][] = $list1[$i];\n        } else {\n            $index++;\n            $result[$index][] = $list1[$i];\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $temp = array();\n    $count = 0;\n    $list_length = count($list1);\n    for ($i = 0; $i < $list_length; $i++) {\n        if ($i == $list_length - 1) {\n            if ($list1[$i] == $list1[$i - 1]) {\n                $temp[$count] = $list1[$i];\n                $count++;\n                $result[] = $temp;\n            } else {\n                $temp[$count] = $list1[$i - 1];\n                $count++;\n                $result[] = $temp;\n                $temp = array();\n                $count = 0;\n                $temp[$count] = $list1[$i];\n                $count++;\n                $result[] = $temp;\n            }\n        } else {\n            if ($list1[$i] == $list1[$i + 1]) {\n                $temp[$count] = $list1[$i];\n                $count++;\n            } else {\n                $temp[$count] = $list1[$i];\n                $count++;\n                $result[] = $temp;\n                $temp = array();\n                $count = 0;\n            }\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $result = array();\n    $list1_count = count($list1);\n    for ($i = 0; $i < $list1_count; $i++) {\n        $result[$i][] = $list1[$i];\n        for ($j = $i + 1; $j < $list1_count; $j++) {\n            if ($list1[$i] == $list1[$j]) {\n                $result[$i][] = $list1[$j];\n                $i++;\n            } else {\n                break;\n            }\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list :\\n\";\necho implode(', ', $list1).\"\\n\";\necho \"\\nPacked list :\\n\";\necho implode(', ', array_map(function($sub_array) {\n    return '['.implode(', ', $sub_array).']';\n}, $result));\necho \"\\n\";\n",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = [];\n    $list2[] = [$list1[0]];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[count($list2) - 1][0]) {\n            $list2[count($list2) - 1][] = $list1[$i];\n        } else {\n            $list2[] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $result = array();\n    $list1_count = count($list1);\n    for ($i = 0; $i < $list1_count; $i++) {\n        if (isset($list1[$i + 1]) && $list1[$i] === $list1[$i + 1]) {\n            $temp_array = array($list1[$i]);\n            for ($j = $i + 1; ; $j++) {\n                if (!isset($list1[$j]) || $list1[$i] !== $list1[$j]) {\n                    break;\n                }\n                $temp_array[] = $list1[$j];\n            }\n            $result[] = $temp_array;\n            $i = $j - 1;\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list :\\n\";\necho implode(', ', $list1);\necho \"\\nPacked list:\\n\";\necho implode(', ', array_map(function ($sub_array) {\n    return '[' . implode(', ', $sub_array) . ']';\n}, $result));\necho \"\\n\";\n",
    "    $list2 = [];\n    $list2[0] = [];\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(pack_consecutive_duplicates($list1));\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6);\n$list2 = pack_consecutive_duplicates($list1);\necho \"Input array: \";\nprint_r($list1);\necho \"Output array: \";\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$list2_index][0]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = [];\n    $count = 0;\n    $list2[$count] = [];\n    $list2[$count][] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$count][] = $list1[$i];\n        } else {\n            $count++;\n            $list2[$count] = [];\n            $list2[$count][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 8, 8, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($list1);\n    while ($i < $len) {\n        $result[$j][] = $list1[$i];\n        if ($i + 1 < $len && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Original array: \";\necho \"<br>\";\necho implode(', ', $list1);\necho \"<br>\";\necho \"<br>\";\necho \"Packed array: \";\necho \"<br>\";\necho implode(', ', $result[0]);\necho \"<br>\";\necho implode(', ', $result[1]);\necho \"<br>\";\necho implode(', ', $result[2]);\necho \"<br>\";\necho implode(', ', $result[3]);\necho \"<br>\";\necho implode(', ', $result[4]);\necho \"<br>\";\necho implode(', ', $result[5]);\necho \"<br>\";\necho implode(', ', $result[6]);\necho \"<br>\";\necho implode(', ', $result[7]);\necho \"<br>\";\necho implode(', ', $result[8]);\necho \"<br>\";\necho implode(', ', $result[9]);\necho \"<br>\";\necho implode(', ', $result[10]);\necho \"<br>\";\necho implode(', ', $result[11]);\necho \"<br>\";\necho implode(', ', $result[12]);\necho \"<br>\";\necho implode(', ', $result[13]);\necho \"<br>\";\necho implode(', ', $result[14]);\necho \"<br",
    "    $list2 = [];\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n$list1 = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $list2[++$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = [];\n    $list2[0] = [$list1[0]];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = [$list1[$i]];\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6];\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));\n",
    "\t$list2 = array();\n\t$list2[0] = array($list1[0]);\n\t$list2_index = 0;\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list1[$i - 1]) {\n\t\t\tarray_push($list2[$list2_index], $list1[$i]);\n\t\t} else {\n\t\t\t$list2_index++;\n\t\t\t$list2[$list2_index] = array($list1[$i]);\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $list2 = array();\n    $list2[0] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[$j][0]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $result = array();\n    $list1_count = count($list1);\n    $i = 0;\n    while ($i < $list1_count) {\n        $j = $i + 1;\n        $temp = array($list1[$i]);\n        while ($j < $list1_count && $list1[$j] == $list1[$i]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $i = $j;\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Original list :\\n\";\necho implode(', ',$list1).\"\\n\";\necho \"Packed list :\\n\";\necho implode(', ', array_map(function($inner_list) {\n    return implode(',', $inner_list);\n}, $result));\necho \"\\n\";",
    "    $result = array();\n    $result[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($result[$j], $list1[$i]);\n        } else {\n            $j++;\n            $result[$j] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for($i = 1; $i < count($list1); $i++) {\n        if($list1[$i] == $list1[$i-1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $result = array();\n    $temp = array();\n    $previous = null;\n    foreach ($list1 as $value) {\n        if ($value != $previous) {\n            if (!empty($temp)) {\n                $result[] = $temp;\n            }\n            $temp = array();\n        }\n        $temp[] = $value;\n        $previous = $value;\n    }\n    if (!empty($temp)) {\n        $result[] = $temp;\n    }\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $result = array();\n    $i = 0;\n    $j = 0;\n    $list1_size = count($list1);\n    while ($i < $list1_size) {\n        $result[$j][] = $list1[$i];\n        if ($i + 1 < $list1_size && $list1[$i] == $list1[$i + 1]) {\n            $i++;\n        } else {\n            $j++;\n            $i++;\n        }\n    }\n    return $result;\n}\n",
    "    $list2 = array();\n    $list3 = array();\n    $list4 = array();\n    $list5 = array();\n    $list6 = array();\n    $list7 = array();\n    $list8 = array();\n    $list9 = array();\n    $list10 = array();\n    $list11 = array();\n    $list12 = array();\n    $list13 = array();\n    $list14 = array();\n    $list15 = array();\n    $list16 = array();\n    $list17 = array();\n    $list18 = array();\n    $list19 = array();\n    $list20 = array();\n    $list21 = array();\n    $list22 = array();\n    $list23 = array();\n    $list24 = array();\n    $list25 = array();\n    $list26 = array();\n    $list27 = array();\n    $list28 = array();\n    $list29 = array();\n    $list30 = array();\n    $list31 = array();\n    $list32 = array();\n    $list33 = array();\n    $list34 = array();\n    $list35 = array();\n    $list36 = array();\n    $list37 = array();\n    $list38 = array();\n    $list39 = array();\n    $list40 = array();\n    $list41 = array();\n    $list42 = array();\n    $list43 = array();\n    $list44 = array();\n    $list45 = array();\n    $list46 = array();\n    $list47 = array();\n    $list48 = array();\n    $list49 = array();\n    $list50 = array();\n    $list51 = array();\n    $list52 = array();\n    $list53 = array();\n    $list54 = array();\n    $list55 = array();\n    $list56 = array();\n    $list57 = array();\n    $list58 = array();\n    $list59 = array();\n    $list60 = array();\n    $list61 = array();\n    $list62 = array();\n    $list63 = array();\n    $list64 = array();\n    $list65 = array();",
    "\t$list2 = array();\n\t$list3 = array();\n\t$list4 = array();\n\t$list5 = array();\n\t$list6 = array();\n\t$list7 = array();\n\t$list8 = array();\n\t$list9 = array();\n\t$list10 = array();\n\t$list11 = array();\n\t$list12 = array();\n\t$list13 = array();\n\t$list14 = array();\n\t$list15 = array();\n\t$list16 = array();\n\t$list17 = array();\n\t$list18 = array();\n\t$list19 = array();\n\t$list20 = array();\n\t$list21 = array();\n\t$list22 = array();\n\t$list23 = array();\n\t$list24 = array();\n\t$list25 = array();\n\t$list26 = array();\n\t$list27 = array();\n\t$list28 = array();\n\t$list29 = array();\n\t$list30 = array();\n\t$list31 = array();\n\t$list32 = array();\n\t$list33 = array();\n\t$list34 = array();\n\t$list35 = array();\n\t$list36 = array();\n\t$list37 = array();\n\t$list38 = array();\n\t$list39 = array();\n\t$list40 = array();\n\t$list41 = array();\n\t$list42 = array();\n\t$list43 = array();\n\t$list44 = array();\n\t$list45 = array();\n\t$list46 = array();\n\t$list47 = array();\n\t$list48 = array();\n\t$list49 = array();\n\t$list50 = array();\n\t$list51 = array();\n\t$list52 = array();\n\t$list53 = array();\n\t$list54 = array();\n\t$list55 = array();\n\t$list56 = array();\n\t$list57 = array();\n\t$list58 = array();\n\t$list59 = array();\n\t$list60 = array();\n\t$list61 = array();\n\t$list62 = array();\n\t$list63 = array();\n\t$list64 = array();\n\t$list65 = array();",
    "    $list2 = array();\n    $list3 = array();\n    $count = 0;\n    $count1 = 0;\n    $count2 = 0;\n    $count3 = 0;\n    $count4 = 0;\n    $count5 = 0;\n    $count6 = 0;\n    $count7 = 0;\n    $count8 = 0;\n    $count9 = 0;\n    $count10 = 0;\n    $count11 = 0;\n    $count12 = 0;\n    $count13 = 0;\n    $count14 = 0;\n    $count15 = 0;\n    $count16 = 0;\n    $count17 = 0;\n    $count18 = 0;\n    $count19 = 0;\n    $count20 = 0;\n    $count21 = 0;\n    $count22 = 0;\n    $count23 = 0;\n    $count24 = 0;\n    $count25 = 0;\n    $count26 = 0;\n    $count27 = 0;\n    $count28 = 0;\n    $count29 = 0;\n    $count30 = 0;\n    $count31 = 0;\n    $count32 = 0;\n    $count33 = 0;\n    $count34 = 0;\n    $count35 = 0;\n    $count36 = 0;\n    $count37 = 0;\n    $count38 = 0;\n    $count39 = 0;\n    $count40 = 0;\n    $count41 = 0;\n    $count42 = 0;\n    $count43 = 0;\n    $count44 = 0;\n    $count45 = 0;\n    $count46 = 0;\n    $count47 = 0;\n    $count48 = 0;\n    $count49 = 0;\n    $count50 = 0;\n    $count51 = 0;\n    $count52 = 0;\n    $count53 = 0;\n    $count54 = 0;\n    $count55 = 0;\n    $count56 = 0;\n    $count57 = 0;\n    $count58 = 0;\n    $count59 = 0;\n    $count60 = 0;\n    $count61 = 0;\n",
    "    $list2 = array();\n    $list2[0] = array();\n    $list2[0][] = $list1[0];\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n",
    "    $result = array();\n    $result[0] = array($list1[0]);\n    $i = 0;\n    $j = 0;\n    for ($j = 1; $j < count($list1); $j++) {\n        if ($list1[$j] == $result[$i][0]) {\n            array_push($result[$i], $list1[$j]);\n        } else {\n            $i++;\n            $result[$i] = array($list1[$j]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    $list2 = array();\n    $list2[] = array($list1[0]);\n    $i = 0;\n    for ($j = 1; $j < count($list1); $j++) {\n        if ($list1[$j] == $list2[$i][0]) {\n            $list2[$i][] = $list1[$j];\n        } else {\n            $i++;\n            $list2[] = array($list1[$j]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "    $result = array();\n    $list1_count = count($list1);\n    $i = 0;\n    while ($i < $list1_count) {\n        $j = $i + 1;\n        $temp = array($list1[$i]);\n        while ($j < $list1_count && $list1[$j] == $list1[$i]) {\n            $temp[] = $list1[$j];\n            $j++;\n        }\n        $result[] = $temp;\n        $i = $j;\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 6, 7, 7, 8, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $list2[$j][] = $list1[$i];\n        } else {\n            $j++;\n            $list2[$j][] = $list1[$i];\n        }\n    }\n    return $list2;\n}\n",
    "    $result = array();\n    $temp = array();\n    $temp[] = $list1[0];\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $temp[] = $list1[$i];\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $list1[$i];\n        }\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\necho \"Original List :\\n\";\necho implode(\", \", $list1);\necho \"\\nPacked List :\\n\";\necho implode(\", \", $result);",
    "\t$list2 = array();\n\t$list2[0] = array($list1[0]);\n\t$j = 0;\n\tfor ($i = 1; $i < count($list1); $i++) {\n\t\tif ($list1[$i] == $list1[$i-1]) {\n\t\t\tarray_push($list2[$j], $list1[$i]);\n\t\t} else {\n\t\t\t$j++;\n\t\t\t$list2[$j] = array($list1[$i]);\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);\n",
    "    $result = array();\n    $result[0] = array($list1[0]);\n    $count = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $result[$count][0]) {\n            array_push($result[$count], $list1[$i]);\n        } else {\n            $count++;\n            $result[$count] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9);\n$result = pack_consecutive_duplicates($list1);\nprint_r($result);",
    "    $result = array();\n    $temp = array();\n    $prev = $list1[0];\n    foreach ($list1 as $value) {\n        if ($value == $prev) {\n            $temp[] = $value;\n        } else {\n            $result[] = $temp;\n            $temp = array();\n            $temp[] = $value;\n        }\n        $prev = $value;\n    }\n    $result[] = $temp;\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 6, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $j = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$j], $list1[$i]);\n        } else {\n            $j++;\n            $list2[$j] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $result[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            $result[count($result) - 1][] = $list1[$i];\n        } else {\n            $result[] = array($list1[$i]);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 7, 8, 8, 9, 9, 9);\nprint_r(pack_consecutive_duplicates($list1));",
    "    $list2 = array();\n    $list2[0] = array($list1[0]);\n    $list2_index = 0;\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list1[$i - 1]) {\n            array_push($list2[$list2_index], $list1[$i]);\n        } else {\n            $list2_index++;\n            $list2[$list2_index] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, 2, 3, 4, 4, 4, 5, 6, 7, 7, 7, 7, 8, 8, 9);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);",
    "    $result = array();\n    $temp = array();\n    $prev = null;\n    foreach ($list1 as $key => $value) {\n        if ($value !== $prev) {\n            if (!empty($temp)) {\n                array_push($result, $temp);\n            }\n            $temp = array();\n        }\n        array_push($temp, $value);\n        $prev = $value;\n    }\n    array_push($result, $temp);\n    return $result;\n}\n$list1 = array(1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6);\n$result = pack_consecutive_duplicates($list1);\necho \"Original array :\\n\";\necho implode(', ',$list1).\"\\n\";\necho \"\\nAfter packing consecutive duplicates of the said array:\\n\";\necho implode(', ', array_map(function($arr) {\n    return '['.implode(', ', $arr).']';\n}, $result));",
    "    $list2 = array();\n    $list2[] = array($list1[0]);\n    for ($i = 1; $i < count($list1); $i++) {\n        if ($list1[$i] == $list2[count($list2) - 1][0]) {\n            $list2[count($list2) - 1][] = $list1[$i];\n        } else {\n            $list2[] = array($list1[$i]);\n        }\n    }\n    return $list2;\n}\n$list1 = array(1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6);\n$list2 = pack_consecutive_duplicates($list1);\nprint_r($list2);"
  ]
}
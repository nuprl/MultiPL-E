{
  "name": "mbpp_452_loss_amount",
  "language": "php",
  "prompt": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if ($loss_amount > 0) {\n        return $loss_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dbumdfb.php:23\nStack trace:\n#0 /tmp/tmp3dbumdfb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3dbumdfb.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps88wwomr.php:17\nStack trace:\n#0 /tmp/tmps88wwomr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps88wwomr.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 200);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp902hs0xb.php:26\nStack trace:\n#0 /tmp/tmp902hs0xb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp902hs0xb.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 800);\necho \"\\n\";\necho loss_amount(1000, 1200);\necho \"\\n\";\necho loss_amount(1000, 1000);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "200\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp3q7bu8.php:22\nStack trace:\n#0 /tmp/tmpsp3q7bu8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsp3q7bu8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($sale_amount < $actual_cost) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qisrz1h.php:17\nStack trace:\n#0 /tmp/tmp4qisrz1h.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp4qisrz1h.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(150, 100);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50<br>0<br>0<br>0<br>50<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbpnax2vx.php:27\nStack trace:\n#0 /tmp/tmpbpnax2vx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbpnax2vx.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxyzsnnj.php:21\nStack trace:\n#0 /tmp/tmpdxyzsnnj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdxyzsnnj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76t3l7to.php:21\nStack trace:\n#0 /tmp/tmp76t3l7to.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp76t3l7to.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 900);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzurbvhw_.php:18\nStack trace:\n#0 /tmp/tmpzurbvhw_.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzurbvhw_.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cvjrqq6.php:16\nStack trace:\n#0 /tmp/tmp0cvjrqq6.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0cvjrqq6.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrja8vqx.php:22\nStack trace:\n#0 /tmp/tmpzrja8vqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrja8vqx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsalhxz47.php:23\nStack trace:\n#0 /tmp/tmpsalhxz47.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsalhxz47.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1jdyzui.php:21\nStack trace:\n#0 /tmp/tmpq1jdyzui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq1jdyzui.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxi51tli.php:21\nStack trace:\n#0 /tmp/tmpcxi51tli.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxi51tli.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\treturn 0;\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122693,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpii375gon.php:16\nStack trace:\n#0 /tmp/tmpii375gon.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpii375gon.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbenwzh1n.php:23\nStack trace:\n#0 /tmp/tmpbenwzh1n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbenwzh1n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1r9az744.php:20\nStack trace:\n#0 /tmp/tmp1r9az744.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1r9az744.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xobjdos.php:22\nStack trace:\n#0 /tmp/tmp0xobjdos.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp0xobjdos.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19394cz1.php:20\nStack trace:\n#0 /tmp/tmp19394cz1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp19394cz1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqr9nu3o.php:21\nStack trace:\n#0 /tmp/tmpzqr9nu3o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzqr9nu3o.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrybptbs.php:16\nStack trace:\n#0 /tmp/tmphrybptbs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmphrybptbs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwoh1fdjo.php:19\nStack trace:\n#0 /tmp/tmpwoh1fdjo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwoh1fdjo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0fjs_9bo.php:21\nStack trace:\n#0 /tmp/tmp0fjs_9bo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0fjs_9bo.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 200);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1300);\necho \"\\n\";\necho loss_amount(100, -1400);\necho \"\\n\";\necho loss_amount(100, -1500);\necho \"\\n\";\necho loss_amount(100, -1600);\necho \"\\n\";\necho loss_amount(100, -1700);\necho \"\\n\";\necho loss_amount(100, -1800);\necho \"\\n\";\necho loss_amount(100, -1900);\necho \"\\n\";\necho loss_amount(100, -2000);\necho \"\\n\";\necho loss_amount(100, -2100);\necho \"\\n\";\necho loss_amount(100, -2200);\necho \"\\n\";\necho loss_amount(100, -2300);\necho \"\\n\";\necho\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpb5fs1f2b.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev40afs7.php:18\nStack trace:\n#0 /tmp/tmpev40afs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpev40afs7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n  $loss = $actual_cost - $sale_amount;\n  if($loss > 0) {\n    return $loss;\n  }\n  return 0;\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpshoyyo8c.php:19\nStack trace:\n#0 /tmp/tmpshoyyo8c.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpshoyyo8c.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp001aab_0.php:24\nStack trace:\n#0 /tmp/tmp001aab_0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp001aab_0.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\necho loss_amount(50, 0);\necho \"\\n\";\necho loss_amount(0, 50);\necho \"\\n\";\necho loss_amount(0, 0);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(0, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n50\n0\n0\n100\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6unie9rt.php:36\nStack trace:\n#0 /tmp/tmp6unie9rt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6unie9rt.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbu8u82x.php:22\nStack trace:\n#0 /tmp/tmpbbu8u82x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbbu8u82x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5slbr1yn.php:21\nStack trace:\n#0 /tmp/tmp5slbr1yn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5slbr1yn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 150);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35oz4glc.php:20\nStack trace:\n#0 /tmp/tmp35oz4glc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp35oz4glc.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijsdk4ze.php:18\nStack trace:\n#0 /tmp/tmpijsdk4ze.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpijsdk4ze.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipllid3_.php:19\nStack trace:\n#0 /tmp/tmpipllid3_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpipllid3_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4xb1jol6.php:24\nStack trace:\n#0 /tmp/tmp4xb1jol6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4xb1jol6.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0v4g46lh.php:23\nStack trace:\n#0 /tmp/tmp0v4g46lh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0v4g46lh.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        echo \"Loss amount is: $loss\";\n    } else {\n        echo \"No loss\";\n    }\n}\n\nloss_amount(1000, 900);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Loss amount is: 100Loss amount is: 300\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjhalnbz3.php:18\nStack trace:\n#0 /tmp/tmpjhalnbz3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpjhalnbz3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow6j8d0a.php:17\nStack trace:\n#0 /tmp/tmpow6j8d0a.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpow6j8d0a.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps88wwomr.php:17\nStack trace:\n#0 /tmp/tmps88wwomr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmps88wwomr.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfrk72_c.php:20\nStack trace:\n#0 /tmp/tmpdfrk72_c.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdfrk72_c.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5slbr1yn.php:21\nStack trace:\n#0 /tmp/tmp5slbr1yn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5slbr1yn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\necho loss_amount(50, 150);\necho \"\\n\";\necho loss_amount(50, 0);\necho \"\\n\";\necho loss_amount(0, 50);\necho \"\\n\";\necho loss_amount(0, 0);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n0\n0\n50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuahgnzun.php:35\nStack trace:\n#0 /tmp/tmpuahgnzun.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpuahgnzun.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoblcv222.php:19\nStack trace:\n#0 /tmp/tmpoblcv222.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpoblcv222.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        echo \"Loss amount is $loss\";\n    } else {\n        echo \"No loss\";\n    }\n}\nloss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Loss amount is 500Loss amount is 300\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d2fw8iy.php:17\nStack trace:\n#0 /tmp/tmp_d2fw8iy.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_d2fw8iy.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1jwurgo.php:19\nStack trace:\n#0 /tmp/tmpy1jwurgo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpy1jwurgo.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyis4jgzi.php:21\nStack trace:\n#0 /tmp/tmpyis4jgzi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyis4jgzi.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfueqydn.php:17\nStack trace:\n#0 /tmp/tmppfueqydn.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppfueqydn.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijsdk4ze.php:18\nStack trace:\n#0 /tmp/tmpijsdk4ze.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpijsdk4ze.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\necho \"\\n\";\necho loss_amount(500, 1000);\necho \"\\n\";\necho loss_amount(1000, 1000);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsak5ntfx.php:22\nStack trace:\n#0 /tmp/tmpsak5ntfx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsak5ntfx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavq168me.php:23\nStack trace:\n#0 /tmp/tmpavq168me.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpavq168me.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -250);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -350);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -450);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -550);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -650);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -750);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -850);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -950);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1050);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1150);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1250);\necho \"\\n\";\necho loss\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpftuvjjgo.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpe6esst.php:18\nStack trace:\n#0 /tmp/tmphpe6esst.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphpe6esst.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpe6esst.php:18\nStack trace:\n#0 /tmp/tmphpe6esst.php(23): test()\n#1 {main}\n  thrown in /tmp/tmphpe6esst.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\n\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp33hiigxv.php:20\nStack trace:\n#0 /tmp/tmp33hiigxv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp33hiigxv.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 90;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvribc0cw.php:20\nStack trace:\n#0 /tmp/tmpvribc0cw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpvribc0cw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 800);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "200\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqqlqwv3f.php:18\nStack trace:\n#0 /tmp/tmpqqlqwv3f.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpqqlqwv3f.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev40afs7.php:18\nStack trace:\n#0 /tmp/tmpev40afs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpev40afs7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7ryiesg.php:21\nStack trace:\n#0 /tmp/tmpj7ryiesg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj7ryiesg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(150, 100);\necho \"\\n\";\necho loss_amount(150, 150);\necho \"\\n\";\necho loss_amount(150, 50);\necho \"\\n\";\necho loss_amount(50, 150);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n0\n50\n0\n100\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwwxx4xr.php:38\nStack trace:\n#0 /tmp/tmpzwwxx4xr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzwwxx4xr.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif ($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprbqrz1rh.php:16\nStack trace:\n#0 /tmp/tmprbqrz1rh.php(21): test()\n#1 {main}\n  thrown in /tmp/tmprbqrz1rh.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50) . \"\\n\";\necho loss_amount(100, 150) . \"\\n\";\necho loss_amount(100, 100) . \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsyc6aog.php:21\nStack trace:\n#0 /tmp/tmppsyc6aog.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppsyc6aog.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 800);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "200\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wlsy4vz.php:19\nStack trace:\n#0 /tmp/tmp2wlsy4vz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2wlsy4vz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(50, 100);\necho \"<br>\";\necho loss_amount(100, 100);\necho \"<br>\";\necho loss_amount(50, 50);\necho \"<br>\";\necho loss_amount(100, 150);\necho \"<br>\";\necho loss_amount(150, 100);\necho \"<br>\";\necho loss_amount(150, 150);\necho \"<br>\";\necho loss_amount(150, 200);\necho \"<br>\";\necho loss_amount(200, 150);\necho \"<br>\";\necho loss_amount(200, 200);\necho \"<br>\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50<br>0<br>0<br>0<br>0<br>50<br>0<br>0<br>50<br>0<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgp3n2u2.php:36\nStack trace:\n#0 /tmp/tmpxgp3n2u2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxgp3n2u2.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n100\n150\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5skx739l.php:27\nStack trace:\n#0 /tmp/tmp5skx739l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5skx739l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16tncft3.php:22\nStack trace:\n#0 /tmp/tmp16tncft3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp16tncft3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho \"Loss amount is: \" . loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Loss amount is: 50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp69zj444q.php:21\nStack trace:\n#0 /tmp/tmp69zj444q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp69zj444q.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1p6ggb9j.php:24\nStack trace:\n#0 /tmp/tmp1p6ggb9j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1p6ggb9j.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrja8vqx.php:22\nStack trace:\n#0 /tmp/tmpzrja8vqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrja8vqx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\necho loss_amount(50, 0);\necho \"\\n\";\necho loss_amount(0, 50);\necho \"\\n\";\necho loss_amount(0, 0);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(0, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n50\n0\n0\n100\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpok2cpq3a.php:35\nStack trace:\n#0 /tmp/tmpok2cpq3a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpok2cpq3a.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\n$loss = loss_amount($actual_cost, $sale_amount);\necho \"Loss amount is $loss\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Loss amount is 50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_qu3sf1d.php:21\nStack trace:\n#0 /tmp/tmp_qu3sf1d.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_qu3sf1d.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif ($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho \"Loss amount is \" . loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "Loss amount is 50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3d3k6sxc.php:19\nStack trace:\n#0 /tmp/tmp3d3k6sxc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp3d3k6sxc.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(0, 0);\necho \"\\n\";\necho loss_amount(0, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n100\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykgup978.php:30\nStack trace:\n#0 /tmp/tmpykgup978.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykgup978.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprq66x6o0.php:17\nStack trace:\n#0 /tmp/tmprq66x6o0.php(22): test()\n#1 {main}\n  thrown in /tmp/tmprq66x6o0.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtmyg82f.php:21\nStack trace:\n#0 /tmp/tmpqtmyg82f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqtmyg82f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7ryiesg.php:21\nStack trace:\n#0 /tmp/tmpj7ryiesg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj7ryiesg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q2p1z8m.php:17\nStack trace:\n#0 /tmp/tmp7q2p1z8m.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7q2p1z8m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrja8vqx.php:22\nStack trace:\n#0 /tmp/tmpzrja8vqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrja8vqx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t708d9h.php:18\nStack trace:\n#0 /tmp/tmp5t708d9h.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5t708d9h.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 200);\necho \"\\n\";\necho loss_amount(200, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "0\n100\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpja710mgh.php:23\nStack trace:\n#0 /tmp/tmpja710mgh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpja710mgh.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0n74gz_.php:16\nStack trace:\n#0 /tmp/tmpd0n74gz_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd0n74gz_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if($loss_amount > 0) {\n        return $loss_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_o5j6yt.php:20\nStack trace:\n#0 /tmp/tmph_o5j6yt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph_o5j6yt.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcfy3w3me.php:16\nStack trace:\n#0 /tmp/tmpcfy3w3me.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpcfy3w3me.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\necho \"\\n\";\necho loss_amount(1000, 1500);\necho \"\\n\";\necho loss_amount(1000, 1000);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg57958lk.php:24\nStack trace:\n#0 /tmp/tmpg57958lk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpg57958lk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(150, 100);\necho \"\\n\";\necho loss_amount(150, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpexbcfeg0.php:27\nStack trace:\n#0 /tmp/tmpexbcfeg0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpexbcfeg0.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxdx8z55.php:22\nStack trace:\n#0 /tmp/tmpjxdx8z55.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjxdx8z55.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrybptbs.php:16\nStack trace:\n#0 /tmp/tmphrybptbs.php(21): test()\n#1 {main}\n  thrown in /tmp/tmphrybptbs.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7q2p1z8m.php:17\nStack trace:\n#0 /tmp/tmp7q2p1z8m.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7q2p1z8m.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -250);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -350);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -450);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -550);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -650);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -750);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -850);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -950);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1050);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1150);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100, -1250);\necho \"\\n\";\necho loss\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpftuvjjgo.php on line 71\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n100\n150\n250\n200\n300\n400\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpit2x5n8w.php:36\nStack trace:\n#0 /tmp/tmpit2x5n8w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpit2x5n8w.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif ($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80lk4va2.php:18\nStack trace:\n#0 /tmp/tmp80lk4va2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp80lk4va2.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sqw96xu.php:20\nStack trace:\n#0 /tmp/tmp7sqw96xu.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7sqw96xu.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev40afs7.php:18\nStack trace:\n#0 /tmp/tmpev40afs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpev40afs7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(200, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9wvozh0.php:18\nStack trace:\n#0 /tmp/tmpg9wvozh0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpg9wvozh0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\necho \"\\n\";\necho loss_amount(1000, 1500);\necho \"\\n\";\necho loss_amount(1000, 1000);\necho \"\\n\";\necho loss_amount(1000, 2000);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0urkgmjv.php:26\nStack trace:\n#0 /tmp/tmp0urkgmjv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0urkgmjv.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\necho loss_amount(50, 25);\necho \"\\n\";\necho loss_amount(100, 75);\necho \"\\n\";\necho loss_amount(75, 100);\necho \"\\n\";\necho loss_amount(75, 75);\necho \"\\n\";\necho loss_amount(75, 50);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n0\n25\n25\n0\n0\n25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_v58dxq9.php:37\nStack trace:\n#0 /tmp/tmp_v58dxq9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_v58dxq9.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrja8vqx.php:22\nStack trace:\n#0 /tmp/tmpzrja8vqx.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzrja8vqx.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxif4qajt.php:19\nStack trace:\n#0 /tmp/tmpxif4qajt.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxif4qajt.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50) . \"\\n\";\necho loss_amount(100, 150) . \"\\n\";\necho loss_amount(100, 100) . \"\\n\";\necho loss_amount(100, 0) . \"\\n\";\necho loss_amount(100, -50) . \"\\n\";\necho loss_amount(100, -150) . \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n100\n150\n250\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3okqm2d.php:24\nStack trace:\n#0 /tmp/tmpb3okqm2d.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpb3okqm2d.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if($loss_amount < 0) {\n        return 0;\n    }\n    return $loss_amount;\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq4d3qzj.php:19\nStack trace:\n#0 /tmp/tmpdq4d3qzj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdq4d3qzj.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n100\n150\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5skx739l.php:27\nStack trace:\n#0 /tmp/tmp5skx739l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5skx739l.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\n$actual_cost = 100;\n$sale_amount = 50;\necho loss_amount($actual_cost, $sale_amount);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19394cz1.php:20\nStack trace:\n#0 /tmp/tmp19394cz1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp19394cz1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkvhfqcu.php:15\nStack trace:\n#0 /tmp/tmpdkvhfqcu.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpdkvhfqcu.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\necho loss_amount(1000, 800);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "200\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7hy4uirt.php:18\nStack trace:\n#0 /tmp/tmp7hy4uirt.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp7hy4uirt.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikxvb4sx.php:19\nStack trace:\n#0 /tmp/tmpikxvb4sx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpikxvb4sx.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsalhxz47.php:23\nStack trace:\n#0 /tmp/tmpsalhxz47.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpsalhxz47.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeye831je.php:18\nStack trace:\n#0 /tmp/tmpeye831je.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpeye831je.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxi51tli.php:21\nStack trace:\n#0 /tmp/tmpcxi51tli.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxi51tli.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 500);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijsdk4ze.php:18\nStack trace:\n#0 /tmp/tmpijsdk4ze.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpijsdk4ze.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n100\n150\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6mkccyc.php:28\nStack trace:\n#0 /tmp/tmpz6mkccyc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz6mkccyc.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj2_f5_4.php:16\nStack trace:\n#0 /tmp/tmptj2_f5_4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmptj2_f5_4.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbenwzh1n.php:23\nStack trace:\n#0 /tmp/tmpbenwzh1n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbenwzh1n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(50, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9hk99g9.php:25\nStack trace:\n#0 /tmp/tmpd9hk99g9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd9hk99g9.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbenwzh1n.php:23\nStack trace:\n#0 /tmp/tmpbenwzh1n.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbenwzh1n.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xbw0ndp.php:17\nStack trace:\n#0 /tmp/tmp2xbw0ndp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2xbw0ndp.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0n74gz_.php:16\nStack trace:\n#0 /tmp/tmpd0n74gz_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpd0n74gz_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqabfxwdu.php:19\nStack trace:\n#0 /tmp/tmpqabfxwdu.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqabfxwdu.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(500, 400);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxubs1c9r.php:17\nStack trace:\n#0 /tmp/tmpxubs1c9r.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpxubs1c9r.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63oobns6.php:17\nStack trace:\n#0 /tmp/tmp63oobns6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp63oobns6.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 10);\necho \"\\n\";\necho loss_amount(100, 0);\necho \"\\n\";\necho loss_amount(100, -10);\necho \"\\n\";\necho loss_amount(100, -100);\necho \"\\n\";\necho loss_amount(100, -150);\necho \"\\n\";\necho loss_amount(100, -200);\necho \"\\n\";\necho loss_amount(100, -250);\necho \"\\n\";\necho loss_amount(100, -300);\necho \"\\n\";\necho loss_amount(100, -350);\necho \"\\n\";\necho loss_amount(100, -400);\necho \"\\n\";\necho loss_amount(100, -450);\necho \"\\n\";\necho loss_amount(100, -500);\necho \"\\n\";\necho loss_amount(100, -550);\necho \"\\n\";\necho loss_amount(100, -600);\necho \"\\n\";\necho loss_amount(100, -650);\necho \"\\n\";\necho loss_amount(100, -700);\necho \"\\n\";\necho loss_amount(100, -750);\necho \"\\n\";\necho loss_amount(100, -800);\necho \"\\n\";\necho loss_amount(100, -850);\necho \"\\n\";\necho loss_amount(100, -900);\necho \"\\n\";\necho loss_amount(100, -950);\necho \"\\n\";\necho loss_amount(100, -1000);\necho \"\\n\";\necho loss_amount(100, -1050);\necho \"\\n\";\necho loss_amount(100, -1100);\necho \"\\n\";\necho loss_amount(100, -1150);\necho \"\\n\";\necho loss_amount(100, -1200);\necho \"\\n\";\necho loss_amount(100,\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp2wnnzdpb.php on line 70\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76t3l7to.php:21\nStack trace:\n#0 /tmp/tmp76t3l7to.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp76t3l7to.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxyzsnnj.php:21\nStack trace:\n#0 /tmp/tmpdxyzsnnj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdxyzsnnj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    }\n    return 0;\n}\n\necho loss_amount(100, 50);\necho loss_amount(50, 100);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "500\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnn_1f57f.php:17\nStack trace:\n#0 /tmp/tmpnn_1f57f.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpnn_1f57f.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkfofw1z.php:22\nStack trace:\n#0 /tmp/tmpqkfofw1z.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqkfofw1z.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(1000, 800);\necho \"<br>\";\necho loss_amount(1000, 1200);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "200<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmm6uqly.php:21\nStack trace:\n#0 /tmp/tmpkmm6uqly.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkmm6uqly.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjly0006s.php:17\nStack trace:\n#0 /tmp/tmpjly0006s.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpjly0006s.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5_s4cl2.php:22\nStack trace:\n#0 /tmp/tmpx5_s4cl2.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx5_s4cl2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcgee79x.php:24\nStack trace:\n#0 /tmp/tmphcgee79x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphcgee79x.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5xuycx0.php:21\nStack trace:\n#0 /tmp/tmpe5xuycx0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpe5xuycx0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxi51tli.php:21\nStack trace:\n#0 /tmp/tmpcxi51tli.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcxi51tli.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n  $loss = $actual_cost - $sale_amount;\n  if ($loss > 0) {\n    return $loss;\n  } else {\n    return 0;\n  }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ejxau0d.php:22\nStack trace:\n#0 /tmp/tmp9ejxau0d.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9ejxau0d.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss_amount = $actual_cost - $sale_amount;\n    if ($loss_amount > 0) {\n        return $loss_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprklhjag1.php:18\nStack trace:\n#0 /tmp/tmprklhjag1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprklhjag1.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n0\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n50\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv4ufehy7.php:80\nStack trace:\n#0 /tmp/tmpv4ufehy7.php(85): test()\n#1 {main}\n  thrown in /tmp/tmpv4ufehy7.php on line 80\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if($loss > 0) {\n        return $loss;\n    }\n    else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpev40afs7.php:18\nStack trace:\n#0 /tmp/tmpev40afs7.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpev40afs7.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif($loss > 0) {\n\t\treturn $loss;\n\t}\n\treturn 0;\n}\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwun9zhyd.php:16\nStack trace:\n#0 /tmp/tmpwun9zhyd.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpwun9zhyd.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\tif($actual_cost > $sale_amount) {\n\t\treturn $actual_cost - $sale_amount;\n\t}\n\telse {\n\t\treturn 0;\n\t}\n}\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpow6j8d0a.php:17\nStack trace:\n#0 /tmp/tmpow6j8d0a.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpow6j8d0a.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        $loss = $actual_cost - $sale_amount;\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr1c1g_yq.php:20\nStack trace:\n#0 /tmp/tmpr1c1g_yq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr1c1g_yq.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl9xvgl1.php:17\nStack trace:\n#0 /tmp/tmpwl9xvgl1.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwl9xvgl1.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"<br>\";\necho loss_amount(100, 150);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdvp8460.php:20\nStack trace:\n#0 /tmp/tmpbdvp8460.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpbdvp8460.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nrh3q1g.php:19\nStack trace:\n#0 /tmp/tmp2nrh3q1g.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2nrh3q1g.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    if ($actual_cost > $sale_amount) {\n        return $actual_cost - $sale_amount;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(50, 100);\necho \"\\n\";\necho loss_amount(100, 100);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpavq168me.php:23\nStack trace:\n#0 /tmp/tmpavq168me.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpavq168me.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n\t$loss = $actual_cost - $sale_amount;\n\tif ($loss > 0) {\n\t\treturn $loss;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\necho loss_amount(100, 50);\necho \"\\n\";\necho loss_amount(100, 150);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8msqrq3.php:22\nStack trace:\n#0 /tmp/tmpv8msqrq3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv8msqrq3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\n\necho loss_amount(100, 50);\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510181,
      "stdout": "50\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposd2_1zu.php:18\nStack trace:\n#0 /tmp/tmposd2_1zu.php(23): test()\n#1 {main}\n  thrown in /tmp/tmposd2_1zu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function that gives loss amount on a sale if the given amount has loss else return 0.\nfunction loss_amount($actual_cost, $sale_amount) {\n    $loss = $actual_cost - $sale_amount;\n    if ($loss > 0) {\n        return $loss;\n    } else {\n        return 0;\n    }\n}\necho loss_amount(100, 50);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return loss_amount(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1500, 1200) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100, 200) !== 100) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2000, 5000) !== 3000) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122694,
      "stdout": "50\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzogyf3ir.php:19\nStack trace:\n#0 /tmp/tmpzogyf3ir.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpzogyf3ir.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_247_lps",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the length of the longest palindromic subsequence in the given string.\nfunction lps($str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_247_lps.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return lps(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"TENS FOR TENS\") !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"CARDIO FOR CARDS\") !== 7) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"PART OF THE JOURNEY IS PART\") !== 9) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($l = 2; $l <= $n; $l++) {\n        for ($i = 0; $i < $n - $l + 1; $i++) {\n            $j = $i + $l - 1;\n            if ($str[$i] == $str[$j] && $l == 2) {\n                $dp[$i][$j] = 2;\n            } elseif ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i][$j - 1], $dp[$i + 1][$j]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = \"abdbca\";\necho lps($str);",
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($len = 2; $len <= $n; $len++) {\n        for ($i = 0; $i < $n - $len + 1; $i++) {\n            $j = $i + $len - 1;\n            if ($str[$i] == $str[$j] && $len == 2) {\n                $dp[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i + 1][$j], $dp[$i][$j - 1]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = \"agbdba\";\necho lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"GEEKSFORGEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"BBABCBCAB\";\necho \"The length of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"GEEKSFORGEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"GEEKS FOR GEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($sublen = 2; $sublen <= $n; $sublen++) {\n        for ($i = 0; $i < $n - $sublen + 1; $i++) {\n            $j = $i + $sublen - 1;\n            if ($str[$i] == $str[$j] && $sublen == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\necho lps('agbdba');",
    "    $n = strlen($str);\n    $L = array();\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($sublen = 2; $sublen <= $n; $sublen++) {\n        for ($i = 0; $i < $n - $sublen + 1; $i++) {\n            $j = $i + $sublen - 1;\n            if ($str[$i] == $str[$j] && $sublen == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"GEEKS FOR GEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"GEEKSFORGEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\necho lps(\"BBABCBCAB\");\necho \"\\n\";\necho lps(\"GEEKSFORGEEKS\");\necho \"\\n\";\necho lps(\"GEEKS\");\necho \"\\n\";",
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($l = 2; $l <= $n; $l++) {\n        for ($i = 0; $i < $n - $l + 1; $i++) {\n            $j = $i + $l - 1;\n            if ($str[$i] == $str[$j] && $l == 2) {\n                $dp[$i][$j] = 2;\n            } elseif ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i + 1][$j], $dp[$i][$j - 1]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = \"agbdba\";\necho lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"GEEKSFORGEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $table = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $table[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $table[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $table[$i][$j] = $table[$i + 1][$j - 1] + 2;\n            } else {\n                $table[$i][$j] = max($table[$i][$j - 1], $table[$i + 1][$j]);\n            }\n        }\n    }\n    return $table[0][$n - 1];\n}\n\n$str = \"GEEKSFORGEEKS\";\necho \"The lnegth of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"BBABCBCAB\";\necho \"The length of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($sublen = 2; $sublen <= $n; $sublen++) {\n        for ($i = 0; $i < $n - $sublen + 1; $i++) {\n            $j = $i + $sublen - 1;\n            if ($str[$i] == $str[$j] && $sublen == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n",
    "    $n = strlen($str);\n    $L = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $L[$i][$i] = 1;\n    }\n    for ($substr_len = 2; $substr_len <= $n; $substr_len++) {\n        for ($i = 0; $i < $n - $substr_len + 1; $i++) {\n            $j = $i + $substr_len - 1;\n            if ($str[$i] == $str[$j] && $substr_len == 2) {\n                $L[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $L[$i][$j] = $L[$i + 1][$j - 1] + 2;\n            } else {\n                $L[$i][$j] = max($L[$i][$j - 1], $L[$i + 1][$j]);\n            }\n        }\n    }\n    return $L[0][$n - 1];\n}\n\n$str = \"agbdba\";\necho \"The length of the LPS is \" . lps($str);",
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($l = 2; $l <= $n; $l++) {\n        for ($i = 0; $i < $n - $l + 1; $i++) {\n            $j = $i + $l - 1;\n            if ($str[$i] == $str[$j] && $l == 2) {\n                $dp[$i][$j] = 2;\n            } elseif ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i][$j - 1], $dp[$i + 1][$j]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = 'agbdba';\necho lps($str);",
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($cl = 2; $cl <= $n; $cl++) {\n        for ($i = 0; $i < $n - $cl + 1; $i++) {\n            $j = $i + $cl - 1;\n            if ($str[$i] == $str[$j] && $cl == 2) {\n                $dp[$i][$j] = 2;\n            } elseif ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i][$j - 1], $dp[$i + 1][$j]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = \"agbdba\";\necho lps($str);",
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($l = 2; $l <= $n; $l++) {\n        for ($i = 0; $i < $n - $l + 1; $i++) {\n            $j = $i + $l - 1;\n            if ($str[$i] == $str[$j] && $l == 2) {\n                $dp[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i][$j - 1], $dp[$i + 1][$j]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = \"agbdba\";\necho lps($str);",
    "    $n = strlen($str);\n    $dp = array_fill(0, $n, array_fill(0, $n, 0));\n    for ($i = 0; $i < $n; $i++) {\n        $dp[$i][$i] = 1;\n    }\n    for ($len = 2; $len <= $n; $len++) {\n        for ($i = 0; $i < $n - $len + 1; $i++) {\n            $j = $i + $len - 1;\n            if ($str[$i] == $str[$j] && $len == 2) {\n                $dp[$i][$j] = 2;\n            } else if ($str[$i] == $str[$j]) {\n                $dp[$i][$j] = $dp[$i + 1][$j - 1] + 2;\n            } else {\n                $dp[$i][$j] = max($dp[$i + 1][$j], $dp[$i][$j - 1]);\n            }\n        }\n    }\n    return $dp[0][$n - 1];\n}\n\n$str = \"agbdba\";\necho lps($str);"
  ]
}
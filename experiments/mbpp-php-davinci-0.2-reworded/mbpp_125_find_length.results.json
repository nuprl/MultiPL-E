{
  "name": "mbpp_125_find_length",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp8w7s0cfg.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count1 = 0;\n    $count2 = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 1) {\n            $count1++;\n        } else {\n            $count2++;\n        }\n        if($count1 == $count2) {\n            $count = $count1 + $count2;\n            if($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp5ps9uaq9.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $str_len = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $str_len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max_count < $count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = '10001010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('1101010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3sktldk.php:26\nStack trace:\n#0 /tmp/tmpl3sktldk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpl3sktldk.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $max_length = 0;\n  $count = 0;\n  $length = strlen($string);\n  for ($i = 0; $i < $length; $i++) {\n    if ($string[$i] == '0') {\n      $count++;\n    } else {\n      $count--;\n    }\n    if ($count == 0) {\n      $max_length = max($max_length, $i + 1);\n    }\n  }\n  return $max_length;\n}\n\n$string = '10010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp48g93w6.php:27\nStack trace:\n#0 /tmp/tmpp48g93w6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp48g93w6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqcpgrxfx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpl78vqwth.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp16gcctvk.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpwrvaltnw.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmptqt8oxxd.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_len = 0;\n    $count = 0;\n    $n = strlen($string);\n    for ($i = 0; $i < $n; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count == 0) {\n            $max_len = max($max_len, $i + 1);\n        }\n    }\n    $count = 0;\n    for ($i = $n - 1; $i >= 0; $i--) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count == 0) {\n            $max_len = max($max_len, $n - $i);\n        }\n    }\n    return $max_len;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp23bdctq4.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<$length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpfgxzv843.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpvuo54ay9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010001010101010101010101010...\" in /tmp/tmpl3sfvajl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    $count = 0;\n    $string_length = strlen($string);\n    for($i = 0; $i < $string_length; $i++) {\n        if($string[$i] == 0) {\n            $count_zero++;\n        }\n        else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n$string = \"1001101010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugpjymde.php:30\nStack trace:\n#0 /tmp/tmpugpjymde.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpugpjymde.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp7ye8eq1m.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $count = $count_zero + $count_one;\n            if($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n$string = '111100001010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph90s54f7.php:30\nStack trace:\n#0 /tmp/tmph90s54f7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph90s54f7.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpayi8hg6p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmptrcsx53e.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp9or18_rx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp2thiqa16.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpqah6r295.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpl1a2ji4x.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i=0; $i < $len; $i++) { \n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfloszy9_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpc_5oy5ir.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpzae1fi5h.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxzb2fqo.php:29\nStack trace:\n#0 /tmp/tmpuxzb2fqo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpuxzb2fqo.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero * 2);\n        }\n    }\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = strlen($string) - 1; $i >= 0; $i--) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero * 2);\n        }\n    }\n    return $max_length;\n}\n\n$string = '110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmph89ytfew.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $length = strlen($string);\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp912phs5u.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\n\n$string = '11110000';\necho find_length($string);\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kfqnc2e.php:26\nStack trace:\n#0 /tmp/tmp0kfqnc2e.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0kfqnc2e.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2_58dodj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpgdnt2um_.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpr8xmvfbd.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpgjao95ya.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmprrexlppl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        }\n        else if($string[$i] == '1') {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpzhokv7ob.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"10001010101\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpgjao95ya.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n\t$max_length = 0;\n\t$count = 0;\n\t$arr = str_split($string);\n\t$arr_length = count($arr);\n\tfor($i = 0; $i < $arr_length; $i++) {\n\t\tif($arr[$i] == 0) {\n\t\t\t$count++;\n\t\t}\n\t\telse {\n\t\t\t$count--;\n\t\t}\n\t\tif($count == 0) {\n\t\t\t$max_length = max($max_length, $i + 1);\n\t\t}\n\t\telse if($count < 0) {\n\t\t\t$count = 0;\n\t\t}\n\t}\n\treturn $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100110101010101010101010101010...\" in /tmp/tmpz_qwn3sm.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_len = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_len = max($max_len, $count_0 + $count_1);\n        }\n    }\n    return $max_len;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpv7lconwk.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\necho find_length('10001010001');\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpx18x7jf5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if($zero_count == $one_count) {\n            $count = $zero_count + $one_count;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp1vug2caf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpuz5emwz8.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpy0nxvvz0.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero*2);\n        }\n    }\n    $count_zero = 0;\n    $count_one = 0;\n    for($i = strlen($string) - 1; $i >= 0; $i--) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero*2);\n        }\n    }\n    return $max_length;\n}\n\necho find_length(\"0111010001\");\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nbkavqd.php:39\nStack trace:\n#0 /tmp/tmp5nbkavqd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5nbkavqd.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $length = strlen($string);\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"1000101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpweuh4nid.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        $count = $zero_count - $one_count;\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpgau9kv5x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        $count = $zero_count - $one_count;\n        if($count < 0) {\n            $count = -$count;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp4cgpqi3f.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero = 0;\n    $one = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $zero++;\n        }\n        else {\n            $one++;\n        }\n        if($zero == $one) {\n            $count = $zero + $one;\n            if($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n$string = \"01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpaqszfy_y.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp3g5l5107.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpzae1fi5h.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfloszy9_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $one = 0;\n    $zero = 0;\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 0) {\n            $zero++;\n        } else {\n            $one++;\n        }\n        if ($one == $zero) {\n            $count = $one + $zero;\n            if ($count > $max) {\n                $max = $count;\n            }\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp9uhh4p1t.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string_length = strlen($string);\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for ($i = 0; $i < $string_length; $i++) {\n        if ($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_diff = max($max_diff, $count_0);\n        }\n    }\n    return $max_diff;\n}\n\n$string = '10010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhhb2bn1.php:28\nStack trace:\n#0 /tmp/tmplhhb2bn1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplhhb2bn1.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10001010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10001010101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1aaorwbl.php:28\nStack trace:\n#0 /tmp/tmp1aaorwbl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1aaorwbl.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100110101010101010101010101010...\" in /tmp/tmpp_cx5kno.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp64nz8ixx.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count == 0) {\n            $max = max($max, $i + 1);\n        }\n        if (array_key_exists($count, $hash)) {\n            $max = max($max, $i - $hash[$count]);\n        } else {\n            $hash[$count] = $i;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp0blgasa1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpk1cy8p1y.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $arr = str_split($string);\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count == 0) {\n            $max_length = max($max_length, $i + 1);\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max_length;\n}\n\n$string = \"010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp919l7or4.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpnep76unc.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpwhuahe_v.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '1000101010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if ($zero_count == $one_count) {\n            $count = $zero_count + $one_count;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('10011010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9j1_qo3.php:28\nStack trace:\n#0 /tmp/tmpo9j1_qo3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo9j1_qo3.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $length = strlen($string);\n    for($i=0; $i<$length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpb7x1wnwq.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmp3wcip0d3.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"1000101010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp305j650f.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100101010101010101010101010101...\" in /tmp/tmpfkpoeh29.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\necho find_length('1001101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3_joorp.php:25\nStack trace:\n#0 /tmp/tmpj3_joorp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj3_joorp.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpk51rfz64.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfx3idaw5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $count = 0;\n  $max = 0;\n  $len = strlen($string);\n  for($i = 0; $i < $len; $i++) {\n    if($string[$i] == '0') {\n      $count--;\n    } else {\n      $count++;\n    }\n    if($count < 0) {\n      $count = 0;\n    }\n    if($count > $max) {\n      $max = $count;\n    }\n  }\n  return $max;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghyvxbm1.php:30\nStack trace:\n#0 /tmp/tmpghyvxbm1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpghyvxbm1.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp1arce7t3.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpqkzthg7o.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $count = 0;\n  $max = 0;\n  for ($i=0; $i < strlen($string); $i++) {\n    if ($string[$i] == 0) {\n      $count++;\n    } else {\n      $count--;\n    }\n    if ($count < 0) {\n      $count = 0;\n    }\n    if ($count > $max) {\n      $max = $count;\n    }\n  }\n  return $max;\n}\n\n$string = \"10010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ptpbt63.php:29\nStack trace:\n#0 /tmp/tmp7ptpbt63.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7ptpbt63.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqsmlkeqx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqxvtsnvf.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp8_go6m2j.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmp_c5hes0s.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpy4cki7l2.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_length = max($max_length, $i+1);\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpidk7u7m1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n\t$max_length = 0;\n\t$count = 0;\n\t$count_0 = 0;\n\t$count_1 = 0;\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\tif ($string[$i] == 0) {\n\t\t\t$count_0++;\n\t\t} else {\n\t\t\t$count_1++;\n\t\t}\n\t\t$count = $count_0 - $count_1;\n\t\tif ($count > $max_length) {\n\t\t\t$max_length = $count;\n\t\t}\n\t}\n\treturn $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100110101010101010101010101010...\" in /tmp/tmpsnopesc9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100101010101010101010101010101...\" in /tmp/tmpp_279cht.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\n\n$string = '1000101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjatcda6.php:26\nStack trace:\n#0 /tmp/tmptjatcda6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptjatcda6.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i=0; $i < strlen($string); $i++) { \n        if ($string[$i] == 0) {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_diff = max($max_diff, $count_zero + $count_one);\n        }\n    }\n    return $max_diff;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zolvch_.php:27\nStack trace:\n#0 /tmp/tmp5zolvch_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5zolvch_.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0 + $count_1);\n        }\n    }\n    return $max_length;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp2agpjp77.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $zero = 0;\n    $one = 0;\n    for($i = 0; $i < count($string); $i++) {\n        if($string[$i] == 0) {\n            $zero++;\n        } else {\n            $one++;\n        }\n        if($zero == $one) {\n            $count = $zero + $one;\n            if($count > $max) {\n                $max = $count;\n            }\n        }\n    }\n    return $max;\n}\n\n$string = \"1101010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0kvig7x6.php:32\nStack trace:\n#0 /tmp/tmp0kvig7x6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0kvig7x6.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count_zero = 0;\n    $count_one = 0;\n    $max_diff = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_diff = max($max_diff, $count_zero + $count_one);\n        }\n    }\n    return $max_diff;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpl4ulpj39.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp056nj25d.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001011101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkonrwa_.php:29\nStack trace:\n#0 /tmp/tmpfkonrwa_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfkonrwa_.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_len = 0;\n    $count = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_len = max($max_len, $i+1);\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max_len;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpn89o63eg.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_one == $count_zero) {\n            $max_length = max($max_length, $count_one + $count_zero);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('10010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqxe5gu_b.php:27\nStack trace:\n#0 /tmp/tmpqxe5gu_b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqxe5gu_b.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 1) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpgv0o_8at.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10001010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpqjuq6lps.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        }\n        if($string[$i] == '1') {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($max_count < $count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n$string = '100010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpdo46lou2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '1000110001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for($i=0; $i<$length; $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpfgoz9o79.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10001010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $count = $count_0 - $count_1;\n        if($count < 0) {\n            $count = 0;\n            $count_0 = 0;\n            $count_1 = 0;\n        }\n        if($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpdgovznwp.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpyp_ne7wt.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\necho find_length('10001010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejlxh13i.php:27\nStack trace:\n#0 /tmp/tmpejlxh13i.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpejlxh13i.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero*2);\n        }\n    }\n    $count_zero = 0;\n    $count_one = 0;\n    for($i=strlen($string)-1; $i>=0; $i--) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero*2);\n        }\n    }\n    return $max_length;\n}\n\n$string = '1001101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnujg0ubg.php:39\nStack trace:\n#0 /tmp/tmpnujg0ubg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnujg0ubg.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        if ($count_zero == $count_one) {\n            $max_length = max($max_length, $count_zero + $count_one);\n        }\n    }\n    return $max_length;\n}\n\necho find_length('1101010101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxblob9o5.php:26\nStack trace:\n#0 /tmp/tmpxblob9o5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxblob9o5.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $zero = 0;\n    $one = 0;\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 0) {\n            $zero++;\n        } else {\n            $one++;\n        }\n        if ($zero == $one) {\n            $count = $zero + $one;\n            if ($count > $max) {\n                $max = $count;\n            }\n        }\n    }\n    return $max;\n}\n$string = \"10010001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdc2bsvfs.php:31\nStack trace:\n#0 /tmp/tmpdc2bsvfs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdc2bsvfs.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $count = $count_0 - $count_1;\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpuluy_8d_.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpc_ls8v22.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpj_2x6h5n.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    $zero = 0;\n    $one = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $zero++;\n        } else {\n            $one++;\n        }\n        if ($zero == $one) {\n            $count = $zero + $one;\n            if ($count > $max) {\n                $max = $count;\n            }\n        }\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwv3us8h0.php:32\nStack trace:\n#0 /tmp/tmpwv3us8h0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwv3us8h0.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $arr = str_split($string);\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max_length = max($max_length, $i+1);\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    return $max_length;\n}\n\necho find_length(\"10011010001\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bbzcn8f.php:29\nStack trace:\n#0 /tmp/tmp_bbzcn8f.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_bbzcn8f.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"10011010001\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputtzzei8.php:29\nStack trace:\n#0 /tmp/tmputtzzei8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmputtzzei8.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count == 0) {\n            $max = max($max, $i + 1);\n        } else if (isset($hash[$count])) {\n            $max = max($max, $i - $hash[$count]);\n        } else {\n            $hash[$count] = $i;\n        }\n    }\n    return $max;\n}\n\n$string = \"11010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpffsccdqi.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2_s5kit.php:21\nStack trace:\n#0 /tmp/tmpd2_s5kit.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpd2_s5kit.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, $i+1);\n        }\n        if(isset($hash[$count])) {\n            $max = max($max, $i-$hash[$count]);\n        } else {\n            $hash[$count] = $i;\n        }\n    }\n    return $max;\n}\n\necho find_length(\"10011010001\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgaw6elp_.php:31\nStack trace:\n#0 /tmp/tmpgaw6elp_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgaw6elp_.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_len = 0;\n    $count_zero = 0;\n    $count_one = 0;\n    $count_diff = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count_zero++;\n        } else {\n            $count_one++;\n        }\n        $count_diff = $count_zero - $count_one;\n        if($count_diff == 0) {\n            $max_len = max($max_len, $i+1);\n        }\n    }\n    return $max_len;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmppyektwy1.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp0mhk0fxe.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmphf1yhg88.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp7tfl7amd.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp85jyfvjx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n\t$string = str_split($string);\n\t$count = 0;\n\t$max = 0;\n\tforeach ($string as $key => $value) {\n\t\tif ($value == 0) {\n\t\t\t$count++;\n\t\t} else {\n\t\t\t$count--;\n\t\t}\n\t\tif ($count < 0) {\n\t\t\t$count = 0;\n\t\t}\n\t\tif ($count > $max) {\n\t\t\t$max = $count;\n\t\t}\n\t}\n\treturn $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp3a2oi90d.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2_58dodj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpspixto7j.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpd5bsjg4b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $count = 0;\n  $max = 0;\n  for ($i = 0; $i < strlen($string); $i++) {\n    if ($string[$i] == '0') {\n      $count--;\n    } else {\n      $count++;\n    }\n    if ($count < 0) {\n      $count = 0;\n    }\n    if ($count > $max) {\n      $max = $count;\n    }\n  }\n  return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpbech264i.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpzae1fi5h.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp3zjoqhy0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for ($i=0; $i < count($arr); $i++) { \n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmp01tfrfrb.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp0mhk0fxe.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    $arr_length = count($arr);\n    for($i = 0; $i < $arr_length; $i++) {\n        if($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpxg_hbz7k.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmptv5n8k6r.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    $arr = [];\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 1) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count == 0) {\n            $max = $i + 1;\n        }\n        if (array_key_exists($count, $arr)) {\n            $max = max($max, $i - $arr[$count]);\n        } else {\n            $arr[$count] = $i;\n        }\n    }\n    return $max;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp827cr_w.php:33\nStack trace:\n#0 /tmp/tmpp827cr_w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp827cr_w.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1000101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_diff = max($max_diff, $count_0);\n        }\n    }\n    return $max_diff;\n}\n\necho find_length(\"1000101\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbvwpe46.php:26\nStack trace:\n#0 /tmp/tmpzbvwpe46.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzbvwpe46.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\necho find_length('0111000100010');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count = 0;\n    $length = strlen($string);\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_diff) {\n            $max_diff = $count;\n        }\n    }\n    return $max_diff;\n}\n\n$string = \"10010101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_diff = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_diff = max($max_diff, $count_0 + $count_1);\n        }\n    }\n    $count_0 = 0;\n    $count_1 = 0;\n    for ($i = strlen($string) - 1; $i >= 0; $i--) {\n        if ($string[$i] == 0) {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if ($count_0 == $count_1) {\n            $max_diff = max($max_diff, $count_0 + $count_1);\n        }\n    }\n    return $max_diff;\n}\n\necho find_length('01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpgkxj5fd_.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('100010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '1101010001';\n$result = find_length($string);\necho $result;\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp041a31ti.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmphp0xglvu.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $length = strlen($string);\n    $count = 0;\n    $max_count = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpn1oresbl.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('1101010001');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($max < $count) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509988,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpl78vqwth.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, $i+1);\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n    }\n    $count = 0;\n    for($i=$len-1; $i>=0; $i--) {\n        if($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count == 0) {\n            $max = max($max, $len-$i);\n        }\n        if($count > 0) {\n            $count = 0;\n        }\n    }\n    return $max;\n}\n\n$string = \"110101\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvc07utun.php:44\nStack trace:\n#0 /tmp/tmpvc07utun.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpvc07utun.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for($i=0; $i<$length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"1000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpdoby2eek.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '1') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpniwyit9b.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $str_len = strlen($string);\n    for ($i = 0; $i < $str_len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = \"10001000001\";\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "7",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $str_arr = str_split($string);\n    $count_arr = [];\n    $count = 0;\n    $max_count = 0;\n    for ($i = 0; $i < count($str_arr); $i++) {\n        if ($str_arr[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count == 0) {\n            $max_count = max($max_count, $i + 1);\n        }\n        if (array_key_exists($count, $count_arr)) {\n            $max_count = max($max_count, $i - $count_arr[$count]);\n        } else {\n            $count_arr[$count] = $i;\n        }\n    }\n    return $max_count;\n}\n\necho find_length(\"10010101\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk13lwegi.php:32\nStack trace:\n#0 /tmp/tmpk13lwegi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk13lwegi.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10010101');\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmpnq1wos_4.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $string_length = strlen($string);\n    for($i = 0; $i < $string_length; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp64t30uvo.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\n$string = '1101101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110110101010101010101010101010...\" in /tmp/tmpdirjs5wf.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100110101010101010101010101010...\" in /tmp/tmpnvnlhkd4.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100101010101010101010101010101...\" in /tmp/tmpfkpoeh29.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpzae1fi5h.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\n\necho find_length(\"1001010101\");\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $count_1 = 0;\n    $count_0 = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '1') {\n            $count_1++;\n        } else {\n            $count_0++;\n        }\n        $count = $count_1 - $count_0;\n        if($count == 0) {\n            $max_length = max($max_length, $i + 1);\n        }\n        if(isset($hash[$count])) {\n            $max_length = max($max_length, $i - $hash[$count]);\n        } else {\n            $hash[$count] = $i;\n        }\n    }\n    return $max_length;\n}\n\n$string = '0111000100010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1seh84d.php:34\nStack trace:\n#0 /tmp/tmpf1seh84d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf1seh84d.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp510fjyja.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max = 0;\n    $count = 0;\n    $len = strlen($string);\n    for ($i = 0; $i < $len; $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpkqzvjf4x.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmpf8pzriju.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '10001010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101011101010101010101010101...\" in /tmp/tmp5sys2w11.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010000';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $arr = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\necho find_length(\"0011010101\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    $arr = array();\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count == 0) {\n            $max = $i + 1;\n        }\n        if(array_key_exists($count, $arr)) {\n            $max = max($max, $i - $arr[$count]);\n        } else {\n            $arr[$count] = $i;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmp_4utra7k.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n  $count = 0;\n  $max_count = 0;\n  $zero_count = 0;\n  $one_count = 0;\n  $length = strlen($string);\n  for($i=0; $i<$length; $i++) {\n    if($string[$i] == '0') {\n      $zero_count++;\n    } else {\n      $one_count++;\n    }\n    $count = $zero_count - $one_count;\n    if($count > $max_count) {\n      $max_count = $count;\n    }\n  }\n  return $max_count;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp9pp4tepy.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count = 0;\n    $zero_count = 0;\n    $one_count = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == 0) {\n            $zero_count++;\n        } else {\n            $one_count++;\n        }\n        if ($zero_count == $one_count) {\n            $count = $zero_count + $one_count;\n            if ($count > $max_length) {\n                $max_length = $count;\n            }\n        }\n    }\n    return $max_length;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpu_ptyv9b.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $string = str_split($string);\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < count($string); $i++) {\n        if ($string[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpisk2a3op.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '100010101';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"010101010101010101010101010101...\" in /tmp/tmpfx3idaw5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmp2ie18j98.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max_length = 0;\n    $count_0 = 0;\n    $count_1 = 0;\n    for($i=0; $i<strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        if($count_0 == $count_1) {\n            $max_length = max($max_length, $count_0*2);\n        }\n    }\n    return $max_length;\n}\n\n$string = '11010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"110101010101010101010101010101...\" in /tmp/tmp7u5kzo62.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122962,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpgjao95ya.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        $max = max($max, $count);\n    }\n    return $max;\n}\n\necho find_length(\"1001101\");\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count_0 = 0;\n    $count_1 = 0;\n    $max_diff = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count_0++;\n        } else {\n            $count_1++;\n        }\n        $max_diff = max($max_diff, abs($count_0 - $count_1));\n    }\n    return $max_diff;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"101010101010101010101010101010...\" in /tmp/tmpzslhu5yw.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < strlen($string); $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_length('10001010001');\n\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $len = strlen($string);\n    $count = 0;\n    $max = 0;\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '1101010001';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $max = 0;\n    $count = 0;\n    $len = strlen($string);\n    for($i = 0; $i < $len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpq206guu4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $arr = str_split($string);\n    for($i=0; $i<count($arr); $i++) {\n        if($arr[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmpbkejm1kl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    $len = strlen($string);\n    for($i=0; $i<$len; $i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$string = '0111000100010';\necho find_length($string);\nfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count--;\n        } else {\n            $count++;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\", expecting \")\" in /tmp/tmp29tiiwyl.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max_count = 0;\n    $length = strlen($string);\n    for($i=0;$i<$length;$i++) {\n        if($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if($count < 0) {\n            $count = 0;\n        }\n        if($count > $max_count) {\n            $max_count = $count;\n        }\n    }\n    return $max_count;\n}\necho find_lengthnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected string content \"100010101010101010101010101010...\" in /tmp/tmpkfgb84ti.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunction find_length($string) {\n    $count = 0;\n    $max = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '0') {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count < 0) {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$stringnfunction candidate(...$args) {\n    return find_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"11000010001\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"10111\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"11011101100101\") !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666122963,
      "stdout": "\nParse error: syntax error, unexpected integer \"11000010001\" in /tmp/tmp6ttfp53v.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
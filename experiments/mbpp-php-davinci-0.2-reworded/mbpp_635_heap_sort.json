{
  "name": "mbpp_635_heap_sort",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort the given array.\nfunction heap_sort($iterable) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return heap_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 7, 9, 2, 4, 6, 8, 0)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(25, 35, 22, 85, 14, 65, 75, 25, 58)) !== array(14, 22, 25, 25, 35, 58, 65, 75, 85)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 1, 9, 5)) !== array(1, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = array(1, 3, 2, 5, 4, 7, 6, 9, 8);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 7, 6, 9, 8];\n\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 5, 2, 6, 3, 7, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1,5,3,2,4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 5, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $size = count($iterable);\n    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    for ($i = 0; $i < $size; $i++) {\n        $iterable[$i] = $heap->extract();\n    }\n    return $iterable;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\n\nprint_r($arr);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\n",
    "    for ($i = count($iterable) / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, count($iterable), $i);\n    }\n    for ($i = count($iterable) - 1; $i >= 0; $i--) {\n        $temp = $iterable[0];\n        $iterable[0] = $iterable[$i];\n        $iterable[$i] = $temp;\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n\n$sorted = heap_sort($array);\n\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [3, 2, 1, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 5, 4);\n$sorted = heap_sort($arr);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 5, 2, 4, 3];\n$sorted = heap_sort($arr);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$iterable = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(heap_sort($iterable));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\n$sortedArr = heap_sort($arr);\nvar_dump($sortedArr);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4];\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n\n    return $sorted;\n}\n\n$iterable = [1, 5, 3, 2, 4];\n$sorted = heap_sort($iterable);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 5, 2, 7, 3, 9, 4, 6, 8];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nvar_dump(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [3, 5, 1, 2, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 5, 2, 4, 3];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 2, 4, 6, 1, 3];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted = heap_sort($array);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1,3,5,7,9,8,6,4,2];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\n$arr = heap_sort($arr);\nprint_r($arr);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 7, 6, 9, 8];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 5, 3, 4, 6, 7, 9, 8];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$iterable = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(heap_sort($iterable));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 2, 1, 3, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 4, 2, 5, 3, 6];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 3, 1, 2, 4];\necho implode(', ', heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\nvar_dump(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 5, 2, 4, 3, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 4);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho \"Unsorted array :\\n\";\necho implode(', ', $array );\necho \"\\nSorted array :\\n\";\necho implode(', ', heap_sort($array)). \"\\n\";\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\n\n$sorted = heap_sort($array);\nprint_r($sorted);",
    "    $size = count($iterable);\n    for ($i = $size / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, $size, $i);\n    }\n    for ($i = $size - 1; $i >= 0; $i--) {\n        swap($iterable, 0, $i);\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 5, 2, 4, 10, 6, 0, 3, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while($heap->valid()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));",
    "    $size = count($iterable);\n    for ($i = $size / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, $size, $i);\n    }\n    for ($i = $size - 1; $i >= 0; $i--) {\n        $temp = $iterable[0];\n        $iterable[0] = $iterable[$i];\n        $iterable[$i] = $temp;\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [5, 3, 6, 1, 4, 2];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$iterable = [1, 3, 2, 5, 4];\n$result = heap_sort($iterable);\nvar_dump($result);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nvar_dump(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\n\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 5, 2, 7, 3, 9, 4, 6, 8];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\necho '<pre>';\nprint_r(heap_sort($arr));\necho '</pre>';",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 2, 1, 3, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nshuffle($arr);\nprint_r($arr);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [5, 3, 2, 1, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [5, 3, 2, 1, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted: ' . implode(', ', $array) . PHP_EOL;\necho 'Sorted: ' . implode(', ', heap_sort($array)) . PHP_EOL;",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\nvar_dump(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\n$arr = heap_sort($arr);\nprint_r($arr);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 4);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [9, 8, 7, 6, 5, 4, 3, 2, 1];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = array();\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = array(1, 3, 2, 5, 4);\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\necho implode(', ', heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$array = [4, 2, 1, 3, 5];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\n\necho 'Unsorted Array : ';\necho implode(', ', $array);\necho \"\\n\";\n\n$sorted_array = heap_sort($array);\necho 'Sorted Array : ';\necho implode(', ', $sorted_array);\necho \"\\n\";",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 5, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($arr);\nprint_r($arr);\necho \"\\n\";\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n\necho implode(', ', heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($array);\nprint_r($array);\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$input = [1, 3, 2, 4];\n$output = heap_sort($input);\nprint_r($output);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$iterable = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nshuffle($iterable);\nprint_r(heap_sort($iterable));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [4, 3, 2, 1, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$sorted = heap_sort($array);\nprint_r($sorted);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = array(1, 3, 2, 5, 4);\n$sorted_array = heap_sort($array);\nprint_r($sorted_array);",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$arr = [1, 3, 2, 4, 5];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [2, 5, 3, 1, 4];\n$sorted = heap_sort($arr);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [5, 2, 1, 3, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [5, 3, 2, 4, 1];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    return iterator_to_array($heap);\n}\n\n$array = [1, 3, 2, 5, 4];\nprint_r(heap_sort($array));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [5, 3, 2, 1, 4];\nprint_r(heap_sort($array));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4, 5, 7, 6, 9, 8];\nprint_r(heap_sort($arr));\n",
    "    $length = count($iterable);\n    for ($i = $length / 2 - 1; $i >= 0; $i--) {\n        heapify($iterable, $length, $i);\n    }\n    for ($i = $length - 1; $i >= 0; $i--) {\n        swap($iterable, 0, $i);\n        heapify($iterable, $i, 0);\n    }\n    return $iterable;\n}\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$array = [1, 3, 2, 4];\n$sorted = heap_sort($array);\nprint_r($sorted);\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nprint_r(heap_sort($arr));\n",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $value) {\n        $heap->insert($value);\n    }\n    $result = [];\n    while (!$heap->isEmpty()) {\n        $result[] = $heap->extract();\n    }\n    return $result;\n}\n\n$arr = [1, 3, 2, 4, 5, 6, 7, 8, 9, 10];\nprint_r(heap_sort($arr));",
    "    $heap = new SplMaxHeap();\n    foreach ($iterable as $item) {\n        $heap->insert($item);\n    }\n    $sorted = [];\n    while (!$heap->isEmpty()) {\n        $sorted[] = $heap->extract();\n    }\n    return $sorted;\n}\n\n$arr = [1, 3, 2, 4];\nvar_dump(heap_sort($arr));"
  ]
}
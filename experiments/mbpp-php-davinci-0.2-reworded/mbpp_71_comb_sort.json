{
  "name": "mbpp_71_comb_sort",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort an array of elements.\nfunction comb_sort($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_71_comb_sort.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return comb_sort(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 15, 37, 25, 79)) !== array(5, 15, 25, 37, 79)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(41, 32, 15, 19, 22)) !== array(15, 19, 22, 32, 41)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(99, 15, 13, 47)) !== array(13, 15, 47, 99)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = [3, 4, 2, 1, 5, 7, 9, 8, 6];\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 3, 2, 4, 5, 7, 6, 9, 8);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 5, 2, 7, 4, 9, 3, 8, 6);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swapped = false;\n        for ($i = 0; $gap + $i < count($nums); $i++) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n        }\n    }\n    return $nums;\n}\n\n$nums = array(5, 4, 3, 2, 1);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $tmp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $tmp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = [3, 5, 2, 1, 4];\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = false;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n$nums = array(5, 3, 8, 2, 1, 4);\n$nums = comb_sort($nums);\nprint_r($nums);",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = false;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 5, 6, 2, 3, 4);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(5, 4, 3, 2, 1);\n$nums = comb_sort($nums);\nprint_r($nums);",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.247330950103979);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(5, -4, 3, 7, 2, 1, 0, 8, 9, 2);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                list($nums[$i], $nums[$i + $gap]) = array($nums[$i + $gap], $nums[$i]);\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(4, 3, 2, 1, 5, 6, 7, 8, 9, 10);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(5, 4, 3, 2, 1);\nprint_r(comb_sort($nums));",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = false;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(5, 3, 8, 2, 1, 4);\n$nums = comb_sort($nums);\nprint_r($nums);",
    "    $gap = count($nums);\n    $swap = true;\n    while ($gap > 1 || $swap) {\n        if ($gap > 1) {\n            $gap = floor($gap / 1.25);\n        }\n        $swap = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swap = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(10, 50, 20, 40, 30);\necho \"Original Array :\\n\";\necho implode(', ', $nums );\necho \"\\nSorted Array :\\n\";\necho implode(', ', comb_sort($nums)) . \"\\n\";",
    "    $gap = count($nums);\n    $shrink = 1.3;\n    $swapped = true;\n    while ($gap > 1 || $swapped) {\n        if ($gap > 1) {\n            $gap = floor($gap / $shrink);\n        }\n        $swapped = false;\n        $i = 0;\n        while ($i + $gap < count($nums)) {\n            if ($nums[$i] > $nums[$i + $gap]) {\n                $temp = $nums[$i];\n                $nums[$i] = $nums[$i + $gap];\n                $nums[$i + $gap] = $temp;\n                $swapped = true;\n            }\n            $i++;\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 3, 2, 4, 5, 7, 6, 9, 8);\nprint_r(comb_sort($nums));"
  ]
}
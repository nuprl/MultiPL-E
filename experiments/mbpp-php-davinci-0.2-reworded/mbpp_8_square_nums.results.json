{
  "name": "mbpp_8_square_nums",
  "language": "php",
  "prompt": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_8_square_nums.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = array();\n    foreach ($nums as $num) {\n        array_push($squared_nums, $num * $num);\n    }\n    return $squared_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squared_nums = [];\n  foreach ($nums as $num) {\n    $squared_nums[] = $num * $num;\n  }\n  return $squared_nums;\n}\n\n$nums = [2, 3, 4, 5, 6];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 4\n    [1] => 9\n    [2] => 16\n    [3] => 25\n    [4] => 36\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = [];\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n    [5] => 36\n    [6] => 49\n    [7] => 64\n    [8] => 81\n    [9] => 100\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = [];\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\necho \"Squares of individual elements in an array: \";\nprint_r(square_nums([1, 2, 3, 4, 5]));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Squares of individual elements in an array: Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = [];\n    foreach ($nums as $num) {\n        array_push($squared_nums, $num * $num);\n    }\n    return $squared_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n    [5] => 36\n    [6] => 49\n    [7] => 64\n    [8] => 81\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$numbers = array(1, 2, 3, 4, 5);\n$squares = square_nums($numbers);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = array();\n    foreach ($nums as $num) {\n        $squared_nums[] = $num * $num;\n    }\n    return $squared_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    return array_map(function($num) {\n        return $num * $num;\n    }, $nums);\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = array();\n    foreach ($nums as $num) {\n        $squared_nums[] = $num * $num;\n    }\n    return $squared_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = [];\n    foreach ($nums as $num) {\n        array_push($squared_nums, $num * $num);\n    }\n    return $squared_nums;\n}\n\n$numbers = [1, 2, 3, 4, 5];\nprint_r(square_nums($numbers));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = [];\n    foreach ($nums as $num) {\n        $squared_nums[] = $num * $num;\n    }\n    return $squared_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n\necho implode(', ', square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "1, 4, 9, 16, 25",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = array();\n    foreach ($nums as $num) {\n        array_push($squared_nums, $num * $num);\n    }\n    return $squared_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squared_nums = [];\n  foreach ($nums as $num) {\n    $squared_nums[] = $num * $num;\n  }\n  return $squared_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1,2,3,4,5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = array();\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = array();\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\n\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    $squares[] = $num * $num;\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = [];\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        array_push($squares, $num * $num);\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = array();\n    foreach ($nums as $num) {\n        array_push($squared_nums, $num * $num);\n    }\n    return $squared_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = [];\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\nprint_r(square_nums($nums));\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squared_nums = [];\n    foreach ($nums as $num) {\n        $squared_nums[] = $num * $num;\n    }\n    return $squared_nums;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squared_nums = square_nums($nums);\nprint_r($squared_nums);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n\t$squares = array();\n\tforeach ($nums as $num) {\n\t\t$squares[] = $num * $num;\n\t}\n\treturn $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\necho \"Original array: \" . implode(', ', $nums) . \"\\n\";\necho \"Squares: \" . implode(', ', square_nums($nums)) . \"\\n\";\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Original array: 1, 2, 3, 4, 5\nSquares: 1, 4, 9, 16, 25\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n  $squares = [];\n  foreach ($nums as $num) {\n    array_push($squares, $num * $num);\n  }\n  return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = [];\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = [1, 2, 3, 4, 5];\nprint_r(square_nums($nums));\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509713,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find squares of individual elements in an array.\nfunction square_nums($nums) {\n    $squares = array();\n    foreach ($nums as $num) {\n        $squares[] = $num * $num;\n    }\n    return $squares;\n}\n\n$nums = array(1, 2, 3, 4, 5);\n$squares = square_nums($nums);\nprint_r($squares);\n\nfunction candidate(...$args) {\n    return square_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 20, 30)) !== array(100, 400, 900)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 15)) !== array(144, 225)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123731,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 9\n    [3] => 16\n    [4] => 25\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_790_even_position",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to check whether every even index contains even numbers of a given array.\nfunction even_position($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return even_position(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 4)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0 && $nums[$i] % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20];\nprint_r(even_position($nums));\n",
    "    $even_index = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_index, $nums[$i]);\n        }\n    }\n    return $even_index;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = even_position($nums);\nprint_r($result);",
    "    $even_index = array();\n    for($i = 0; $i < count($nums); $i++) {\n        if($i % 2 == 0) {\n            if($nums[$i] % 2 == 0) {\n                array_push($even_index, $nums[$i]);\n            }\n        }\n    }\n    return $even_index;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_position = [];\n    for($i = 0; $i < count($nums); $i++) {\n        if($i % 2 == 0) {\n            array_push($even_position, $nums[$i]);\n        }\n    }\n    return $even_position;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho implode(\", \", even_position($nums));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                array_push($even_nums, $nums[$i]);\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = even_position($nums);\nprint_r($result);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                $even_nums[] = $nums[$i];\n            }\n        }\n    }\n    return $even_nums;\n}\n\nprint_r(even_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$even_nums = even_position($nums);\necho \"Even numbers in even positions are: \";\nprint_r($even_nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(even_position($nums));",
    "    $even_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            $even_nums[] = $nums[$i];\n        }\n    }\n    return $even_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(even_position($nums));",
    "    $even_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                $even_nums[] = $nums[$i];\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(even_position($nums));",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            if ($nums[$i] % 2 == 0) {\n                array_push($even_nums, $nums[$i]);\n            }\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    for ($i = 0; $i < count($even_nums); $i++) {\n        if ($even_nums[$i] % 2 != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho even_position($nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));",
    "    $even_index = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0 && $nums[$i] % 2 == 0) {\n            array_push($even_index, $nums[$i]);\n        }\n    }\n    if (count($even_index) == count($nums) / 2) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n\n$nums = [2, 4, 6, 8, 10];\necho even_position($nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(even_position($nums));\n",
    "    $even_index = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_index, $nums[$i]);\n        }\n    }\n    return $even_index;\n}\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho \"Even index of array: \";\nprint_r(even_position($nums));",
    "    $even_nums = array();\n    $odd_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            $even_nums[] = $nums[$i];\n        } else {\n            $odd_nums[] = $nums[$i];\n        }\n    }\n    $even_nums = array_filter($even_nums, function ($num) {\n        return $num % 2 == 0;\n    });\n    $odd_nums = array_filter($odd_nums, function ($num) {\n        return $num % 2 != 0;\n    });\n    return count($even_nums) == count($odd_nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho even_position($nums);",
    "    $even = true;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0 && $nums[$i] % 2 != 0) {\n            $even = false;\n            break;\n        }\n    }\n    return $even;\n}\n\n$nums = array(2, 4, 6, 8, 10);\necho even_position($nums);",
    "    $even_nums = array();\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_nums, $nums[$i]);\n        }\n    }\n    return $even_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8);\n$result = even_position($nums);\nprint_r($result);"
  ]
}
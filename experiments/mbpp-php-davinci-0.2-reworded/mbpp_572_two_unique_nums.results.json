{
  "name": "mbpp_572_two_unique_nums",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uywi4ug.php:20\nStack trace:\n#0 /tmp/tmp4uywi4ug.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4uywi4ug.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            array_push($unique_nums, $num);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcwzxyscw.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums = array_unique($nums);\n    if (count($nums) < 2) {\n        return false;\n    }\n    return true;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmppmvsvm8b.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1nvb3l.php:20\nStack trace:\n#0 /tmp/tmpaf1nvb3l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpaf1nvb3l.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = [];\n  foreach ($nums as $num) {\n    if (!in_array($num, $unique_nums)) {\n      $unique_nums[] = $num;\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwuyhyoao.php:20\nStack trace:\n#0 /tmp/tmpwuyhyoao.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwuyhyoao.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uywi4ug.php:20\nStack trace:\n#0 /tmp/tmp4uywi4ug.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4uywi4ug.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = count($nums);\n    $unique_nums = [];\n    for ($i = 0; $i < $count; $i++) {\n        if (in_array($nums[$i], $unique_nums)) {\n            continue;\n        } else {\n            array_push($unique_nums, $nums[$i]);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp6j3gsto3.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = [];\n  foreach ($nums as $num) {\n    if (!in_array($num, $unique_nums)) {\n      $unique_nums[] = $num;\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitolsk9w.php:21\nStack trace:\n#0 /tmp/tmpitolsk9w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpitolsk9w.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp73d991ku.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique_nums)) {\n            array_push($unique_nums, $nums[$i]);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpt2oi9xv3.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = [];\n  foreach ($nums as $num) {\n    if (!in_array($num, $unique_nums)) {\n      $unique_nums[] = $num;\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpi481_i2z.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $duplicate_nums = [];\n    foreach ($nums as $num) {\n        if (in_array($num, $unique_nums)) {\n            $duplicate_nums[] = $num;\n        } else {\n            $unique_nums[] = $num;\n        }\n    }\n    return array_diff($unique_nums, $duplicate_nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwblurj3n.php:24\nStack trace:\n#0 /tmp/tmpwblurj3n.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwblurj3n.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8e_p8_f.php:20\nStack trace:\n#0 /tmp/tmpo8e_p8_f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo8e_p8_f.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf1nvb3l.php:20\nStack trace:\n#0 /tmp/tmpaf1nvb3l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpaf1nvb3l.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if (!in_array($nums[$i], $unique_nums)) {\n            array_push($unique_nums, $nums[$i]);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpro80zfba.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array_unique($nums);\n    $unique_nums = array_values($unique_nums);\n    return $unique_nums;\n}\n\n$nums = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpd39xft5p.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $duplicate_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        } else {\n            $duplicate_nums[] = $num;\n        }\n    }\n    return array_diff($nums, $duplicate_nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpfvb9lfjh.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8866drb.php:21\nStack trace:\n#0 /tmp/tmpl8866drb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl8866drb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\nprint_r(two_unique_nums([1,2,3,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpra9u521h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpt8zqxm7g.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppy16p7m4.php:21\nStack trace:\n#0 /tmp/tmppy16p7m4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppy16p7m4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = two_unique_nums($nums);\nprint_r($result);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpus7ils52.php:21\nStack trace:\n#0 /tmp/tmpus7ils52.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpus7ils52.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tt5rwtn.php:21\nStack trace:\n#0 /tmp/tmp1tt5rwtn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1tt5rwtn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = array_count_values($nums);\n    $unique = array_keys($count, 1);\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmponvy95dy.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        $num = $nums[$i];\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpn6sslms2.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique_nums)) {\n            $unique_nums[] = $nums[$i];\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmfmbd2d.php:22\nStack trace:\n#0 /tmp/tmpcmfmbd2d.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcmfmbd2d.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc3g6s6i.php:20\nStack trace:\n#0 /tmp/tmpgc3g6s6i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgc3g6s6i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array_unique($nums);\n    $unique_nums = array_values($unique_nums);\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmputmb4w6t.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array_unique($nums);\n    $unique_nums = array_values($unique_nums);\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmputmb4w6t.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppy16p7m4.php:21\nStack trace:\n#0 /tmp/tmppy16p7m4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppy16p7m4.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique_nums)) {\n            $unique_nums[] = $nums[$i];\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$result = two_unique_nums($nums);\nprint_r($result);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpodi84us9.php:22\nStack trace:\n#0 /tmp/tmpodi84us9.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpodi84us9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique_nums)) {\n            $unique_nums[] = $nums[$i];\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpreliy10o.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums = array_unique($nums);\n    return $nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjp5nqsf2.php:15\nStack trace:\n#0 /tmp/tmpjp5nqsf2.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpjp5nqsf2.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmptoknnq47.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4r1yp72s.php:21\nStack trace:\n#0 /tmp/tmp4r1yp72s.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4r1yp72s.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgre1938.php:21\nStack trace:\n#0 /tmp/tmpbgre1938.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbgre1938.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            array_push($unique_nums, $num);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljb_9gnt.php:20\nStack trace:\n#0 /tmp/tmpljb_9gnt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpljb_9gnt.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6itm44_.php:20\nStack trace:\n#0 /tmp/tmpt6itm44_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpt6itm44_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tt5rwtn.php:21\nStack trace:\n#0 /tmp/tmp1tt5rwtn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1tt5rwtn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp_7vn897u.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppemt1m1_.php:21\nStack trace:\n#0 /tmp/tmppemt1m1_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppemt1m1_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uywi4ug.php:20\nStack trace:\n#0 /tmp/tmp4uywi4ug.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4uywi4ug.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bx6f17x.php:22\nStack trace:\n#0 /tmp/tmp2bx6f17x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2bx6f17x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = [];\n  foreach ($nums as $num) {\n    if (!in_array($num, $unique_nums)) {\n      $unique_nums[] = $num;\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpi481_i2z.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $counts = [];\n    foreach ($nums as $num) {\n        if (isset($counts[$num])) {\n            $counts[$num]++;\n        } else {\n            $counts[$num] = 1;\n        }\n    }\n    foreach ($counts as $num => $count) {\n        if ($count == 1) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 11\n    [1] => 12\n    [2] => 13\n    [3] => 14\n    [4] => 15\n    [5] => 16\n    [6] => 17\n    [7] => 18\n    [8] => 19\n    [9] => 20\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8e_p8_f.php:20\nStack trace:\n#0 /tmp/tmpo8e_p8_f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo8e_p8_f.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpjpnke_qy.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nnkp0si.php:20\nStack trace:\n#0 /tmp/tmp0nnkp0si.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0nnkp0si.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = count($nums);\n    $unique_nums = array();\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique_nums)) {\n            $unique_nums[] = $nums[$i];\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1znnm0at.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabpbsqbn.php:21\nStack trace:\n#0 /tmp/tmpabpbsqbn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpabpbsqbn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc64xk_nw.php:20\nStack trace:\n#0 /tmp/tmpc64xk_nw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc64xk_nw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jd_im2p.php:20\nStack trace:\n#0 /tmp/tmp9jd_im2p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9jd_im2p.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $counts = array_count_values($nums);\n    $unique = array_keys($counts, 1);\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsutl48fx.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = array_unique($nums);\n    $unique_nums = array_values($unique);\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vl2pfpt.php:17\nStack trace:\n#0 /tmp/tmp7vl2pfpt.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp7vl2pfpt.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $counts = array_count_values($nums);\n    $unique = array_keys($counts, 1);\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjgojizsy.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxgd2bzn5.php:20\nStack trace:\n#0 /tmp/tmpxgd2bzn5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxgd2bzn5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc64xk_nw.php:20\nStack trace:\n#0 /tmp/tmpc64xk_nw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc64xk_nw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\necho \"<pre>\";\nprint_r(two_unique_nums($nums));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] =",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = [];\n  foreach ($nums as $num) {\n    if (!in_array($num, $unique_nums)) {\n      $unique_nums[] = $num;\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwuyhyoao.php:20\nStack trace:\n#0 /tmp/tmpwuyhyoao.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwuyhyoao.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm85y544r.php:22\nStack trace:\n#0 /tmp/tmpm85y544r.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpm85y544r.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp53rm3yw.php:20\nStack trace:\n#0 /tmp/tmpp53rm3yw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp53rm3yw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 9];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0vamkl5.php:21\nStack trace:\n#0 /tmp/tmpu0vamkl5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpu0vamkl5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc64xk_nw.php:20\nStack trace:\n#0 /tmp/tmpc64xk_nw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc64xk_nw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqwrsh1f.php:21\nStack trace:\n#0 /tmp/tmpeqwrsh1f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeqwrsh1f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100];\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposaxj09k.php:20\nStack trace:\n#0 /tmp/tmposaxj09k.php(25): test()\n#1 {main}\n  thrown in /tmp/tmposaxj09k.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpelheq6dl.php:22\nStack trace:\n#0 /tmp/tmpelheq6dl.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpelheq6dl.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array_unique($nums);\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpy8buct76.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqwrsh1f.php:21\nStack trace:\n#0 /tmp/tmpeqwrsh1f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeqwrsh1f.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuh5qe48l.php:20\nStack trace:\n#0 /tmp/tmpuh5qe48l.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuh5qe48l.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = array();\n  foreach ($nums as $num) {\n    if (!in_array($num, $unique_nums)) {\n      array_push($unique_nums, $num);\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7z9y13_7.php:20\nStack trace:\n#0 /tmp/tmp7z9y13_7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp7z9y13_7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\n$unique_nums = two_unique_nums($nums);\n\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpjpnke_qy.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums = array_unique($nums);\n    $nums = array_values($nums);\n    return $nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_i406dvl.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bx6f17x.php:22\nStack trace:\n#0 /tmp/tmp2bx6f17x.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2bx6f17x.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxvf2cv4.php:20\nStack trace:\n#0 /tmp/tmpdxvf2cv4.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdxvf2cv4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\n$unique_nums = two_unique_nums($nums);\n\nprint_r($unique_nums);\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums = array_unique($nums);\n    $nums = array_values($nums);\n    return $nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_i406dvl.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $counts = array_count_values($nums);\n    $unique = array_keys($counts, 1);\n    return $unique;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tt5rwtn.php:21\nStack trace:\n#0 /tmp/tmp1tt5rwtn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1tt5rwtn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 8, 9];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfv7xc30.php:20\nStack trace:\n#0 /tmp/tmpmfv7xc30.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpmfv7xc30.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    $count = 0;\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n            $count++;\n        }\n        if($count == 2) {\n            return $unique_nums;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qdcuhyc.php:26\nStack trace:\n#0 /tmp/tmp0qdcuhyc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0qdcuhyc.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabpbsqbn.php:21\nStack trace:\n#0 /tmp/tmpabpbsqbn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpabpbsqbn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8866drb.php:21\nStack trace:\n#0 /tmp/tmpl8866drb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl8866drb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            array_push($unique_nums, $num);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_xy7ldk.php:20\nStack trace:\n#0 /tmp/tmpu_xy7ldk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpu_xy7ldk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums = array_unique($nums);\n    $nums = array_values($nums);\n    $nums = array_slice($nums, 0, 2);\n    return $nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmp6511mcpu.php on line 11\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uywi4ug.php:20\nStack trace:\n#0 /tmp/tmp4uywi4ug.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4uywi4ug.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n  $unique_nums = array();\n  foreach($nums as $num) {\n    if(!in_array($num, $unique_nums)) {\n      $unique_nums[] = $num;\n    }\n  }\n  return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpfvy7yc07.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppemt1m1_.php:21\nStack trace:\n#0 /tmp/tmppemt1m1_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppemt1m1_.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $arr = [];\n    foreach ($nums as $num) {\n        if (isset($arr[$num])) {\n            $arr[$num] += 1;\n        } else {\n            $arr[$num] = 1;\n        }\n    }\n    $unique_nums = [];\n    foreach ($arr as $key => $value) {\n        if ($value == 1) {\n            $unique_nums[] = $key;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpclo3_7e3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = count($nums);\n    $unique = [];\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique)) {\n            $unique[] = $nums[$i];\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0j6p2lkm.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = count($nums);\n    $unique = [];\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique)) {\n            $unique[] = $nums[$i];\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp0j6p2lkm.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            array_push($unique_nums, $num);\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxc78xpz.php:21\nStack trace:\n#0 /tmp/tmpwxc78xpz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwxc78xpz.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $uniques = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $uniques)) {\n            $uniques[] = $num;\n        }\n    }\n    return $uniques;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph48m8454.php:20\nStack trace:\n#0 /tmp/tmph48m8454.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph48m8454.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp010jdkg.php:20\nStack trace:\n#0 /tmp/tmpp010jdkg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpp010jdkg.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvkc2amu.php:21\nStack trace:\n#0 /tmp/tmphvkc2amu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphvkc2amu.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (in_array($num, $unique_nums)) {\n            unset($unique_nums[array_search($num, $unique_nums)]);\n        } else {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3y8_mur.php:20\nStack trace:\n#0 /tmp/tmpj3y8_mur.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj3y8_mur.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = array_unique($nums);\n    return $unique;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc64xk_nw.php:20\nStack trace:\n#0 /tmp/tmpc64xk_nw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc64xk_nw.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgre1938.php:21\nStack trace:\n#0 /tmp/tmpbgre1938.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbgre1938.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$unique_nums = two_unique_nums($nums);\nprint_r($unique_nums);\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tt5rwtn.php:21\nStack trace:\n#0 /tmp/tmp1tt5rwtn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1tt5rwtn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uywi4ug.php:20\nStack trace:\n#0 /tmp/tmp4uywi4ug.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4uywi4ug.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar_dump(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "array(10) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n  [5]=>\n  int(6)\n  [6]=>\n  int(7)\n  [7]=>\n  int(8)\n  [8]=>\n  int(9)\n  [9]=>\n  int(10)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4swlv3qp.php:20\nStack trace:\n#0 /tmp/tmp4swlv3qp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4swlv3qp.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums = array_unique($nums);\n    $nums = array_values($nums);\n    return $nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp_i406dvl.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124164,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jd_im2p.php:20\nStack trace:\n#0 /tmp/tmp9jd_im2p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9jd_im2p.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array_unique($nums);\n    $unique_nums = array_values($unique_nums);\n    return $unique_nums;\n}\n$nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpyoyhmsvu.php on line 9\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjncz_gs.php:22\nStack trace:\n#0 /tmp/tmpnjncz_gs.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnjncz_gs.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $counts = array_count_values($nums);\n    foreach ($counts as $num => $count) {\n        if ($count == 1) {\n            return $num;\n        }\n    }\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1gmyfu1e.php on line 13\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp1aonzp5h.php on line 14\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8jv3yzs.php:21\nStack trace:\n#0 /tmp/tmpa8jv3yzs.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa8jv3yzs.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = count($nums);\n    $unique = array();\n    for ($i = 0; $i < $count; $i++) {\n        if (!in_array($nums[$i], $unique)) {\n            array_push($unique, $nums[$i]);\n        }\n    }\n    return $unique;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n\necho \"Original array: \";\necho \"<br>\";\necho implode(\", \", $nums);\necho \"<br>\";\necho \"<br>\";\n\necho \"New array: \";\necho \"<br>\";\necho implode(\", \", two_unique_nums($nums));\necho \"<br>\";\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Original array: <br>1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20<br><br>New array: <br>1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaptkci0m.php:31\nStack trace:\n#0 /tmp/tmpaptkci0m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaptkci0m.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = array();\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100);\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $counts = array_count_values($nums);\n    $unique = array_keys($counts, 1);\n    return $unique;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpxh8o3wfg.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $count = count($nums);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($nums[$i] == $nums[$j]) {\n                unset($nums[$i]);\n            }\n        }\n    }\n    return $nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nWarning: Undefined array key 1 in /tmp/tmp5mva6b6l.php on line 7\n\nWarning: Undefined array key 1 in /tmp/tmp5mva6b6l.php on line 7\n\nWarning: Undefined array key 1 in /tmp/tmp5mva6b6l.php on line 7\n\nWarning: Undefined array key 2 in /tmp/tmp5mva6b6l.php on line 7\n\nWarning: Undefined array key 2 in /tmp/tmp5mva6b6l.php on line 7\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mva6b6l.php:22\nStack trace:\n#0 /tmp/tmp5mva6b6l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5mva6b6l.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100];\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n    [20] => 21\n    [21] => 22\n    [22] => 23\n    [23] => 24\n    [24] => 25\n    [25] => 26\n    [26] => 27\n    [27] => 28\n    [28] => 29\n    [29] => 30\n    [30] => 31\n    [31] => 32\n    [32] => 33\n    [33] => 34\n    [34] => 35\n    [35] => 36\n    [36] => 37\n    [37] => 38\n    [38] => 39\n    [39] => 40\n    [40] => 41\n    [41] => 42\n    [42] => 43\n    [43] => 44\n    [44] => 45\n    [45] => 46\n    [46] => 47\n    [47] => 48\n    [48] => 49\n    [49] => 50\n    [50] => 51\n    [51] => 52\n    [52] => 53\n    [53] => 54\n    [54] => 55\n    [55] => 56\n    [56] => 57\n    [57] => 58\n    [58] => 59\n    [59] => 60\n    [60] => 61\n    [61] => 62\n    [62] => 63\n    [63] => 64\n    [64] => 65\n    [65] => 66\n    [66] => 67\n    [67] => 68\n    [68] => 69\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho implode(', ', two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vh2mqnn.php:20\nStack trace:\n#0 /tmp/tmp4vh2mqnn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp4vh2mqnn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique)) {\n            $unique[] = $num;\n        }\n    }\n    return $unique;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8vqcfih.php:20\nStack trace:\n#0 /tmp/tmpj8vqcfih.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj8vqcfih.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach($nums as $num) {\n        if(!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\n\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n    [10] => 11\n    [11] => 12\n    [12] => 13\n    [13] => 14\n    [14] => 15\n    [15] => 16\n    [16] => 17\n    [17] => 18\n    [18] => 19\n    [19] => 20\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpebrp01fh.php:22\nStack trace:\n#0 /tmp/tmpebrp01fh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpebrp01fh.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $nums_count = array_count_values($nums);\n    $unique_nums = array_keys($nums_count, 1);\n    return $unique_nums;\n}\n\n$nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpetxoiov2.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nvvdjz4.php:19\nStack trace:\n#0 /tmp/tmp7nvvdjz4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7nvvdjz4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw11winzk.php:20\nStack trace:\n#0 /tmp/tmpw11winzk.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpw11winzk.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to remove duplicate numbers from a given number of arrays.\nfunction two_unique_nums($nums) {\n    $unique_nums = [];\n    foreach ($nums as $num) {\n        if (!in_array($num, $unique_nums)) {\n            $unique_nums[] = $num;\n        }\n    }\n    return $unique_nums;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(two_unique_nums($nums));\n\nfunction candidate(...$args) {\n    return two_unique_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 2, 3, 4, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 5)) !== array(1, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 2, 3, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517165,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf2j51w6.php:21\nStack trace:\n#0 /tmp/tmpmf2j51w6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmf2j51w6.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
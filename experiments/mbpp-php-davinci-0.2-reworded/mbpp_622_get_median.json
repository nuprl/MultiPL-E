{
  "name": "mbpp_622_get_median",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);",
    "\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}",
    "    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}",
    "    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "\t$i = 0;\n\t$j = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t}\n\t\telse if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t}\n\t\telse {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}",
    "    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is \" . $median;\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";",
    "    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);"
  ]
}
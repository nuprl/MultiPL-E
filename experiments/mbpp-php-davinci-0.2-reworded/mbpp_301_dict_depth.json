{
  "name": "mbpp_301_dict_depth",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the depth of an array.\nfunction dict_depth($d) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return dict_depth(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"a\" => 1, \"b\" => array(\"c\" => array(\"d\" => array())))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"a\" => 1, \"b\" => array(\"c\" => \"python\"))) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1 => \"Sun\", 2 => array(3 => array(4 => \"Mon\")))) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max_depth = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max_depth) {\n                $max_depth = $depth;\n            }\n        }\n    }\n    return $max_depth;\n}\n\n$a = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4\n            )\n        )\n    )\n);\n\necho dict_depth($a);",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$a = array(1, 2, array(3, 4, array(5, 6, 7)));\necho dict_depth($a);",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n            ),\n        ),\n    ),\n);\n\necho dict_depth($d);\n",
    "    $max_depth = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max_depth) {\n                $max_depth = $depth;\n            }\n        }\n    }\n    return $max_depth;\n}\n\n$d = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                'd' => array(\n                    'e' => array(\n                        'f' => array(\n                            'g' => array(\n                                'h' => array(\n                                    'i' => array(\n                                        'j' => array(\n                                            'k' => array(\n                                                'l' => array(\n                                                    'm' => array(\n                                                        'n' => array(\n                                                            'o' => array(\n                                                                'p' => array(\n                                                                    'q' => array(\n                                                                        'r' => array(\n                                                                            's' => array(\n                                                                                't' => array(\n                                                                                    'u' => array(\n                                                                                        'v' => array(\n                                                                                            'w' => array(\n                                                                                                'x' => array(\n                                                                                                    'y' => array(\n                                                                                                        'z' => array(\n                                                                                                            'A' => array(\n                                                                                                                'B' => array(\n                                                                                                                    'C' => array(\n                                                                                                                        'D' => array(\n                                                                                                                            'E' => array(\n                                                                                                                                'F' => array(\n                                                                                                                                    'G' => array(\n                                                                                                                                        'H' => array(\n                                                                                                                                            'I' => array(\n                                                                                                                                                'J' => array(\n                                ",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3\n        )\n    )\n);\n\necho dict_depth($d);\n",
    "    $depth = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = max($depth, dict_depth($v) + 1);\n        }\n    }\n    return $depth;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3\n        )\n    )\n);\n\necho dict_depth($d);",
    "    if (is_array($d)) {\n        $max = 0;\n        foreach ($d as $v) {\n            $t = dict_depth($v);\n            if (is_array($t)) {\n                $max = max($max, max($t));\n            } else {\n                $max = max($max, $t);\n            }\n        }\n        return $max + 1;\n    } else {\n        return 0;\n    }\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => array(\n            'd' => array(\n                'e' => array(\n                    'f' => array(\n                        'g' => array(\n                            'h' => array(\n                                'i' => array(\n                                    'j' => array(\n                                        'k' => array(\n                                            'l' => array(\n                                                'm' => array(\n                                                    'n' => array(\n                                                        'o' => array(\n                                                            'p' => array(\n                                                                'q' => array(\n                                                                    'r' => array(\n                                                                        's' => array(\n                                                                            't' => array(\n                                                                                'u' => array(\n                                                                                    'v' => array(\n                                                                                        'w' => array(\n                                                                                            'x' => array(\n                                                                                                'y' => array(\n                                                                                                    'z' => array(\n                                                                                                        'aa' => array(\n                                                                                                            'bb' => array(\n                                                                                                                'cc' => array(\n                                                                                                                    'dd' => array(\n                                                                                                                        'ee' => array(\n                                                                                                                            'ff' => array(\n                                                                                                                                'gg' => array(\n                                                                                                                                    'hh' => array(\n                                                                                                                                        'ii' => array(\n                                ",
    "  $max = 1;\n  foreach ($d as $v) {\n    if (is_array($v)) {\n      $max = max($max, 1 + dict_depth($v));\n    }\n  }\n  return $max;\n}\n",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3\n        )\n    )\n);\necho dict_depth($d);",
    "    $depth = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = max($depth, dict_depth($v) + 1);\n        }\n    }\n    return $depth;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4,\n            ),\n        ),\n    ),\n);\n\necho dict_depth($d);",
    "    $max = 0;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n",
    "    if (is_array($d)) {\n        $max = 0;\n        foreach ($d as $v) {\n            $t = dict_depth($v);\n            if ($t > $max) {\n                $max = $t;\n            }\n        }\n        return $max + 1;\n    }\n    return 0;\n}\n\n$a = array(1, 2, 3, array(4, 5, array(6, 7, 8, array(9, 10))));\necho dict_depth($a);\n",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3\n        )\n    )\n);\n\necho dict_depth($d);\n",
    "    $max_depth = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max_depth) {\n                $max_depth = $depth;\n            }\n        }\n    }\n    return $max_depth;\n}\n\n$a = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3,\n            'f' => array(\n                'g' => 4\n            )\n        )\n    )\n);\n\necho dict_depth($a);\n",
    "    $max_depth = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max_depth) {\n                $max_depth = $depth;\n            }\n        }\n    }\n    return $max_depth;\n}\n\n$a = array(1, 2, 3, 4, 5);\n$b = array(1, 2, array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5)));\n$c = array(1, 2, array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5, array(1, 2, 3, 4, 5))));\n\necho dict_depth($a) . \"\\n\";\necho dict_depth($b) . \"\\n\";\necho dict_depth($c) . \"\\n\";\n",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$a = array(1, 2, 3, 4);\n$b = array(1, 2, array(3, 4));\n$c = array(1, 2, array(3, array(4, 5)));\n$d = array(1, 2, array(3, array(4, array(5, 6))));\n\necho dict_depth($a) . \"\\n\";\necho dict_depth($b) . \"\\n\";\necho dict_depth($c) . \"\\n\";\necho dict_depth($d) . \"\\n\";",
    "    if (!is_array($d)) return 0;\n    $max = 0;\n    foreach ($d as $v) {\n        $depth = dict_depth($v);\n        if ($depth > $max) $max = $depth;\n    }\n    return $max + 1;\n}\n",
    "    if (is_array($d)) {\n        $max = 0;\n        foreach ($d as $v) {\n            $depth = dict_depth($v);\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n        return $max + 1;\n    }\n    return 0;\n}\n\n$d = array(\n    'a' => array(\n        'b' => array(\n            'c' => array(\n                'd' => array(\n                    'e' => array(\n                        'f' => array(\n                            'g' => array(\n                                'h' => array(\n                                    'i' => array(\n                                        'j' => array(\n                                            'k' => array(\n                                                'l' => array(\n                                                    'm' => array(\n                                                        'n' => array(\n                                                            'o' => array(\n                                                                'p' => array(\n                                                                    'q' => array(\n                                                                        'r' => array(\n                                                                            's' => array(\n                                                                                't' => array(\n                                                                                    'u' => array(\n                                                                                        'v' => array(\n                                                                                            'w' => array(\n                                                                                                'x' => array(\n                                                                                                    'y' => array(\n                                                                                                        'z' => array(\n                                                                                                            'A' => array(\n                                                                                                                'B' => array(\n                                                                                                                    'C' => array(\n                                                                                                                        'D' => array(\n                                                                                                                            'E' => array(\n                                                                                                                                'F' => array(\n                                                                                                                                    'G' => array(\n                                                                                                                                        'H' => array(\n                                                                                                                                            'I' => array(\n                                                                                                                                                'J' => array(\n                                                                                                ",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$a = array(1, 2, 3);\n$b = array(1, 2, array(3, 4));\n$c = array(1, 2, array(3, array(4, 5)));\n$d = array(1, 2, array(3, array(4, array(5))));\n\necho dict_depth($a) . \"\\n\";\necho dict_depth($b) . \"\\n\";\necho dict_depth($c) . \"\\n\";\necho dict_depth($d) . \"\\n\";\n",
    "    $max = 1;\n    foreach ($d as $v) {\n        if (is_array($v)) {\n            $depth = dict_depth($v) + 1;\n            if ($depth > $max) {\n                $max = $depth;\n            }\n        }\n    }\n    return $max;\n}\n\n$d = array(\n    'a' => 1,\n    'b' => array(\n        'c' => 2,\n        'd' => array(\n            'e' => 3\n        )\n    )\n);\n\necho dict_depth($d);\n"
  ]
}
{
  "name": "mbpp_566_sum_digits",
  "language": "php",
  "prompt": "<?php\n// Write a function to get the sum of the digits of a non-negative integer.\nfunction sum_digits($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sum_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(345) !== 12) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(97) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = floor($n / 10);\n\t}\n\treturn $sum;\n}\n\necho sum_digits(123);",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);\necho \"\\n\";\necho sum_digits(456);\necho \"\\n\";\necho sum_digits(789);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(1);\necho \"\\n\";\necho sum_digits(2);\necho \"\\n\";\necho sum_digits(3);\necho \"\\n\";\necho sum_digits(4);\necho \"\\n\";\necho sum_digits(5);\necho \"\\n\";\necho sum_digits(6);\necho \"\\n\";\necho sum_digits(7);\necho \"\\n\";\necho sum_digits(8);\necho \"\\n\";\necho sum_digits(9);\necho \"\\n\";\necho sum_digits(10);\necho \"\\n\";\necho sum_digits(11);\necho \"\\n\";\necho sum_digits(12);\necho \"\\n\";\necho sum_digits(13);\necho \"\\n\";\necho sum_digits(14);\necho \"\\n\";\necho sum_digits(15);\necho \"\\n\";\necho sum_digits(16);\necho \"\\n\";\necho sum_digits(17);\necho \"\\n\";\necho sum_digits(18);\necho \"\\n\";\necho sum_digits(19);\necho \"\\n\";\necho sum_digits(20);\necho \"\\n\";\necho sum_digits(21);\necho \"\\n\";\necho sum_digits(22);\necho \"\\n\";\necho sum_digits(23);\necho \"\\n\";\necho sum_digits(24);\necho \"\\n\";\necho sum_digits(25);\necho \"\\n\";\necho sum_digits(26);\necho \"\\n\";\necho sum_digits(27);\necho \"\\n\";\necho sum_digits(28);\necho \"\\",
    "\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = floor($n / 10);\n\t}\n\treturn $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = intval($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(123);",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n\necho sum_digits(12345);\necho \"\\n\";\necho sum_digits(123456789);\necho \"\\n\";\necho sum_digits(0);\necho \"\\n\";\necho sum_digits(1);\necho \"\\n\";\necho sum_digits(10);\necho \"\\n\";\necho sum_digits(11);\necho \"\\n\";\necho sum_digits(100);\necho \"\\n\";\necho sum_digits(101);\necho \"\\n\";\necho sum_digits(110);\necho \"\\n\";\necho sum_digits(111);\necho \"\\n\";\necho sum_digits(1000);\necho \"\\n\";\necho sum_digits(1001);\necho \"\\n\";\necho sum_digits(1010);\necho \"\\n\";\necho sum_digits(1011);\necho \"\\n\";\necho sum_digits(1100);\necho \"\\n\";\necho sum_digits(1101);\necho \"\\n\";\necho sum_digits(1110);\necho \"\\n\";\necho sum_digits(1111);\necho \"\\n\";\necho sum_digits(10000);\necho \"\\n\";\necho sum_digits(10001);\necho \"\\n\";\necho sum_digits(10010);\necho \"\\n\";\necho sum_digits(10011);\necho \"\\n\";\necho sum_digits(10100);\necho \"\\n\";\necho sum_digits(10101);\necho \"\\n\";\necho sum_digits(10110);\necho \"\\n\";\necho sum_digits(10111);\necho \"\\n\";\necho sum_digits(11000);\necho \"\\n\";\necho sum_digits(11001);\necho \"\\n\";\necho sum_digits(11010);\necho \"\\n\";\necho sum_digits(11011);\necho \"\\n\";\necho sum_digits(11100);\necho \"\\n\";\necho sum_digits(11101",
    "\tif ($n < 0) {\n\t\treturn false;\n\t}\n\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = floor($n / 10);\n\t}\n\treturn $sum;\n}\n",
    "  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n\n$n = 12345;\necho sum_digits($n);",
    "  $sum = 0;\n  while ($n > 0) {\n    $sum += $n % 10;\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n",
    "\t$sum = 0;\n\twhile ($n > 0) {\n\t\t$sum += $n % 10;\n\t\t$n = intval($n / 10);\n\t}\n\treturn $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = (int)($n / 10);\n    }\n    return $sum;\n}\n"
  ]
}
{
  "name": "mbpp_89_closest_num",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the closest smaller number than n.\nfunction closest_num($N) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return closest_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(11) !== 10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 11) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\necho closest_num(5) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;\necho closest_num(30) . PHP_EOL;\necho closest_num(31) . PHP_EOL;\necho closest_num(32) . PHP_EOL;\necho closest_num(33) . PHP_EOL;\necho closest_num(34) . PHP_EOL;\necho closest_num(35) . PHP_E",
    "    $n = $N;\n    $count = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($count-1));\n    $n = $n | (1 << ($count-2));\n    return $n;\n}\n\n$n = 10;\necho closest_num($n);",
    "\t$N = (string)$N;\n\t$len = strlen($N);\n\t$i = $len - 1;\n\twhile ($i > 0) {\n\t\tif ($N[$i] < $N[$i-1]) {\n\t\t\t$temp = $N[$i-1];\n\t\t\t$N[$i-1] = $N[$i];\n\t\t\t$N[$i] = $temp;\n\t\t\tbreak;\n\t\t}\n\t\t$i--;\n\t}\n\treturn $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    while($n > 0) {\n        $count++;\n        $n = $n >> 1;\n    }\n    return $N - pow(2, $count - 1);\n}\n\necho closest_num(10);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    $j = $len - 2;\n    while ($i > 0 && $N[$i] <= $N[$j]) {\n        $i--;\n        $j--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $x = $N[$i - 1];\n    $smallest = $i;\n    for ($j = $i + 1; $j < $len; $j++) {\n        if ($N[$j] < $N[$smallest] && $N[$j] > $x) {\n            $smallest = $j;\n        }\n    }\n    $temp = $N[$smallest];\n    $N[$smallest] = $N[$i - 1];\n    $N[$i - 1] = $temp;\n    $arr = str_split($N);\n    $arr = array_slice($arr, $i);\n    sort($arr);\n    $arr = array_merge(array_slice($N, 0, $i), $arr);\n    return implode($arr);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(100);\necho \"\\n\";\necho closest_num(4321234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(12456);\necho \"\\n\";\necho closest_num(289347);\necho \"\\n\";\necho closest_num(289347);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(124567);\necho \"\\n\";\necho closest_num(289347601);\necho \"\\n\";\necho closest_num(99999999);\necho \"\\n\";\necho closest_num(2873476);\necho \"\\n\";\necho closest_num(2345678765);\necho \"\\n\";\necho closest_num(12000);\necho \"\\n\";\necho closest_",
    "    $n = str_split($N);\n    $i = count($n) - 1;\n    while ($i > 0 && $n[$i] >= $n[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($n) - 1;\n    while ($n[$j] <= $n[$i - 1]) {\n        $j--;\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$j];\n    $n[$j] = $temp;\n    $j = count($n) - 1;\n    while ($i < $j) {\n        $temp = $n[$i];\n        $n[$i] = $n[$j];\n        $n[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($n);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(987654321);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(9876543211);\necho \"\\n\";\necho closest_num(9876543212);\necho \"\\n\";\necho closest_num(9876543213);\necho \"\\n\";\necho closest_num(9876543214);\necho \"\\n\";\necho closest_num(9876543215);\necho \"\\n\";\necho closest_num(9876543216);\necho \"\\n\";\necho closest_num(9876543217);\necho \"\\n\";\necho closest_num(9876543218);\necho \"\\n\";\necho closest_num(9876543219);\necho \"\\n\";\necho closest_num(9876543220);\necho \"\\n\";\necho closest_num(9876543221);\necho \"\\n\";\necho closest_num",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\necho closest_num(10);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $num_bin_rev_arr_len_minus_one = $num_bin_rev_arr_len - 1;\n    $num_bin_rev_arr_len_minus_two = $num_bin_rev_arr_len - 2;\n    $num_bin_rev_arr_len_minus_three = $num_bin_rev_arr_len - 3;\n    $num_bin_rev_arr_len_minus_four = $num_bin_rev_arr_len - 4;\n    $num_bin_rev_arr_len_minus_five = $num_bin_rev_arr_len - 5;\n    $num_bin_rev_arr_len_minus_six = $num_bin_rev_arr_len - 6;\n    $num_bin_rev_arr_len_minus_seven = $num_bin_rev_arr_len - 7;\n    $num_bin_rev_arr_len_minus_eight = $num_bin_rev_arr_len - 8;\n    $num_bin_rev_arr_len_minus_nine = $num_bin_rev_arr_len - 9;\n    $num_bin_rev_arr_len_minus_ten = $num_bin_rev_arr_len - 10;\n    $num_bin_rev_arr_len_minus_eleven = $num_bin_rev_arr_len - 11;\n    $num_bin_rev_arr_len_minus_twelve = $num_bin_rev_arr_len - 12;\n    $num_bin_rev_arr_len_minus_thirteen = $num_bin_rev_arr_len - 13;\n    $num_bin_rev_arr_len_minus_fourteen = $num_bin_",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(5) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;\necho closest_num(30) . PHP_EOL;\necho closest_num(31) . PHP_EOL;\necho closest_num(32) . PHP_EOL;\necho closest_num(33) . PHP_EOL;\necho closest_num(34) . PHP_EOL;\necho closest_num(35) . PHP_EOL;\necho closest_num(36) . PHP_EOL;\necho closest_num",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n    } else {\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $result += $p;\n            $c0--;\n        } else {\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n\necho closest_num(6) . \"\\n\";\necho closest_num(7) . \"\\n\";\necho closest_num(8) . \"\\n\";\necho closest_num(9) . \"\\n\";\necho closest_num(10) . \"\\n\";\necho closest_num(11) . \"\\n\";\necho closest_num(12) . \"\\n\";\necho closest_num(13) . \"\\n\";\necho closest_num(14) . \"\\n\";\necho closest_num(15) . \"\\n\";\necho closest_num(16) . \"\\n\";\necho closest_num(17) . \"\\n\";\necho closest_num(18) . \"\\n\";\necho closest_num(19) . \"\\n\";\necho closest_num(20) . \"\\n\";\necho closest_num(21) . \"\\n\";\necho closest_num(22) . \"\\n\";\necho closest_num(23) . \"\\n\";\necho closest_num(24) . \"\\n\";\necho closest_num(25) . \"\\n\";\necho closest_num(26) . \"\\n\";\necho closest_num(27) . \"\\n\";\necho closest_num(28) . \"\\n\";\necho closest_num(29) . \"\\n\";\necho closest_num(30) . \"\\n\";\necho closest_num(31) . \"\\n\";\necho closest",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $i = 0;\n    $count = 0;\n    $flag = 0;\n    while($i < $num_bin_len) {\n        if($num_bin_rev[$i] == 1) {\n            $count++;\n            if($count == 2) {\n                $flag = 1;\n                break;\n            }\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        $num_bin_rev[$i] = 0;\n        $num_bin_rev[$i-1] = 1;\n        $num_bin_rev = strrev($num_bin_rev);\n        $num = bindec($num_bin_rev);\n    }\n    return $num;\n}\n",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $",
    "    $N = (string) $N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0 && $N[$i] <= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = $i - 1;\n    $min = $i;\n    for ($k = $i + 1; $k < $len; $k++) {\n        if ($N[$k] < $N[$min] && $N[$k] > $N[$j]) {\n            $min = $k;\n        }\n    }\n    $temp = $N[$j];\n    $N[$j] = $N[$min];\n    $N[$min] = $temp;\n    $N = substr($N, 0, $i) . strrev(substr($N, $i));\n    return (int) $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - pow(2, $i - 1);\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n\necho closest_num(5);",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode('', $N);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(98765);\necho \"\\n\";\necho closest_num(124567);\necho \"\\n\";\necho closest_num(123465);\necho \"\\n\";\necho closest_num(1234567);\necho \"\\n\";\necho closest_num(12345678);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $temp = 0;\n    $result = 0;\n    $flag = false;\n    for ($i = $len - 1; $i > 0; $i--) {\n        if ($N[$i] < $N[$i - 1]) {\n            $flag = true;\n            $temp = $N[$i - 1];\n            $N[$i - 1] = $N[$i];\n            $N[$i] = $temp;\n            break;\n        }\n    }\n    if ($flag) {\n        $result = (int)$N;\n    } else {\n        $result = -1;\n    }\n    return $result;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    return $n;\n}\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n    } else {\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $result += $p;\n            $c0--;\n        }\n        $p <<= 1;\n        if ($c1 > 0) {\n            $result += $p;\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n",
    "    $N = strval($N);\n    $len = strlen($N);\n    $i = 1;\n    while($i < $len) {\n        if($N[$i] < $N[$i-1]) {\n            $N[$i-1] = $N[$i-1] - 1;\n            $N[$i] = 9;\n            $i++;\n        }\n        else {\n            $i++;\n        }\n    }\n    return intval($N);\n}\n\necho closest_num(12345);",
    "    $n = $N;\n    $i = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n\necho closest_num(5);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    $j = $len - 2;\n    while ($i > 0 && $j > 0) {\n        if ($N[$i] < $N[$j]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$j];\n            $N[$j] = $temp;\n            $i = $len - 1;\n            $j = $len - 2;\n        } else {\n            $i--;\n            $j--;\n        }\n    }\n    return $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $count = 0;\n    $flag = 0;\n    for($i = 0; $i < $num_bin_rev_arr_len; $i++) {\n        if($num_bin_rev_arr[$i] == 1) {\n            $count++;\n            if($count == 2) {\n                $flag = 1;\n                $num_bin_rev_arr[$i] = 0;\n                $num_bin_rev_arr[$i - 1] = 1;\n                break;\n            }\n        }\n    }\n    if($flag == 1) {\n        $num_bin_rev_arr_len = count($num_bin_rev_arr);\n        for($i = $num_bin_rev_arr_len - 1; $i > $i - 1; $i--) {\n            $num_bin_rev_arr[$i] = 0;\n        }\n        $num_bin_rev_arr = array_reverse($num_bin_rev_arr);\n        $num_bin_rev_arr = implode($num_bin_rev_arr);\n        $num = bindec($num_bin_rev_arr);\n        return $num;\n    } else {\n        return -1;\n    }\n}\n\necho closest_num(5);",
    "    $n = $N;\n    $count = 0;\n    while($n > 0) {\n        $count++;\n        $n = $n >> 1;\n    }\n    return $N - (1 << ($count - 1));\n}\n\necho closest_num(8);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(5);\necho \"\\n\";\necho closest_num(4);\necho \"\\n\";\necho closest_num(3);\necho \"\\n\";\necho closest_num(2);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(0);\necho \"\\n\";\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 + $c1 == 31 || $c0 + $c1 == 0) {\n        return -1;\n    }\n    $p = $c0 + $c1;\n    $N &= ((~0) << ($p + 1));\n    $mask = (1 << ($c1 + 1)) - 1;\n    $N |= $mask << ($c0 - 1);\n    return $N;\n}\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\n\";\necho closest_num(41);\necho \"\\n\";\necho closest_num(42);\necho \"\\n\";\necho closest_num(43);\necho \"\\n\";\necho closest_num(44);\necho \"\\n\";\necho closest_num(45);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c1 == 1) {\n        return $N - 1;\n    }\n    $p = 1;\n    $c = 0;\n    while ($N & $p) {\n        $p <<= 1;\n        $c++;\n    }\n    $p >>= 1;\n    $N &= ~$p;\n    $N |= $p - 1;\n    $N &= ~((1 << ($c - 1)) - 1);\n    $N |= (1 << ($c - 1)) - 1;\n    return $N;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    return $n;\n}\n\necho closest_num(10);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(4);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\n\";\necho closest_num(41);\necho \"\\n\";\necho closest_num(42",
    "    $num = $N;\n    $num_arr = str_split($num);\n    $num_len = count($num_arr);\n    $i = $num_len - 1;\n    while ($i > 0) {\n        if ($num_arr[$i] < $num_arr[$i - 1]) {\n            $temp = $num_arr[$i];\n            $num_arr[$i] = $num_arr[$i - 1];\n            $num_arr[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    $num = implode($num_arr);\n    return $num;\n}\n\necho closest_num(123456);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(53517);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\n",
    "    $n = $N;\n    $i = 0;\n    while ($n != 0) {\n        $i++;\n        $n = $n >> 1;\n    }\n    $n = $N;\n    $n = $n & ((1 << $i) - 1);\n    $n = $n | ((1 << ($i-1)) - 1);\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - pow(2, $i - 1);\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(12345);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c0 > $c1) {\n        return $N - pow(2, $c1);\n    } else {\n        return $N - pow(2, $c0);\n    }\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c1 == 1) {\n        return $N - 1;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $N - $p + ($p >> 1);\n}\n\necho closest_num(6) . \"\\n\";\necho closest_num(7) . \"\\n\";\necho closest_num(8) . \"\\n\";\necho closest_num(9) . \"\\n\";\necho closest_num(10) . \"\\n\";\necho closest_num(11) . \"\\n\";\necho closest_num(12) . \"\\n\";\necho closest_num(13) . \"\\n\";\necho closest_num(14) . \"\\n\";\necho closest_num(15) . \"\\n\";\necho closest_num(16) . \"\\n\";\necho closest_num(17) . \"\\n\";\necho closest_num(18) . \"\\n\";\necho closest_num(19) . \"\\n\";\necho closest_num(20) . \"\\n\";\necho closest_num(21) . \"\\n\";\necho closest_num(22) . \"\\n\";\necho closest_num(23) . \"\\n\";\necho closest_num(24) . \"\\n\";\necho closest_num(25) . \"\\n\";\necho closest_num(26) . \"\\n\";\necho closest_num(27) . \"\\n\";\necho closest_num(28) . \"\\n\";\necho closest_num(29) . \"\\n\";\necho closest_num(30) . \"\\n\";\necho closest_num(31) . \"\\n\";\necho closest_num(32) . \"\\n\";\necho closest_num(33) . \"\\n\";\necho closest_num(34) . \"\\n\";\necho closest_num(35) . \"\\n\";\necho closest_num(36) . \"\\n\";\necho closest_num(37)",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    $n = $n | (1 << ($i - 2));\n    return $n;\n}\n\n$N = 12;\necho closest_num($N);",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $i = 0;\n    while ($i < $num_bin_rev_arr_len) {\n        if ($num_bin_rev_arr[$i] == 1) {\n            $num_bin_rev_arr[$i] = 0;\n            $num_bin_rev_arr[$i+1] = 1;\n            break;\n        }\n        $i++;\n    }\n    $num_bin_rev_arr_rev = array_reverse($num_bin_rev_arr);\n    $num_bin_rev_arr_rev_str = implode($num_bin_rev_arr_rev);\n    $num_bin_rev_arr_rev_str_len = strlen($num_bin_rev_arr_rev_str);\n    if ($num_bin_rev_arr_rev_str_len < $num_bin_len) {\n        $num_bin_rev_arr_rev_str = str_pad($num_bin_rev_arr_rev_str, $num_bin_len, '0', STR_PAD_LEFT);\n    }\n    $num_bin_rev_arr_rev_str_len = strlen($num_bin_rev_arr_rev_str);\n    $num_bin_rev_arr_rev_str_len_half = ceil($num_bin_rev_arr_rev_str_len / 2);\n    $num_bin_rev_arr_rev_str_len_half_arr = str_split($num_bin_rev_arr_rev_str, $num_bin_rev_arr_rev_str_len_half);\n    $num_bin_rev_arr_rev_str_len_half_arr_rev = array_reverse($num_bin_rev_arr",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $n = $n / 10;\n    }\n    $n = $N;\n    $i = 0;\n    while ($i < $count) {\n        $n = $n / 10;\n        $i++;\n    }\n    $n = floor($n);\n    $n = $n * 10;\n    $n = $n + 1;\n    return $n;\n}\n\n$N = 1234;\necho closest_num($N);",
    "  $n = $N;\n  $i = 0;\n  while ($n > 0) {\n    $n = $n >> 1;\n    $i++;\n  }\n  return $N - (1 << ($i - 1));\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c0 > $c1) {\n        $p = $c0;\n        $q = $c1;\n    } else {\n        $p = $c1;\n        $q = $c0;\n    }\n    $r = $p - $q;\n    $m = 1;\n    $m = $m << $r;\n    $m = $m - 1;\n    $m = $m << ($q - 1);\n    return $N & $m;\n}\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n    } else {\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $result += $p;\n            $c0--;\n        }\n        $p <<= 1;\n        if ($c1 > 0) {\n            $result += $p;\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode('', $N);\n}\n\necho closest_num(534976);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $j = 0;\n    while ($j < $i-1) {\n        $n = $n >> 1;\n        $j++;\n    }\n    $n = $n << 1;\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(10);",
    "    $i = $N;\n    while ($i > 0) {\n        if (is_prime($i)) {\n            return $i;\n        }\n        $i--;\n    }\n}\n",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $n = $n / 10;\n    }\n    $n = $N;\n    $i = 1;\n    while ($i < $count) {\n        $n = $n / 10;\n        $i++;\n    }\n    $n = floor($n);\n    $n = $n * pow(10, $count - 1);\n    return $n;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    $n = $n | (1 << ($i - 1));\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\n$N = 12;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c0 > $c1) {\n        $n = $N;\n        $n = $n & ($n - 1);\n        return $n;\n    } else {\n        $n = $N;\n        $n = $n | ($n + 1);\n        return $n;\n    }\n}\n\necho closest_num(8) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(5) . PHP_EOL;\necho closest_num(4) . PHP_EOL;\necho closest_num(3) . PHP_EOL;\necho closest_num(2) . PHP_EOL;\necho closest_num(1) . PHP_EOL;\necho closest_num(0) . PHP_EOL;",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $i++;\n        $n = $n >> 1;\n    }\n    $n = $N;\n    $j = 0;\n    while ($j < $i) {\n        $n = $n >> 1;\n        $j++;\n    }\n    $n = $n << 1;\n    return $n;\n}\n\necho closest_num(5);",
    "  $n = $N;\n  $count = 0;\n  while ($n > 0) {\n    $n = $n >> 1;\n    $count++;\n  }\n  $n = $N;\n  $n = $n & ~(1 << ($count - 1));\n  $n = $n | (1 << ($count - 2));\n  return $n;\n}\n\necho closest_num(5) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;\necho closest_num(30) . PHP_EOL;\necho closest_num(31) . PHP_EOL;\necho closest_num(32) . PHP_EOL;\necho closest_num(33) . PHP_EOL;\necho closest_num(34) . PHP_EOL;",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $n = $n >> 1;\n    }\n    $count--;\n    $n = $N;\n    $n = $n - pow(2, $count);\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $i = 0;\n    while($num_bin_rev_arr[$i] != 1) {\n        $i++;\n    }\n    $num_bin_rev_arr[$i] = 0;\n    $num_bin_rev_arr[$i+1] = 1;\n    $num_bin_rev_arr = array_slice($num_bin_rev_arr, 0, $i+2);\n    $num_bin_rev_arr = array_reverse($num_bin_rev_arr);\n    $num_bin_rev_arr = implode($num_bin_rev_arr);\n    $num_bin_rev_arr = bindec($num_bin_rev_arr);\n    return $num_bin_rev_arr;\n}\n\necho closest_num(12);\necho \"\\n\";\necho closest_num(125);\necho \"\\n\";\necho closest_num(126);\necho \"\\n\";\necho closest_num(127);\necho \"\\n\";\necho closest_num(128);\necho \"\\n\";\necho closest_num(129);\necho \"\\n\";\necho closest_num(130);\necho \"\\n\";\necho closest_num(131);\necho \"\\n\";\necho closest_num(132);\necho \"\\n\";\necho closest_num(133);\necho \"\\n\";\necho closest_num(134);\necho \"\\n\";\necho closest_num(135);\necho \"\\n\";\necho closest_num(136);\necho \"\\n\";\necho closest_num(137);\necho \"\\n\";\necho closest_num(138);\necho \"\\n\";\necho closest_num(139);\necho \"\\n\";\necho closest_num(140);\necho \"\\n\";\necho closest_num(141);\necho \"\\n\";\necho closest_num(142);\necho \"\\n\";\necho closest_num(143);\necho",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    $n = $n | (1 << ($i - 1));\n    return $n;\n}\n\necho closest_num(10);",
    "    $i = 0;\n    $j = 0;\n    $n = strlen($N);\n    $N = str_split($N);\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i - 1];\n            $N[$i - 1] = $N[$i];\n            $N[$i] = $temp;\n            break;\n        }\n    }\n    $N = implode($N);\n    return $N;\n}\n\n$N = \"12345\";\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $j = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $j++;\n        if ($n & 1) {\n            $n = $n >> 1;\n            $j++;\n            break;\n        }\n    }\n    $n = $N;\n    $n = $n >> $j;\n    $n = $n << $j;\n    $n = $n - 1;\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "  $n = $N;\n  $c0 = 0;\n  $c1 = 0;\n  while ($n > 0) {\n    if ($n & 1) {\n      $c1++;\n    } else {\n      $c0++;\n    }\n    $n >>= 1;\n  }\n  if ($c1 == 1) {\n    return $N - 1;\n  }\n  $p = 1;\n  $c = 0;\n  while ($N & $p) {\n    $p <<= 1;\n    $c++;\n  }\n  $p >>= 1;\n  $N &= ~$p;\n  $N |= $p - 1;\n  $N &= ~((1 << ($c - 1)) - 1);\n  $N |= (1 << ($c - 1)) - 1;\n  return $N;\n}\n",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(123456);",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\necho closest_num(534976);",
    "    $str = strval($N);\n    $len = strlen($str);\n    $i = $len - 1;\n    while ($i > 0 && $str[$i] <= $str[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = $len - 1;\n    while ($str[$j] >= $str[$i - 1]) {\n        $j--;\n    }\n    $temp = $str[$i - 1];\n    $str[$i - 1] = $str[$j];\n    $str[$j] = $temp;\n    $j = $len - 1;\n    while ($i < $j) {\n        $temp = $str[$i];\n        $str[$i] = $str[$j];\n        $str[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return intval($str);\n}\n\n$N = 534976;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(6);",
    "    $i = 1;\n    while ($i < $N) {\n        if ($N % $i == 0) {\n            return $i;\n        }\n        $i++;\n    }\n}\n\necho closest_num(12);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(40);\necho \"\\n\";\necho closest_num(45);\necho \"\\n\";\necho closest_num(50);\necho \"\\n\";\necho closest_num(55);\necho \"\\n\";\necho closest_num(60);\necho \"\\n\";\necho closest_num(65);\necho \"\\n\";\necho closest_num(70);\necho \"\\n\";\necho closest_num(75);\necho \"\\n\";\necho closest_num(80);\necho \"\\n\";\necho closest_num(85);\necho \"\\n\";\necho closest_num(90);\necho \"\\n\";\necho closest_num(95);\necho \"\\n\";\necho closest_num(100);\necho \"\\n\";\necho closest_num(105);\necho \"\\n\";\necho closest_num(110);\necho \"\\n\";\necho closest_num(115);\necho \"\\n\";\necho closest_num(120);\necho \"\\n\";\necho closest_num(125);\necho \"\\n\";\necho closest_num(130);\necho \"\\n\";\necho closest_num(135);\necho \"\\n\";\necho closest_num(140);\necho \"\\n\";\necho closest_num(145);\necho \"\\n\";\necho closest_num(150);\necho \"\\n\";\necho closest_num(155);\necho \"\\n\";\necho closest_num(160);\necho \"\\n\";\necho closest_num(165);\necho \"\\n\";\necho closest_num(170);\necho \"\\n\";\necho closest_num(175);\necho \"\\n\";\necho closest_num(180);\necho \"\\n\";\necho closest_num(185);",
    "    $N = strval($N);\n    $len = strlen($N);\n    for ($i = $len - 1; $i > 0; $i--) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n    }\n    return intval($N);\n}\n",
    "    $N = strval($N);\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return intval($N);\n}\n\necho closest_num(123);",
    "    $n = str_split($N);\n    $i = count($n) - 1;\n    while ($i > 0 && $n[$i] >= $n[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($n) - 1;\n    while ($n[$j] <= $n[$i - 1]) {\n        $j--;\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$j];\n    $n[$j] = $temp;\n    $j = count($n) - 1;\n    while ($i < $j) {\n        $temp = $n[$i];\n        $n[$i] = $n[$j];\n        $n[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($n);\n}\n\necho closest_num(534976);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while (($n & 1) == 0) {\n        $c0++;\n        $n >>= 1;\n    }\n    while (($n & 1) == 1) {\n        $c1++;\n        $n >>= 1;\n    }\n    if ($c0 + $c1 == 31 || $c0 + $c1 == 0) {\n        return -1;\n    }\n    $p = $c0 + $c1;\n    $N &= ((~0) << ($p + 1));\n    $mask = (1 << ($c1 + 1)) - 1;\n    $N |= $mask << ($c0 - 1);\n    return $N;\n}\n",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $pos = -1;\n    for($i = 0; $i < $num_bin_len-1; $i++) {\n        if($num_bin_rev[$i] == '1' && $num_bin_rev[$i+1] == '0') {\n            $pos = $i;\n            break;\n        }\n    }\n    if($pos == -1) {\n        return -1;\n    }\n    $num_bin_rev[$pos] = '0';\n    $num_bin_rev[$pos+1] = '1';\n    $num_bin_rev = strrev($num_bin_rev);\n    $num = bindec($num_bin_rev);\n    return $num;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $flag = 0;\n    for ($i = 0; $i < $num_bin_len; $i++) {\n        if ($num_bin_rev[$i] == '1') {\n            $flag = 1;\n            break;\n        }\n    }\n    if ($flag == 0) {\n        return -1;\n    }\n    $num_bin_rev[$i] = '0';\n    $num_bin_rev[$i + 1] = '1';\n    $num_bin_rev = strrev($num_bin_rev);\n    $num = bindec($num_bin_rev);\n    return $num;\n}\n\n$N = 12;\n$result = closest_num($N);\necho $result;",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > 0) {\n        $p = pow(2, $c0 + $c1);\n        return $N - $p + 1;\n    }\n    return -1;\n}\n\n$N = 21;\necho closest_num($N);",
    "    $n = $N;\n    $n1 = $n2 = 0;\n    $i = 0;\n    while($n > 0) {\n        $r = $n % 10;\n        if($r == 0) {\n            $n1 += pow(10, $i) * ($r + 1);\n            $n2 += pow(10, $i) * ($r + 1);\n        } else if($r == 1) {\n            $n1 += pow(10, $i) * ($r - 1);\n            $n2 += pow(10, $i) * ($r + 1);\n        } else {\n            $n1 += pow(10, $i) * ($r - 1);\n            $n2 += pow(10, $i) * ($r + 1);\n        }\n        $n = floor($n / 10);\n        $i++;\n    }\n    if(abs($N - $n1) < abs($N - $n2)) {\n        return $n1;\n    } else {\n        return $n2;\n    }\n}\n\necho closest_num(123);\necho \"\\n\";\necho closest_num(456);\necho \"\\n\";\necho closest_num(1000);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(0);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(100);\necho \"\\n\";\necho closest_num(101);\necho \"\\n\";\necho closest_num(110);\necho \"\\n\";\necho closest_num(111);\necho \"\\n\";\necho closest_num(112);\necho \"\\n\";\necho closest_num(113);\necho \"\\n\";\necho closest_num(114);\necho \"\\n\";\necho closest_num(115);\necho \"\\n\";\necho closest_num(116);\necho \"\\n\";\necho closest_num(117);\necho \"\\n\";\necho closest_num(118);\necho \"\\",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    $n = $n | (1 << ($i - 2));\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n\necho closest_num(6);\necho \"<br>\";\necho closest_num(7);\necho \"<br>\";\necho closest_num(8);\necho \"<br>\";\necho closest_num(9);\necho \"<br>\";\necho closest_num(10);\necho \"<br>\";\necho closest_num(11);\necho \"<br>\";\necho closest_num(12);\necho \"<br>\";\necho closest_num(13);\necho \"<br>\";\necho closest_num(14);\necho \"<br>\";\necho closest_num(15);\necho \"<br>\";\necho closest_num(16);\necho \"<br>\";\necho closest_num(17);\necho \"<br>\";\necho closest_num(18);\necho \"<br>\";\necho closest_num(19);\necho \"<br>\";\necho closest_num(20);\necho \"<br>\";\necho closest_num(21);\necho \"<br>\";\necho closest_num(22);\necho \"<br>\";\necho closest_num(23);\necho \"<br>\";\necho closest_num(24);\necho \"<br>\";\necho closest_num(25);\necho \"<br>\";\necho closest_num(26);\necho \"<br>\";\necho closest_num(27);\necho \"<br>\";\necho closest_num(28);\necho \"<br>\";\necho closest_num(29);\necho \"<br>\";\necho closest_num(30);\necho \"<br>\";\necho closest_num(31);\necho \"<br>\";\necho closest_num(32);\necho \"<br>\";\necho closest_num(33);\necho \"<br>\";\necho closest_num(34);\necho \"<br>\";\n",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 0;\n    while ($i < $len) {\n        if ($N[$i] > $N[$i + 1]) {\n            $N[$i] = $N[$i] - 1;\n            $N[$i + 1] = 9;\n            $i++;\n        }\n        $i++;\n    }\n    return (int)$N;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1230);\necho \"\\n\";\necho closest_num(123);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(0);\necho \"\\n\";\necho closest_num(123456789);\necho \"\\n\";\necho closest_num(1234567890);\necho \"\\n\";\necho closest_num(12345678901);\necho \"\\n\";\necho closest_num(123456789012);\necho \"\\n\";\necho closest_num(1234567890123);\necho \"\\n\";\necho closest_num(12345678901234);\necho \"\\n\";\necho closest_num(123456789012345);\necho \"\\n\";\necho closest_num(1234567890123456);\necho \"\\n\";\necho closest_num(12345678901234567);\necho \"\\n\";\necho closest_num(123456789012345678);\necho \"\\n\";\necho closest_num(1234567890123456789);\necho \"\\n\";\necho closest_num(12345678901234567890);\necho \"\\n\";\necho closest_num(123456789012345678901);\necho \"\\n\";\necho closest_num(1234567890123456789012);\necho \"\\n\";\necho closest_num(12345678901234567890123);\necho \"\\n\";\necho closest_num(123456789012345",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n) {\n        if ($n & 1)\n            $c1++;\n        else\n            $c0++;\n        $n >>= 1;\n    }\n    return $N - pow(2, $c1) + pow(2, $c0 - 1);\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n        $c1++;\n    } else {\n        $c0++;\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 || $c1) {\n        if ($c0) {\n            $result += $p;\n            $c0--;\n        } else {\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $closest = $N;\n    for ($i = 0; $i < strlen($N); $i++) {\n        $temp = $N;\n        $temp[$i] = (int) $temp[$i] - 1;\n        if ($temp[$i] >= 0 && $temp < $closest) {\n            $closest = $temp;\n        }\n    }\n    return $closest;\n}\n\necho closest_num(12345);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(123);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1432);\necho \"\\n\";\necho closest_num(2134);\necho \"\\n\";\necho closest_num(2314);\necho \"\\n\";\necho closest_num(2341);\necho \"\\n\";\necho closest_num(2431);\necho \"\\n\";\necho closest_num(3124);\necho \"\\n\";\necho closest_num(3142);\necho \"\\n\";\necho closest_num(3214);\necho \"\\n\";\necho closest_num(3241);\necho \"\\n\";\necho closest_num(3421);\necho \"\\n\";\necho closest_num(4123);\necho \"\\n\";\necho closest_num(4132);\necho \"\\n\";\necho closest_num(4213);\necho \"\\n\";\necho closest_num(4231);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(123456789);\necho \"\\n\";\necho closest_num(987654321);\necho \"\\n\";",
    "    $n = $N;\n    $n_bin = decbin($n);\n    $n_bin_len = strlen($n_bin);\n    $n_bin_rev = strrev($n_bin);\n    $n_bin_rev_arr = str_split($n_bin_rev);\n    $n_bin_rev_arr_len = count($n_bin_rev_arr);\n    $n_bin_rev_arr_len_minus_one = $n_bin_rev_arr_len - 1;\n    $n_bin_rev_arr_len_minus_two = $n_bin_rev_arr_len - 2;\n    $n_bin_rev_arr_len_minus_three = $n_bin_rev_arr_len - 3;\n    $n_bin_rev_arr_len_minus_four = $n_bin_rev_arr_len - 4;\n    $n_bin_rev_arr_len_minus_five = $n_bin_rev_arr_len - 5;\n    $n_bin_rev_arr_len_minus_six = $n_bin_rev_arr_len - 6;\n    $n_bin_rev_arr_len_minus_seven = $n_bin_rev_arr_len - 7;\n    $n_bin_rev_arr_len_minus_eight = $n_bin_rev_arr_len - 8;\n    $n_bin_rev_arr_len_minus_nine = $n_bin_rev_arr_len - 9;\n    $n_bin_rev_arr_len_minus_ten = $n_bin_rev_arr_len - 10;\n    $n_bin_rev_arr_len_minus_eleven = $n_bin_rev_arr_len - 11;\n    $n_bin_rev_arr_len_minus_twelve = $n_bin_rev_arr_len - 12;\n    $n_bin_rev_arr_len_minus_thirteen = $n_bin_rev_arr_len - 13;\n    $n_bin_rev_arr_len_minus_fourteen = $n_bin_",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n / 10;\n        $i++;\n    }\n    $n = $N;\n    $j = 0;\n    $k = 1;\n    $m = 0;\n    while ($j < $i - 1) {\n        $m = $m + ($n % 10) * $k;\n        $k = $k * 10;\n        $n = $n / 10;\n        $j++;\n    }\n    $m = $m + ($n % 10 - 1) * $k;\n    return $m;\n}\n\necho closest_num(123);",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_arr = str_split($num_bin);\n    $num_bin_arr_rev = array_reverse($num_bin_arr);\n    $num_bin_arr_rev_len = count($num_bin_arr_rev);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n   ",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(123456);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(53517);\necho \"\\n\";\necho closest_num(53517);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_num(5317);\necho \"\\n\";\necho closest_",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 1;\n    while ($i < $len) {\n        if ($N[$i] < $N[$i - 1]) {\n            $tmp = $N[$i - 1];\n            $N[$i - 1] = $N[$i];\n            $N[$i] = $tmp;\n            break;\n        }\n        $i++;\n    }\n    return (int)$N;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(12354);\necho \"\\n\";\necho closest_num(123465);\necho \"\\n\";\necho closest_num(123467);\necho \"\\n\";\necho closest_num(123468);\necho \"\\n\";\necho closest_num(123469);\necho \"\\n\";\necho closest_num(123496);\necho \"\\n\";\necho closest_num(123498);\necho \"\\n\";\necho closest_num(123499);\necho \"\\n\";\necho closest_num(123549);\necho \"\\n\";\necho closest_num(123594);\necho \"\\n\";\necho closest_num(123694);\necho \"\\n\";\necho closest_num(123695);\necho \"\\n\";\necho closest_num(123696);\necho \"\\n\";\necho closest_num(123697);\necho \"\\n\";\necho closest_num(123698);\necho \"\\n\";\necho closest_num(123699);\necho \"\\n\";\necho closest_num(123946);\necho \"\\n\";\necho closest_num(123964);\necho \"\\n\";\necho closest_num(123965);\necho \"\\n\";\necho closest_num(123966);\necho \"\\n\";\necho closest_num(123967);\necho \"\\n\";\necho closest_num(123968);\necho \"\\n\";\necho closest_num(123969);\necho \"\\n\";\necho closest_num(123984);\necho \"\\n",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n & ($n - 1);\n        $count++;\n    }\n    return $N - $count;\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $j = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $j++;\n        if ($n & 1) {\n            break;\n        }\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($j - 1));\n    $n = $n | (1 << ($i - $j));\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $count++;\n            $n = $n / 10;\n        } else {\n            break;\n        }\n    }\n    $result = $N - pow(10, $count);\n    return $result;\n}\n\necho closest_num(100);",
    "    $N = (string) $N;\n    $len = strlen($N);\n    for ($i = $len - 1; $i > 0; $i--) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            return (int) $N;\n        }\n    }\n    return -1;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1423);\necho \"\\n\";\necho closest_num(1432);\necho \"\\n\";\necho closest_num(2134);\necho \"\\n\";\necho closest_num(2143);\necho \"\\n\";\necho closest_num(2314);\necho \"\\n\";\necho closest_num(2341);\necho \"\\n\";\necho closest_num(2413);\necho \"\\n\";\necho closest_num(2431);\necho \"\\n\";\necho closest_num(3124);\necho \"\\n\";\necho closest_num(3142);\necho \"\\n\";\necho closest_num(3214);\necho \"\\n\";\necho closest_num(3241);\necho \"\\n\";\necho closest_num(3412);\necho \"\\n\";\necho closest_num(3421);\necho \"\\n\";\necho closest_num(4123);\necho \"\\n\";\necho closest_num(4132);\necho \"\\n\";\necho closest_num(4213);\necho \"\\n\";\necho closest_num(4231);\necho \"\\n\";\necho closest_num(4312);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(",
    "\t$num = $N;\n\t$num_arr = str_split($num);\n\t$len = count($num_arr);\n\t$i = $len - 1;\n\twhile ($i > 0) {\n\t\tif ($num_arr[$i] < $num_arr[$i - 1]) {\n\t\t\t$temp = $num_arr[$i];\n\t\t\t$num_arr[$i] = $num_arr[$i - 1];\n\t\t\t$num_arr[$i - 1] = $temp;\n\t\t\tbreak;\n\t\t}\n\t\t$i--;\n\t}\n\t$num = implode($num_arr);\n\treturn $num;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1423);\necho \"\\n\";\necho closest_num(1432);\necho \"\\n\";\necho closest_num(2134);\necho \"\\n\";\necho closest_num(2143);\necho \"\\n\";\necho closest_num(2314);\necho \"\\n\";\necho closest_num(2341);\necho \"\\n\";\necho closest_num(2413);\necho \"\\n\";\necho closest_num(2431);\necho \"\\n\";\necho closest_num(3124);\necho \"\\n\";\necho closest_num(3142);\necho \"\\n\";\necho closest_num(3214);\necho \"\\n\";\necho closest_num(3241);\necho \"\\n\";\necho closest_num(3412);\necho \"\\n\";\necho closest_num(3421);\necho \"\\n\";\necho closest_num(4123);\necho \"\\n\";\necho closest_num(4132);\necho \"\\n\";\necho closest_num(4213);\necho \"\\n\";\necho closest_num(4231);\necho \"\\n\";\necho closest_num(4312);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $x = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $x++;\n    }\n    $x = $x - 1;\n    $n = $N;\n    $n = $n & ~(1 << $x);\n    $n = $n | (1 << ($x - 1));\n    return $n;\n}\n",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1423);\necho \"\\n\";\necho closest_num(1432);\necho \"\\n\";\necho closest_num(2134);\necho \"\\n\";\necho closest_num(2143);\necho \"\\n\";\necho closest_num(2314);\necho \"\\n\";\necho closest_num(2341);\necho \"\\n\";\necho closest_num(2413);\necho \"\\n\";\necho closest_num(2431);\necho \"\\n\";\necho closest_num(3124);\necho \"\\n\";\necho closest_num(3142);\necho \"\\n\";\necho closest_num(3214);\necho \"\\n\";\necho closest_num(3241);\necho \"\\n\";\necho closest_num(3412);\necho \"\\n\";\necho closest_num(3421);\necho \"\\n\";\necho closest_num(4123);\necho \"\\n\";\necho closest_num(4132);\necho \"\\n\";\necho closest_num(4213);\necho \"\\n\";\necho closest_num(4231);\necho \"\\n\";\necho closest_num(4312);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $n = $n / 10;\n            $i++;\n        } else {\n            $n = $n - 1;\n            $i++;\n        }\n    }\n    $n = $N;\n    $n = $n - $i;\n    return $n;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c1 == 1) {\n        return $N - 1;\n    }\n    $p = $c0 + $c1;\n    $n = $N;\n    $n &= ((~0) << $p);\n    $mask = (1 << ($c1 + 1)) - 1;\n    $n |= $mask << ($c0 - 1);\n    return $n;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    $n = $n | (1 << ($i - 2));\n    return $n;\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n ^ (1 << ($i - 1));\n    $n = $n ^ (1 << ($i - 2));\n    return $n;\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $num_bin_rev_arr_len_minus_one = $num_bin_rev_arr_len - 1;\n    $num_bin_rev_arr_len_minus_two = $num_bin_rev_arr_len - 2;\n    $num_bin_rev_arr_len_minus_three = $num_bin_rev_arr_len - 3;\n    $num_bin_rev_arr_len_minus_four = $num_bin_rev_arr_len - 4;\n    $num_bin_rev_arr_len_minus_five = $num_bin_rev_arr_len - 5;\n    $num_bin_rev_arr_len_minus_six = $num_bin_rev_arr_len - 6;\n    $num_bin_rev_arr_len_minus_seven = $num_bin_rev_arr_len - 7;\n    $num_bin_rev_arr_len_minus_eight = $num_bin_rev_arr_len - 8;\n    $num_bin_rev_arr_len_minus_nine = $num_bin_rev_arr_len - 9;\n    $num_bin_rev_arr_len_minus_ten = $num_bin_rev_arr_len - 10;\n    $num_bin_rev_arr_len_minus_eleven = $num_bin_rev_arr_len - 11;\n    $num_bin_rev_arr_len_minus_twelve = $num_bin_rev_arr_len - 12;\n    $num_bin_rev_arr_len_minus_thirteen = $num_bin_rev_arr_len - 13;\n    $num_bin_rev_arr_len_minus_fourteen = $num_bin_",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n\necho closest_num(8);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(5);\necho \"\\n\";\necho closest_num(4);\necho \"\\n\";\necho closest_num(3);\necho \"\\n\";\necho closest_num(2);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(0);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest",
    "  $n = $N;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $n = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;\n  $f = 0;\n  $g = 0;\n  $h = 0;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $n = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;\n  $f = 0;\n  $g = 0;\n  $h = 0;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $n = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;",
    "    $n = $N;\n    $i = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    $n = $n | (1 << ($i - 1));\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $n = $n >> 1;\n    }\n    return $N - (1 << ($count - 1));\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $n = $n / 10;\n    }\n    $n = $N;\n    $i = 1;\n    while ($i < $count) {\n        $n = $n / 10;\n        $i++;\n    }\n    $n = floor($n);\n    $n = $n * pow(10, $count - 1);\n    return $n;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 == 0) {\n        return -1;\n    }\n    $p = $c0 + $c1;\n    $N = $N & ((~0) << $p);\n    $mask = (1 << ($c0 - 1)) - 1;\n    $N = $N | $mask;\n    return $N;\n}\n",
    "    $n = $N;\n    $n = $n & ($n - 1);\n    return $n;\n}\n",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $num_bin_rev_arr_len_minus_one = $num_bin_rev_arr_len - 1;\n    $num_bin_rev_arr_len_minus_two = $num_bin_rev_arr_len - 2;\n    $num_bin_rev_arr_len_minus_three = $num_bin_rev_arr_len - 3;\n    $num_bin_rev_arr_len_minus_four = $num_bin_rev_arr_len - 4;\n    $num_bin_rev_arr_len_minus_five = $num_bin_rev_arr_len - 5;\n    $num_bin_rev_arr_len_minus_six = $num_bin_rev_arr_len - 6;\n    $num_bin_rev_arr_len_minus_seven = $num_bin_rev_arr_len - 7;\n    $num_bin_rev_arr_len_minus_eight = $num_bin_rev_arr_len - 8;\n    $num_bin_rev_arr_len_minus_nine = $num_bin_rev_arr_len - 9;\n    $num_bin_rev_arr_len_minus_ten = $num_bin_rev_arr_len - 10;\n    $num_bin_rev_arr_len_minus_eleven = $num_bin_rev_arr_len - 11;\n    $num_bin_rev_arr_len_minus_twelve = $num_bin_rev_arr_len - 12;\n    $num_bin_rev_arr_len_minus_thirteen = $num_bin_rev_arr_len - 13;\n    $num_bin_rev_arr_len_minus_fourteen = $num_bin_",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $i = 0;\n    while($i < $num_bin_rev_arr_len) {\n        if($num_bin_rev_arr[$i] == 1) {\n            $num_bin_rev_arr[$i] = 0;\n            $num_bin_rev_arr[$i+1] = 1;\n            break;\n        }\n        $i++;\n    }\n    $num_bin_rev_arr = array_reverse($num_bin_rev_arr);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $num_bin_rev_arr_len_diff = $num_bin_len - $num_bin_rev_arr_len;\n    if($num_bin_rev_arr_len_diff > 0) {\n        for($i=0; $i<$num_bin_rev_arr_len_diff; $i++) {\n            array_unshift($num_bin_rev_arr, 0);\n        }\n    }\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $num_bin_rev_arr_len_diff = $num_bin_len - $num_bin_rev_arr_len;\n    $num_bin_rev_arr_len_diff_str = '';\n    if($num_bin_rev_arr_len_diff > 0) {\n        for($i=0; $i<$num_bin_rev_arr_len_diff; $i++) {\n            $num_bin_rev_arr_len_diff_str .= '0';\n        }\n    }\n    $num_bin_rev_arr_len_diff_str .= implode('', $",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        return $N - (1 << $c1);\n    } else {\n        return $N - (1 << ($c1 - 1));\n    }\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    $n = $n | (1 << ($i - 1));\n    return $n;\n}\n\n$N = 5;\necho closest_num($N);",
    "    $i = 0;\n    while ($N > 0) {\n        if ($N % 2 == 1) {\n            $i++;\n        }\n        $N = $N >> 1;\n    }\n    return $i;\n}\n",
    "    $arr = str_split($N);\n    $len = count($arr);\n    $i = $len - 1;\n    while ($i > 0 && $arr[$i] <= $arr[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $x = $arr[$i - 1];\n    $smallest = $i;\n    for ($j = $i + 1; $j < $len; $j++) {\n        if ($arr[$j] < $x && $arr[$j] > $arr[$smallest]) {\n            $smallest = $j;\n        }\n    }\n    $temp = $arr[$smallest];\n    $arr[$smallest] = $arr[$i - 1];\n    $arr[$i - 1] = $temp;\n    $arr = array_slice($arr, 0, $i);\n    $arr = array_merge($arr, array_reverse(array_slice($arr, $i)));\n    return implode($arr);\n}\n\necho closest_num(123);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1232);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(356789);\necho \"\\n\";\necho closest_num(356798);\necho \"\\n\";\necho closest_num(356987);\necho \"\\n\";\necho closest_num(356879);\necho \"\\n\";\necho closest_num(356897);\necho \"\\n\";\necho closest_num(356978);\necho \"\\n\";\necho closest_num(356987);\necho \"\\n\";\necho closest",
    "    $arr = array();\n    $arr[] = $N;\n    for($i = $N - 1; $i > 0; $i--) {\n        if(is_prime($i)) {\n            $arr[] = $i;\n        }\n    }\n    return $arr;\n}\n",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    $j = $len - 2;\n    while ($j >= 0) {\n        if ($N[$i] > $N[$j]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$j];\n            $N[$j] = $temp;\n            $res = substr($N, 0, $j + 1);\n            $res .= strrev(substr($N, $j + 1));\n            return $res;\n        }\n        $i--;\n        $j--;\n    }\n    return -1;\n}\n\necho closest_num(123);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(54312);\necho \"\\n\";\necho closest_num(543);\necho \"\\n\";\necho closest_num(5432);\necho \"\\n\";\necho closest_num(5431);\necho \"\\n\";\necho closest_num(541);\necho \"\\n\";\necho closest_num(542);\necho \"\\n\";\necho closest_num(543);\necho \"\\n\";\necho closest_num(532);\necho \"\\n\";\necho closest_num(531);\necho \"\\n\";\necho closest_num(521);\necho \"\\n\";\necho closest_num(512);\necho \"\\n\";\necho closest_num(534);\necho \"\\n\";\necho closest_num(543);\necho \"\\n\";\necho closest_num(532);\necho \"\\n\";\necho closest_num(531);\necho \"\\n\";\necho closest_num(521);\necho \"\\n\";\necho closest_num(512);\necho \"\\n\";\necho closest_num(534);\necho \"\\n\";\necho closest_num(543);\necho \"\\n\";\necho closest_num(532);\necho \"\\n\";\necho closest_num(531);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c0 > $c1) {\n        $n = $N;\n        $n = $n & ($n - 1);\n        return $n;\n    } else {\n        $n = $N;\n        $n = $n | ($n + 1);\n        return $n;\n    }\n}\n\necho closest_num(4);\necho \"\\n\";\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    $n = $n | (1 << ($i - 2));\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 == 0) {\n        return -1;\n    }\n    return $N - (1 << ($c0 + $c1 - 1));\n}\n",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode('', $N);\n}\n\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(100);\necho \"\\n\";\necho closest_num(111);\necho \"\\n\";\necho closest_num(123456798);\necho \"\\n\";\necho closest_num(999999999);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(9999999999);\necho \"\\n\";\necho closest_num(59884848459853);\necho \"\\n\";\necho closest_num(1111111111);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(9999999999);\necho \"\\n\";\necho closest_num(9999999999);\necho \"\\n\";\necho closest_num(9999999999);\necho \"\\n\";\necho closest_num(9999999999);\necho \"\\n\";\necho closest_num(9999999999);\necho",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = floor($n / 10);\n        $i++;\n    }\n    $n = $N;\n    $j = $i;\n    $k = $i;\n    $arr = [];\n    while ($j > 0) {\n        $arr[$j] = $n % 10;\n        $n = floor($n / 10);\n        $j--;\n    }\n    $arr[0] = $n;\n    $arr1 = $arr;\n    $arr2 = $arr;\n    $arr3 = $arr;\n    $arr4 = $arr;\n    $arr5 = $arr;\n    $arr6 = $arr;\n    $arr7 = $arr;\n    $arr8 = $arr;\n    $arr9 = $arr;\n    $arr10 = $arr;\n    $arr11 = $arr;\n    $arr12 = $arr;\n    $arr13 = $arr;\n    $arr14 = $arr;\n    $arr15 = $arr;\n    $arr16 = $arr;\n    $arr17 = $arr;\n    $arr18 = $arr;\n    $arr19 = $arr;\n    $arr20 = $arr;\n    $arr21 = $arr;\n    $arr22 = $arr;\n    $arr23 = $arr;\n    $arr24 = $arr;\n    $arr25 = $arr;\n    $arr26 = $arr;\n    $arr27 = $arr;\n    $arr28 = $arr;\n    $arr29 = $arr;\n    $arr30 = $arr;\n    $arr31 = $arr;\n    $arr32 = $arr;\n    $arr33 = $arr;\n    $arr34 = $arr;\n    $arr35 = $arr;\n    $arr36 = $arr;\n    $arr37 = $arr;\n    $arr38 = $arr;\n    $arr39 = $arr;\n    $arr40 = $arr;\n    $arr41 = $arr;\n    $arr42 = $arr;\n    $arr43 = $",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = floor($n / 10);\n        $i++;\n    }\n    $n = $N;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    while ($j < $i) {\n        $k = $n % 10;\n        $n = floor($n / 10);\n        $l = $n % 10;\n        if ($l > $k) {\n            $n = $n + 1;\n            $n = $n * pow(10, $j);\n            $n = $n + $k;\n            $n = $n * pow(10, $i - $j - 1);\n            $n = $n + $N % pow(10, $i - $j - 1);\n            return $n;\n        }\n        $j++;\n    }\n    return -1;\n}\n\n$N = 54321;\necho closest_num($N);",
    "    $n = $N;\n    $closest = 0;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $n = (int) ($n / 10);\n        } else {\n            $closest = $n - 1;\n            break;\n        }\n    }\n    return $closest;\n}\n",
    "  $n = $N;\n  $i = 0;\n  while ($n > 0) {\n    $n = $n >> 1;\n    $i++;\n  }\n  $n = $N;\n  $n = $n - (1 << ($i - 1));\n  $n = $n | ($n >> 1);\n  $n = $n | ($n >> 2);\n  $n = $n | ($n >> 4);\n  $n = $n | ($n >> 8);\n  $n = $n | ($n >> 16);\n  $n = $n - ($n >> 1);\n  return $n;\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $count++;\n        $n = $n / 10;\n    }\n    $n = $N;\n    $i = 1;\n    $j = 0;\n    while ($i < $count) {\n        $j = $j * 10 + 9;\n        $i++;\n    }\n    $n = $n - $j;\n    $n = $n * 10 + 9;\n    return $n;\n}\n\n$N = 12345;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while($n > 0) {\n        if($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if($c1 == 1) {\n        return $N - 1;\n    }\n    $p = 1;\n    $c = 0;\n    while($N & $p) {\n        $p <<= 1;\n        $c++;\n    }\n    $p >>= 1;\n    $N &= ~$p;\n    $N |= $p - 1;\n    $N &= ~((1 << ($c - 1)) - 1);\n    $N |= (1 << ($c - 1)) - 1;\n    return $N;\n}\n",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\necho closest_num(534976);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n    } else {\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $result += $p;\n            $c0--;\n        } else {\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    return $n;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $n = $n - 1;\n            $i++;\n        }\n        $n = $n / 10;\n    }\n    return $N - $i;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(98765);\necho \"\\n\";\necho closest_num(890);\necho \"\\n\";\necho closest_num(2345);\necho \"\\n\";\necho closest_num(1000);\necho \"\\n\";\necho closest_num(111);\necho \"\\n\";\necho closest_num(135);\necho \"\\n\";\necho closest_num(1111);\necho \"\\n\";\necho closest_num(1110);\necho \"\\n\";\necho closest_num(1100);\necho \"\\n\";\necho closest_num(10000);\necho \"\\n\";\necho closest_num(9990);\necho \"\\n\";\necho closest_num(9900);\necho \"\\n\";\necho closest_num(9000);\necho \"\\n\";\necho closest_num(90000);\necho \"\\n\";\necho closest_num(99999);\necho \"\\n\";\necho closest_num(99990);\necho \"\\n\";\necho closest_num(99900);\necho \"\\n\";\necho closest_num(99000);\necho \"\\n\";\necho closest_num(90000);\necho \"\\n\";\necho closest_num(900000);\necho \"\\n\";\necho closest_num(999999);\necho \"\\n\";\necho closest_num(999990);\necho \"\\n\";\necho closest_num(999900);\necho \"\\n\";\necho closest_num(999000);\necho \"\\n\";\necho closest_num(990000);\necho \"\\n\";\necho closest_num(900000);\necho \"\\n\";\necho closest_num(9000000);\necho \"\\n\";\necho closest_num(9999999);\necho \"\\n\";\necho closest_num(9999990);\necho \"\\n\";\necho closest_num(9999900);\necho \"\\n\";\necho closest_num(",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n & ($n - 1);\n        $count++;\n    }\n    return $N - $count;\n}\n\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\n\";\necho closest_num(41);\necho \"\\n\";",
    "  $N = (string)$N;\n  $len = strlen($N);\n  $i = $len - 1;\n  while ($i > 0) {\n    if ($N[$i] < $N[$i - 1]) {\n      $temp = $N[$i];\n      $N[$i] = $N[$i - 1];\n      $N[$i - 1] = $temp;\n      break;\n    }\n    $i--;\n  }\n  return (int)$N;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(123);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    return $N - (1 << ($count - 1));\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $count++;\n        }\n        $n = (int) ($n / 10);\n    }\n    $n = $N;\n    $n = $n - pow(10, $count);\n    return $n;\n}\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while($n) {\n        if($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if($c1 == 1) {\n        return $N - 1;\n    }\n    $p = $c0 + $c1;\n    $N = $N & ((~0) << $p);\n    $mask = (1 << ($c1 + 1)) - 1;\n    $N = $N | $mask;\n    $N = $N << ($c0 - 1);\n    return $N;\n}\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > 0) {\n        $p = pow(2, $c0 + $c1);\n        return $N - $p + 1;\n    }\n    return -1;\n}\n\n$N = 21;\necho closest_num($N);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 0;\n    $j = 0;\n    $min = $N[0];\n    $min_index = 0;\n    $result = '';\n    while ($i < $len) {\n        $j = $i + 1;\n        $min = $N[$i];\n        $min_index = $i;\n        while ($j < $len) {\n            if ($N[$j] < $min) {\n                $min = $N[$j];\n                $min_index = $j;\n            }\n            $j++;\n        }\n        if ($min_index > $i) {\n            $result = $N[$i];\n            $N[$i] = $N[$min_index];\n            $N[$min_index] = $result;\n            $result = $N;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n}\n\necho closest_num(123456);",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i <= 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\n$N = '4321';\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    $count2 = 0;\n    $count3 = 0;\n    $count4 = 0;\n    $count5 = 0;\n    $count6 = 0;\n    $count7 = 0;\n    $count8 = 0;\n    $count9 = 0;\n    $count10 = 0;\n    $count11 = 0;\n    $count12 = 0;\n    $count13 = 0;\n    $count14 = 0;\n    $count15 = 0;\n    $count16 = 0;\n    $count17 = 0;\n    $count18 = 0;\n    $count19 = 0;\n    $count20 = 0;\n    $count21 = 0;\n    $count22 = 0;\n    $count23 = 0;\n    $count24 = 0;\n    $count25 = 0;\n    $count26 = 0;\n    $count27 = 0;\n    $count28 = 0;\n    $count29 = 0;\n    $count30 = 0;\n    $count31 = 0;\n    $count32 = 0;\n    $count33 = 0;\n    $count34 = 0;\n    $count35 = 0;\n    $count36 = 0;\n    $count37 = 0;\n    $count38 = 0;\n    $count39 = 0;\n    $count40 = 0;\n    $count41 = 0;\n    $count42 = 0;\n    $count43 = 0;\n    $count44 = 0;\n    $count45 = 0;\n    $count46 = 0;\n    $count47 = 0;\n    $count48 = 0;\n    $count49 = 0;\n    $count50 = 0;\n    $count51 = 0;\n    $count52 = 0;\n    $count53 = 0;\n    $count54 = 0;\n    $count55 = 0;\n    $count56 = 0;\n    $count57 = 0;\n    $count58 = 0;\n    $count59 = 0;\n    $count60 = 0;\n    $count61 = 0;\n    $count62 = 0;\n    $count63 = 0;\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 + $c1 == 31 || $c0 + $c1 == 0) {\n        return -1;\n    }\n    $p = $c0 + $c1;\n    $N &= ((~0) << ($p + 1));\n    $mask = (1 << ($c1 + 1)) - 1;\n    $N |= $mask << ($c0 - 1);\n    return $N;\n}\n\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;",
    "    $n = $N;\n    $i = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i-1));\n    $n = $n | (1 << ($i-2));\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n - (1 << ($i - 1));\n    $n = $n | ((1 << ($i - 2)) - 1);\n    return $n;\n}\n",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$j];\n    $N[$j] = $N[$i - 1];\n    $N[$i - 1] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\n$N = 12;\necho closest_num($N);",
    "    $N = (string)$N;\n    $i = 0;\n    $j = 0;\n    $length = strlen($N);\n    $arr = str_split($N);\n    while ($i < $length) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $j = $i;\n            break;\n        }\n        $i++;\n    }\n    if ($j == 0) {\n        return -1;\n    }\n    $temp = $arr[$j];\n    $arr[$j] = $arr[$j + 1];\n    $arr[$j + 1] = $temp;\n    $result = implode($arr);\n    return $result;\n}\n\necho closest_num(123456);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode('', $N);\n}\n\necho closest_num(534976);",
    "  $n = $N;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;\n  $f = 0;\n  $g = 0;\n  $h = 0;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;\n  $f = 0;\n  $g = 0;\n  $h = 0;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;",
    "    $str = strval($N);\n    $len = strlen($str);\n    $i = 0;\n    while ($i < $len - 1) {\n        if ($str[$i] > $str[$i + 1]) {\n            $str[$i] = chr(ord($str[$i]) - 1);\n            $str[$i + 1] = '9';\n            $i++;\n        }\n        $i++;\n    }\n    return intval($str);\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1230);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n",
    "    $closest = $N;\n    for ($i = $N - 1; $i > 0; $i--) {\n        if (is_prime($i)) {\n            $closest = $i;\n            break;\n        }\n    }\n    return $closest;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(4312);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(124567);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(535);\necho \"\\n\";\necho closest_num(123456789);\necho \"\\n\";\necho closest_num(987654321);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\n\";\necho closest_num(5349);\necho \"\\",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while($n) {\n        if($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if($c0 > $c1) {\n        return $N - pow(2, $c1);\n    } else {\n        return $N - pow(2, $c0);\n    }\n}\n\n$N = 5;\necho closest_num($N);",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $pos = 0;\n    for ($i=0; $i<$num_bin_len; $i++) {\n        if ($num_bin_rev[$i] == 0) {\n            $pos = $i;\n            break;\n        }\n    }\n    $num_bin_rev[$pos] = 1;\n    $num_bin_rev[$pos+1] = 0;\n    $num_bin_rev = strrev($num_bin_rev);\n    $num = bindec($num_bin_rev);\n    return $num;\n}\n\n$N = 12;\n$result = closest_num($N);\necho \"The closest number to $N is $result\";",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_arr = str_split($num_bin);\n    $num_bin_arr_rev = array_reverse($num_bin_arr);\n    $num_bin_arr_rev_len = count($num_bin_arr_rev);\n    $num_bin_arr_rev_len_minus_one = $num_bin_arr_rev_len - 1;\n    $num_bin_arr_rev_len_minus_two = $num_bin_arr_rev_len - 2;\n    $num_bin_arr_rev_len_minus_three = $num_bin_arr_rev_len - 3;\n    $num_bin_arr_rev_len_minus_four = $num_bin_arr_rev_len - 4;\n    $num_bin_arr_rev_len_minus_five = $num_bin_arr_rev_len - 5;\n    $num_bin_arr_rev_len_minus_six = $num_bin_arr_rev_len - 6;\n    $num_bin_arr_rev_len_minus_seven = $num_bin_arr_rev_len - 7;\n    $num_bin_arr_rev_len_minus_eight = $num_bin_arr_rev_len - 8;\n    $num_bin_arr_rev_len_minus_nine = $num_bin_arr_rev_len - 9;\n    $num_bin_arr_rev_len_minus_ten = $num_bin_arr_rev_len - 10;\n    $num_bin_arr_rev_len_minus_eleven = $num_bin_arr_rev_len - 11;\n    $num_bin_arr_rev_len_minus_twelve = $num_bin_arr_rev_len - 12;\n    $num_bin_arr_rev_len_minus_thirteen = $num_bin_arr_rev_len - 13;\n    $num_bin_arr_rev_len_minus_fourteen = $num_bin",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_arr = str_split($num_bin);\n    $num_bin_arr_rev = array_reverse($num_bin_arr);\n    $num_bin_arr_rev_len = count($num_bin_arr_rev);\n    $num_bin_arr_rev_len_minus_one = $num_bin_arr_rev_len - 1;\n    $num_bin_arr_rev_len_minus_two = $num_bin_arr_rev_len - 2;\n    $num_bin_arr_rev_len_minus_three = $num_bin_arr_rev_len - 3;\n    $num_bin_arr_rev_len_minus_four = $num_bin_arr_rev_len - 4;\n    $num_bin_arr_rev_len_minus_five = $num_bin_arr_rev_len - 5;\n    $num_bin_arr_rev_len_minus_six = $num_bin_arr_rev_len - 6;\n    $num_bin_arr_rev_len_minus_seven = $num_bin_arr_rev_len - 7;\n    $num_bin_arr_rev_len_minus_eight = $num_bin_arr_rev_len - 8;\n    $num_bin_arr_rev_len_minus_nine = $num_bin_arr_rev_len - 9;\n    $num_bin_arr_rev_len_minus_ten = $num_bin_arr_rev_len - 10;\n    $num_bin_arr_rev_len_minus_eleven = $num_bin_arr_rev_len - 11;\n    $num_bin_arr_rev_len_minus_twelve = $num_bin_arr_rev_len - 12;\n    $num_bin_arr_rev_len_minus_thirteen = $num_bin_arr_rev_len - 13;\n    $num_bin_arr_rev_len_minus_fourteen = $num_bin",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n = $n >> 1;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $N - $p + 1;\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";",
    "    $n = $N;\n    $closest = 0;\n    while($n > 0) {\n        if($n % 10 == 0) {\n            $n = (int)$n / 10;\n        } else {\n            $closest = $n - 1;\n            break;\n        }\n    }\n    return $closest;\n}\n\necho closest_num(12345);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c1 == 1) {\n        return $N - 1;\n    }\n    $p = 1;\n    $c = 0;\n    while ($N > $p) {\n        $p = $p << 1;\n        $c++;\n    }\n    $p = $p >> 1;\n    $c--;\n    $N = $N - $p;\n    $N = $N >> 1;\n    $N = $N + $p;\n    return $N;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\n\";\necho closest_num(40);\necho \"\\n\";\necho closest_num(41);\necho \"\\n\";\necho closest_num(42);\necho \"\\n\";\necho closest",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c1 == 1) {\n        return $N - 1;\n    }\n    $p = $c0 + $c1;\n    $n = $N;\n    $n &= ((~0) << $p);\n    $mask = (1 << ($c1 + 1)) - 1;\n    $n |= $mask << ($c0 - 1);\n    return $n;\n}\n",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $pos = -1;\n    for ($i = 0; $i < $num_bin_len; $i++) {\n        if ($num_bin_rev[$i] == '1') {\n            $pos = $i;\n            break;\n        }\n    }\n    if ($pos == -1) {\n        return -1;\n    }\n    $num_bin_rev[$pos] = '0';\n    $num_bin_rev[$pos - 1] = '1';\n    $num_bin = strrev($num_bin_rev);\n    return bindec($num_bin);\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while($i > 0) {\n        if($N[$i] < $N[$i-1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i-1];\n            $N[$i-1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(123456);",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(111);\necho \"\\n\";\necho closest_num(135);\necho \"\\n\";\necho closest_num(1027);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(2071);\necho \"\\n\";\necho closest_num(1254322);\necho \"\\n\";\necho closest_num(12543221);\necho \"\\n\";\necho closest_num(125432211);\necho \"\\n\";\necho closest_num(1254322111);\necho \"\\n\";\necho closest_num(12543221111);\necho \"\\n\";\necho closest_num(125432211111);\necho \"\\n\";\necho closest_num(1254322111111);\n",
    "    $i = 0;\n    while ($N > 0) {\n        $N = floor($N / 2);\n        $i++;\n    }\n    return pow(2, $i - 1);\n}\n\necho closest_num(5);",
    "    $n = str_split($N);\n    $i = count($n) - 1;\n    while ($i > 0 && $n[$i] >= $n[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $x = $n[$i - 1];\n    $smallest = $i;\n    for ($j = $i + 1; $j < count($n); $j++) {\n        if ($n[$j] < $n[$smallest] && $n[$j] > $x) {\n            $smallest = $j;\n        }\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$smallest];\n    $n[$smallest] = $temp;\n    $s = array_slice($n, $i);\n    sort($s);\n    return implode('', array_merge(array_slice($n, 0, $i), $s));\n}\n\necho closest_num(534976);",
    "\t$n = $N;\n\t$i = 0;\n\twhile ($n > 0) {\n\t\t$n = $n / 10;\n\t\t$i++;\n\t}\n\t$n = $N;\n\t$j = 0;\n\twhile ($j < $i) {\n\t\t$n = $n / 10;\n\t\t$j++;\n\t}\n\t$n = $n * 10;\n\t$n = $n - 1;\n\t$n = $n * pow(10, $i - 1);\n\treturn $n;\n}\n\n$N = 12345;\necho closest_num($N);",
    "  $n = $N;\n  $n_bin = decbin($n);\n  $n_bin_len = strlen($n_bin);\n  $n_bin_rev = strrev($n_bin);\n  $n_bin_rev_arr = str_split($n_bin_rev);\n  $n_bin_rev_arr_len = count($n_bin_rev_arr);\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $n = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;\n  $f = 0;\n  $g = 0;\n  $h = 0;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $n = 0;\n  $o = 0;\n  $p = 0;\n  $q = 0;\n  $r = 0;\n  $s = 0;\n  $t = 0;\n  $u = 0;\n  $v = 0;\n  $w = 0;\n  $x = 0;\n  $y = 0;\n  $z = 0;\n  $a = 0;\n  $b = 0;\n  $c = 0;\n  $d = 0;\n  $e = 0;\n  $f = 0;\n  $g = 0;\n  $h = 0;\n  $i = 0;\n  $j = 0;\n  $k = 0;\n  $l = 0;\n  $m = 0;\n  $n = 0;\n  $o = 0;\n  $",
    "    $n = $N;\n    $closest = 0;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $n = $n / 10;\n        } else {\n            $closest = $n - 1;\n            break;\n        }\n    }\n    return $closest;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(123);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(0);\necho \"\\n\";\necho closest_num(100);\necho \"\\n\";\necho closest_num(1000);\necho \"\\n\";\necho closest_num(10000);\necho \"\\n\";\necho closest_num(100000);\necho \"\\n\";\necho closest_num(1000000);\necho \"\\n\";\necho closest_num(10000000);\necho \"\\n\";\necho closest_num(100000000);\necho \"\\n\";\necho closest_num(1000000000);\necho \"\\n\";\necho closest_num(10000000000);\necho \"\\n\";\necho closest_num(100000000000);\necho \"\\n\";\necho closest_num(1000000000000);\necho \"\\n\";\necho closest_num(10000000000000);\necho \"\\n\";\necho closest_num(100000000000000);\necho \"\\n\";\necho closest_num(1000000000000000);\necho \"\\n\";\necho closest_num(10000000000000000);\necho \"\\n\";\necho closest_num(100000000000000000);\necho \"\\n\";\necho closest_num(1000000000000000000);\necho \"\\n\";\necho closest_num(10000000000000000000);\necho \"\\n\";\necho closest_num(100000000000000000000);\necho \"\\n\";\necho closest_num(1000000000000000000000);\necho \"\\n\";\necho closest_num(10000000000000000000000);\necho \"\\n\";\necho closest_num(100000000000000000000000);\necho \"\\n\";\necho closest_num(1000000000000000000000000);\necho \"\\n\";\necho closest_num(10000000000000000000000000);\n",
    "    $n = $N;\n    $closest = 0;\n    $diff = PHP_INT_MAX;\n    while ($n > 0) {\n        if ($n % 10 == 0) {\n            $n = $n / 10;\n        } else {\n            $n = $n - 1;\n        }\n        if ($n < $N && $N - $n < $diff) {\n            $diff = $N - $n;\n            $closest = $n;\n        }\n    }\n    return $closest;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1230);\necho \"\\n\";\necho closest_num(1239);\necho \"\\n\";\necho closest_num(1238);\necho \"\\n\";\necho closest_num(1237);\necho \"\\n\";\necho closest_num(1236);\necho \"\\n\";\necho closest_num(1235);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1233);\necho \"\\n\";\necho closest_num(1232);\necho \"\\n\";\necho closest_num(1231);\necho \"\\n\";\necho closest_num(1230);\necho \"\\n\";\necho closest_num(1229);\necho \"\\n\";\necho closest_num(1228);\necho \"\\n\";\necho closest_num(1227);\necho \"\\n\";\necho closest_num(1226);\necho \"\\n\";\necho closest_num(1225);\necho \"\\n\";\necho closest_num(1224);\necho \"\\n\";\necho closest_num(1223);\necho \"\\n\";\necho closest_num(1222);\necho \"\\n\";\necho closest_num(1221);\necho \"\\n\";\necho closest_num(1220);\necho \"\\n\";\necho closest_num(1219);\necho \"\\n\";\necho closest_num(1218);\necho \"\\n\";\necho closest_num(1217);\necho \"\\n\";\necho closest_num(1216);\necho \"\\n\";\n",
    "    $closest = 0;\n    $diff = PHP_INT_MAX;\n    for ($i = 0; $i < $N; $i++) {\n        if ($N - $i < $diff) {\n            $diff = $N - $i;\n            $closest = $i;\n        }\n    }\n    return $closest;\n}\n\necho closest_num(13);\necho \"\\n\";\necho closest_num(4);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(2);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(3);\necho \"\\n\";\necho closest_num(5);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    $n = $n | (1 << ($i - 2));\n    return $n;\n}\n\necho closest_num(10);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(4);\necho \"\\n\";\necho closest_num(1);\necho \"\\n\";\necho closest_num(0);\necho \"\\n\";\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_",
    "    $n = str_split($N);\n    $k = count($n);\n    $i = $k - 1;\n    while ($i > 0 && $n[$i] >= $n[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = $k - 1;\n    while ($n[$j] <= $n[$i - 1]) {\n        $j--;\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$j];\n    $n[$j] = $temp;\n    $j = $k - 1;\n    while ($i < $j) {\n        $temp = $n[$i];\n        $n[$i] = $n[$j];\n        $n[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($n);\n}\n\necho closest_num(123);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(531876);\necho \"\\n\";",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $N[$i - 1] = $N[$i - 1] - 1;\n            $N[$i] = 9;\n            $i--;\n        } else {\n            $i--;\n        }\n    }\n    $N = (int)$N;\n    return $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $temp = 0;\n    $result = 0;\n    while ($i < $len) {\n        $j = $i + 1;\n        while ($j < $len) {\n            if ($N[$i] > $N[$j]) {\n                $temp = $N[$i];\n                $N[$i] = $N[$j];\n                $N[$j] = $temp;\n                $result = (int)$N;\n                return $result;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $result;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $n = $N;\n        $c0 = 0;\n        $c1 = 0;\n        while ($n > 0) {\n            if ($n & 1) {\n                $c1++;\n            } else {\n                $c0++;\n            }\n            if ($c0 > $c1) {\n                return $n;\n            }\n            $n >>= 1;\n        }\n    } else {\n        $n = $N;\n        $c0 = 0;\n        $c1 = 0;\n        while ($n > 0) {\n            if ($n & 1) {\n                $c1++;\n            } else {\n                $c0++;\n            }\n            if ($c0 < $c1) {\n                return $n;\n            }\n            $n >>= 1;\n        }\n    }\n}\n\n$N = 7;\necho closest_num($N);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c = $c1;\n    } else {\n        $c = $c0;\n    }\n    $p = 1;\n    $r = 0;\n    while ($c > 0) {\n        $r += $p;\n        $p <<= 1;\n        $c--;\n    }\n    return $N - $r;\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 + $c1 == 31 || $c0 + $c1 == 0) {\n        return -1;\n    }\n    $p = $c0 + $c1;\n    $N &= ((~0) << ($p + 1));\n    $mask = (1 << ($c1 + 1)) - 1;\n    $N |= $mask << ($c0 - 1);\n    return $N;\n}\n\n$N = 10;\necho closest_num($N);\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 0) {\n            $c0++;\n        } else {\n            $c1++;\n        }\n        $n = $n / 2;\n    }\n    $p = pow(2, $c0 + $c1);\n    return $p - 1;\n}\n\n$N = 10;\necho closest_num($N);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $N[$i - 1] = chr(ord($N[$i - 1]) - 1);\n            $N[$i] = '9';\n            $i--;\n        } else {\n            $i--;\n        }\n    }\n    $i = 0;\n    while ($i < $len) {\n        if ($N[$i] == '0') {\n            $N[$i] = '9';\n            $i++;\n        } else {\n            break;\n        }\n    }\n    return (int)$N;\n}\n\n$N = 12345;\necho closest_num($N);\n",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(987654321);\necho \"\\n\";\necho closest_num(123456789);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(9876543211);\necho \"\\n\";\necho closest_num(9876543212);\necho \"\\n\";\necho closest_num(9876543213);\necho \"\\n\";\necho closest_num(9876543214);\necho \"\\n\";\necho closest_num(9876543215);\necho \"\\n\";\necho closest_num(9876543216);\necho \"\\n\";\necho closest_num(9876543217);\necho \"\\n\";\necho closest_num(9876543218);\necho \"\\n\";\necho closest_num(9876543219);\necho \"\\n\";\necho closest_num(9876543220);\necho \"\\n\";\necho closest_num",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n        $c1++;\n    } else {\n        $c0++;\n        $c1--;\n    }\n    $p = 1;\n    $res = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $res += $p;\n            $c0--;\n        } else {\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $res;\n}\n",
    "    $n = str_split($N);\n    $i = count($n) - 1;\n    while ($i > 0 && $n[$i] >= $n[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $x = $n[$i - 1];\n    $smallest = $i;\n    for ($j = $i + 1; $j < count($n); $j++) {\n        if ($n[$j] < $n[$smallest] && $n[$j] > $x) {\n            $smallest = $j;\n        }\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$smallest];\n    $n[$smallest] = $temp;\n    $s = array_slice($n, $i);\n    sort($s);\n    return implode('', array_merge(array_slice($n, 0, $i), $s));\n}\n\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(534976);\necho \"\\n\";\necho closest_num(124567);\necho \"\\n\";\necho closest_num(123465);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] <= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] >= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($N);\n}\n\necho closest_num(4321);\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n % 2 == 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n = $n >> 1;\n    }\n    if ($c1 == 1) {\n        return $N - 1;\n    }\n    $p = pow(2, $c0 + $c1);\n    $num = $N & $p;\n    $num = $num >> 1;\n    $num = $num + pow(2, $c0 + $c1 - 1) - 1;\n    return $num;\n}\n\necho closest_num(5);",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        return $N - pow(2, $c1);\n    } else {\n        return $N - pow(2, $c0);\n    }\n}\n\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while($i > 0) {\n        if($N[$i] < $N[$i - 1]) {\n            $temp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $temp;\n            break;\n        }\n        $i--;\n    }\n    return (int)$N;\n}\n\necho closest_num(123);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1423);\necho \"\\n\";\necho closest_num(1432);\necho \"\\n\";\necho closest_num(2134);\necho \"\\n\";\necho closest_num(2143);\necho \"\\n\";\necho closest_num(2314);\necho \"\\n\";\necho closest_num(2341);\necho \"\\n\";\necho closest_num(2413);\necho \"\\n\";\necho closest_num(2431);\necho \"\\n\";\necho closest_num(3124);\necho \"\\n\";\necho closest_num(3142);\necho \"\\n\";\necho closest_num(3214);\necho \"\\n\";\necho closest_num(3241);\necho \"\\n\";\necho closest_num(3412);\necho \"\\n\";\necho closest_num(3421);\necho \"\\n\";\necho closest_num(4123);\necho \"\\n\";\necho closest_num(4132);\necho \"\\n\";\necho closest_num(4213);\necho \"\\n\";\necho closest_num(4231);\necho \"\\n\";\necho closest_num(4312);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";",
    "    $bin = decbin($N);\n    $len = strlen($bin);\n    $i = $len - 1;\n    $j = $i - 1;\n    while ($i > 0 && $bin[$i] != '1') {\n        $i--;\n        $j--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $bin[$i] = '0';\n    $bin[$j] = '1';\n    return bindec($bin);\n}\n\necho closest_num(5) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;\necho closest_num(30) . PHP_EOL;\necho closest_num(31) . PHP_EOL;\necho closest_num(32",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 0;\n    while ($i < $len - 1) {\n        if ($N[$i] > $N[$i + 1]) {\n            $N[$i] = (string)((int)$N[$i] - 1);\n            $N[$i + 1] = '9';\n            $i++;\n        }\n        $i++;\n    }\n    $N = (int)$N;\n    return $N;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1230);\necho \"\\n\";\necho closest_num(1231);\necho \"\\n\";\necho closest_num(1232);\necho \"\\n\";\necho closest_num(1233);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1235);\necho \"\\n\";\necho closest_num(1236);\necho \"\\n\";\necho closest_num(1237);\necho \"\\n\";\necho closest_num(1238);\necho \"\\n\";\necho closest_num(1239);\necho \"\\n\";\necho closest_num(1240);\necho \"\\n\";\necho closest_num(1241);\necho \"\\n\";\necho closest_num(1242);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1244);\necho \"\\n\";\necho closest_num(1245);\necho \"\\n\";\necho closest_num(1246);\necho \"\\n\";\necho closest_num(1247);\necho \"\\n\";\necho closest_num(1248);\necho \"\\n\";\necho closest_num(1249);\necho \"\\n\";\necho closest_num(1250);\necho \"\\n\";\necho closest_num(1251);\necho \"\\n\";\necho closest_num(1252);\necho \"\\n\";\necho closest_num(1253);\necho \"\\n\";\necho closest_num(1254);\necho \"\\n\";\n",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_arr = str_split($num_bin);\n    $num_bin_arr_rev = array_reverse($num_bin_arr);\n    $num_bin_arr_rev_len = count($num_bin_arr_rev);\n    $num_bin_arr_rev_len_minus_one = $num_bin_arr_rev_len - 1;\n    $num_bin_arr_rev_len_minus_two = $num_bin_arr_rev_len - 2;\n    $num_bin_arr_rev_len_minus_three = $num_bin_arr_rev_len - 3;\n    $num_bin_arr_rev_len_minus_four = $num_bin_arr_rev_len - 4;\n    $num_bin_arr_rev_len_minus_five = $num_bin_arr_rev_len - 5;\n    $num_bin_arr_rev_len_minus_six = $num_bin_arr_rev_len - 6;\n    $num_bin_arr_rev_len_minus_seven = $num_bin_arr_rev_len - 7;\n    $num_bin_arr_rev_len_minus_eight = $num_bin_arr_rev_len - 8;\n    $num_bin_arr_rev_len_minus_nine = $num_bin_arr_rev_len - 9;\n    $num_bin_arr_rev_len_minus_ten = $num_bin_arr_rev_len - 10;\n    $num_bin_arr_rev_len_minus_eleven = $num_bin_arr_rev_len - 11;\n    $num_bin_arr_rev_len_minus_twelve = $num_bin_arr_rev_len - 12;\n    $num_bin_arr_rev_len_minus_thirteen = $num_bin_arr_rev_len - 13;\n    $num_bin_arr_rev_len_minus_fourteen = $num_bin",
    "    $i = 0;\n    $j = 0;\n    $n = $N;\n    $m = $N;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    while ($m > 0) {\n        $m = $m >> 1;\n        $j++;\n        if ($m & 1) {\n            break;\n        }\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    $n = $n | (1 << ($j - 1));\n    return $n;\n}\n\necho closest_num(8);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0) {\n        if ($N[$i] < $N[$i - 1]) {\n            $tmp = $N[$i];\n            $N[$i] = $N[$i - 1];\n            $N[$i - 1] = $tmp;\n            break;\n        }\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $i++;\n    $j = $len - 1;\n    while ($i < $j) {\n        $tmp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $tmp;\n        $i++;\n        $j--;\n    }\n    return (int)$N;\n}\n\necho closest_num(12345);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(1243);\necho \"\\n\";\necho closest_num(1324);\necho \"\\n\";\necho closest_num(1342);\necho \"\\n\";\necho closest_num(1423);\necho \"\\n\";\necho closest_num(1432);\necho \"\\n\";\necho closest_num(2134);\necho \"\\n\";\necho closest_num(2143);\necho \"\\n\";\necho closest_num(2314);\necho \"\\n\";\necho closest_num(2341);\necho \"\\n\";\necho closest_num(2413);\necho \"\\n\";\necho closest_num(2431);\necho \"\\n\";\necho closest_num(3124);\necho \"\\n\";\necho closest_num(3142);\necho \"\\n\";\necho closest_num(3214);\necho \"\\n\";\necho closest_num(3241);\necho \"\\n\";\necho closest_num(3412);\necho \"\\n\";\necho closest_num(3421);\necho \"\\n\";\necho closest_num(4123);\necho \"\\n\";\necho closest_num(4132"
  ]
}
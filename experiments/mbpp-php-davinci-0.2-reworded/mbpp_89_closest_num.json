{
  "name": "mbpp_89_closest_num",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the closest smaller number than n.\nfunction closest_num($N) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return closest_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(11) !== 10) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 11) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\necho closest_num(5) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;\necho closest_num(30) . PHP_EOL;\necho closest_num(31) . PHP_EOL;\necho closest_num(32) . PHP_EOL;\necho closest_num(33) . PHP_EOL;\necho closest_num(34) . PHP_EOL;\necho closest_num(35) . PHP_E",
    "    $n = $N;\n    $count = 0;\n    while($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($count-1));\n    $n = $n | (1 << ($count-2));\n    return $n;\n}\n\n$n = 10;\necho closest_num($n);",
    "\t$N = (string)$N;\n\t$len = strlen($N);\n\t$i = $len - 1;\n\twhile ($i > 0) {\n\t\tif ($N[$i] < $N[$i-1]) {\n\t\t\t$temp = $N[$i-1];\n\t\t\t$N[$i-1] = $N[$i];\n\t\t\t$N[$i] = $temp;\n\t\t\tbreak;\n\t\t}\n\t\t$i--;\n\t}\n\treturn $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $count = 0;\n    while($n > 0) {\n        $count++;\n        $n = $n >> 1;\n    }\n    return $N - pow(2, $count - 1);\n}\n\necho closest_num(10);",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = $len - 1;\n    $j = $len - 2;\n    while ($i > 0 && $N[$i] <= $N[$j]) {\n        $i--;\n        $j--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $x = $N[$i - 1];\n    $smallest = $i;\n    for ($j = $i + 1; $j < $len; $j++) {\n        if ($N[$j] < $N[$smallest] && $N[$j] > $x) {\n            $smallest = $j;\n        }\n    }\n    $temp = $N[$smallest];\n    $N[$smallest] = $N[$i - 1];\n    $N[$i - 1] = $temp;\n    $arr = str_split($N);\n    $arr = array_slice($arr, $i);\n    sort($arr);\n    $arr = array_merge(array_slice($N, 0, $i), $arr);\n    return implode($arr);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(100);\necho \"\\n\";\necho closest_num(4321234);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(12456);\necho \"\\n\";\necho closest_num(289347);\necho \"\\n\";\necho closest_num(289347);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(124567);\necho \"\\n\";\necho closest_num(289347601);\necho \"\\n\";\necho closest_num(99999999);\necho \"\\n\";\necho closest_num(2873476);\necho \"\\n\";\necho closest_num(2345678765);\necho \"\\n\";\necho closest_num(12000);\necho \"\\n\";\necho closest_",
    "    $n = str_split($N);\n    $i = count($n) - 1;\n    while ($i > 0 && $n[$i] >= $n[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($n) - 1;\n    while ($n[$j] <= $n[$i - 1]) {\n        $j--;\n    }\n    $temp = $n[$i - 1];\n    $n[$i - 1] = $n[$j];\n    $n[$j] = $temp;\n    $j = count($n) - 1;\n    while ($i < $j) {\n        $temp = $n[$i];\n        $n[$i] = $n[$j];\n        $n[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode($n);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(987654321);\necho \"\\n\";\necho closest_num(9876543210);\necho \"\\n\";\necho closest_num(9876543211);\necho \"\\n\";\necho closest_num(9876543212);\necho \"\\n\";\necho closest_num(9876543213);\necho \"\\n\";\necho closest_num(9876543214);\necho \"\\n\";\necho closest_num(9876543215);\necho \"\\n\";\necho closest_num(9876543216);\necho \"\\n\";\necho closest_num(9876543217);\necho \"\\n\";\necho closest_num(9876543218);\necho \"\\n\";\necho closest_num(9876543219);\necho \"\\n\";\necho closest_num(9876543220);\necho \"\\n\";\necho closest_num(9876543221);\necho \"\\n\";\necho closest_num",
    "    $n = $N;\n    $count = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $count++;\n    }\n    $count--;\n    $n = $N;\n    $n = $n & ~(1 << $count);\n    return $n;\n}\n\necho closest_num(10);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho \"\\",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $num_bin_rev_arr_len_minus_one = $num_bin_rev_arr_len - 1;\n    $num_bin_rev_arr_len_minus_two = $num_bin_rev_arr_len - 2;\n    $num_bin_rev_arr_len_minus_three = $num_bin_rev_arr_len - 3;\n    $num_bin_rev_arr_len_minus_four = $num_bin_rev_arr_len - 4;\n    $num_bin_rev_arr_len_minus_five = $num_bin_rev_arr_len - 5;\n    $num_bin_rev_arr_len_minus_six = $num_bin_rev_arr_len - 6;\n    $num_bin_rev_arr_len_minus_seven = $num_bin_rev_arr_len - 7;\n    $num_bin_rev_arr_len_minus_eight = $num_bin_rev_arr_len - 8;\n    $num_bin_rev_arr_len_minus_nine = $num_bin_rev_arr_len - 9;\n    $num_bin_rev_arr_len_minus_ten = $num_bin_rev_arr_len - 10;\n    $num_bin_rev_arr_len_minus_eleven = $num_bin_rev_arr_len - 11;\n    $num_bin_rev_arr_len_minus_twelve = $num_bin_rev_arr_len - 12;\n    $num_bin_rev_arr_len_minus_thirteen = $num_bin_rev_arr_len - 13;\n    $num_bin_rev_arr_len_minus_fourteen = $num_bin_",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - (1 << ($i - 1));\n}\n\necho closest_num(5) . PHP_EOL;\necho closest_num(6) . PHP_EOL;\necho closest_num(7) . PHP_EOL;\necho closest_num(8) . PHP_EOL;\necho closest_num(9) . PHP_EOL;\necho closest_num(10) . PHP_EOL;\necho closest_num(11) . PHP_EOL;\necho closest_num(12) . PHP_EOL;\necho closest_num(13) . PHP_EOL;\necho closest_num(14) . PHP_EOL;\necho closest_num(15) . PHP_EOL;\necho closest_num(16) . PHP_EOL;\necho closest_num(17) . PHP_EOL;\necho closest_num(18) . PHP_EOL;\necho closest_num(19) . PHP_EOL;\necho closest_num(20) . PHP_EOL;\necho closest_num(21) . PHP_EOL;\necho closest_num(22) . PHP_EOL;\necho closest_num(23) . PHP_EOL;\necho closest_num(24) . PHP_EOL;\necho closest_num(25) . PHP_EOL;\necho closest_num(26) . PHP_EOL;\necho closest_num(27) . PHP_EOL;\necho closest_num(28) . PHP_EOL;\necho closest_num(29) . PHP_EOL;\necho closest_num(30) . PHP_EOL;\necho closest_num(31) . PHP_EOL;\necho closest_num(32) . PHP_EOL;\necho closest_num(33) . PHP_EOL;\necho closest_num(34) . PHP_EOL;\necho closest_num(35) . PHP_EOL;\necho closest_num(36) . PHP_EOL;\necho closest_num",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n    } else {\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $result += $p;\n            $c0--;\n        } else {\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n\necho closest_num(6) . \"\\n\";\necho closest_num(7) . \"\\n\";\necho closest_num(8) . \"\\n\";\necho closest_num(9) . \"\\n\";\necho closest_num(10) . \"\\n\";\necho closest_num(11) . \"\\n\";\necho closest_num(12) . \"\\n\";\necho closest_num(13) . \"\\n\";\necho closest_num(14) . \"\\n\";\necho closest_num(15) . \"\\n\";\necho closest_num(16) . \"\\n\";\necho closest_num(17) . \"\\n\";\necho closest_num(18) . \"\\n\";\necho closest_num(19) . \"\\n\";\necho closest_num(20) . \"\\n\";\necho closest_num(21) . \"\\n\";\necho closest_num(22) . \"\\n\";\necho closest_num(23) . \"\\n\";\necho closest_num(24) . \"\\n\";\necho closest_num(25) . \"\\n\";\necho closest_num(26) . \"\\n\";\necho closest_num(27) . \"\\n\";\necho closest_num(28) . \"\\n\";\necho closest_num(29) . \"\\n\";\necho closest_num(30) . \"\\n\";\necho closest_num(31) . \"\\n\";\necho closest",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $i = 0;\n    $count = 0;\n    $flag = 0;\n    while($i < $num_bin_len) {\n        if($num_bin_rev[$i] == 1) {\n            $count++;\n            if($count == 2) {\n                $flag = 1;\n                break;\n            }\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        $num_bin_rev[$i] = 0;\n        $num_bin_rev[$i-1] = 1;\n        $num_bin_rev = strrev($num_bin_rev);\n        $num = bindec($num_bin_rev);\n    }\n    return $num;\n}\n",
    "    $num = $N;\n    $num_bin = decbin($num);\n    $num_bin_len = strlen($num_bin);\n    $num_bin_rev = strrev($num_bin);\n    $num_bin_rev_arr = str_split($num_bin_rev);\n    $num_bin_rev_arr_len = count($num_bin_rev_arr);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $p = 0;\n    $q = 0;\n    $r = 0;\n    $s = 0;\n    $t = 0;\n    $u = 0;\n    $v = 0;\n    $w = 0;\n    $x = 0;\n    $y = 0;\n    $z = 0;\n    $a = 0;\n    $b = 0;\n    $c = 0;\n    $d = 0;\n    $e = 0;\n    $f = 0;\n    $g = 0;\n    $h = 0;\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $l = 0;\n    $m = 0;\n    $n = 0;\n    $o = 0;\n    $",
    "    $N = (string) $N;\n    $len = strlen($N);\n    $i = $len - 1;\n    while ($i > 0 && $N[$i] <= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = $i - 1;\n    $min = $i;\n    for ($k = $i + 1; $k < $len; $k++) {\n        if ($N[$k] < $N[$min] && $N[$k] > $N[$j]) {\n            $min = $k;\n        }\n    }\n    $temp = $N[$j];\n    $N[$j] = $N[$min];\n    $N[$min] = $temp;\n    $N = substr($N, 0, $i) . strrev(substr($N, $i));\n    return (int) $N;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    return $N - pow(2, $i - 1);\n}\n\necho closest_num(5);\necho \"\\n\";\necho closest_num(6);\necho \"\\n\";\necho closest_num(7);\necho \"\\n\";\necho closest_num(8);\necho \"\\n\";\necho closest_num(9);\necho \"\\n\";\necho closest_num(10);\necho \"\\n\";\necho closest_num(11);\necho \"\\n\";\necho closest_num(12);\necho \"\\n\";\necho closest_num(13);\necho \"\\n\";\necho closest_num(14);\necho \"\\n\";\necho closest_num(15);\necho \"\\n\";\necho closest_num(16);\necho \"\\n\";\necho closest_num(17);\necho \"\\n\";\necho closest_num(18);\necho \"\\n\";\necho closest_num(19);\necho \"\\n\";\necho closest_num(20);\necho \"\\n\";\necho closest_num(21);\necho \"\\n\";\necho closest_num(22);\necho \"\\n\";\necho closest_num(23);\necho \"\\n\";\necho closest_num(24);\necho \"\\n\";\necho closest_num(25);\necho \"\\n\";\necho closest_num(26);\necho \"\\n\";\necho closest_num(27);\necho \"\\n\";\necho closest_num(28);\necho \"\\n\";\necho closest_num(29);\necho \"\\n\";\necho closest_num(30);\necho \"\\n\";\necho closest_num(31);\necho \"\\n\";\necho closest_num(32);\necho \"\\n\";\necho closest_num(33);\necho \"\\n\";\necho closest_num(34);\necho \"\\n\";\necho closest_num(35);\necho \"\\n\";\necho closest_num(36);\necho \"\\n\";\necho closest_num(37);\necho \"\\n\";\necho closest_num(38);\necho \"\\n\";\necho closest_num(39);\necho",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $i--;\n    $n = $N;\n    $n = $n & ~(1 << $i);\n    return $n;\n}\n\necho closest_num(5);",
    "    $N = str_split($N);\n    $i = count($N) - 1;\n    while ($i > 0 && $N[$i] >= $N[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    $j = count($N) - 1;\n    while ($N[$j] <= $N[$i - 1]) {\n        $j--;\n    }\n    $temp = $N[$i - 1];\n    $N[$i - 1] = $N[$j];\n    $N[$j] = $temp;\n    $j = count($N) - 1;\n    while ($i < $j) {\n        $temp = $N[$i];\n        $N[$i] = $N[$j];\n        $N[$j] = $temp;\n        $i++;\n        $j--;\n    }\n    return implode('', $N);\n}\n\necho closest_num(534976);\necho \"\\n\";\necho closest_num(1234);\necho \"\\n\";\necho closest_num(4321);\necho \"\\n\";\necho closest_num(54321);\necho \"\\n\";\necho closest_num(98765);\necho \"\\n\";\necho closest_num(124567);\necho \"\\n\";\necho closest_num(123465);\necho \"\\n\";\necho closest_num(1234567);\necho \"\\n\";\necho closest_num(12345678);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho closest_num(12345679);\necho \"\\n\";\necho",
    "    $N = (string)$N;\n    $len = strlen($N);\n    $i = 0;\n    $j = 0;\n    $k = 0;\n    $temp = 0;\n    $result = 0;\n    $flag = false;\n    for ($i = $len - 1; $i > 0; $i--) {\n        if ($N[$i] < $N[$i - 1]) {\n            $flag = true;\n            $temp = $N[$i - 1];\n            $N[$i - 1] = $N[$i];\n            $N[$i] = $temp;\n            break;\n        }\n    }\n    if ($flag) {\n        $result = (int)$N;\n    } else {\n        $result = -1;\n    }\n    return $result;\n}\n\n$N = 1234;\necho closest_num($N);",
    "    $n = $N;\n    $i = 0;\n    while ($n > 0) {\n        $n = $n >> 1;\n        $i++;\n    }\n    $n = $N;\n    $n = $n & ~(1 << ($i - 1));\n    return $n;\n}\n",
    "    $n = $N;\n    $c0 = 0;\n    $c1 = 0;\n    while ($n > 0) {\n        if ($n & 1) {\n            $c1++;\n        } else {\n            $c0++;\n        }\n        $n >>= 1;\n    }\n    if ($c0 > $c1) {\n        $c0--;\n    } else {\n        $c1--;\n    }\n    $p = 1;\n    $result = 0;\n    while ($c0 > 0 || $c1 > 0) {\n        if ($c0 > 0) {\n            $result += $p;\n            $c0--;\n        }\n        $p <<= 1;\n        if ($c1 > 0) {\n            $result += $p;\n            $c1--;\n        }\n        $p <<= 1;\n    }\n    return $result;\n}\n"
  ]
}
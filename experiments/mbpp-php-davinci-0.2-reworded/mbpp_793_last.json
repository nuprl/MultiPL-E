{
  "name": "mbpp_793_last",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to find the last position of an element in a sorted array.\nfunction last($arr, $x) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return last(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3), 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, 4), 1) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 3, 2, 3, 6, 8, 9), 3) !== 3) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $r;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $index = -1;\n    while ($start <= $end) {\n        $mid = ($start + $end) / 2;\n        if ($x == $arr[$mid]) {\n            $index = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $index;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$index = last($arr, $x);\nif ($index != -1) {\n    echo \"Last Occurrence of $x is found at index $index\";\n} else {\n    echo \"Last Occurrence of $x is not found\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last position of element is: \" . $result;\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho last($arr, $x);",
    "    $n = count($arr);\n    $i = 0;\n    $j = $n - 1;\n    while ($i <= $j) {\n        $mid = ($i + $j) / 2;\n        if ($x < $arr[$mid]) {\n            $j = $mid - 1;\n        } else if ($x > $arr[$mid]) {\n            $i = $mid + 1;\n        } else {\n            if ($mid == $n - 1 || $arr[$mid + 1] != $x) {\n                return $mid;\n            } else {\n                $i = $mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n\n$arr = [1, 2, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10];\n$x = 5;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x && ($mid == $n - 1 || $arr[$mid + 1] != $x)) {\n            return $mid;\n        } else if ($arr[$mid] <= $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)($low + ($high - $low) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] > $x) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9);\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $low = 0;\n    $high = count($arr) - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10);\n$x = 4;\n$n = count($arr);\n$index = last($arr, $x);\nif ($index == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last occurence of $x is at index $index\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$x = 100;\n$result = last($arr, $x);\necho \"Last position of $x is $result\";",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9);\n$x = 4;\n$n = count($arr);\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\necho last($arr, 2);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9];\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last occurrence of element is at index \", $result;\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = sizeof($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else if ($x > $arr[$mid]) {\n            $low = $mid + 1;\n        } else {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9);\n$x = 4;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last position of element is: \" . $result;\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last position of $x is $result\";\n}",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            if ($mid == $n - 1 || $arr[$mid + 1] != $x) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10);\n$x = 5;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $res = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\n$index = last($arr, $x);\nif ($index == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last occurrence of element is at index \" . $index;\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 10;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = [1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9];\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] > $x) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10);\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    if (count($arr) == 0) {\n        return -1;\n    }\n    $low = 0;\n    $high = count($arr) - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == count($arr) - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x > $arr[$mid])\n            $low = $mid + 1;\n        else if ($x < $arr[$mid])\n            $high = $mid - 1;\n        else if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1])\n                return $mid;\n            else\n                $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\n$index = last($arr, $x);\nif ($index != -1)\n    echo \"Last Occurrence of $x is found at index $index\";\nelse\n    echo \"$x not found in the array\";",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 5, 6, 7, 8, 9);\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $res = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $r;\n}\n\n$arr = [1, 2, 3, 4, 4, 4, 5, 6, 7, 8, 9];\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $res = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element is not present in array\";\n} else {\n    echo \"Element is present at index \" . $result;\n}",
    "    $n = sizeof($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = sizeof($arr);\n$index = last($arr, $x);\nif ($index != -1) {\n    echo \"Last Occurrence of $x is found at index $index\";\n} else {\n    echo \"Element not found in the array\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10);\n$x = 5;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\n$index = last($arr, $x);\nif ($index != -1) {\n    echo \"Last Occurrence of $x is found at index $index\";\n} else {\n    echo \"Element not found in the array\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "\t$n = count($arr);\n\t$low = 0;\n\t$high = $n - 1;\n\t$result = -1;\n\twhile ($low <= $high) {\n\t\t$mid = floor(($low + $high) / 2);\n\t\tif ($x == $arr[$mid]) {\n\t\t\t$result = $mid;\n\t\t\t$low = $mid + 1;\n\t\t} else if ($x < $arr[$mid]) {\n\t\t\t$high = $mid - 1;\n\t\t} else {\n\t\t\t$low = $mid + 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10);\n$x = 4;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$x = 20;\n$n = count($arr);\n$index = last($arr, $x);\nif ($index == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Element found at index \" . $index;\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 6, 6, 6, 6, 7, 8, 9, 10);\n$x = 6;\n$n = count($arr);\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last position of $x is $result\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . first($arr, $x, 0, $n - 1);\necho \"Last Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Element found at index\", $result;\n}",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = [1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 7, 8, 9];\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10);\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $last = -1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == $x) {\n            $last = $i;\n        }\n    }\n    return $last;\n}\n\n$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 10;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $res = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $start = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $start = $mid + 1;\n        } else {\n            $end = $mid - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho \"Last position of $x is $result\";",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            if ($mid == $n - 1 || $arr[$mid + 1] != $x) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($arr[$mid] > $x) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\necho $result;",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $start = $mid + 1;\n        } else {\n            $end = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\n$index = last($arr, $x);\nif ($index != -1) {\n    echo \"Last Occurrence of $x is found at index $index\";\n} else {\n    echo \"Element not found in the array\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 5, 6, 7, 8, 9);\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] > $x) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $n = sizeof($arr);\n    $l = 0;\n    $r = $n - 1;\n    $res = -1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            $res = $m;\n            $l = $m + 1;\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$x = 5;\n$res = last($arr, $x);\necho $res;",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . first($arr, $x, 0, $n - 1);\necho \"\\nLast Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $res = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $start = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $arr[$mid]) {\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $start = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10);\n$x = 4;\n$result = last($arr, $x);\necho \"Last position of $x is $result\";",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . first($arr, $x, 0, $n - 1);\necho \"Last Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x > $arr[$mid]) {\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x && ($mid == $n - 1 || $arr[$mid + 1] != $x)) {\n            return $mid;\n        } else if ($arr[$mid] <= $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x > $arr[$mid]) {\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            if ($mid == $n - 1 || $arr[$mid + 1] != $x) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 5, 6, 6, 7, 8, 9);\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $l = 0;\n    $r = $n - 1;\n    while ($l <= $r) {\n        $m = floor(($l + $r) / 2);\n        if ($arr[$m] == $x) {\n            if ($m == $n - 1 || $arr[$m + 1] != $x) {\n                return $m;\n            } else {\n                $l = $m + 1;\n            }\n        } else if ($arr[$m] < $x) {\n            $l = $m + 1;\n        } else {\n            $r = $m - 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$n = count($arr);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = (int)(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last position of $x is $result\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else if ($x > $arr[$mid]) {\n            $low = $mid + 1;\n        } else {\n            if ($mid == $n - 1 || $x < $arr[$mid + 1]) {\n                return $mid;\n            } else {\n                $low = $mid + 1;\n            }\n        }\n    }\n    return -1;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] > $x) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = ($low + $high) / 2;\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] > $x) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\necho last($arr, $x);",
    "    $low = 0;\n    $high = count($arr) - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = array(1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9);\n$x = 4;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $result = $mid;\n            $low = $mid + 1;\n        } elseif ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 9, 10];\n$x = 5;\necho last($arr, $x);",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $low = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $high = $mid - 1;\n        } else {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$result = last($arr, $x);\nif ($result == -1) {\n    echo \"Element not found\";\n} else {\n    echo \"Last position of element $x is $result\";\n}",
    "    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $res = -1;\n    while ($low <= $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] == $x) {\n            $res = $mid;\n            $low = $mid + 1;\n        } else if ($arr[$mid] < $x) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid - 1;\n        }\n    }\n    return $res;\n}\n\n$arr = array(1, 2, 2, 2, 2, 3, 4, 7, 8, 8);\n$x = 2;\n$n = count($arr);\necho \"First Occurrence = \" . first($arr, $x, 0, $n - 1);\necho \"\\nLast Occurrence = \" . last($arr, $x);",
    "    $n = count($arr);\n    $start = 0;\n    $end = $n - 1;\n    $result = -1;\n    while ($start <= $end) {\n        $mid = floor(($start + $end) / 2);\n        if ($x == $arr[$mid]) {\n            $result = $mid;\n            $start = $mid + 1;\n        } else if ($x < $arr[$mid]) {\n            $end = $mid - 1;\n        } else {\n            $start = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [1, 2, 2, 2, 2, 3, 4, 7, 8, 8];\n$x = 2;\necho last($arr, $x);"
  ]
}
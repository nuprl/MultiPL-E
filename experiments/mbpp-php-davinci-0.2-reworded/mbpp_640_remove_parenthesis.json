{
  "name": "mbpp_640_remove_parenthesis",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunction remove_parenthesis($items) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return remove_parenthesis(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"python (chrome)\")) !== \"python\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"string(.abc)\")) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"alpha(num)\")) !== \"alpha\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = [];\n    foreach ($items as $item) {\n        $result[] = preg_replace('/\\([^)]+\\)/', '', $item);\n    }\n    return $result;\n}\n\n$items = ['(1)', '(2)', '(3)', '(4)', '(5)'];\n$result = remove_parenthesis($items);\nprint_r($result);\n",
    "  $new_items = array();\n  foreach ($items as $item) {\n    $new_items[] = preg_replace('/\\(.*?\\)/', '', $item);\n  }\n  return $new_items;\n}\n\n$items = array('(1)', '(2)', '(3)', '(4)', '(5)', '(6)', '(7)', '(8)', '(9)', '(10)');\nprint_r(remove_parenthesis($items));\n",
    "  $items = preg_replace('/\\([^)]+\\)/', '', $items);\n  return $items;\n}\n\n$items = 'This is a (test) string';\necho remove_parenthesis($items);",
    "  $items = str_replace(array('(', ')'), '', $items);\n  return $items;\n}\n\n$items = 'This is a (test) string';\necho remove_parenthesis($items);",
    "  $items = str_replace(array('(', ')'), '', $items);\n  return $items;\n}\n",
    "  $new_items = [];\n  foreach ($items as $item) {\n    $new_items[] = preg_replace('/\\(.*\\)/', '', $item);\n  }\n  return $new_items;\n}\n",
    "    $items = preg_replace('/\\([^)]+\\)/', '', $items);\n    return $items;\n}\n\n$items = \"Apples (Organic), Bananas (Organic), Pears (Organic)\";\necho remove_parenthesis($items);",
    "\t$new_items = array();\n\tforeach ($items as $item) {\n\t\t$new_items[] = preg_replace('/\\(.*?\\)/', '', $item);\n\t}\n\treturn $new_items;\n}\n",
    "  $items = preg_replace('/\\([^)]+\\)/', '', $items);\n  return $items;\n}\n\n$items = \"This is a test (and a good one)\";\necho remove_parenthesis($items);",
    "    $new_items = [];\n    foreach ($items as $item) {\n        $new_items[] = preg_replace('/\\(.*\\)/', '', $item);\n    }\n    return $new_items;\n}\n\n$items = ['item1', 'item2 (item2.1)', 'item3', 'item4 (item4.1) (item4.2)'];\n\nprint_r(remove_parenthesis($items));\n",
    "    $new_items = [];\n    foreach ($items as $item) {\n        $new_items[] = preg_replace('/\\(.*\\)/', '', $item);\n    }\n    return $new_items;\n}\n\n$items = ['apples (small)', 'oranges (medium)', 'bananas (large)'];\n$new_items = remove_parenthesis($items);\nprint_r($new_items);\n",
    "    $items = preg_replace('/\\([^)]+\\)/', '', $items);\n    return $items;\n}\n\n$items = '1 (23) 456 (78)';\necho remove_parenthesis($items);",
    "  $items = str_replace(array('(', ')'), '', $items);\n  return $items;\n}\n\n$items = 'This is a (test) string.';\necho remove_parenthesis($items);",
    "  $new_items = array();\n  foreach ($items as $item) {\n    $new_items[] = preg_replace('/\\(.*\\)/', '', $item);\n  }\n  return $new_items;\n}\n\n$items = array('(a)', 'b', '(c)', '(d)');\n$new_items = remove_parenthesis($items);\n\nprint_r($new_items);",
    "    $items = preg_replace('/\\([^)]+\\)/', '', $items);\n    return $items;\n}\n\n$items = \"This is a (test) string\";\necho remove_parenthesis($items);",
    "  $new_items = array();\n  foreach ($items as $item) {\n    $new_items[] = preg_replace('/\\([^)]+\\)/', '', $item);\n  }\n  return $new_items;\n}\n\n$items = array('(a)', '(b)', '(c)', '(d)', '(e)', '(f)', '(g)', '(h)', '(i)', '(j)', '(k)', '(l)', '(m)', '(n)', '(o)', '(p)', '(q)', '(r)', '(s)', '(t)', '(u)', '(v)', '(w)', '(x)', '(y)', '(z)');\n\nprint_r(remove_parenthesis($items));\n",
    "    $items = preg_replace('/\\([^)]+\\)/', '', $items);\n    return $items;\n}\n\n$items = \"apples (peeled), oranges (peeled), grapes (seedless)\";\necho remove_parenthesis($items);",
    "  $items = str_replace(array('(', ')'), '', $items);\n  return $items;\n}\n\n$items = 'This is a (test) string.';\necho remove_parenthesis($items);",
    "    $items = preg_replace('/\\([^)]+\\)/', '', $items);\n    return $items;\n}\n",
    "    $items = str_replace('(', '', $items);\n    $items = str_replace(')', '', $items);\n    return $items;\n}\n\n$items = \"Apples, Pears # and Bananas (grapes)\";\necho remove_parenthesis($items);"
  ]
}
{
  "name": "mbpp_728_sum_list",
  "language": "php",
  "prompt": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_728_sum_list.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$lst3 = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$lst3[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    foreach ($lst1 as $key => $value) {\n        $result[] = $value + $lst2[$key];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(6, 7, 8, 9, 10);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n\n$result = sum_list($lst1, $lst2);\n\necho \"The result is: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "The result is: Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n\necho \"List 1: \";\nprint_r($lst1);\necho \"List 2: \";\nprint_r($lst2);\necho \"Sum: \";\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "List 1: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\nList 2: Array\n(\n    [0] => 5\n    [1] => 4\n    [2] => 3\n    [3] => 2\n    [4] => 1\n)\nSum: Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = array(1,2,3);\n$lst2 = array(4,5,6);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum_lst = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum_lst[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum_lst;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\necho implode(', ', sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "6, 8, 10, 12",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum_list = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($sum_list, $lst1[$i] + $lst2[$i]);\n    }\n    return $sum_list;\n}\n\n$lst1 = [1,2,3];\n$lst2 = [4,5,6];\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst1_len = count($lst1);\n    $lst2_len = count($lst2);\n    $result = array();\n    if ($lst1_len != $lst2_len) {\n        return \"Error: the two lists are not of the same length.\";\n    } else {\n        for ($i = 0; $i < $lst1_len; $i++) {\n            $result[$i] = $lst1[$i] + $lst2[$i];\n        }\n        return $result;\n    }\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n$lst3 = array(1, 2, 3, 4);\n\necho \"<pre>\";\nprint_r(sum_list($lst1, $lst2));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(sum_list($lst1, $lst3));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n</pre><pre>Error: the two lists are not of the same length.</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = [1,2,3];\n$lst2 = [4,5,6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $result = array();\n  for ($i = 0; $i < count($lst1); $i++) {\n    $result[$i] = $lst1[$i] + $lst2[$i];\n  }\n  return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($sum, $lst1[$i] + $lst2[$i]);\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\necho implode(',', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "5,7,9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [2, 3, 4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\n$lst3 = sum_list($lst1, $lst2);\n\nprint_r($lst3);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum_lst = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($sum_lst, $lst1[$i] + $lst2[$i]);\n    }\n    return $sum_lst;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$lst = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$lst[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $lst;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(2, 3, 4, 5, 6);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = array(1,2,3,4,5);\n$lst2 = array(1,2,3,4,5);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum_list = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum_list[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum_list;\n}\n\n$lst1 = array(1,2,3,4);\n$lst2 = array(5,6,7,8);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nvar_dump(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "array(5) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(6)\n  [2]=>\n  int(6)\n  [3]=>\n  int(6)\n  [4]=>\n  int(6)\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $result = array();\n  for ($i = 0; $i < count($lst1); $i++) {\n    $result[] = $lst1[$i] + $lst2[$i];\n  }\n  return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(2, 3, 4, 5, 6);\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\necho \"lst1 = \";\nprint_r($lst1);\necho \"<br>\";\necho \"lst2 = \";\nprint_r($lst2);\necho \"<br>\";\necho \"sum_list(lst1, lst2) = \";\nprint_r(sum_list($lst1, $lst2));\necho \"<br>\";\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "lst1 = Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n<br>lst2 = Array\n(\n    [0] => 6\n    [1] => 7\n    [2] => 8\n    [3] => 9\n    [4] => 10\n)\n<br>sum_list(lst1, lst2) = Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(6, 7, 8, 9, 10);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $result = [];\n  for ($i = 0; $i < count($lst1); $i++) {\n    array_push($result, $lst1[$i] + $lst2[$i]);\n  }\n  return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(2, 3, 4, 5, 6);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\n$lst3 = array(9, 10, 11, 12);\n\n$result = sum_list($lst1, $lst2);\nprint_r($result);\n\n$result = sum_list($result, $lst3);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\nArray\n(\n    [0] => 15\n    [1] => 18\n    [2] => 21\n    [3] => 24\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($lst3, $lst1[$i] + $lst2[$i]);\n    }\n    return $lst3;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [10, 20, 30, 40, 50];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 11\n    [1] => 22\n    [2] => 33\n    [3] => 44\n    [4] => 55\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1,2,3,4,5];\n$lst2 = [1,2,3,4,5];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [10, 20, 30, 40, 50];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 11\n    [1] => 22\n    [2] => 33\n    [3] => 44\n    [4] => 55\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(2, 3, 4, 5, 6);\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\n$result = sum_list($lst1, $lst2);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $sum = [];\n  for ($i = 0; $i < count($lst1); $i++) {\n    $sum[] = $lst1[$i] + $lst2[$i];\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\necho implode(',', sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "6,6,6,6,6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = array(1,2,3,4,5);\n$lst2 = array(1,2,3,4,5);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [1, 2, 3, 4, 5];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\nprint_r(sum_list([1, 2, 3], [4, 5, 6]));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(2, 3, 4, 5, 6);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1,2,3,4,5);\n$lst2 = array(1,2,3,4,5);\n\necho implode(',', sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "2,4,6,8,10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [5, 4, 3, 2, 1];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n\necho \"<pre>\";\nprint_r(sum_list($lst1, $lst2));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $res = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $res[] = $lst1[$i] + $lst2[$i];\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n$sum = sum_list($lst1, $lst2);\nprint_r($sum);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $new_lst = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $new_lst[] = $lst1[$i] + $lst2[$i];\n    }\n    return $new_lst;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "5, 7, 9\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(2, 3, 4, 5, 6);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 5\n    [2] => 7\n    [3] => 9\n    [4] => 11\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [10, 20, 30, 40, 50];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 11\n    [1] => 22\n    [2] => 33\n    [3] => 44\n    [4] => 55\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$lst3 = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$lst3[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $lst3;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = array(1,2,3,4,5);\n$lst2 = array(1,2,3,4,5);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($lst3, $lst1[$i] + $lst2[$i]);\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho json_encode(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "[5,7,9]",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $lst3 = array();\n  for ($i = 0; $i < count($lst1); $i++) {\n    $lst3[] = $lst1[$i] + $lst2[$i];\n  }\n  return $lst3;\n}\n\n$lst1 = array(1,2,3);\n$lst2 = array(4,5,6);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $res = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $res[] = $lst1[$i] + $lst2[$i];\n    }\n    return $res;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(6, 7, 8, 9, 10);\n$result = sum_list($lst1, $lst2);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($result, $lst1[$i] + $lst2[$i]);\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$sum_lst = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$sum_lst[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $sum_lst;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4);\n$lst2 = array(5, 6, 7, 8);\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 8\n    [2] => 10\n    [3] => 12\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = array(1, 2, 3);\n$lst2 = array(4, 5, 6);\n\n$sum = sum_list($lst1, $lst2);\n\nprint_r($sum);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        array_push($sum, $lst1[$i] + $lst2[$i]);\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n$result = sum_list($lst1, $lst2);\nprint_r($result);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[$i] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(5, 4, 3, 2, 1);\n$lst3 = sum_list($lst1, $lst2);\nprint_r($lst3);\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 6\n    [1] => 6\n    [2] => 6\n    [3] => 6\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $result = [];\n  for ($i = 0; $i < count($lst1); $i++) {\n    $result[] = $lst1[$i] + $lst2[$i];\n  }\n  return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $result = array();\n  for ($i = 0; $i < count($lst1); $i++) {\n    $result[] = $lst1[$i] + $lst2[$i];\n  }\n  return $result;\n}\n\n$lst1 = array(1,2,3);\n$lst2 = array(4,5,6);\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n  $result = [];\n  for ($i = 0; $i < count($lst1); $i++) {\n    $result[] = $lst1[$i] + $lst2[$i];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\necho implode(', ', sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "5, 7, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $lst3 = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $lst3[] = $lst1[$i] + $lst2[$i];\n    }\n    return $lst3;\n}\n\n$lst1 = [1, 2, 3, 4];\n$lst2 = [5, 6, 7, 8];\n\necho implode(', ', sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "6, 8, 10, 12",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$result = [];\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$result[] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n$result = sum_list($lst1, $lst2);\nprint_r($result);\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\n\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n\t$lst3 = array();\n\tfor ($i = 0; $i < count($lst1); $i++) {\n\t\t$lst3[$i] = $lst1[$i] + $lst2[$i];\n\t}\n\treturn $lst3;\n}\n\n$lst1 = array(1, 2, 3, 4, 5);\n$lst2 = array(1, 2, 3, 4, 5);\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123162,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $result = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $result[] = $lst1[$i] + $lst2[$i];\n    }\n    return $result;\n}\n\n$lst1 = [1, 2, 3];\n$lst2 = [4, 5, 6];\nprint_r(sum_list($lst1, $lst2));\n\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 5\n    [1] => 7\n    [2] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function takes as input two arrays [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nfunction sum_list($lst1, $lst2) {\n    $sum = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        $sum[] = $lst1[$i] + $lst2[$i];\n    }\n    return $sum;\n}\n\n$lst1 = [1, 2, 3, 4, 5];\n$lst2 = [6, 7, 8, 9, 10];\n\nprint_r(sum_list($lst1, $lst2));\nfunction candidate(...$args) {\n    return sum_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(10, 20, 30), array(15, 25, 35)) !== array(25, 45, 65)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), array(5, 6, 7)) !== array(6, 8, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, 20, 30), array(15, 45, 75)) !== array(30, 65, 105)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665517381,
      "stdout": "Array\n(\n    [0] => 7\n    [1] => 9\n    [2] => 11\n    [3] => 13\n    [4] => 15\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
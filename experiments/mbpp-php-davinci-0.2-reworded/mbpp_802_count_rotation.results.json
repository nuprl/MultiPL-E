{
  "name": "mbpp_802_count_rotation",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_802_count_rotation.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0;$i<$n;$i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(3,4,5,1,2);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc26858x6.php:22\nStack trace:\n#0 /tmp/tmpc26858x6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc26858x6.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzwajonhj.php:23\nStack trace:\n#0 /tmp/tmpzwajonhj.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzwajonhj.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min = $arr[0];\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg5ol8gu.php:23\nStack trace:\n#0 /tmp/tmpbg5ol8gu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbg5ol8gu.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$index = -1;\n\tfor($i=0;$i<$n;$i++) {\n\t\tif($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$index = $i;\n\t\t}\n\t}\n\treturn $index;\n}\n\n$arr = array(4,5,6,7,8,9,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjk0idmd8.php:23\nStack trace:\n#0 /tmp/tmpjk0idmd8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjk0idmd8.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] > $arr[$high]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid;\n        }\n    }\n    return $low;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2px7n97.php:25\nStack trace:\n#0 /tmp/tmpg2px7n97.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg2px7n97.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = sizeof($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 8, 9, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xbqa3q6.php:23\nStack trace:\n#0 /tmp/tmp5xbqa3q6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5xbqa3q6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return $min_index;\n}\n\n$arr = array(3, 4, 5, 1, 2);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbaughflg.php:16\nStack trace:\n#0 /tmp/tmpbaughflg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpbaughflg.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for($i=0; $i<count($arr); $i++) {\n        if($arr[$i] > $arr[$i+1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(4,5,6,7,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "\nWarning: Undefined array key 7 in /tmp/tmpb2cwmsi3.php on line 6\n2\nWarning: Undefined array key 3 in /tmp/tmpb2cwmsi3.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2cwmsi3.php:20\nStack trace:\n#0 /tmp/tmpb2cwmsi3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpb2cwmsi3.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsrv17p9.php:22\nStack trace:\n#0 /tmp/tmpgsrv17p9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgsrv17p9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(3, 4, 5, 1, 2);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7sb2mz8z.php:23\nStack trace:\n#0 /tmp/tmp7sb2mz8z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7sb2mz8z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(2,3,4,5,6,7,8,1);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tlwd1es.php:23\nStack trace:\n#0 /tmp/tmp9tlwd1es.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9tlwd1es.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(10, 20, 30, 40, 50, 60, 70, 80, 90, 100);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "0",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] > $arr[$high]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid;\n        }\n    }\n    return $low;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2px7n97.php:25\nStack trace:\n#0 /tmp/tmpg2px7n97.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg2px7n97.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr35glq86.php:23\nStack trace:\n#0 /tmp/tmpr35glq86.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpr35glq86.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv64ri5_p.php:23\nStack trace:\n#0 /tmp/tmpv64ri5_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv64ri5_p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1bgbhje.php:22\nStack trace:\n#0 /tmp/tmpx1bgbhje.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx1bgbhje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = ($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "\nDeprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpnzv342s7.php on line 12\n\nDeprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpnzv342s7.php on line 13\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpnzv342s7.php on line 14\n\nDeprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpnzv342s7.php on line 14\n2.5",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(5,6,7,8,9,10,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h013ylv.php:23\nStack trace:\n#0 /tmp/tmp0h013ylv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0h013ylv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 8, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvwmxuq2.php:23\nStack trace:\n#0 /tmp/tmpmvwmxuq2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmvwmxuq2.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1bgbhje.php:22\nStack trace:\n#0 /tmp/tmpx1bgbhje.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx1bgbhje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $arr[$min_index]) {\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [3, 4, 5, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75bghrcd.php:21\nStack trace:\n#0 /tmp/tmp75bghrcd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp75bghrcd.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdozuavw.php:22\nStack trace:\n#0 /tmp/tmpbdozuavw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpbdozuavw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0;$i<$n;$i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15,18,2,3,6,12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv81wohuk.php:23\nStack trace:\n#0 /tmp/tmpv81wohuk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv81wohuk.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] > $arr[$i+1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "\nWarning: Undefined array key 9 in /tmp/tmp5cun10ym.php on line 6\n2\nWarning: Undefined array key 3 in /tmp/tmp5cun10ym.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5cun10ym.php:20\nStack trace:\n#0 /tmp/tmp5cun10ym.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp5cun10ym.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        }\n        elseif($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        }\n        elseif($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$count = count_rotation($arr);\necho \"The array is rotated $count times\";\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "The array is rotated 2 times",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high)/2);\n        $next = ($mid + 1)%$n;\n        $prev = ($mid + $n - 1)%$n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $arr[$min_index]) {\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5,6,7,8,9,10,1,2,3,4];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecoakdip.php:21\nStack trace:\n#0 /tmp/tmpecoakdip.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpecoakdip.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor ($i=0; $i < $n; $i++) { \n\t\tif ($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynbwn0g4.php:23\nStack trace:\n#0 /tmp/tmpynbwn0g4.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpynbwn0g4.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15s65ju3.php:23\nStack trace:\n#0 /tmp/tmp15s65ju3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp15s65ju3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(5,6,7,8,9,10,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdtb_17s.php:23\nStack trace:\n#0 /tmp/tmpjdtb_17s.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjdtb_17s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min = $arr[0];\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4e3qg58b.php:22\nStack trace:\n#0 /tmp/tmp4e3qg58b.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp4e3qg58b.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1bgbhje.php:22\nStack trace:\n#0 /tmp/tmpx1bgbhje.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx1bgbhje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\t$n = count($arr);\n\tfor ($i = 0; $i < $n - 1; $i++) {\n\t\tif ($arr[$i] > $arr[$i + 1]) {\n\t\t\t$count = $i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n$arr = [3, 4, 5, 6, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1bgbhje.php:22\nStack trace:\n#0 /tmp/tmpx1bgbhje.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx1bgbhje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_k6g36pl.php:23\nStack trace:\n#0 /tmp/tmp_k6g36pl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_k6g36pl.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $arr[$min_index]) {\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporh7at3l.php:21\nStack trace:\n#0 /tmp/tmporh7at3l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmporh7at3l.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2hpzkcd.php:24\nStack trace:\n#0 /tmp/tmpt2hpzkcd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt2hpzkcd.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(3, 4, 5, 1, 2);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0sqaute.php:23\nStack trace:\n#0 /tmp/tmpu0sqaute.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpu0sqaute.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i+1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $result = -1;\n    while($low <= $high) {\n        if($arr[$low] <= $arr[$high]) {\n            $result = $low;\n            break;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            $result = $mid;\n            break;\n        } else if($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return $result;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1bgbhje.php:22\nStack trace:\n#0 /tmp/tmpx1bgbhje.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx1bgbhje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min_value = $arr[0];\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min_value) {\n            $min_index = $i;\n            $min_value = $arr[$i];\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_1pu45a.php:23\nStack trace:\n#0 /tmp/tmpv_1pu45a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv_1pu45a.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(6, 7, 8, 9, 10, 1, 2, 3, 4, 5);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89cep48i.php:23\nStack trace:\n#0 /tmp/tmp89cep48i.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp89cep48i.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    $min = $arr[0];\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $count = $i;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqbm369b3.php:23\nStack trace:\n#0 /tmp/tmpqbm369b3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqbm369b3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + $high) / 2;\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [7, 9, 11, 12, 15];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "0",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 8, 9, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6h31kil.php:24\nStack trace:\n#0 /tmp/tmpk6h31kil.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk6h31kil.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = -1;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp925zn0ti.php:23\nStack trace:\n#0 /tmp/tmp925zn0ti.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp925zn0ti.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(5,6,7,8,9,10,1,2,3,4);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvaf07f54.php:23\nStack trace:\n#0 /tmp/tmpvaf07f54.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvaf07f54.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $count = 0;\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvio9kjk.php:24\nStack trace:\n#0 /tmp/tmpcvio9kjk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcvio9kjk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int) (($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(10, 20, 30, 40, 50, 60, 70, 80, 90, 1, 2, 3, 4, 5, 6, 7, 8, 9);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "9",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqldh2b9.php:23\nStack trace:\n#0 /tmp/tmpyqldh2b9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyqldh2b9.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm4g2ny9.php:23\nStack trace:\n#0 /tmp/tmpvm4g2ny9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvm4g2ny9.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw9071l5d.php:23\nStack trace:\n#0 /tmp/tmpw9071l5d.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw9071l5d.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(10, 15, 1, 3, 8);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low < $high) {\n        $mid = floor(($low + $high) / 2);\n        if ($arr[$mid] > $arr[$high]) {\n            $low = $mid + 1;\n        } else {\n            $high = $mid;\n        }\n    }\n    return $low;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2px7n97.php:25\nStack trace:\n#0 /tmp/tmpg2px7n97.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg2px7n97.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509809,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [2, 3, 4, 5, 6, 7, 8, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "7",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2x88v12.php:23\nStack trace:\n#0 /tmp/tmpi2x88v12.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpi2x88v12.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmped8q9p1y.php:22\nStack trace:\n#0 /tmp/tmped8q9p1y.php(29): test()\n#1 {main}\n  thrown in /tmp/tmped8q9p1y.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0r5hpv6.php:23\nStack trace:\n#0 /tmp/tmpn0r5hpv6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpn0r5hpv6.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvawstufi.php:23\nStack trace:\n#0 /tmp/tmpvawstufi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvawstufi.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih2_hcon.php:23\nStack trace:\n#0 /tmp/tmpih2_hcon.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpih2_hcon.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [2, 3, 4, 5, 6, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7s7ebep0.php:23\nStack trace:\n#0 /tmp/tmp7s7ebep0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7s7ebep0.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wcfyv6p.php:22\nStack trace:\n#0 /tmp/tmp9wcfyv6p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9wcfyv6p.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfi36h5_c.php:22\nStack trace:\n#0 /tmp/tmpfi36h5_c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfi36h5_c.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsyl9hrq.php:17\nStack trace:\n#0 /tmp/tmptsyl9hrq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptsyl9hrq.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qba7jj9.php:22\nStack trace:\n#0 /tmp/tmp1qba7jj9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1qba7jj9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6jdyc1ig.php:22\nStack trace:\n#0 /tmp/tmp6jdyc1ig.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6jdyc1ig.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n-1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i=0; $i<$n-1; $i++) {\n        if($arr[$i] > $arr[$i+1]) {\n            $count = $i+1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(2, 3, 4, 5, 6, 7, 8, 9, 10, 1);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8l20u216.php:24\nStack trace:\n#0 /tmp/tmp8l20u216.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8l20u216.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $min = $arr[0];\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3u2l628.php:22\nStack trace:\n#0 /tmp/tmpp3u2l628.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpp3u2l628.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsiwlyn7s.php:24\nStack trace:\n#0 /tmp/tmpsiwlyn7s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsiwlyn7s.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(5,6,7,8,9,10,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdtb_17s.php:23\nStack trace:\n#0 /tmp/tmpjdtb_17s.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjdtb_17s.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return $min_index;\n}\n\n$arr = array(5,6,7,8,9,10,1,2,3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue7k50su.php:17\nStack trace:\n#0 /tmp/tmpue7k50su.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpue7k50su.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcunv7j_s.php:24\nStack trace:\n#0 /tmp/tmpcunv7j_s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcunv7j_s.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for ($i = 0; $i < count($arr) - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "0",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $low = 0;\n    $high = count($arr) - 1;\n    $n = count($arr);\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n        }\n    }\n    return $count;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk42b8vm7.php:20\nStack trace:\n#0 /tmp/tmpk42b8vm7.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpk42b8vm7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min_value = $arr[0];\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min_value) {\n            $min_value = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv36k_c_t.php:23\nStack trace:\n#0 /tmp/tmpv36k_c_t.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv36k_c_t.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qba7jj9.php:22\nStack trace:\n#0 /tmp/tmp1qba7jj9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1qba7jj9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [3, 4, 5, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeeva_nn5.php:23\nStack trace:\n#0 /tmp/tmpeeva_nn5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpeeva_nn5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [4, 5, 6, 7, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88hjnte_.php:22\nStack trace:\n#0 /tmp/tmp88hjnte_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp88hjnte_.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouz1g4st.php:23\nStack trace:\n#0 /tmp/tmpouz1g4st.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpouz1g4st.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaid9z8p.php:23\nStack trace:\n#0 /tmp/tmpaaid9z8p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpaaid9z8p.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\t$n = count($arr);\n\tfor($i = 0; $i < $n - 1; $i++) {\n\t\tif($arr[$i] > $arr[$i + 1]) {\n\t\t\t$count = $i + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ldu9y1i.php:23\nStack trace:\n#0 /tmp/tmp9ldu9y1i.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9ldu9y1i.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5sga_o7.php:23\nStack trace:\n#0 /tmp/tmpv5sga_o7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv5sga_o7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8a567aff.php:24\nStack trace:\n#0 /tmp/tmp8a567aff.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8a567aff.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6ai5_b_.php:23\nStack trace:\n#0 /tmp/tmpj6ai5_b_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj6ai5_b_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\n$n = count($arr);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [2, 3, 4, 5, 6, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsrv17p9.php:22\nStack trace:\n#0 /tmp/tmpgsrv17p9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgsrv17p9.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvawstufi.php:23\nStack trace:\n#0 /tmp/tmpvawstufi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvawstufi.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 8, 9, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_s4x5d8.php:23\nStack trace:\n#0 /tmp/tmpj_s4x5d8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpj_s4x5d8.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $arr[$min_index]) {\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [3, 4, 5, 1, 2];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgzugpte.php:21\nStack trace:\n#0 /tmp/tmpzgzugpte.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzgzugpte.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsphid99.php:22\nStack trace:\n#0 /tmp/tmplsphid99.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplsphid99.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = [2, 3, 4, 5, 6, 7, 8, 9, 10, 1];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pgk0tw5.php:22\nStack trace:\n#0 /tmp/tmp8pgk0tw5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8pgk0tw5.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = [4, 5, 6, 7, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnc7nxewx.php:23\nStack trace:\n#0 /tmp/tmpnc7nxewx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpnc7nxewx.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(3, 4, 5, 1, 2);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0sqaute.php:23\nStack trace:\n#0 /tmp/tmpu0sqaute.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpu0sqaute.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpisfp0pi7.php:23\nStack trace:\n#0 /tmp/tmpisfp0pi7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpisfp0pi7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $low = 0;\n    $high = count($arr) - 1;\n    $n = count($arr);\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = (int)($low + ($high - $low) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } elseif ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } elseif ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [8, 9, 10, 2, 5, 6];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih2_hcon.php:23\nStack trace:\n#0 /tmp/tmpih2_hcon.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpih2_hcon.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = min($arr);\n    $min_index = array_search($min, $arr);\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsyl9hrq.php:17\nStack trace:\n#0 /tmp/tmptsyl9hrq.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptsyl9hrq.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min_index = 0;\n    $min = $arr[0];\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx80ekgy5.php:23\nStack trace:\n#0 /tmp/tmpx80ekgy5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpx80ekgy5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for($i = 0; $i < $n - 1; $i++) {\n        if($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124058,
      "stdout": "2",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i=0; $i<$n; $i++) {\n        if($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(3,4,5,6,7,1,2);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphci9wgw7.php:23\nStack trace:\n#0 /tmp/tmphci9wgw7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphci9wgw7.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(10, 20, 30, 40, 50, 60, 70, 80, 90, 100);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9heyh30.php:23\nStack trace:\n#0 /tmp/tmpk9heyh30.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpk9heyh30.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $count = $i + 1;\n            break;\n        }\n    }\n    return $count;\n}\n\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\t$n = count($arr);\n\tfor($i=0; $i<$n-1; $i++) {\n\t\tif($arr[$i] > $arr[$i+1]) {\n\t\t\t$count = $i+1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$n = count($arr);\n\t$min = $arr[0];\n\t$min_index = 0;\n\tfor ($i=0; $i < $n; $i++) { \n\t\tif ($arr[$i] < $min) {\n\t\t\t$min = $arr[$i];\n\t\t\t$min_index = $i;\n\t\t}\n\t}\n\treturn $min_index;\n}\n\n$arr = array(5,6,7,8,9,10,1,2,3,4);\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6cfo2ax.php:24\nStack trace:\n#0 /tmp/tmpw6cfo2ax.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw6cfo2ax.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    $mid = 0;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n$arr = array(5, 6, 7, 8, 9, 10, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouz1g4st.php:23\nStack trace:\n#0 /tmp/tmpouz1g4st.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpouz1g4st.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [4, 5, 6, 7, 8, 9, 1, 2, 3];\necho count_rotation($arr);\n\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_txd7mo.php:24\nStack trace:\n#0 /tmp/tmp9_txd7mo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9_txd7mo.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $low = 0;\n    $high = $n - 1;\n    while ($low <= $high) {\n        if ($arr[$low] <= $arr[$high]) {\n            return $low;\n        }\n        $mid = floor(($low + $high) / 2);\n        $next = ($mid + 1) % $n;\n        $prev = ($mid + $n - 1) % $n;\n        if ($arr[$mid] <= $arr[$next] && $arr[$mid] <= $arr[$prev]) {\n            return $mid;\n        } else if ($arr[$mid] <= $arr[$high]) {\n            $high = $mid - 1;\n        } else if ($arr[$mid] >= $arr[$low]) {\n            $low = $mid + 1;\n        }\n    }\n    return -1;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124059,
      "stdout": "6",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 8, 9, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpssen53bv.php:23\nStack trace:\n#0 /tmp/tmpssen53bv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpssen53bv.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $min = $arr[0];\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124044,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp09ooakn.php:21\nStack trace:\n#0 /tmp/tmpp09ooakn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp09ooakn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [15, 18, 2, 3, 6, 12];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmporj7yz9z.php:23\nStack trace:\n#0 /tmp/tmporj7yz9z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmporj7yz9z.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = [5, 6, 7, 8, 9, 10, 1, 2, 3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvm4g2ny9.php:23\nStack trace:\n#0 /tmp/tmpvm4g2ny9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvm4g2ny9.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1bgbhje.php:22\nStack trace:\n#0 /tmp/tmpx1bgbhje.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpx1bgbhje.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($arr[$i] < $min) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124043,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvawstufi.php:23\nStack trace:\n#0 /tmp/tmpvawstufi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvawstufi.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(15, 18, 2, 3, 6, 12);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509794,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5h83vbte.php:23\nStack trace:\n#0 /tmp/tmp5h83vbte.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5h83vbte.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n\t$count = 0;\n\tfor($i=0; $i<count($arr)-1; $i++) {\n\t\tif($arr[$i] > $arr[$i+1]) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = [4,5,6,7,8,9,1,2,3];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124045,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptc1bqx5e.php:20\nStack trace:\n#0 /tmp/tmptc1bqx5e.php(27): test()\n#1 {main}\n  thrown in /tmp/tmptc1bqx5e.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $n = count($arr);\n    $min = $arr[0];\n    $min_index = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($min > $arr[$i]) {\n            $min = $arr[$i];\n            $min_index = $i;\n        }\n    }\n    return $min_index;\n}\n\n$arr = array(4, 5, 6, 7, 1, 2, 3);\n$n = count($arr);\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124045,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d6m0nae.php:24\nStack trace:\n#0 /tmp/tmp1d6m0nae.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1d6m0nae.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/\nfunction count_rotation($arr) {\n    $count = 0;\n    for($i = 0; $i < count($arr); $i++) {\n        if($arr[$i] > $arr[$i+1]) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = [5,6,7,8,9,10,1,2,3,4];\necho count_rotation($arr);\nfunction candidate(...$args) {\n    return count_rotation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 2, 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 5, 1, 2, 3)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9, 1, 2, 3)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 2)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124045,
      "stdout": "\nWarning: Undefined array key 10 in /tmp/tmpgr9sxq7p.php on line 6\n2\nWarning: Undefined array key 3 in /tmp/tmpgr9sxq7p.php on line 6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr9sxq7p.php:20\nStack trace:\n#0 /tmp/tmpgr9sxq7p.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgr9sxq7p.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
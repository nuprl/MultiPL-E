{
  "name": "mbpp_75_find_tuples",
  "language": "php",
  "prompt": "<?php\n// Write a function to find arrays which have all elements divisible by k from the given array of arrays.\nfunction find_tuples($test_list, $K) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return find_tuples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(6, 24, 12), array(7, 9, 6), array(12, 18, 21)), 6) !== array(array(6, 24, 12))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 25, 30), array(4, 2, 3), array(7, 8, 9)), 5) !== array(array(5, 25, 30))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7, 9, 16), array(8, 16, 4), array(19, 17, 18)), 4) !== array(array(8, 16, 4))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $value) {\n            if ($value % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $tuple;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);\n",
    "    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9), array(10, 11, 12));\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $flag = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n$test_list = array(array(1, 2, 3, 4, 5), array(2, 4, 6, 8, 10), array(3, 6, 9, 12, 15));\n$K = 2;\nprint_r(find_tuples($test_list, $K));",
    "    $result = [];\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = [[2, 4, 6], [3, 6, 9], [4, 8, 12]];\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples that are divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}",
    "    $result = [];\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $item) {\n            if ($item % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [2, 4, 6, 8], [3, 6, 9, 12], [4, 8, 12, 16]];\n$K = 4;\nprint_r(find_tuples($test_list, $K));\n",
    "    $result = array();\n    foreach($test_list as $test_array) {\n        $is_divisible = true;\n        foreach($test_array as $element) {\n            if($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            array_push($result, $test_array);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50)\n);\n\n$K = 5;\n$result = find_tuples($test_list, $K);\nprint_r($result);",
    "    $result = [];\n    foreach($test_list as $test) {\n        $is_divisible = true;\n        foreach($test as $num) {\n            if($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1,2,3,4,5], [2,4,6,8,10], [5,10,15,20,25]];\n$K = 5;\nprint_r(find_tuples($test_list, $K));",
    "    $result = array();\n    foreach ($test_list as $test_list_item) {\n        $divisible = true;\n        foreach ($test_list_item as $test_list_item_item) {\n            if ($test_list_item_item % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $test_list_item;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho '<pre>';\nprint_r($result);\necho '</pre>';",
    "    $result = [];\n    foreach ($test_list as $test_case) {\n        $is_divisible = true;\n        foreach ($test_case as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test_case);\n        }\n    }\n    return $result;\n}\n\n$test_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]];\n$K = 4;\nprint_r(find_tuples($test_list, $K));",
    "    $result = array();\n    foreach ($test_list as $tuple) {\n        $divisible = true;\n        foreach ($tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $tuple);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40)\n);\n$K = 3;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by $K are: \";\nforeach ($result as $tuple) {\n    echo \"[\";\n    foreach ($tuple as $element) {\n        echo \"$element, \";\n    }\n    echo \"]\";\n}",
    "    $result = array();\n    foreach ($test_list as $list) {\n        $divisible = true;\n        foreach ($list as $num) {\n            if ($num % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            $result[] = $list;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n    array(6, 12, 18, 24, 30),\n    array(7, 14, 21, 28, 35),\n    array(8, 16, 24, 32, 40),\n    array(9, 18, 27, 36, 45),\n    array(10, 20, 30, 40, 50),\n);\n\n$K = 5;\n\n$result = find_tuples($test_list, $K);\n\necho \"Test list: \";\nprint_r($test_list);\necho \"K = $K\\n\";\necho \"Result: \";\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\n$result = find_tuples($test_list, $K);\n\necho \"Input: \" . json_encode($test_list) . \"\\n\";\necho \"Output: \" . json_encode($result) . \"\\n\";",
    "    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $num) {\n            if ($num % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5, 6),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(17, 34, 51, 68, 85)\n);\n\n$K = 3;\n\nprint_r(find_tuples($test_list, $K));",
    "    $result = array();\n    foreach ($test_list as $test_array) {\n        $is_divisible = true;\n        foreach ($test_array as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            $result[] = $test_array;\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n\n$K = 2;\nprint_r(find_tuples($test_list, $K));\n\n$K = 3;\nprint_r(find_tuples($test_list, $K));\n\n$K = 5;\nprint_r(find_tuples($test_list, $K));\n\n$K = 6;\nprint_r(find_tuples($test_list, $K));\n\n$K = 10;\nprint_r(find_tuples($test_list, $K));\n\n$K = 12;\nprint_r(find_tuples($test_list, $K));\n\n$K = 15;\nprint_r(find_tuples($test_list, $K));\n\n$K = 20;\nprint_r(find_tuples($test_list, $K));\n\n$K = 25;\nprint_r(find_tuples($test_list, $K));\n\n$K = 30;\nprint_r(find_tuples($test_list, $K));\n\n$K = 100;\nprint_r(find_tuples($test_list, $K));\n\n$K = 0;\nprint_r(find_tuples($test_list, $K));\n\n$K = 1;\nprint_r(find_tuples($test_list, $K));\n\n$K = -1",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $flag = true;\n        foreach ($value as $val) {\n            if ($val % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $value);\n        }\n    }\n    return $result;\n}\n$test_list = array(array(1, 2, 3, 4, 5), array(5, 10, 15), array(20, 25, 30, 35));\n$K = 5;\necho \"The tuples which have all elements divisible by k are :\\n\";\nprint_r(find_tuples($test_list, $K));",
    "    $result = array();\n    foreach ($test_list as $test_list_item) {\n        $divisible = true;\n        foreach ($test_list_item as $test_list_item_item) {\n            if ($test_list_item_item % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_list_item);\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $test_tuple) {\n        $divisible = true;\n        foreach ($test_tuple as $element) {\n            if ($element % $K != 0) {\n                $divisible = false;\n                break;\n            }\n        }\n        if ($divisible) {\n            array_push($result, $test_tuple);\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($test_list as $test) {\n        $is_divisible = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4),\n    array(2, 4, 6, 8),\n    array(3, 6, 9, 12),\n    array(4, 8, 12, 16),\n    array(5, 10, 15, 20),\n    array(6, 12, 18, 24),\n    array(7, 14, 21, 28),\n    array(8, 16, 24, 32),\n    array(9, 18, 27, 36),\n    array(10, 20, 30, 40),\n);\n\n$K = 4;\n\n$result = find_tuples($test_list, $K);\n\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $sub_list) {\n        $is_divisible = true;\n        foreach ($sub_list as $element) {\n            if ($element % $K != 0) {\n                $is_divisible = false;\n                break;\n            }\n        }\n        if ($is_divisible) {\n            array_push($result, $sub_list);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12));\n$K = 2;\n$result = find_tuples($test_list, $K);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $test) {\n        $flag = true;\n        foreach ($test as $value) {\n            if ($value % $K != 0) {\n                $flag = false;\n                break;\n            }\n        }\n        if ($flag) {\n            array_push($result, $test);\n        }\n    }\n    return $result;\n}\n\n$test_list = array(\n    array(1, 2, 3, 4, 5),\n    array(2, 4, 6, 8, 10),\n    array(3, 6, 9, 12, 15),\n    array(4, 8, 12, 16, 20),\n    array(5, 10, 15, 20, 25),\n);\n$K = 5;\n$result = find_tuples($test_list, $K);\necho \"The tuples which have all elements divisible by K are: \";\nforeach ($result as $test) {\n    echo \"\\n\";\n    foreach ($test as $value) {\n        echo $value . \" \";\n    }\n}"
  ]
}
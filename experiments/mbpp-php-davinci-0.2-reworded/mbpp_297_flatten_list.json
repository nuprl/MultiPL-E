{
  "name": "mbpp_297_flatten_list",
  "language": "php",
  "prompt": "<?php\n// Write a function to flatten a given nested array structure.\nfunction flatten_list($list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_297_flatten_list.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return flatten_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 10, array(20, 30), 40, 50, array(60, 70, 80), array(90, 100, 110, 120))) !== array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(10, 20), array(40), array(30, 56, 25), array(10, 20), array(33), array(40))) !== array(10, 20, 40, 30, 56, 25, 10, 20, 33, 40)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5, 6), array(10, 11, 12), array(7, 8, 9))) !== array(1, 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8]]], 9, 10];\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "\t$list2 = array();\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$list2 = array_merge($list2, flatten_list($item));\n\t\t} else {\n\t\t\tarray_push($list2, $item);\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, 6)));\n$list2 = flatten_list($list1);\nprint_r($list2);",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));",
    "\t$list2 = array();\n\tforeach ($list1 as $value) {\n\t\tif (is_array($value)) {\n\t\t\t$list2 = array_merge($list2, flatten_list($value));\n\t\t} else {\n\t\t\t$list2[] = $value;\n\t\t}\n\t}\n\treturn $list2;\n}\n\n$list1 = array(1, 2, array(3, 4), array(array(5, 6), 7));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8]]]];\n$list2 = flatten_list($list1);\nprint_r($list2);",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, [10, 11]]];\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $key => $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, flatten_list($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$list2 = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10)))));\n$list3 = array(1, 2, array(3, 4, array(5, 6, array(7, 8, array(9, 10, array(11, 12, array(13, 14, array(15, 16, array(17, 18, array(19, 20))))))))));\n\necho \"List 1: \";\nprint_r($list1);\necho \"<br>\";\necho \"Flatten List 1: \";\nprint_r(flatten_list($list1));\necho \"<br><br>\";\n\necho \"List 2: \";\nprint_r($list2);\necho \"<br>\";\necho \"Flatten List 2: \";\nprint_r(flatten_list($list2));\necho \"<br><br>\";\n\necho \"List 3: \";\nprint_r($list3);\necho \"<br>\";\necho \"Flatten List 3: \";\nprint_r(flatten_list($list3));\necho \"<br><br>\";",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, 3, 4, array(5, 6, 7, array(8, 9, 10)));\n$list2 = array(1, 2, 3, 4, array(5, 6, 7, array(8, 9, 10, array(11, 12, 13))));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $list2 = [];\n    foreach ($list1 as $value) {\n        if (is_array($value)) {\n            $list2 = array_merge($list2, flatten_list($value));\n        } else {\n            $list2[] = $value;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, array(3, 4, array(5, 6, 7, array(8, 9))));\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\nprint_r(flatten_list($list1));\n",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, 6)));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10, [11, 12, [13, 14, 15], 16]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $flattened_list = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flattened_list = array_merge($flattened_list, flatten_list($item));\n        } else {\n            $flattened_list[] = $item;\n        }\n    }\n    return $flattened_list;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach($list1 as $item) {\n        if(is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(1, 2, array(3, array(4, 5), 6), 7);\n$list3 = array(1, 2, array(3, array(4, array(5, 6), 7), 8), 9);\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8]]]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', array('*', '*'), '*'), array(array('*')));\n\necho \"List 1: \";\nprint_r($list1);\necho \"List 2: \";\nprint_r($list2);\n\necho \"Flattened List 1: \";\nprint_r(flatten_list($list1));\necho \"Flattened List 2: \";\nprint_r(flatten_list($list2));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(array(1, 2), array(3, 4));\n$list3 = array(1, array(2, array(3, array(4, array(5)))));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $list2 = [];\n    foreach($list1 as $item) {\n        if(is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9];\nprint_r(flatten_list($list1));\n",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8]]]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4, array(5, 6, 7)), 8, 9);\n$list2 = array(1, 2, array(3, 4, array(5, 6, 7)), 8, 9);\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', array('*', '*'), '*'), array(array('*')));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\n$list2 = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9, 10))));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "\t$result = array();\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$result = array_merge($result, flatten_list($item));\n\t\t} else {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(array(array(1, 2, 3), 2, 3), array(4, 5), 6);\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $flat_list = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flat_list = array_merge($flat_list, flatten_list($item));\n        } else {\n            $flat_list[] = $item;\n        }\n    }\n    return $flat_list;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, 7];\n$list4 = [1, [2, [3, 4], [[5]]], 6, 7, [8, [9, 10]]];\n\necho \"List 1: \" . implode(', ', flatten_list($list1)) . \"\\n\";\necho \"List 2: \" . implode(', ', flatten_list($list2)) . \"\\n\";\necho \"List 3: \" . implode(', ', flatten_list($list3)) . \"\\n\";\necho \"List 4: \" . implode(', ', flatten_list($list4)) . \"\\n\";",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, array(3, 4, array(5, 6, array(7, 8, 9))));\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, 3, [4, 5, 6, [7, 8, 9]]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, 3, [4, 5, [6, 7], 8, 9], 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), 6);\n$list2 = array(1, array(2, array(3, 4), 5), 6, array(7, array(8, 9), 10));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(\n    1,\n    array(\n        2,\n        array(\n            3,\n            4\n        ),\n        5\n    ),\n    array(\n        array(\n            6,\n            7\n        ),\n        8\n    ),\n    9,\n    10\n);\n\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', array('*', '*'), '*'), array(array('*')));\n$list3 = array(array(array('*', '*'), array('*', '*')), array(array('*', '*'), array('*', '*')));\n\necho '<pre>';\nprint_r(flatten_list($list1));\necho '</pre>';\n\necho '<pre>';\nprint_r(flatten_list($list2));\necho '</pre>';\n\necho '<pre>';\nprint_r(flatten_list($list3));\necho '</pre>';",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $flattened_list = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flattened_list = array_merge($flattened_list, flatten_list($item));\n        } else {\n            $flattened_list[] = $item;\n        }\n    }\n    return $flattened_list;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, [2, 3], [4, [5, 6]]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), array(array(5, 6), array(7, 8)));\n$list2 = array(1, 2, array(3, 4), array(array(5, 6), array(7, 8, array(9, 10))));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(array(1, 2, array(3)), array(array(array(4))), 5);\n$list3 = array(array('*', '*', '*', '*'), array('*', '*', '*', '*'), array('*', '*', '*', '*'), array('*', '*', '*', '*'));\n$list4 = array(1, 2, array(3, 4, array(5), 6, 7), 8, 9, 10);\n\nprint_r(flatten_list($list1));\necho \"<br>\";\nprint_r(flatten_list($list2));\necho \"<br>\";\nprint_r(flatten_list($list3));\necho \"<br>\";\nprint_r(flatten_list($list4));\necho \"<br>\";",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10, [11, 12, [13, 14, [15, 16, 17]]]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach($list1 as $item) {\n        if(is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "\t$result = array();\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$result = array_merge($result, flatten_list($item));\n\t\t} else {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(1, array(2, array(3, array(4, array(5)))));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8];\n$list2 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\n$list2 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10, [11, 12]]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, array(3, 4), array(array(5, 6), 7));\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, 6)));\n$list2 = flatten_list($list1);\nprint_r($list2);",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach($list1 as $item) {\n        if(is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3, array(4, 5, 6, array(7, 8, 9))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, 9]]]];\n$list2 = [1, 2, [3, 4, [5, 6, [7, 8, 9]]], 10, 11, 12];\n\n$flatten_list1 = flatten_list($list1);\n$flatten_list2 = flatten_list($list2);\n\necho \"List 1: \" . implode(', ', $list1) . \"\\n\";\necho \"Flatten List 1: \" . implode(', ', $flatten_list1) . \"\\n\";\necho \"List 2: \" . implode(', ', $list2) . \"\\n\";\necho \"Flatten List 2: \" . implode(', ', $flatten_list2) . \"\\n\";",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\nprint_r(flatten_list($list1));\n",
    "\t$result = array();\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$result = array_merge($result, flatten_list($item));\n\t\t} else {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));",
    "    $flattened_list = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flattened_list = array_merge($flattened_list, flatten_list($item));\n        } else {\n            $flattened_list[] = $item;\n        }\n    }\n    return $flattened_list;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $flat_list = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flat_list = array_merge($flat_list, flatten_list($item));\n        } else {\n            $flat_list[] = $item;\n        }\n    }\n    return $flat_list;\n}\n",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, [[[7]]], 8, 9, 10];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $list2 = [];\n    foreach ($list1 as $value) {\n        if (is_array($value)) {\n            $list2 = array_merge($list2, flatten_list($value));\n        } else {\n            $list2[] = $value;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10, [11, 12]];\n\nvar_dump(flatten_list($list1));\nvar_dump(flatten_list($list2));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $flat_list = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flat_list = array_merge($flat_list, flatten_list($item));\n        } else {\n            $flat_list[] = $item;\n        }\n    }\n    return $flat_list;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\n$list2 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\n\n$flat_list = flatten_list($list1);\n\necho \"Flat list: \";\nprint_r($flat_list);\n\necho \"<br>\";\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, [2, 3], [4, [5, 6]], 7];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n$list2 = flatten_list($list1);\nprint_r($list2);",
    "\t$flat_list = array();\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$flat_list = array_merge($flat_list, flatten_list($item));\n\t\t} else {\n\t\t\t$flat_list[] = $item;\n\t\t}\n\t}\n\treturn $flat_list;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array(0, 2, array(array(2), 8, array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(array(",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$list2 = [1, 2, [3, 4, [5, 6, 7], 8, 9]];\n$list3 = [1, 2, [3, 4, [5, 6, 7], 8, 9], 10, 11, 12];\n$list4 = [1, 2, [3, 4, [5, 6, 7], 8, 9], 10, 11, 12, [13, 14, 15, [16, 17, 18, 19, 20]]];\n\necho \"<pre>\";\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));\nprint_r(flatten_list($list4));\necho \"</pre>\";",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(1, 2, array(3, array(4, 5), 6), 7);\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\nprint_r(flatten_list($list1));",
    "    $list2 = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = array(1, 2, array(3, 4), array(array(5, 6), 7));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach($list1 as $item) {\n        if(is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\n$list2 = array(1, array(2, 3), array(array(4, 5, array(6, 7))));\n$list3 = array(1, array(2, 3), array(array(4, 5, array(6, 7, 8))));\n\necho \"List 1: \";\nprint_r(flatten_list($list1));\necho \"\\n\";\n\necho \"List 2: \";\nprint_r(flatten_list($list2));\necho \"\\n\";\n\necho \"List 3: \";\nprint_r(flatten_list($list3));\necho \"\\n\";",
    "    $result = array();\n    foreach ($list1 as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, flatten_list($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', array('*', '*'), '*'), array(array('*')));\n$list3 = array(array(array('*', '*'), array('*', '*')), array(array('*', '*'), array('*', '*')));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $flattened_list = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flattened_list = array_merge($flattened_list, flatten_list($item));\n        } else {\n            $flattened_list[] = $item;\n        }\n    }\n    return $flattened_list;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, [[[7]]], 8, 9, 10];\n$list4 = [1, [2, [3, 4], [[5]]], 6, [[[7]]], 8, 9, 10, [11, [12, [13, 14], [[15]]], 16, [[[17]]], 18, 19, 20]];\n\necho \"List 1: \" . implode(\", \", $list1) . \"\\n\";\necho \"Flattened List 1: \" . implode(\", \", flatten_list($list1)) . \"\\n\";\necho \"List 2: \" . implode(\", \", $list2) . \"\\n\";\necho \"Flattened List 2: \" . implode(\", \", flatten_list($list2)) . \"\\n\";\necho \"List 3: \" . implode(\", \", $list3) . \"\\n\";\necho \"Flattened List 3: \" . implode(\", \", flatten_list($list3)) . \"\\n\";\necho \"List 4: \" . implode(\", \", $list4) . \"\\n\";\necho \"Flattened List 4: \" . implode(\", \", flatten_list($list4)) . \"\\n\";",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8]]], 9, 10];\nprint_r(flatten_list($list1));\n",
    "\t$result = array();\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$result = array_merge($result, flatten_list($item));\n\t\t} else {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $value) {\n        if (is_array($value)) {\n            $result = array_merge($result, flatten_list($value));\n        } else {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, 7, [8, [9, 10]]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3, array(4, 5, 6), 7, 8), 9, 10);\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4], [5, [6, 7]]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', array('*', '*'), '*'), array(array('*')));\n$list3 = array(array(array('*', '*'), array('*', '*')), array(array('*', '*'), array('*', '*')));\n\necho '<pre>';\nprint_r(flatten_list($list1));\necho '</pre>';\n\necho '<pre>';\nprint_r(flatten_list($list2));\necho '</pre>';\n\necho '<pre>';\nprint_r(flatten_list($list3));\necho '</pre>';",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10, [11, 12, [13, 14, [15, 16, 17], 18], 19, 20]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n$list2 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n",
    "    $flat_list = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flat_list = array_merge($flat_list, flatten_list($item));\n        } else {\n            $flat_list[] = $item;\n        }\n    }\n    return $flat_list;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [[1], [2], [3], [[4], [5]]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));",
    "\t$result = array();\n\tforeach($list1 as $item) {\n\t\tif(is_array($item)) {\n\t\t\t$result = array_merge($result, flatten_list($item));\n\t\t} else {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $flattened_list = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $flattened_list = array_merge($flattened_list, flatten_list($item));\n        } else {\n            $flattened_list[] = $item;\n        }\n    }\n    return $flattened_list;\n}\n\n$list1 = array(1, 2, array(3, 4), array(array(5, 6), 7));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5);\n$list2 = array(1, 2, array(3, 4, array(5, 6, array(7, 8))), 9, 10);\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', array('*', '*'), '*'), array(array('*')));\n$list3 = array(array(array('*', '*'), array('*', '*')), array(array('*', '*'), array('*', '*')));\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3, array(4, 5, array(6, 7))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3, array(4, 5, array(6, 7))));\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3, array(4, 5, array(6, 7))));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));\n",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = array();\n    foreach($list1 as $item) {\n        if(is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            array_push($result, $item);\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\n$list2 = flatten_list($list1);\nprint_r($list2);\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1,2,3,[4,5,6,[7,8,9]]];\n$list2 = flatten_list($list1);\nprint_r($list2);",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8];\n$list2 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8, [9, 10]];\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, 2, array(3, 4), 5, array(array(6, 7), 8));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\nprint_r(flatten_list($list1));",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list = [1, [2, 3, [4, 5, [6, 7]]], 8, [9, 10]];\nprint_r(flatten_list($list));\n",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\n$list2 = array('*', array('*', '*'), '*', array(array('*')));\n\necho '<pre>';\nprint_r(flatten_list($list1));\necho '</pre>';\n\necho '<pre>';\nprint_r(flatten_list($list2));\necho '</pre>';",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];\n$list2 = flatten_list($list1);\nprint_r($list2);",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, 7, [8, 9]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));",
    "\t$result = [];\n\tforeach ($list1 as $item) {\n\t\tif (is_array($item)) {\n\t\t\t$result = array_merge($result, flatten_list($item));\n\t\t} else {\n\t\t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, 7, [8, [9, 10]]];\n$list4 = [1, [2, [3, 4], [[5]]], 6, 7, [8, [9, 10]], 11, 12, [13, 14, [15, [16, [17, 18], 19], 20], 21], 22, 23, 24, [25, 26, [27, 28], 29, 30, [31, 32, [33, 34, [35, 36, [37, 38, [39, [40, [41, 42], 43], 44], 45], 46], 47], 48], 49, 50, [51, 52, [53], 54, 55, [56, [57, 58, [59, 60], 61], 62], 63, 64, [65, [66, [67, 68], 69], 70], 71, 72, [73, [74, [75, 76, [77, [78, 79], 80], 81], 82], 83], 84, 85, [86, [87, [88, 89], 90], 91], 92, 93, [94, [95, 96, [97, 98], 99], 100], 101, 102, [103, [104, 105, [106, [107, 108, [109, 110], 111], 112], 113], 114], 115, 116, [117, [118, [119, 120], 121], 122], 123, 124, [125, [126, [127, 128], 129], 130], 131, 132, [133, [134, [135, 136, [137, 138, [139, [140, [141, 142], 143], 144],",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, 3), array(array(4, 5, array(6))));\nprint_r(flatten_list($list1));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list1));",
    "    $result = array();\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = array(1, array(2, array(3, 4), 5), array(array(6)));\nprint_r(flatten_list($list1));",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 5], [[4, 3], 2]];\n$list2 = [1, [2, [3, 4], [[5]]]];\n$list3 = [1, [2, [3, 4], [[5]]], 6, 7, [8, [9, 10]]];\n\nprint_r(flatten_list($list1));\nprint_r(flatten_list($list2));\nprint_r(flatten_list($list3));\n",
    "    $list2 = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $list2 = array_merge($list2, flatten_list($item));\n        } else {\n            $list2[] = $item;\n        }\n    }\n    return $list2;\n}\n\n$list = [1, 2, [3, 4, [5, 6, 7], 8], 9, 10];\nprint_r(flatten_list($list));\n",
    "    $result = [];\n    foreach ($list1 as $item) {\n        if (is_array($item)) {\n            $result = array_merge($result, flatten_list($item));\n        } else {\n            $result[] = $item;\n        }\n    }\n    return $result;\n}\n\n$list1 = [1, 2, [3, 4, [5, 6], 7], 8];\nprint_r(flatten_list($list1));\n"
  ]
}
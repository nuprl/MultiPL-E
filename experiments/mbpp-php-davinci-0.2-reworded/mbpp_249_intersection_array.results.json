{
  "name": "mbpp_249_intersection_array",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = [];\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [1, 3, 5, 7, 9];\n\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [3, 4, 5, 6, 7];\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($intersection as $num) {\n    echo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Intersection of two arrays: 3 4 5 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho implode(',', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Intersection of two arrays is: 2,4,6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [2, 4, 6, 8, 10];\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n\t$result = array();\n\tforeach ($array_nums1 as $key => $value) {\n\t\tif (in_array($value, $array_nums2)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7);\n$array_nums2 = array(3, 4, 5, 6, 7, 8, 9);\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n    [3] => 6\n    [4] => 7\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\necho implode(', ', intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "1, 3, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach($array_nums1 as $num1) {\n        foreach($array_nums2 as $num2) {\n            if($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 3, 4, 5, 6, 7, 8);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Intersection of two arrays is: 2, 4, 6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            array_push($result, $num);\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [3, 4, 5, 6, 7];\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n\t$result = array();\n\tforeach ($array_nums1 as $num1) {\n\t\tforeach ($array_nums2 as $num2) {\n\t\t\tif ($num1 == $num2) {\n\t\t\t\t$result[] = $num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\n$array_nums1 = array(1,2,3,4,5,6,7,8,9);\n$array_nums2 = array(2,4,6,8,10,12,14,16,18);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510118,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $intersection_array[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$intersection_array = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($intersection_array);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho implode(\", \", $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: 2, 4, 6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            array_push($array_intersection, $num);\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $result = [];\n  foreach ($array_nums1 as $num) {\n    if (in_array($num, $array_nums2)) {\n      $result[] = $num;\n    }\n  }\n  return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [2, 4, 6, 8, 10];\n\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(2, 4, 6, 8, 10, 12, 14, 16, 18);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $intersection = array();\n  foreach($array_nums1 as $num1) {\n    foreach($array_nums2 as $num2) {\n      if($num1 == $num2) {\n        $intersection[] = $num1;\n      }\n    }\n  }\n  return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\necho \"Intersection of two arrays: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(4, 5, 6, 7, 8, 9);\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 4\n    [1] => 5\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 3, 4, 5, 6, 7, 8);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$intersection = intersection_array($array_nums1, $array_nums2);\nprint_r($intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection_array[] = $num;\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\n$intersection_array = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($intersection_array);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2 3 5 <br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_nums = [];\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_nums[] = $value;\n        }\n    }\n    return $array_nums;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n$array_nums = intersection_array($array_nums1, $array_nums2);\necho \"<pre>\";\nprint_r($array_nums);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is : \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is : Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $result = array();\n  foreach ($array_nums1 as $num1) {\n    foreach ($array_nums2 as $num2) {\n      if ($num1 == $num2) {\n        $result[] = $num1;\n      }\n    }\n  }\n  return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                array_push($result, $array_nums1[$i]);\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "The intersection of two arrays is: <pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(2, 4, 6, 8, 10, 12, 14, 16, 18);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Array 1: \";\necho implode(\", \", $array_nums1);\necho \"<br>\";\necho \"Array 2: \";\necho implode(\", \", $array_nums2);\necho \"<br>\";\necho \"Intersection: \";\necho implode(\", \", $array_intersection);\necho \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array 1: 1, 2, 3, 4, 5, 6, 7, 8, 9<br>Array 2: 2, 4, 6, 8, 10, 12, 14, 16, 18<br>Intersection: 2, 4, 6, 8<br><br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6];\n$array_nums2 = [2, 3, 4, 5, 6, 7, 8];\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7);\n$array_nums2 = array(2, 3, 4, 5, 6, 7, 8);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(\", \", $result);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2, 3, 4, 5, 6, 7<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1,2,3,4,5,6,7,8,9);\n$array_nums2 = array(2,4,6,8,10,12,14,16,18);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($array_intersection);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "The intersection of two arrays is: <pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(2, 4, 6, 8);\n$intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [1, 3, 5, 7, 9];\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection_array[] = $value;\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$intersection_array = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(',', $intersection_array);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 3,4,5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_intersection = array_intersect($array_nums1, $array_nums2);\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1wh70vg.php:20\nStack trace:\n#0 /tmp/tmpy1wh70vg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy1wh70vg.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [2, 4, 6, 8, 10];\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersection[] = $value;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $intersection_array = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection_array[] = $value;\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$intersection_array = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(', ', $intersection_array);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2, 4, 6, 8",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [2, 4, 6, 8, 10];\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = [];\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($array_intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_nums_intersection = array_intersect($array_nums1, $array_nums2);\n    return $array_nums_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$array_nums_intersection = intersection_array($array_nums1, $array_nums2);\nprint_r($array_nums_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgdo75w_.php:19\nStack trace:\n#0 /tmp/tmpvgdo75w_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvgdo75w_.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersect = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersect[] = $value;\n        }\n    }\n    return $array_intersect;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$array_intersect = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($array_intersect);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 3, 4, 5, 6, 7, 8);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                array_push($result, $array_nums1[$i]);\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "The intersection of two arrays is: <pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection[] = $value;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 2, 3, 6, 7);\n$intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho implode(',', $intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: 1,2,3",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6];\n$array_nums2 = [2, 3, 4, 5, 6, 7, 8];\necho implode(\", \", intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "2, 3, 4, 5, 6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $result = array();\n  foreach ($array_nums1 as $num1) {\n    foreach ($array_nums2 as $num2) {\n      if ($num1 == $num2) {\n        $result[] = $num1;\n      }\n    }\n  }\n  return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = [];\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [2, 4, 6, 8, 10, 12, 14, 16, 18];\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($array_intersection as $num) {\n    echo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2 4 6 8 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                array_push($intersection_array, $num1);\n            }\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$intersection_array = intersection_array($array_nums1, $array_nums2);\nprint_r($intersection_array);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                array_push($result, $num1);\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"The intersection of two arrays is: \";\nforeach ($result as $num) {\n    echo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "The intersection of two arrays is: 2 3 4 5 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 3, 5, 7, 9, 11, 13, 15, 17);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "The intersection of two arrays is: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $array_intersect = array();\n  foreach ($array_nums1 as $key => $value) {\n    if (in_array($value, $array_nums2)) {\n      $array_intersect[] = $value;\n    }\n  }\n  return $array_intersect;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$array_intersect = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(', ', $array_intersect);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2, 4, 6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersect = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersect[] = $value;\n        }\n    }\n    return $array_intersect;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$array_intersect = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($array_intersect);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"<pre>\";\nprint_r($intersection);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_intersection = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersection[] = $value;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(2, 3, 3, 5, 5, 6, 7, 7, 8, 12);\n$array_nums2 = array(5, 5, 6, 8, 8, 9, 10, 10);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($array_intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 5\n    [1] => 6\n    [2] => 8\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach($array_nums1 as $num1) {\n        foreach($array_nums2 as $num2) {\n            if($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = [];\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection_array[] = $num1;\n            }\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [1, 3, 5, 7, 9];\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(4, 5, 6, 7, 8);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($array_intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 4\n    [1] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(4, 5, 6, 7, 8);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays is: \";\necho implode(\", \", $intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"Array 1: \";\nprint_r($array_nums1);\necho \"<br>\";\necho \"Array 2: \";\nprint_r($array_nums2);\necho \"<br>\";\necho \"Intersection array: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array 1: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n<br>Array 2: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n<br>Intersection array: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($result as $num) {\n    echo $num . \" \";\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2 4 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection_array[] = $num;\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 1, 3, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(', ', $result);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2, 3, 4, 5<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nforeach ($result as $num) {\n    echo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: 2 3 4 5 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 7, 8);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [3, 4, 5, 6, 7];\n$result = intersection_array($array_nums1, $array_nums2);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "3, 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 2 4 6 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1,2,3,4,5,6,7,8,9);\n$array_nums2 = array(2,4,6,8,10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($array_intersection as $num) {\n    echo $num . \" \";\n}\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 3 4 5 <br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection_array[] = $num;\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_nums[] = $value;\n        }\n    }\n    return $array_nums;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$array_nums = intersection_array($array_nums1, $array_nums2);\necho \"Intersection array: \";\necho \"<pre>\";\nprint_r($array_nums);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection array: <pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510119,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "The intersection of two arrays is: Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersect = array_intersect($array_nums1, $array_nums2);\n    return $array_intersect;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersect = intersection_array($array_nums1, $array_nums2);\n\necho \"<pre>\";\nprint_r($array_intersect);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2um_3krm.php:21\nStack trace:\n#0 /tmp/tmp2um_3krm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2um_3krm.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $result = [];\n  foreach ($array_nums1 as $num) {\n    if (in_array($num, $array_nums2)) {\n      $result[] = $num;\n    }\n  }\n  return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [1, 3, 5, 7, 9, 11, 13, 15, 17];\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 3, 4, 5, 6, 7, 8);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is : \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is : Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 5, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "2, 3, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(5, 6, 7, 8, 9, 10, 11, 12, 13);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(', ', $array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 5, 6, 7, 8, 9",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(3, 4, 5, 6, 7, 8);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho implode(',', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "3,4,5,6",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_intersection = array();\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersection[] = $value;\n        }\n    }\n    return $array_intersection;\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(3, 4, 5, 6, 7, 8, 9, 10, 11);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n    [3] => 6\n    [4] => 7\n    [5] => 8\n    [6] => 9\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                array_push($intersection_array, $array_nums1[$i]);\n            }\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\necho \"Intersection of two arrays: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n    [3] => 7\n    [4] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $intersection_array = array_intersect($array_nums1, $array_nums2);\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$intersection_array = intersection_array($array_nums1, $array_nums2);\nprint_r($intersection_array);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbz2w_1ok.php:19\nStack trace:\n#0 /tmp/tmpbz2w_1ok.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbz2w_1ok.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_values($array_nums1);\n    $array_nums2 = array_values($array_nums2);\n    $array_nums1_length = count($array_nums1);\n    $array_nums2_length = count($array_nums2);\n    $intersection_array = [];\n    for ($i = 0; $i < $array_nums1_length; $i++) {\n        for ($j = 0; $j < $array_nums2_length; $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $intersection_array[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 2, 3, 4, 5);\n\n$intersection_array = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($intersection_array);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [3, 4, 5, 6, 7];\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = [];\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                array_push($intersection, $num1);\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n\t$result = array();\n\tforeach ($array_nums1 as $value) {\n\t\tif (in_array($value, $array_nums2)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(4, 5, 6, 7, 8);\necho \"Intersection of two arrays is: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 4\n    [1] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($array_intersection as $num) {\n    echo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays: 3 4 5 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $intersection = array();\n  foreach ($array_nums1 as $value) {\n    if (in_array($value, $array_nums2)) {\n      $intersection[] = $value;\n    }\n  }\n  return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach($array_nums1 as $num1) {\n        foreach($array_nums2 as $num2) {\n            if($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\nprint_r($intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $intersection_array[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\n$intersection_array = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays is: \";\nfor ($i = 0; $i < count($intersection_array); $i++) {\n    echo $intersection_array[$i] . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: 1 2 3 4 5 6 7 8 9 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection[] = $value;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\necho \"Array 1: \";\nprint_r($array_nums1);\necho \"<br>\";\necho \"Array 2: \";\nprint_r($array_nums2);\necho \"<br>\";\necho \"Intersection of two arrays: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array 1: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n<br>Array 2: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n<br>Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_nums3 = array_intersect($array_nums1, $array_nums2);\n    return $array_nums3;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfqba910.php:19\nStack trace:\n#0 /tmp/tmpvfqba910.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvfqba910.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                array_push($result, $array_nums1[$i]);\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$result = intersection_array($array_nums1, $array_nums2);\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "2, 3, 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = [];\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersection[] = $value;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [3, 4, 5, 6, 7];\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection_array[] = $value;\n        }\n    }\n    return $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(3, 4, 5, 6, 7, 8);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n    [3] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n$array_nums2 = [2, 4, 6, 8, 10, 12, 14, 16, 18];\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: 2 4 6 8 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $array_result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_result[] = $value;\n        }\n    }\n    return $array_result;\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\n$result = intersection_array($array_nums1, $array_nums2);\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n\t$array_intersection = array();\n\tforeach ($array_nums1 as $num) {\n\t\tif (in_array($num, $array_nums2)) {\n\t\t\t$array_intersection[] = $num;\n\t\t}\n\t}\n\treturn $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(3, 4, 5, 6, 7, 8);\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n    [3] => 6\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $array_intersection[] = $num;\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($array_intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = [];\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n$array_nums2 = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20];\n\necho \"Array 1: \";\nprint_r($array_nums1);\necho \"<br>\";\necho \"Array 2: \";\nprint_r($array_nums2);\necho \"<br>\";\necho \"Intersection of Array 1 and Array 2: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array 1: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 6\n    [6] => 7\n    [7] => 8\n    [8] => 9\n    [9] => 10\n)\n<br>Array 2: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n    [5] => 12\n    [6] => 14\n    [7] => 16\n    [8] => 18\n    [9] => 20\n)\n<br>Intersection of Array 1 and Array 2: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                array_push($result, $array_nums1[$i]);\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho \"Intersection of two arrays: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$array_nums2 = array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: 2 4 6 8 10 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: 1, 3, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                array_push($result, $array_nums1[$i]);\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\nforeach ($result as $value) {\n    echo $value . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: 2 3 5 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$array_nums2 = array(2, 4, 6, 8, 10, 12, 14, 16, 18);\n\necho \"<pre>\";\nprint_r(intersection_array($array_nums1, $array_nums2));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: 2, 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123313,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersect = array_intersect($array_nums1, $array_nums2);\n    return $array_intersect;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 2, 3, 4, 5);\n\n$array_intersect = intersection_array($array_nums1, $array_nums2);\n\necho \"<pre>\";\nprint_r($array_intersect);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp2ohyiv7.php:21\nStack trace:\n#0 /tmp/tmpp2ohyiv7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp2ohyiv7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = [];\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $array_intersection[] = $value;\n        }\n    }\n    return $array_intersection;\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$intersection = intersection_array($array_nums1, $array_nums2);\n\necho \"Intersection of two arrays: \";\nforeach ($intersection as $num) {\n    echo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: 2 4 6 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is : \";\necho implode(', ', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is : 2, 4",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$array_nums2 = array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20);\n\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(',', $result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: 2,4,6,8,10",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection_array = array();\n    $array_nums1 = array_unique($array_nums1);\n    $array_nums2 = array_unique($array_nums2);\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection_array[] = $value;\n        }\n    }\n    return $intersection_array;\n}\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $intersection[] = $value;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n$intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is : \";\nprint_r($intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is : Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach($array_nums1 as $num1) {\n        foreach($array_nums2 as $num2) {\n            if($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1,2,3,4,5);\n$array_nums2 = array(2,4,6,8,10);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 4, 6, 8, 10);\n$result = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays is: \";\necho \"<pre>\";\nprint_r($result);\necho \"</pre>\";\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: <pre>Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(1, 3, 5, 7, 9);\n\necho \"Intersection of two arrays is: \";\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays is: Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\nprint_r($array_intersection);\n\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "The intersection of two arrays is: Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    for ($i = 0; $i < count($array_nums1); $i++) {\n        for ($j = 0; $j < count($array_nums2); $j++) {\n            if ($array_nums1[$i] == $array_nums2[$j]) {\n                $result[] = $array_nums1[$i];\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 4, 6, 8, 10);\n\n$result = intersection_array($array_nums1, $array_nums2);\n\necho \"Array 1: \";\nprint_r($array_nums1);\necho \"<br>\";\necho \"Array 2: \";\nprint_r($array_nums2);\necho \"<br>\";\necho \"Intersection of two arrays: \";\nprint_r($result);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array 1: Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n)\n<br>Array 2: Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => 6\n    [3] => 8\n    [4] => 10\n)\n<br>Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 4\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = [];\n    foreach ($array_nums1 as $key => $value) {\n        if (in_array($value, $array_nums2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = [1, 2, 3, 4, 5];\n$array_nums2 = [2, 4, 6, 8, 10];\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 4\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num) {\n        if (in_array($num, $array_nums2)) {\n            $intersection[] = $num;\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n$intersection = intersection_array($array_nums1, $array_nums2);\necho \"Intersection of two arrays: \";\necho implode(', ', $intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection of two arrays: 2, 3, 4, 5",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n\t$intersection_array = array();\n\tforeach ($array_nums1 as $num1) {\n\t\tforeach ($array_nums2 as $num2) {\n\t\t\tif ($num1 == $num2) {\n\t\t\t\t$intersection_array[] = $num1;\n\t\t\t}\n\t\t}\n\t}\n\treturn $intersection_array;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\n$intersection_array = intersection_array($array_nums1, $array_nums2);\necho \"Intersection array: \";\nforeach ($intersection_array as $num) {\n\techo $num . \" \";\n}\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Intersection array: 2 3 4 5 ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(4, 5, 6, 7, 8);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\necho \"The intersection of two arrays is: \";\nprint_r($array_intersection);\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "The intersection of two arrays is: Array\n(\n    [0] => 4\n    [1] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $intersection[] = $num1;\n            }\n        }\n    }\n    return $intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(2, 3, 4, 5, 6);\n\nprint_r(intersection_array($array_nums1, $array_nums2));\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $result = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $result[] = $num1;\n            }\n        }\n    }\n    return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5, 6);\n$array_nums2 = array(2, 3, 4, 5, 6, 7);\n$result = intersection_array($array_nums1, $array_nums2);\necho '<pre>';\nprint_r($result);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n    [3] => 5\n    [4] => 6\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n    $array_intersection = array();\n    foreach ($array_nums1 as $num1) {\n        foreach ($array_nums2 as $num2) {\n            if ($num1 == $num2) {\n                $array_intersection[] = $num1;\n            }\n        }\n    }\n    return $array_intersection;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\n$array_intersection = intersection_array($array_nums1, $array_nums2);\n\necho '<pre>';\nprint_r($array_intersection);\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to find the intersection of two arrays.\nfunction intersection_array($array_nums1, $array_nums2) {\n  $result = array();\n  foreach ($array_nums1 as $num) {\n    if (in_array($num, $array_nums2)) {\n      $result[] = $num;\n    }\n  }\n  return $result;\n}\n\n$array_nums1 = array(1, 2, 3, 4, 5);\n$array_nums2 = array(3, 4, 5, 6, 7);\n\necho '<pre>';\nprint_r(intersection_array($array_nums1, $array_nums2));\necho '</pre>';\nfunction candidate(...$args) {\n    return intersection_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(1, 2, 4, 8, 9)) !== array(1, 2, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(3, 5, 7, 9)) !== array(3, 5, 7, 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 5, 7, 8, 9, 10), array(10, 20, 30, 40)) !== array(10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123314,
      "stdout": "<pre>Array\n(\n    [0] => 3\n    [1] => 4\n    [2] => 5\n)\n</pre>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
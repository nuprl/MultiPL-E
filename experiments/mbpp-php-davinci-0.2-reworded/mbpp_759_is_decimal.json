{
  "name": "mbpp_759_is_decimal",
  "language": "php",
  "prompt": "<?php\n// Write a function to check whether a given string is a decimal number with a precision of 2.\nfunction is_decimal($num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_decimal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"123.11\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"e666.86\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"3.124587\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1.11\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1.1.11\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    if (preg_match(\"/^\\d+(\\.\\d{2})?$/\", $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_decimal(12.23);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\necho is_decimal(12.2);\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "\tif(preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "    return preg_match('/^\\d*\\.\\d{2}$/', $num);\n}\n",
    "\tif (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho is_decimal(12.12);\necho is_decimal(12.1);\necho is_decimal(12);\necho is_decimal(12.123);",
    "    return preg_match(\"/^\\d*\\.\\d{2}$/\", $num);\n}\n\necho is_decimal(\"12.34\") . \"\\n\";\necho is_decimal(\"12.3\") . \"\\n\";\necho is_decimal(\"12.345\") . \"\\n\";\necho is_decimal(\"12\") . \"\\n\";\necho is_decimal(\"12.3456\") . \"\\n\";\necho is_decimal(\"12.00\") . \"\\n\";\necho is_decimal(\"12.0\") . \"\\n\";\necho is_decimal(\"abc\") . \"\\n\";\necho is_decimal(\"\") . \"\\n\";\necho is_decimal(\"12.34.56\") . \"\\n\";\necho is_decimal(\"00.12\") . \"\\n\";\necho is_decimal(\"12.34.00\") . \"\\n\";\necho is_decimal(\"123456\") . \"\\n\";\necho is_decimal(\"0.12\") . \"\\n\";\necho is_decimal(\".12\") . \"\\n\";\necho is_decimal(\".\") . \"\\n\";\necho is_decimal(\"0.\") . \"\\n\";\necho is_decimal(\"0\") . \"\\n\";\necho is_decimal(\"0.0\") . \"\\n\";\necho is_decimal(\"0.00\") . \"\\n\";\necho is_decimal(\"00.00\") . \"\\n\";\necho is_decimal(\"00.01\") . \"\\n\";\necho is_decimal(\"00.10\") . \"\\n\";\necho is_decimal(\"01.00\") . \"\\n\";\necho is_decimal(\"10.00\") . \"\\n\";\necho is_decimal(\"10.01\") . \"\\n\";\necho is_decimal(\"10.10\") . \"\\n\";\necho is_decimal(\"01.01\") . \"\\n\";\necho is_decimal(\"01.10\") . \"\\n\";\necho is_decimal(\"01.10\") . \"\\n\";\necho is_decimal(\"01.10\") . \"\\n\";\necho is_decimal(\"01.10\") . \"\\n\";\necho is_decimal(\"01.10\") . \"\\n\";",
    "    return preg_match('/^\\d*\\.\\d{2}$/', $num);\n}\n",
    "    if (preg_match(\"/^[0-9]+(\\.[0-9]{1,2})?$/\", $num)) {\n        return true;\n    }\n    return false;\n}\n",
    "    return preg_match('/^\\d*\\.\\d{2}$/', $num);\n}\n",
    "    if (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho is_decimal('123.12') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.1') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.12345') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.12.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123.123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_decimal('123.123.123.123.123.123.123.123.123.123.123') ? 'true' : 'false';\necho \"\\n\";\necho is_",
    "    return preg_match('/^\\d*\\.\\d{2}$/', $num);\n}\n\necho is_decimal('1.23') . \"\\n\";\necho is_decimal('1.2') . \"\\n\";\necho is_decimal('1.2.3') . \"\\n\";\necho is_decimal('1.2.3.4') . \"\\n\";\necho is_decimal('1.2.3.4.5') . \"\\n\";\necho is_decimal('1.23.4') . \"\\n\";\necho is_decimal('1.234') . \"\\n\";\necho is_decimal('1.2345') . \"\\n\";\necho is_decimal('1.23456') . \"\\n\";\necho is_decimal('1.234567') . \"\\n\";\necho is_decimal('1.2345678') . \"\\n\";\necho is_decimal('1.23456789') . \"\\n\";\necho is_decimal('1.234567890') . \"\\n\";\necho is_decimal('1.2345678901') . \"\\n\";\necho is_decimal('1.23456789012') . \"\\n\";\necho is_decimal('1.234567890123') . \"\\n\";\necho is_decimal('1.2345678901234') . \"\\n\";\necho is_decimal('1.23456789012345') . \"\\n\";\necho is_decimal('1.234567890123456') . \"\\n\";\necho is_decimal('1.2345678901234567') . \"\\n\";\necho is_decimal('1.23456789012345678') . \"\\n\";\necho is_decimal('1.234567890123456789') . \"\\n\";\necho is_decimal('1.2345678901234567890') . \"\\n\";\necho is_decimal('1.23456789012345678901') . \"\\n\";\necho is_decimal('1.234567890123456789012') . \"\\n\";\necho is_dec",
    "    return preg_match('/^\\d+(\\.\\d{1,2})?$/', $num);\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "    return preg_match('/^\\d+\\.\\d{2}$/', $num);\n}\n",
    "    return preg_match('/^\\d+\\.\\d{2}$/', $num);\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n",
    "    if (preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    return preg_match('/^[0-9]+(\\.[0-9]{1,2})?$/', $num);\n}\n"
  ]
}
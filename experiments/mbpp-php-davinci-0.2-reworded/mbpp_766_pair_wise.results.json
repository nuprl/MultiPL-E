{
  "name": "mbpp_766_pair_wise",
  "language": "php",
  "prompt": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i < count($l1) - 1) {\n            array_push($l2, $l1[$i] . $l1[$i + 1]);\n        }\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = pair_wise($l1);\nprint_r($l2);\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => 12\n    [1] => 23\n    [2] => 34\n    [3] => 45\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa71ws1ke.php:21\nStack trace:\n#0 /tmp/tmpa71ws1ke.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa71ws1ke.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i + 1 < count($l1)) {\n            array_push($l2, [$l1[$i], $l1[$i + 1]]);\n        }\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1); $i++) {\n    if ($i + 1 < count($l1)) {\n      $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, array($l1[$i], $l1[$i + 1]));\n    }\n    return $result;\n}\n\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp04as9xjo.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\t$i = 0;\n\twhile ($i < count($l1) - 1) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t\t$i++;\n\t}\n\treturn $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($l2, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmphzc_g38r.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = array();\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = array($l1[$i], $l1[$i + 1]);\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if (isset($l1[$i + 1])) {\n            $result[] = [$l1[$i], $l1[$i + 1]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($l2, array($l1[$i], $l1[$i + 1]));\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5, 6];\n\nprint_r(pair_wise($l1));\nprint_r(pair_wise($l2));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = array();\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = array($l1[$i], $l1[$i + 1]);\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($l2, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nprint_r(pair_wise([1, 2, 3, 4, 5]));\nprint_r(pair_wise([1, 2, 3, 4]));\nprint_r(pair_wise([1, 2, 3]));\nprint_r(pair_wise([1, 2]));\nprint_r(pair_wise([1]));\nprint_r(pair_wise([]));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n)\nArray\n(\n    [0] => Array\n        (",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nvar_dump(pair_wise([1, 2, 3, 4, 5, 6]));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "array(5) {\n  [0]=>\n  array(2) {\n    [0]=>\n    int(1)\n    [1]=>\n    int(2)\n  }\n  [1]=>\n  array(2) {\n    [0]=>\n    int(2)\n    [1]=>\n    int(3)\n  }\n  [2]=>\n  array(2) {\n    [0]=>\n    int(3)\n    [1]=>\n    int(4)\n  }\n  [3]=>\n  array(2) {\n    [0]=>\n    int(4)\n    [1]=>\n    int(5)\n  }\n  [4]=>\n  array(2) {\n    [0]=>\n    int(5)\n    [1]=>\n    int(6)\n  }\n}\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]));\nprint\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpfxdumw4e.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($l2, array($l1[$i], $l1[$i + 1]));\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = array();\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($result, array($l1[$i], $l1[$i + 1]));\n  }\n  return $result;\n}\n\n$l1 = array(1, 2, 3, 4);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    $l3 = array();\n    $l4 = array();\n    $l5 = array();\n    $l6 = array();\n    $l7 = array();\n    $l8 = array();\n    $l9 = array();\n    $l10 = array();\n    $l11 = array();\n    $l12 = array();\n    $l13 = array();\n    $l14 = array();\n    $l15 = array();\n    $l16 = array();\n    $l17 = array();\n    $l18 = array();\n    $l19 = array();\n    $l20 = array();\n    $l21 = array();\n    $l22 = array();\n    $l23 = array();\n    $l24 = array();\n    $l25 = array();\n    $l26 = array();\n    $l27 = array();\n    $l28 = array();\n    $l29 = array();\n    $l30 = array();\n    $l31 = array();\n    $l32 = array();\n    $l33 = array();\n    $l34 = array();\n    $l35 = array();\n    $l36 = array();\n    $l37 = array();\n    $l38 = array();\n    $l39 = array();\n    $l40 = array();\n    $l41 = array();\n    $l42 = array();\n    $l43 = array();\n    $l44 = array();\n    $l45 = array();\n    $l46 = array();\n    $l47 = array();\n    $l48 = array();\n    $l49 = array();\n    $l50 = array();\n    $l51 = array();\n    $l52 = array();\n    $l53 = array();\n    $l54 = array();\n    $l55 = array();\n    $l56 = array();\n    $l57 = array();\n    $l58 = array();\n    $l59 = array();\n    $l60 = array();\n    $l61 = array();\n    $l62 = array();\n    $l63 = array();\n    $l64 = array();\n    $l65 = array();\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "\nParse error: Unclosed '{' on line 3 in /tmp/tmpox_8dfrf.php on line 79\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = array();\n  for ($i = 0; $i < count($l1); $i++) {\n    if ($i < count($l1) - 1) {\n      array_push($result, array($l1[$i], $l1[$i + 1]));\n    }\n  }\n  return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i + 1 < count($l1)) {\n            $result[] = [$l1[$i], $l1[$i + 1]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i < count($l1) - 1) {\n            array_push($result, array($l1[$i], $l1[$i + 1]));\n        }\n    }\n    return $result;\n}\n\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6)));\nprint_r(pair_wise(array(\"a\", \"b\", \"c\", \"d\", \"e\")));\nprint_r(pair_wise(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => a\n            [1] => b\n        )\n\n    [1] => Array\n        (\n            [0] => b\n            [1] => c\n        )\n\n    [2] => Array\n        (\n            [0] => c\n            [1] => d\n        )\n\n    [3] => Array\n        (\n            [0] => d\n            [1] => e\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n         ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($l2, array($l1[$i], $l1[$i + 1]));\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = [];\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = [$l1[$i], $l1[$i + 1]];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = array();\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = array($l1[$i], $l1[$i + 1]);\n  }\n  return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\n$l2 = pair_wise($l1);\n\nfor ($i = 0; $i < count($l2); $i++) {\n  echo $l2[$i][0] . \" \" . $l2[$i][1] . \"<br>\";\n}\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "1 2<br>2 3<br>3 4<br>4 5<br>5 6<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($l2, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = [];\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\tarray_push($result, [$l1[$i], $l1[$i + 1]]);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = pair_wise($l1);\nprint_r($l2);\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    $count = count($l1);\n    for ($i = 0; $i < $count - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\tarray_push($l2, array($l1[$i], $l1[$i + 1]));\n\t}\n\treturn $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i + 1 < count($l1)) {\n            $result[] = [$l1[$i], $l1[$i + 1]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = pair_wise($l1);\nprint_r($l2);\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = array();\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($result, array($l1[$i], $l1[$i + 1]));\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i + 1 < count($l1)) {\n            $result[] = [$l1[$i], $l1[$i + 1]];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = [];\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = [$l1[$i], $l1[$i + 1]];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $count = count($l1);\n    $result = array();\n    for ($i = 0; $i < $count - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4);\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($l2, array($l1[$i], $l1[$i + 1]));\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6, 7);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1); $i++) {\n    if ($i < count($l1) - 1) {\n      $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$l2 = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$l2[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\n$l2 = pair_wise($l1);\nprint_r($l2);\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($result, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $result;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5]));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5, 6];\n\nprint_r(pair_wise($l1));\nprint_r(pair_wise($l2));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $l2;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]));\nprint_r(pair_wise([1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpcfr5ubfo.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $pairs = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $pairs[] = [$l1[$i], $l1[$i+1]];\n    }\n    return $pairs;\n}\n\nprint_r(pair_wise([1,2,3,4,5,6,7,8,9,10]));\nprint_r(pair_wise([1,2,3,4,5,6,7,8,9,10,11,12]));\nprint_r(pair_wise([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] =>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = array();\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = array($l1[$i], $l1[$i + 1]);\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    $len = count($l1);\n    for ($i = 0; $i < $len - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($result, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($l2, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($result, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = array();\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = array($l1[$i], $l1[$i + 1]);\n\t}\n\treturn $result;\n}\n\n$l1 = array(1, 2, 3, 4, 5);\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, array($l1[$i], $l1[$i + 1]));\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($result, [$l1[$i], $l1[$i + 1]]);\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        array_push($l2, array($l1[$i], $l1[$i + 1]));\n    }\n    return $l2;\n}\n\n$l1 = array(1, 2, 3, 4, 5, 6);\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nprint_r(pair_wise($l1));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n    [5] => Array\n        (\n            [0] => 6\n            [1] => 7\n        )\n\n    [6] => Array\n        (\n            [0] => 7\n            [1] => 8\n        )\n\n    [7] => Array\n        (\n            [0] => 8\n            [1] => 9\n        )\n\n    [8] => Array\n        (\n            [0] => 9\n            [1] => 10\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $l2 = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $l2[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = $l1[$i] . $l1[$i + 1];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygn6sn3a.php:16\nStack trace:\n#0 /tmp/tmpygn6sn3a.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpygn6sn3a.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = array();\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = array($l1[$i], $l1[$i + 1]);\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n\t$result = [];\n\tfor ($i = 0; $i < count($l1) - 1; $i++) {\n\t\t$result[] = [$l1[$i], $l1[$i + 1]];\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        if ($i < count($l1) - 1) {\n            $l2[] = [$l1[$i], $l1[$i + 1]];\n        }\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $result = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $result[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $result;\n}\n\nprint_r(pair_wise([1, 2, 3, 4, 5, 6]));\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    array_push($result, [$l1[$i], $l1[$i + 1]]);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n  $result = [];\n  for ($i = 0; $i < count($l1) - 1; $i++) {\n    $result[] = [$l1[$i], $l1[$i + 1]];\n  }\n  return $result;\n}\n\n$l1 = [1, 2, 3, 4, 5];\n$l2 = [1, 2, 3, 4, 5, 6];\n$l3 = [1, 2, 3, 4, 5, 6, 7];\n\nprint_r(pair_wise($l1));\nprint_r(pair_wise($l2));\nprint_r(pair_wise($l3));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n    [4] => Array\n        (\n            [0] => 5\n            [1] => 6\n        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n         ",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to return an array of all pairs of consecutive items in a given array.\nfunction pair_wise($l1) {\n    $l2 = [];\n    for ($i = 0; $i < count($l1) - 1; $i++) {\n        $l2[] = [$l1[$i], $l1[$i + 1]];\n    }\n    return $l2;\n}\n\n$l1 = [1, 2, 3, 4, 5];\nprint_r(pair_wise($l1));\nfunction candidate(...$args) {\n    return pair_wise(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 1, 2, 3, 3, 4, 4, 5)) !== array(array(1, 1), array(1, 2), array(2, 3), array(3, 3), array(3, 4), array(4, 4), array(4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 5, 7, 9, 10)) !== array(array(1, 5), array(5, 7), array(7, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 9, 7, 10)) !== array(array(5, 1), array(1, 9), array(9, 7), array(7, 10))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) !== array(array(1, 2), array(2, 3), array(3, 4), array(4, 5), array(5, 6), array(6, 7), array(7, 8), array(8, 9), array(9, 10))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123987,
      "stdout": "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1] => 2\n        )\n\n    [1] => Array\n        (\n            [0] => 2\n            [1] => 3\n        )\n\n    [2] => Array\n        (\n            [0] => 3\n            [1] => 4\n        )\n\n    [3] => Array\n        (\n            [0] => 4\n            [1] => 5\n        )\n\n)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
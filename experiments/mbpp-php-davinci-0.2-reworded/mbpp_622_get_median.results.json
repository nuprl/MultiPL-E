{
  "name": "mbpp_622_get_median",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_q0ltpdg.php:41\nStack trace:\n#0 /tmp/tmp_q0ltpdg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_q0ltpdg.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8qdn3s5.php:45\nStack trace:\n#0 /tmp/tmps8qdn3s5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmps8qdn3s5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhnc_f32.php:46\nStack trace:\n#0 /tmp/tmpnhnc_f32.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnhnc_f32.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ipqyl3w.php:42\nStack trace:\n#0 /tmp/tmp1ipqyl3w.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1ipqyl3w.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t}\n\t\telse if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t}\n\t\telse {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median of two sorted arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9v7gmq_1.php:42\nStack trace:\n#0 /tmp/tmp9v7gmq_1.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp9v7gmq_1.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhnc_f32.php:46\nStack trace:\n#0 /tmp/tmpnhnc_f32.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnhnc_f32.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppj19kc14.php:40\nStack trace:\n#0 /tmp/tmppj19kc14.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppj19kc14.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cusqsln.php:42\nStack trace:\n#0 /tmp/tmp6cusqsln.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6cusqsln.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is \" . $median;\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqm7bfy6e.php:52\nStack trace:\n#0 /tmp/tmpqm7bfy6e.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpqm7bfy6e.php on line 52\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwn4h39lu.php:40\nStack trace:\n#0 /tmp/tmpwn4h39lu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwn4h39lu.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_umw6zy.php:42\nStack trace:\n#0 /tmp/tmp8_umw6zy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8_umw6zy.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nxw0w0_.php:41\nStack trace:\n#0 /tmp/tmp1nxw0w0_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1nxw0w0_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7nv9pex.php:44\nStack trace:\n#0 /tmp/tmpq7nv9pex.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq7nv9pex.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qmb3uox.php:42\nStack trace:\n#0 /tmp/tmp3qmb3uox.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3qmb3uox.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml8wb62c.php:38\nStack trace:\n#0 /tmp/tmpml8wb62c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpml8wb62c.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 2, 3, 6);\n$arr2 = array(4, 6, 8, 10);\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fx_2kyu.php:33\nStack trace:\n#0 /tmp/tmp5fx_2kyu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5fx_2kyu.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpof8nijsy.php:42\nStack trace:\n#0 /tmp/tmpof8nijsy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpof8nijsy.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsd41vhy.php:48\nStack trace:\n#0 /tmp/tmppsd41vhy.php(53): test()\n#1 {main}\n  thrown in /tmp/tmppsd41vhy.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2gjf3cq.php:46\nStack trace:\n#0 /tmp/tmpu2gjf3cq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpu2gjf3cq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1) / sizeof($arr1[0]);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "\nFatal error: Uncaught TypeError: sizeof(): Argument #1 ($value) must be of type Countable|array, int given in /tmp/tmpoegqcjlc.php:34\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpoegqcjlc.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7svra8uc.php:42\nStack trace:\n#0 /tmp/tmp7svra8uc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7svra8uc.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww4oa5cp.php:43\nStack trace:\n#0 /tmp/tmpww4oa5cp.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpww4oa5cp.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi59s3bka.php:44\nStack trace:\n#0 /tmp/tmpi59s3bka.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpi59s3bka.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohhv7496.php:43\nStack trace:\n#0 /tmp/tmpohhv7496.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpohhv7496.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb2cxt4vi.php:42\nStack trace:\n#0 /tmp/tmpb2cxt4vi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpb2cxt4vi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median of two sorted arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i8hti8h.php:39\nStack trace:\n#0 /tmp/tmp9i8hti8h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9i8hti8h.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplmw83fni.php:45\nStack trace:\n#0 /tmp/tmplmw83fni.php(50): test()\n#1 {main}\n  thrown in /tmp/tmplmw83fni.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = count($arr1);\nif ($n == count($arr2)) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogysmfpw.php:45\nStack trace:\n#0 /tmp/tmpogysmfpw.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpogysmfpw.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsd41vhy.php:48\nStack trace:\n#0 /tmp/tmppsd41vhy.php(53): test()\n#1 {main}\n  thrown in /tmp/tmppsd41vhy.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n + 1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg6npv3m.php:42\nStack trace:\n#0 /tmp/tmpbg6npv3m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbg6npv3m.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnxvwkkr.php:48\nStack trace:\n#0 /tmp/tmpnnxvwkkr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpnnxvwkkr.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiae4vr7u.php:41\nStack trace:\n#0 /tmp/tmpiae4vr7u.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpiae4vr7u.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\necho \"Median of the two arrays is \" . get_median($arr1, $arr2, 5);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median of the two arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk86h_zfn.php:44\nStack trace:\n#0 /tmp/tmpk86h_zfn.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpk86h_zfn.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0te5mcb9.php:39\nStack trace:\n#0 /tmp/tmp0te5mcb9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0te5mcb9.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 2, 3, 6);\n$arr2 = array(4, 6, 8, 10);\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi18ihiqu.php:37\nStack trace:\n#0 /tmp/tmpi18ihiqu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi18ihiqu.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq117gf94.php:45\nStack trace:\n#0 /tmp/tmpq117gf94.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpq117gf94.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2gjf3cq.php:46\nStack trace:\n#0 /tmp/tmpu2gjf3cq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpu2gjf3cq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8qdn3s5.php:45\nStack trace:\n#0 /tmp/tmps8qdn3s5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmps8qdn3s5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhnc_f32.php:46\nStack trace:\n#0 /tmp/tmpnhnc_f32.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnhnc_f32.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gj0w3gb.php:43\nStack trace:\n#0 /tmp/tmp5gj0w3gb.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5gj0w3gb.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkekt4mxt.php:40\nStack trace:\n#0 /tmp/tmpkekt4mxt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkekt4mxt.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n\n    if ($n <= 0) {\n        return -1;\n    }\n\n    if ($n == 1) {\n        return ($arr1[0] + $arr2[0]) / 2;\n    }\n\n    if ($n == 2) {\n        return ($max($arr1[0], $arr2[0]) + $min($arr1[1], $arr2[1])) / 2;\n    }\n\n    while ($count < $n) {\n        $m1 = $m2;\n        if ($i == $n) {\n            $m2 = $arr2[0];\n            break;\n        }\n\n        if ($j == $n) {\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m2 = $arr2[$j];\n            $j++;\n        }\n\n        $count++;\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8u1r7i4b.php:58\nStack trace:\n#0 /tmp/tmp8u1r7i4b.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp8u1r7i4b.php on line 58\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7svra8uc.php:42\nStack trace:\n#0 /tmp/tmp7svra8uc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7svra8uc.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7nv9pex.php:44\nStack trace:\n#0 /tmp/tmpq7nv9pex.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq7nv9pex.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpr3nnkj.php:41\nStack trace:\n#0 /tmp/tmpzpr3nnkj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzpr3nnkj.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = sizeof($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8yad2r7.php:42\nStack trace:\n#0 /tmp/tmpo8yad2r7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo8yad2r7.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhnc_f32.php:46\nStack trace:\n#0 /tmp/tmpnhnc_f32.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnhnc_f32.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n  $i = 0;\n  $j = 0;\n  $count = 0;\n  $m1 = -1;\n  $m2 = -1;\n  while ($count < $n + 1) {\n    if ($i == $n) {\n      $m1 = $m2;\n      $m2 = $arr2[0];\n      break;\n    } else if ($j == $n) {\n      $m1 = $m2;\n      $m2 = $arr1[0];\n      break;\n    }\n    if ($arr1[$i] < $arr2[$j]) {\n      $m1 = $m2;\n      $m2 = $arr1[$i];\n      $i++;\n    } else {\n      $m1 = $m2;\n      $m2 = $arr2[$j];\n      $j++;\n    }\n    $count++;\n  }\n  return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9fnpxml.php:42\nStack trace:\n#0 /tmp/tmpy9fnpxml.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpy9fnpxml.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhnc_f32.php:46\nStack trace:\n#0 /tmp/tmpnhnc_f32.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnhnc_f32.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppj19kc14.php:40\nStack trace:\n#0 /tmp/tmppj19kc14.php(45): test()\n#1 {main}\n  thrown in /tmp/tmppj19kc14.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1zxwu7s.php:47\nStack trace:\n#0 /tmp/tmpi1zxwu7s.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpi1zxwu7s.php on line 47\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7svra8uc.php:42\nStack trace:\n#0 /tmp/tmp7svra8uc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7svra8uc.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkekt4mxt.php:40\nStack trace:\n#0 /tmp/tmpkekt4mxt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkekt4mxt.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovymis0e.php:33\nStack trace:\n#0 /tmp/tmpovymis0e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpovymis0e.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwfyx60_.php:43\nStack trace:\n#0 /tmp/tmpcwfyx60_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcwfyx60_.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nxw0w0_.php:41\nStack trace:\n#0 /tmp/tmp1nxw0w0_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1nxw0w0_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7svra8uc.php:42\nStack trace:\n#0 /tmp/tmp7svra8uc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7svra8uc.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n + 1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg6npv3m.php:42\nStack trace:\n#0 /tmp/tmpbg6npv3m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbg6npv3m.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7nv9pex.php:44\nStack trace:\n#0 /tmp/tmpq7nv9pex.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq7nv9pex.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp77p4qugx.php:41\nStack trace:\n#0 /tmp/tmp77p4qugx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp77p4qugx.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size.\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpog5kmpl7.php:45\nStack trace:\n#0 /tmp/tmpog5kmpl7.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpog5kmpl7.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxzm0xun.php:44\nStack trace:\n#0 /tmp/tmpjxzm0xun.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjxzm0xun.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6eo3c45.php:41\nStack trace:\n#0 /tmp/tmpy6eo3c45.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpy6eo3c45.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_q0ltpdg.php:41\nStack trace:\n#0 /tmp/tmp_q0ltpdg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_q0ltpdg.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2gjf3cq.php:46\nStack trace:\n#0 /tmp/tmpu2gjf3cq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpu2gjf3cq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = count($arr1);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67m2gjpk.php:46\nStack trace:\n#0 /tmp/tmp67m2gjpk.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp67m2gjpk.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is $median\\n\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6amrrjib.php:43\nStack trace:\n#0 /tmp/tmp6amrrjib.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6amrrjib.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycfmnr_n.php:42\nStack trace:\n#0 /tmp/tmpycfmnr_n.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpycfmnr_n.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkekt4mxt.php:40\nStack trace:\n#0 /tmp/tmpkekt4mxt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkekt4mxt.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkekt4mxt.php:40\nStack trace:\n#0 /tmp/tmpkekt4mxt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkekt4mxt.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count = 0;\n\t$m1 = -1;\n\t$m2 = -1;\n\twhile ($count < $n + 1) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$count++;\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjg2xk1m.php:43\nStack trace:\n#0 /tmp/tmpbjg2xk1m.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbjg2xk1m.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nxw0w0_.php:41\nStack trace:\n#0 /tmp/tmp1nxw0w0_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1nxw0w0_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkekt4mxt.php:40\nStack trace:\n#0 /tmp/tmpkekt4mxt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkekt4mxt.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkekt4mxt.php:40\nStack trace:\n#0 /tmp/tmpkekt4mxt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkekt4mxt.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n  $i = 0;\n  $j = 0;\n  $count;\n  $m1 = -1;\n  $m2 = -1;\n  for ($count = 0; $count <= $n; $count++) {\n    if ($i == $n) {\n      $m1 = $m2;\n      $m2 = $arr2[0];\n      break;\n    } else if ($j == $n) {\n      $m1 = $m2;\n      $m2 = $arr1[0];\n      break;\n    }\n    if ($arr1[$i] < $arr2[$j]) {\n      $m1 = $m2;\n      $m2 = $arr1[$i];\n      $i++;\n    } else {\n      $m1 = $m2;\n      $m2 = $arr2[$j];\n      $j++;\n    }\n  }\n  return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\necho get_median($arr1, $arr2, 5);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp14ulmg8s.php:40\nStack trace:\n#0 /tmp/tmp14ulmg8s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp14ulmg8s.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n\t$i = 0;\n\t$j = 0;\n\t$count;\n\t$m1 = -1;\n\t$m2 = -1;\n\tfor ($count = 0; $count <= $n; $count++) {\n\t\tif ($i == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[0];\n\t\t\tbreak;\n\t\t} else if ($j == $n) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[0];\n\t\t\tbreak;\n\t\t}\n\t\tif ($arr1[$i] < $arr2[$j]) {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr1[$i];\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$m1 = $m2;\n\t\t\t$m2 = $arr2[$j];\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n\techo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n\techo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyldg479n.php:45\nStack trace:\n#0 /tmp/tmpyldg479n.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpyldg479n.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n = sizeof($arr1) / sizeof($arr1[0]);\n\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "\nFatal error: Uncaught TypeError: sizeof(): Argument #1 ($value) must be of type Countable|array, int given in /tmp/tmp12y33zx6.php:37\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp12y33zx6.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n\n        if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is \" . $median;\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpny36z4xx.php:54\nStack trace:\n#0 /tmp/tmpny36z4xx.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpny36z4xx.php on line 54\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7svra8uc.php:42\nStack trace:\n#0 /tmp/tmp7svra8uc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7svra8uc.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is $median\\n\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6amrrjib.php:43\nStack trace:\n#0 /tmp/tmp6amrrjib.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp6amrrjib.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median of two sorted arrays is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median of two sorted arrays is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp93altnl_.php:42\nStack trace:\n#0 /tmp/tmp93altnl_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp93altnl_.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2gjf3cq.php:46\nStack trace:\n#0 /tmp/tmpu2gjf3cq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpu2gjf3cq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nxw0w0_.php:41\nStack trace:\n#0 /tmp/tmp1nxw0w0_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1nxw0w0_.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    $median = get_median($arr1, $arr2, $n1);\n    echo \"Median is $median\\n\";\n} else {\n    echo \"Doesn't work for arrays of unequal size\\n\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_r140pe.php:49\nStack trace:\n#0 /tmp/tmps_r140pe.php(54): test()\n#1 {main}\n  thrown in /tmp/tmps_r140pe.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        }\n        else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1m1jh3e.php:44\nStack trace:\n#0 /tmp/tmpw1m1jh3e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpw1m1jh3e.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7svra8uc.php:42\nStack trace:\n#0 /tmp/tmp7svra8uc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7svra8uc.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwe3trad7.php:45\nStack trace:\n#0 /tmp/tmpwe3trad7.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwe3trad7.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeilojefu.php:42\nStack trace:\n#0 /tmp/tmpeilojefu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpeilojefu.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Arrays are of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhnc_f32.php:46\nStack trace:\n#0 /tmp/tmpnhnc_f32.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnhnc_f32.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\n$median = get_median($arr1, $arr2, $n);\necho \"Median is \" . $median;\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_umw6zy.php:42\nStack trace:\n#0 /tmp/tmp8_umw6zy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8_umw6zy.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n) {\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 2, 3, 6];\n$arr2 = [4, 6, 8, 10];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "3.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcv_x1p_h.php:33\nStack trace:\n#0 /tmp/tmpcv_x1p_h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcv_x1p_h.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n) . \"\\n\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cb_0g6m.php:41\nStack trace:\n#0 /tmp/tmp7cb_0g6m.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7cb_0g6m.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ca1kqq8.php:43\nStack trace:\n#0 /tmp/tmp9ca1kqq8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9ca1kqq8.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnkj7zdi.php:42\nStack trace:\n#0 /tmp/tmpqnkj7zdi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqnkj7zdi.php on line 42\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ap257v5.php:45\nStack trace:\n#0 /tmp/tmp8ap257v5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8ap257v5.php on line 45\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2)\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\nelse\n    echo \"Doesn't work for arrays of unequal size\";\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mu7jf7q.php:46\nStack trace:\n#0 /tmp/tmp5mu7jf7q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5mu7jf7q.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n\n$n1 = count($arr1);\n$n2 = count($arr2);\n\nif ($n1 == $n2) {\n    echo get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeicufs6x.php:51\nStack trace:\n#0 /tmp/tmpeicufs6x.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpeicufs6x.php on line 51\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count = 0;\n    $m1 = -1;\n    $m2 = -1;\n    while ($count < $n + 1) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        }\n        if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n        $count++;\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = [1, 12, 15, 26, 38];\n$arr2 = [2, 13, 17, 30, 45];\n$n = count($arr1);\necho get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpww4oa5cp.php:43\nStack trace:\n#0 /tmp/tmpww4oa5cp.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpww4oa5cp.php on line 43\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = sizeof($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo47kdzpr.php:41\nStack trace:\n#0 /tmp/tmpo47kdzpr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo47kdzpr.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n = count($arr1);\necho \"Median is \" . get_median($arr1, $arr2, $n);\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510630,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tl1rnk0.php:41\nStack trace:\n#0 /tmp/tmp5tl1rnk0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5tl1rnk0.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the median of two sorted arrays of same size.\nfunction get_median($arr1, $arr2, $n) {\n    $i = 0;\n    $j = 0;\n    $count;\n    $m1 = -1;\n    $m2 = -1;\n    for ($count = 0; $count <= $n; $count++) {\n        if ($i == $n) {\n            $m1 = $m2;\n            $m2 = $arr2[0];\n            break;\n        } else if ($j == $n) {\n            $m1 = $m2;\n            $m2 = $arr1[0];\n            break;\n        }\n        if ($arr1[$i] < $arr2[$j]) {\n            $m1 = $m2;\n            $m2 = $arr1[$i];\n            $i++;\n        } else {\n            $m1 = $m2;\n            $m2 = $arr2[$j];\n            $j++;\n        }\n    }\n    return ($m1 + $m2) / 2;\n}\n\n$arr1 = array(1, 12, 15, 26, 38);\n$arr2 = array(2, 13, 17, 30, 45);\n$n1 = count($arr1);\n$n2 = count($arr2);\nif ($n1 == $n2) {\n    echo \"Median is \" . get_median($arr1, $arr2, $n1);\n} else {\n    echo \"Doesn't work for arrays of unequal size\";\n}\nfunction candidate(...$args) {\n    return get_median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1, 12, 15, 26, 38), array(2, 13, 17, 30, 45), 5) !== 16.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 9), array(7, 13, 19, 28), 4) !== 8.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 14, 23, 36, 42), array(2, 18, 27, 39, 49, 55), 6) !== 25.0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123803,
      "stdout": "Median is 16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu2gjf3cq.php:46\nStack trace:\n#0 /tmp/tmpu2gjf3cq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpu2gjf3cq.php on line 46\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
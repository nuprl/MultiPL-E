{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to check whether all the bits are unset in the given range or not.\nfunction all_Bits_Set_In_The_Given_Range($n, $l, $r) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return all_Bits_Set_In_The_Given_Range(...$args);\n}\n\nfunction test(): void {\n    if (candidate(4, 1, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17, 2, 4) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(39, 4, 6) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l);\n    $y = ($n >> $r);\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l);\n    $y = ($n >> $r);\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 15;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 2;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n;\n    for ($i = $l; $i <= $r; $i++) {\n        $x = $x & ~(1 << $i);\n    }\n    return $x == 0;\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = $n;\n    $y = $n;\n    $x = $x >> $l;\n    $y = $y << (32 - $r);\n    $x = $x & $y;\n    if ($x == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 5;\n$l = 1;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !($x ^ ((1 << ($r - $l + 1)) - 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 2;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n$n = 10;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 2;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1 == (1 << ($r - $l + 1)));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n;\n    for ($i = $l; $i <= $r; $i++) {\n        $x = $x & ~(1 << $i);\n    }\n    if ($x == 0) {\n        return \"All bits are unset in the given range\";\n    } else {\n        return \"All bits are not unset in the given range\";\n    }\n}\necho all_Bits_Set_In_The_Given_Range(5, 1, 2);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == ((1 << ($r - $l + 1)) - 1);\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 2;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = $n >> $l;\n    $y = $n >> $r;\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 15;\n$l = 1;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !($x & ($x + 1));\n}\n\n$n = 11;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == ((1 << ($r - $l + 1)) - 1);\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\necho all_Bits_Set_In_The_Given_Range(7, 1, 2) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 1, 3) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(63, 2, 5) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(127, 1, 7) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 1, 8) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 7) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 8) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 9) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 10) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 11) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 12) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 13) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 14) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 15) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 16) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 17) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255, 0, 18) . \"\\n\";\necho all_Bits_Set_In_The_Given_Range(255",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n$n = 10;\n$l = 2;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set in the given range\";\nelse\n    echo \"All bits are not set in the given range\";",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n\n$n = 10;\n$l = 2;\n$r = 6;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 9;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n >> $r;\n    $z = $x ^ $y;\n    return $z;\n}\n$n = 5;\n$l = 1;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = $n;\n    for ($i = $l; $i <= $r; $i++) {\n        $x = $x & ~(1 << $i);\n    }\n    if ($x == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        echo \"All bits are unset in the given range\";\n    } else {\n        echo \"All bits are not unset in the given range\";\n    }\n}\n$n = 10;\n$l = 2;\n$r = 4;\nall_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == ((1 << ($r - $l + 1)) - 1);\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == (1 << ($r - $l + 1)) - 1;\n}\n",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (!($n & (1 << $i))) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n;\n    $x = $x >> $l;\n    $x = $x << $l;\n    if ($x == $n) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$n = 15;\n$l = 2;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 10;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 12;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 12;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    if ($x == ((1 << ($r - $l + 1)) - 1)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set in the given range\";\nelse\n    echo \"All bits are not set in the given range\";",
    "\t$x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n\treturn ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !($x & ($x + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (!($n & (1 << $i))) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        echo \"All bits are unset in the given range\";\n    } else {\n        echo \"All bits are not unset in the given range\";\n    }\n}\nall_Bits_Set_In_The_Given_Range(10, 2, 3);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 1;\n$r = 2;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l);\n    $y = ($n >> $r);\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    }\n    return false;\n}\n$n = 15;\n$l = 1;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 13;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !($x & ($x + 1));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result == 1) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 10;\n$l = 1;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"All bits are unset in the given range\";\n    } else {\n        return \"All bits are not unset in the given range\";\n    }\n}\n$n = 10;\n$l = 1;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 13;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set\";\nelse\n    echo \"All bits are not set\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 13;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l);\n    $y = ($n >> $r);\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n >> $r;\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 9;\n$l = 1;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result) {\n    echo \"All the bits are set in the given range\";\n} else {\n    echo \"All the bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 2;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l);\n    $y = ($n >> $r);\n    if ($x == $y) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\necho all_Bits_Set_In_The_Given_Range(7, 1, 2) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(14, 1, 3) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(8, 1, 3) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(7, 2, 3) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 1, 3) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 2, 3) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 1, 4) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 2, 4) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 3, 4) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 1, 5) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 2, 5) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 3, 5) ? \"Yes\" : \"No\";\necho \"\\n\";\necho all_Bits_Set_In_The_Given_Range(31, 4, 5) ? \"Yes\" : \"No\";\n",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $x = $n;\n    while ($x > 0) {\n        $rem = $x % 2;\n        if ($rem == 0) {\n            return false;\n        }\n        $x = $x / 2;\n    }\n    return true;\n}\n\n$n = 12;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        echo \"All bits are unset in the given range\";\n    } else {\n        echo \"All bits are not unset in the given range\";\n    }\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\nall_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "\t$x = 1;\n\t$x = $x << $r;\n\t$x = $x - 1;\n\t$x = $x << ($l - $r + 1);\n\t$x = ~$x;\n\tif (($x & $n) == $x) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n\techo \"All bits are set in the given range\";\n} else {\n\techo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"All bits are unset in the given range\";\n    } else {\n        return \"All bits are not unset in the given range\";\n    }\n}\n\n$n = 10;\n$l = 2;\n$r = 6;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"All bits are unset in the given range\";\n    } else {\n        return \"All bits are not unset in the given range\";\n    }\n}\necho all_Bits_Set_In_The_Given_Range(15, 2, 4);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        echo \"All bits are unset in the given range\";\n    } else {\n        echo \"All bits are not unset in the given range\";\n    }\n}\n$n = 10;\n$l = 1;\n$r = 2;\nall_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l);\n    $y = ($n >> $r);\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == ((1 << ($r - $l + 1)) - 1);\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 11;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 15;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 5;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ((1 << $r) - 1) ^ ((1 << ($l - 1)) - 1);\n    return (($n & $x) == $x);\n}\n\n$n = 4;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nvar_dump(all_Bits_Set_In_The_Given_Range($n, $l, $r));\n\n$n = 15;\n$l = 1;\n$r = 3;\nvar_dump(all_Bits_Set_In_The_Given_Range($n, $l, $r));\n\n$n = 7;\n$l = 1;\n$r = 1;\nvar_dump(all_Bits_Set_In_The_Given_Range($n, $l, $r));",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !($x & ($x + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == ((1 << ($r - $l + 1)) - 1);\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> ($l - 1)) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        echo \"All bits are unset in the given range\";\n    } else {\n        echo \"All bits are not unset in the given range\";\n    }\n}\n$n = 10;\n$l = 2;\n$r = 6;\nall_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 2;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\n$result = all_Bits_Set_In_The_Given_Range($n, $l, $r);\nif ($result == true) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !($x & ($x + 1));\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 7;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    }\n    return false;\n}\n\n$n = 10;\n$l = 1;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are unset\";\n} else {\n    echo \"All bits are not unset\";\n}",
    "    $x = $n >> ($l - 1);\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\necho all_Bits_Set_In_The_Given_Range(10, 2, 3);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 9;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n >> $r;\n    $z = $x ^ $y;\n    return $z;\n}\n\n$n = 10;\n$l = 1;\n$r = 2;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n\n$n = 10;\n$l = 2;\n$r = 6;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = $n >> $l;\n    $y = $n >> $r;\n    $z = $x ^ $y;\n    if ($z == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return $x == ((1 << ($r - $l + 1)) - 1);\n}\n\n$n = 11;\n$l = 1;\n$r = 3;\n\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1 == (1 << ($r - $l + 1)));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 10;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n$n = 10;\n$l = 1;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 6;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (!($n & (1 << $i))) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n$n = 10;\n$l = 2;\n$r = 3;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r - 1);\n    $z = $x & $y;\n    if ($z == 0) {\n        return true;\n    }\n    return false;\n}\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 5;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n$n = 10;\n$l = 2;\n$r = 6;\necho all_Bits_Set_In_The_Given_Range($n, $l, $r);",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$n = 15;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"All bits are set in the given range\";\n} else {\n    echo \"All bits are not set in the given range\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    for ($i = $l; $i <= $r; $i++) {\n        if (($n & (1 << $i)) == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n",
    "    $x = $n >> $l;\n    $y = $n << (32 - $r);\n    $z = $x & $y;\n    if ($z == 0) {\n        return \"All bits are unset in the given range\";\n    } else {\n        return \"All bits are not unset in the given range\";\n    }\n}\n\necho all_Bits_Set_In_The_Given_Range(15, 1, 3);",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"Yes\";\nelse\n    echo \"No\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 7;\n$l = 1;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"All bits are set in the given range\";\nelse\n    echo \"All bits are not set in the given range\";",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return !$x;\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\n\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r)) {\n    echo \"Yes\";\n} else {\n    echo \"No\";\n}",
    "    $x = ($n >> $l) & ((1 << ($r - $l + 1)) - 1);\n    return ($x + 1) == (1 << ($r - $l + 1));\n}\n\n$n = 10;\n$l = 2;\n$r = 3;\nif (all_Bits_Set_In_The_Given_Range($n, $l, $r))\n    echo \"YES\";\nelse\n    echo \"NO\";"
  ]
}
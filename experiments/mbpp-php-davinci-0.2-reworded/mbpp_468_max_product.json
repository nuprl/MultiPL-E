{
  "name": "mbpp_468_max_product",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nfunction max_product($arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return max_product(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3, 100, 4, 5, 150, 6)) !== 3000) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 42, 55, 68, 80)) !== 50265600) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 22, 9, 33, 21, 50, 41, 60)) !== 2460) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max;\n        $max = max($max * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $min = min($temp * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_product($arr);",
    "    $max = 0;\n    $min = 0;\n    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max = max($max * $arr[$i], $arr[$i]);\n            $min = min($min * $arr[$i], $arr[$i]);\n        } else {\n            $temp = $max;\n            $max = max($min * $arr[$i], $arr[$i]);\n            $min = min($temp * $arr[$i], $arr[$i]);\n        }\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [2, 3, -2, 4];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max;\n        $max = max($max * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $min = min($temp * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [6, -3, -10, 0, 2];\necho max_product($arr);",
    "    $max_product = 1;\n    $max_product_ending_here = 1;\n    $min_product_ending_here = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here * $arr[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        } else {\n            $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr[$i], 1);\n            $min_product_ending_here = $temp * $arr[$i];\n        }\n        if ($max_product < $max_product_ending_here) {\n            $max_product = $max_product_ending_here;\n        }\n    }\n    return $max_product;\n}\n\n$arr = [2, 3, -2, 4];\necho max_product($arr);",
    "    $max_product = 1;\n    $max_product_so_far = 1;\n    $min_product_so_far = 1;\n    $max_product_ending_here = 1;\n    $min_product_ending_here = 1;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here * $arr[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        } else {\n            $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr[$i], 1);\n            $min_product_ending_here = $temp * $arr[$i];\n        }\n        if ($max_product_so_far < $max_product_ending_here) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_product($arr);",
    "    $max_product = 1;\n    $curr_product = 1;\n    $prev = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] > $prev) {\n            $curr_product *= $arr[$i];\n            $max_product = max($max_product, $curr_product);\n        } else {\n            $curr_product = 1;\n        }\n        $prev = $arr[$i];\n    }\n    return $max_product;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);",
    "    $max_product = 1;\n    $max_product_so_far = 1;\n    $min_product_so_far = 1;\n    $size = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_product_so_far = $max_product_so_far * $arr[$i];\n            $min_product_so_far = min($min_product_so_far * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_product_so_far = 1;\n            $min_product_so_far = 1;\n        } else {\n            $temp = $max_product_so_far;\n            $max_product_so_far = max($min_product_so_far * $arr[$i], 1);\n            $min_product_so_far = $temp * $arr[$i];\n        }\n        if ($max_product < $max_product_so_far) {\n            $max_product = $max_product_so_far;\n        }\n    }\n    return $max_product;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_product($arr);",
    "    $max = 0;\n    $product = 1;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n            $product = $product * $arr[$i];\n        }\n    }\n    return $product;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);",
    "    $max_product = 1;\n    $max_product_so_far = 1;\n    $min_product_so_far = 1;\n    $size = sizeof($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] > 0) {\n            $max_product_so_far = $max_product_so_far * $arr[$i];\n            $min_product_so_far = min($min_product_so_far * $arr[$i], 1);\n        } else if ($arr[$i] == 0) {\n            $max_product_so_far = 1;\n            $min_product_so_far = 1;\n        } else {\n            $temp = $max_product_so_far;\n            $max_product_so_far = max($min_product_so_far * $arr[$i], 1);\n            $min_product_so_far = $temp * $arr[$i];\n        }\n        if ($max_product < $max_product_so_far) {\n            $max_product = $max_product_so_far;\n        }\n    }\n    return $max_product;\n}\n\n$arr = array(1, -2, -3, 0, 7, -8, -2);\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, 6];\necho max_product($arr);",
    "    $max_product = 1;\n    $curr_product = 1;\n    $curr_max = $arr[0];\n    $curr_min = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $curr_max = max($curr_max * $arr[$i], $arr[$i]);\n            $curr_min = min($curr_min * $arr[$i], $arr[$i]);\n        } else {\n            $temp = $curr_max;\n            $curr_max = max($curr_min * $arr[$i], $arr[$i]);\n            $curr_min = min($temp * $arr[$i], $arr[$i]);\n        }\n        $max_product = max($max_product, $curr_max);\n    }\n    return $max_product;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);",
    "    $max = $arr[0];\n    $max_product = 1;\n    $min = $arr[0];\n    $min_product = 1;\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] > 0) {\n            $max_product = max($max_product * $arr[$i], $arr[$i]);\n            $min_product = min($min_product * $arr[$i], $arr[$i]);\n        } else {\n            $temp = $max_product;\n            $max_product = max($min_product * $arr[$i], $arr[$i]);\n            $min_product = min($temp * $arr[$i], $arr[$i]);\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_product($arr);",
    "    $max = 0;\n    $product = 1;\n    $start = 0;\n    $end = 0;\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] < $arr[$i + 1]) {\n            $product *= $arr[$i];\n            $end = $i;\n        } else {\n            $product *= $arr[$i];\n            if ($product > $max) {\n                $max = $product;\n            }\n            $product = 1;\n            $start = $i + 1;\n            $end = $i + 1;\n        }\n    }\n    return $max;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $curr = $arr[$i];\n        $temp_max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $max * $curr, $min * $curr);\n        $max = $temp_max;\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $curr = $arr[$i];\n        $temp_max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $max * $curr, $min * $curr);\n        $max = $temp_max;\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < 0) {\n            $temp = $max;\n            $max = $min;\n            $min = $temp;\n        }\n        $max = max($arr[$i], $max * $arr[$i]);\n        $min = min($arr[$i], $min * $arr[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6, 7];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6, 7, -8];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6, 7, -8, 9];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 11, -12];\necho max_product($arr);\necho \"\\n\";\n$arr = [1, -2, 3, -4, 5,",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $max_product = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $temp = $max;\n        $max = max($max * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $min = min($temp * $arr[$i], $min * $arr[$i], $arr[$i]);\n        $max_product = max($max_product, $max);\n    }\n    return $max_product;\n}\n\n$arr = [1, -2, -3, 0, 7, -8, -2];\necho max_product($arr);",
    "    $max = $arr[0];\n    $min = $arr[0];\n    $result = $arr[0];\n    for ($i = 1; $i < count($arr); $i++) {\n        $curr = $arr[$i];\n        $temp_max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $max * $curr, $min * $curr);\n        $max = $temp_max;\n        $result = max($result, $max);\n    }\n    return $result;\n}\n\n$arr = [1, 2, 3, 4, 5];\necho max_product($arr);"
  ]
}
{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "php",
  "prompt": "<?php\n// Write a function to remove consecutive duplicates of a given array.\nfunction consecutive_duplicates($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return consecutive_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4)) !== array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10)) !== array(10, 15, 19, 18, 17, 26, 17, 18, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"a\", \"a\", \"b\", \"c\", \"d\", \"d\")) !== array(\"a\", \"b\", \"c\", \"d\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\")) !== array(\"a\", \"b\", \"c\", \"d\", \"a\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));\n",
    "    $result = [];\n    foreach ($nums as $num) {\n        if (end($result) != $num) {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 7, 7, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9];\n$result = consecutive_duplicates($nums);\nprint_r($result);",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));\n",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 7, 7];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $prev = null;\n    foreach ($nums as $num) {\n        if ($num != $prev) {\n            $result[] = $num;\n        }\n        $prev = $num;\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "  $result = [];\n  $prev = null;\n  foreach ($nums as $num) {\n    if ($num != $prev) {\n      $result[] = $num;\n    }\n    $prev = $num;\n  }\n  return $result;\n}\n",
    "    $result = [];\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($i == 0 || $nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $prev = null;\n    foreach ($nums as $num) {\n        if ($num !== $prev) {\n            $result[] = $num;\n        }\n        $prev = $num;\n    }\n    return $result;\n}\n\n$nums = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\n$nums = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5];\nprint_r(consecutive_duplicates($nums));",
    "    $result = [];\n    $result[] = $nums[0];\n    for ($i = 1; $i < count($nums); $i++) {\n        if ($nums[$i] != $nums[$i - 1]) {\n            $result[] = $nums[$i];\n        }\n    }\n    return $result;\n}\n\nprint_r(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]));\nprint_r(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6]));\nprint_r(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7]));\nprint_r(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8]));\nprint_r(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9]));\nprint_r(consecutive_duplicates([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7,"
  ]
}
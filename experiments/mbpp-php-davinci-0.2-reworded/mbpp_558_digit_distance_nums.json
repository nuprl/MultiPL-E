{
  "name": "mbpp_558_digit_distance_nums",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to find the sum of the per-digit difference between two integers.\nfunction digit_distance_nums($n1, $n2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return digit_distance_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 2) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(23, 56) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(123, 256) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\necho digit_distance_nums(123,456);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "  $n1 = abs($n1);\n  $n2 = abs($n2);\n  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(123, 526);\necho \"\\n\";\necho digit_distance_nums(123, 123);\necho \"\\n\";\necho digit_distance_nums(123, -123);\necho \"\\n\";\necho digit_distance_nums(123, 321);\necho \"\\n\";\necho digit_distance_nums(123, -321);\necho \"\\n\";\necho digit_distance_nums(123, 0);\necho \"\\n\";\necho digit_distance_nums(0, 0);\necho \"\\n\";\necho digit_distance_nums(0, 123);\necho \"\\n\";\necho digit_distance_nums(0, -123);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, 321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0, -321);\necho \"\\n\";\necho digit_distance_nums(0,",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\necho digit_distance_nums(123, 456);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(12, 12);\necho \"\\n\";\necho digit_distance_nums(10, 20);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 456);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123, 594);\necho \"\\n\";\necho digit_distance_nums(123",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "  $n1 = (string)$n1;\n  $n2 = (string)$n2;\n  $n1_len = strlen($n1);\n  $n2_len = strlen($n2);\n  $diff = abs($n1_len - $n2_len);\n  if ($n1_len > $n2_len) {\n    $n2 = str_pad($n2, $n1_len, '0', STR_PAD_LEFT);\n  } else if ($n1_len < $n2_len) {\n    $n1 = str_pad($n1, $n2_len, '0', STR_PAD_LEFT);\n  }\n  $sum = 0;\n  for ($i = 0; $i < strlen($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho digit_distance_nums(1234, 2345);\necho \"\\n\";\necho",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(121, 599);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "    $n1 = (string)$n1;\n    $n2 = (string)$n2;\n    $sum = 0;\n    $len = max(strlen($n1), strlen($n2));\n    for ($i = 0; $i < $len; $i++) {\n        $sum += abs(($n1[$i] ?? 0) - ($n2[$i] ?? 0));\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);\necho digit_distance_nums(12, 56);\necho digit_distance_nums(123, 56789);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);\necho digit_distance_nums(123456789, 987654321);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for ($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(1234, 4321);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 321);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\n\necho digit_distance_nums(123, 456);",
    "    $n1 = (string)$n1;\n    $n2 = (string)$n2;\n    $n1 = str_split($n1);\n    $n2 = str_split($n2);\n    $sum = 0;\n    for ($i = 0; $i < count($n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}\necho digit_distance_nums(123, 456);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 452);\necho digit_distance_nums(12, 452);\necho digit_distance_nums(123, 45);",
    "  $n1 = str_split($n1);\n  $n2 = str_split($n2);\n  $sum = 0;\n  for($i = 0; $i < count($n1); $i++) {\n    $sum += abs($n1[$i] - $n2[$i]);\n  }\n  return $sum;\n}\n\necho digit_distance_nums(123, 456);"
  ]
}
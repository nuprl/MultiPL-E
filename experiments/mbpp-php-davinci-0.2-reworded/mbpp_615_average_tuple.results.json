{
  "name": "mbpp_615_average_tuple",
  "language": "php",
  "prompt": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_615_average_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $arr) {\n        $avg = array_sum($arr) / count($arr);\n        array_push($avg_arr, $avg);\n    }\n    return $avg_arr;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2432zob.php:20\nStack trace:\n#0 /tmp/tmpk2432zob.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk2432zob.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $new_array = [];\n    foreach($nums as $num) {\n        $new_array[] = array_sum($num) / count($num);\n    }\n    return $new_array;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1odf_fz.php:16\nStack trace:\n#0 /tmp/tmpq1odf_fz.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpq1odf_fz.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $average = [];\n    foreach ($nums as $num) {\n        $average[] = array_sum($num) / count($num);\n    }\n    return $average;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0_dz379.php:16\nStack trace:\n#0 /tmp/tmpv0_dz379.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpv0_dz379.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $arr) {\n        $avg_arr[] = array_sum($arr) / count($arr);\n    }\n    return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjlnahdbe.php:16\nStack trace:\n#0 /tmp/tmpjlnahdbe.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpjlnahdbe.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $arr) {\n        $result[] = array_sum($arr) / count($arr);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps_t7thds.php:16\nStack trace:\n#0 /tmp/tmps_t7thds.php(21): test()\n#1 {main}\n  thrown in /tmp/tmps_t7thds.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07o73zdr.php:16\nStack trace:\n#0 /tmp/tmp07o73zdr.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp07o73zdr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55rmf4_2.php:16\nStack trace:\n#0 /tmp/tmp55rmf4_2.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp55rmf4_2.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg_arr = [];\n  foreach($nums as $arr) {\n    $avg_arr[] = array_sum($arr) / count($arr);\n  }\n  return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2n8w558u.php:16\nStack trace:\n#0 /tmp/tmp2n8w558u.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp2n8w558u.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8l49uoz.php:19\nStack trace:\n#0 /tmp/tmpv8l49uoz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpv8l49uoz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepgfxaa4.php:19\nStack trace:\n#0 /tmp/tmpepgfxaa4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpepgfxaa4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2op0tji.php:19\nStack trace:\n#0 /tmp/tmpf2op0tji.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpf2op0tji.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy_3_cov.php:23\nStack trace:\n#0 /tmp/tmpxy_3_cov.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxy_3_cov.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvil8j3qm.php:19\nStack trace:\n#0 /tmp/tmpvil8j3qm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvil8j3qm.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $n) {\n            $sum += $n;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmply8dhl85.php:20\nStack trace:\n#0 /tmp/tmply8dhl85.php(25): test()\n#1 {main}\n  thrown in /tmp/tmply8dhl85.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07o73zdr.php:16\nStack trace:\n#0 /tmp/tmp07o73zdr.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp07o73zdr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6bcmshp.php:19\nStack trace:\n#0 /tmp/tmpb6bcmshp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpb6bcmshp.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n\t$avgs = [];\n\tforeach ($nums as $num) {\n\t\t$avgs[] = array_sum($num) / count($num);\n\t}\n\treturn $avgs;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5noukl_m.php:16\nStack trace:\n#0 /tmp/tmp5noukl_m.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp5noukl_m.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_array = array();\n    foreach ($nums as $sub_array) {\n        $avg = array_sum($sub_array) / count($sub_array);\n        array_push($avg_array, $avg);\n    }\n    return $avg_array;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd_lhx4b_.php:17\nStack trace:\n#0 /tmp/tmpd_lhx4b_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpd_lhx4b_.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yfe7x4_.php:16\nStack trace:\n#0 /tmp/tmp1yfe7x4_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1yfe7x4_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfd4_4kam.php:16\nStack trace:\n#0 /tmp/tmpfd4_4kam.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpfd4_4kam.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avgs = [];\n  foreach ($nums as $num) {\n    $avgs[] = array_sum($num) / count($num);\n  }\n  return $avgs;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nw5el_z.php:16\nStack trace:\n#0 /tmp/tmp9nw5el_z.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp9nw5el_z.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $new_arr = [];\n    foreach ($nums as $arr) {\n        $sum = 0;\n        foreach ($arr as $num) {\n            $sum += $num;\n        }\n        $new_arr[] = $sum / count($arr);\n    }\n    return $new_arr;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpff2_8atq.php:23\nStack trace:\n#0 /tmp/tmpff2_8atq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpff2_8atq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n\t$avg_array = [];\n\tforeach ($nums as $num) {\n\t\t$avg = array_sum($num) / count($num);\n\t\t$avg_array[] = $avg;\n\t}\n\treturn $avg_array;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5na2o8_.php:20\nStack trace:\n#0 /tmp/tmp_5na2o8_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_5na2o8_.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avgs = [];\n    foreach ($nums as $num) {\n        $avgs[] = array_sum($num) / count($num);\n    }\n    return $avgs;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzewpf58f.php:16\nStack trace:\n#0 /tmp/tmpzewpf58f.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpzewpf58f.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6bcmshp.php:19\nStack trace:\n#0 /tmp/tmpb6bcmshp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpb6bcmshp.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $arr) {\n        $avg_arr[] = array_sum($arr) / count($arr);\n    }\n    return $avg_arr;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmc13r31n.php:19\nStack trace:\n#0 /tmp/tmpmc13r31n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmc13r31n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepgfxaa4.php:19\nStack trace:\n#0 /tmp/tmpepgfxaa4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpepgfxaa4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nn739cn.php:16\nStack trace:\n#0 /tmp/tmp0nn739cn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0nn739cn.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $sum = 0;\n    foreach ($num as $value) {\n      $sum += $value;\n    }\n    $result[] = $sum / count($num);\n  }\n  return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcj5da3h.php:23\nStack trace:\n#0 /tmp/tmplcj5da3h.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplcj5da3h.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvil8j3qm.php:19\nStack trace:\n#0 /tmp/tmpvil8j3qm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvil8j3qm.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgilt7mq.php:23\nStack trace:\n#0 /tmp/tmphgilt7mq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphgilt7mq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $n) {\n            $sum += $n;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmply8dhl85.php:20\nStack trace:\n#0 /tmp/tmply8dhl85.php(25): test()\n#1 {main}\n  thrown in /tmp/tmply8dhl85.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $arr) {\n    $avg[] = array_sum($arr) / count($arr);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvmhsu1zb.php:16\nStack trace:\n#0 /tmp/tmpvmhsu1zb.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpvmhsu1zb.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n\t$avg = [];\n\tforeach ($nums as $num) {\n\t\t$avg[] = array_sum($num) / count($num);\n\t}\n\treturn $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8svvkvee.php:16\nStack trace:\n#0 /tmp/tmp8svvkvee.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8svvkvee.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nn739cn.php:16\nStack trace:\n#0 /tmp/tmp0nn739cn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0nn739cn.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $arr) {\n        $sum = 0;\n        foreach ($arr as $num) {\n            $sum += $num;\n        }\n        $result[] = $sum / count($arr);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz027jep5.php:23\nStack trace:\n#0 /tmp/tmpz027jep5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz027jep5.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $num) {\n        $avg_arr[] = array_sum($num) / count($num);\n    }\n    return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gndeuat.php:16\nStack trace:\n#0 /tmp/tmp_gndeuat.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_gndeuat.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6bcmshp.php:19\nStack trace:\n#0 /tmp/tmpb6bcmshp.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpb6bcmshp.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg_arr = [];\n  foreach ($nums as $num) {\n    $avg_arr[] = array_sum($num) / count($num);\n  }\n  return $avg_arr;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhte748o.php:19\nStack trace:\n#0 /tmp/tmprhte748o.php(24): test()\n#1 {main}\n  thrown in /tmp/tmprhte748o.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $arr) {\n        $avg_arr[] = array_sum($arr) / count($arr);\n    }\n    return $avg_arr;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmc13r31n.php:19\nStack trace:\n#0 /tmp/tmpmc13r31n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmc13r31n.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $num) {\n        $avg_arr[] = array_sum($num) / count($num);\n    }\n    return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gndeuat.php:16\nStack trace:\n#0 /tmp/tmp_gndeuat.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_gndeuat.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $arr) {\n        $avg_arr[] = array_sum($arr) / count($arr);\n    }\n    return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjlnahdbe.php:16\nStack trace:\n#0 /tmp/tmpjlnahdbe.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpjlnahdbe.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $average = [];\n  foreach($nums as $num) {\n    $average[] = array_sum($num) / count($num);\n  }\n  return $average;\n}\n\n$nums = [[1,2,3],[4,5,6],[7,8,9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph537yejs.php:19\nStack trace:\n#0 /tmp/tmph537yejs.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph537yejs.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_array = [];\n    foreach ($nums as $num) {\n        $avg_array[] = array_sum($num) / count($num);\n    }\n    return $avg_array;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6116hvo.php:16\nStack trace:\n#0 /tmp/tmpj6116hvo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj6116hvo.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yfe7x4_.php:16\nStack trace:\n#0 /tmp/tmp1yfe7x4_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1yfe7x4_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl65qbn1r.php:20\nStack trace:\n#0 /tmp/tmpl65qbn1r.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl65qbn1r.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_f0xuhrd.php:19\nStack trace:\n#0 /tmp/tmp_f0xuhrd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp_f0xuhrd.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepgfxaa4.php:19\nStack trace:\n#0 /tmp/tmpepgfxaa4.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpepgfxaa4.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n\t$avg = [];\n\tforeach ($nums as $num) {\n\t\t$avg[] = array_sum($num) / count($num);\n\t}\n\treturn $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8svvkvee.php:16\nStack trace:\n#0 /tmp/tmp8svvkvee.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8svvkvee.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n\t$avg = [];\n\tforeach ($nums as $num) {\n\t\t$avg[] = array_sum($num) / count($num);\n\t}\n\treturn $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8svvkvee.php:16\nStack trace:\n#0 /tmp/tmp8svvkvee.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8svvkvee.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg_arr = [];\n    foreach ($nums as $arr) {\n        $avg = array_sum($arr) / count($arr);\n        array_push($avg_arr, $avg);\n    }\n    return $avg_arr;\n}\n\nprint_r(average_tuple([[1, 2, 3, 4], [5, 6, 7, 8]]));\nprint_r(average_tuple([[2, 3, 9, 10, 7], [12, 6, 89, 45, 3], [9, 12, 56, 10, 34], [67, 23, 1, 88, 34]]));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\nArray\n(\n    [0] => 6.2\n    [1] => 31\n    [2] => 24.2\n    [3] => 42.6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp10930fbs.php:20\nStack trace:\n#0 /tmp/tmp10930fbs.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp10930fbs.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n\nprint_r(average_tuple($nums));\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jhq3qhv.php:19\nStack trace:\n#0 /tmp/tmp5jhq3qhv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp5jhq3qhv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yfe7x4_.php:16\nStack trace:\n#0 /tmp/tmp1yfe7x4_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1yfe7x4_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvil8j3qm.php:19\nStack trace:\n#0 /tmp/tmpvil8j3qm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvil8j3qm.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1yfe7x4_.php:16\nStack trace:\n#0 /tmp/tmp1yfe7x4_.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp1yfe7x4_.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplp3a7oq5.php:19\nStack trace:\n#0 /tmp/tmplp3a7oq5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmplp3a7oq5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 3\n    [1] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8l49uoz.php:19\nStack trace:\n#0 /tmp/tmpv8l49uoz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpv8l49uoz.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55rmf4_2.php:16\nStack trace:\n#0 /tmp/tmp55rmf4_2.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp55rmf4_2.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nn739cn.php:16\nStack trace:\n#0 /tmp/tmp0nn739cn.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp0nn739cn.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvil8j3qm.php:19\nStack trace:\n#0 /tmp/tmpvil8j3qm.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvil8j3qm.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppt12vsi0.php:18\nStack trace:\n#0 /tmp/tmppt12vsi0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmppt12vsi0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = array();\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcvq7fo8w.php:16\nStack trace:\n#0 /tmp/tmpcvq7fo8w.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpcvq7fo8w.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgilt7mq.php:23\nStack trace:\n#0 /tmp/tmphgilt7mq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmphgilt7mq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55rmf4_2.php:16\nStack trace:\n#0 /tmp/tmp55rmf4_2.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp55rmf4_2.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg_arr = [];\n  foreach($nums as $num) {\n    $avg_arr[] = array_sum($num) / count($num);\n  }\n  return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabwx440j.php:16\nStack trace:\n#0 /tmp/tmpabwx440j.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpabwx440j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\n$nums = [[1, 2, 3, 4], [5, 6, 7, 8]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2.5\n    [1] => 6.5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcitj4ayw.php:19\nStack trace:\n#0 /tmp/tmpcitj4ayw.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpcitj4ayw.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyn1gavi4.php:18\nStack trace:\n#0 /tmp/tmpyn1gavi4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyn1gavi4.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\n$nums = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp79ty9syd.php:19\nStack trace:\n#0 /tmp/tmp79ty9syd.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp79ty9syd.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg_arr = [];\n  foreach($nums as $num) {\n    $avg_arr[] = array_sum($num) / count($num);\n  }\n  return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabwx440j.php:16\nStack trace:\n#0 /tmp/tmpabwx440j.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpabwx440j.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg = [];\n  foreach ($nums as $num) {\n    $avg[] = array_sum($num) / count($num);\n  }\n  return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmhrmx89.php:16\nStack trace:\n#0 /tmp/tmpmmhrmx89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmmhrmx89.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $average = [];\n    foreach ($nums as $num) {\n        $average[] = array_sum($num) / count($num);\n    }\n    return $average;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0_dz379.php:16\nStack trace:\n#0 /tmp/tmpv0_dz379.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpv0_dz379.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55rmf4_2.php:16\nStack trace:\n#0 /tmp/tmp55rmf4_2.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp55rmf4_2.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $avg_arr = [];\n  foreach ($nums as $arr) {\n    $avg = array_sum($arr) / count($arr);\n    array_push($avg_arr, $avg);\n  }\n  return $avg_arr;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy0f3o7b.php:17\nStack trace:\n#0 /tmp/tmphy0f3o7b.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphy0f3o7b.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07o73zdr.php:16\nStack trace:\n#0 /tmp/tmp07o73zdr.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp07o73zdr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $value) {\n            $sum += $value;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllm22e9i.php:20\nStack trace:\n#0 /tmp/tmpllm22e9i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpllm22e9i.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n  $result = [];\n  foreach ($nums as $num) {\n    $result[] = array_sum($num) / count($num);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07o73zdr.php:16\nStack trace:\n#0 /tmp/tmp07o73zdr.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp07o73zdr.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $result[] = array_sum($num) / count($num);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wnup64t.php:16\nStack trace:\n#0 /tmp/tmp6wnup64t.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6wnup64t.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $result = [];\n    foreach ($nums as $num) {\n        $sum = 0;\n        foreach ($num as $n) {\n            $sum += $n;\n        }\n        $result[] = $sum / count($num);\n    }\n    return $result;\n}\n\n$nums = [[1,2,3], [4,5,6], [7,8,9]];\nprint_r(average_tuple($nums));\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123925,
      "stdout": "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 8\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80_ezrmo.php:23\nStack trace:\n#0 /tmp/tmp80_ezrmo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp80_ezrmo.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function which takes an array of arrays and returns the average value for each array as an array.\nfunction average_tuple($nums) {\n    $avg = [];\n    foreach ($nums as $num) {\n        $avg[] = array_sum($num) / count($num);\n    }\n    return $avg;\n}\n\nfunction candidate(...$args) {\n    return average_tuple(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(10, 10, 10, 12), array(30, 45, 56, 45), array(81, 80, 39, 32), array(1, 2, 3, 4))) !== array(30.5, 34.25, 27.0, 23.25)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 1, -5), array(30, -15, 56), array(81, -60, -39), array(-10, 2, 3))) !== array(25.5, -18.0, 3.75)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(100, 100, 100, 120), array(300, 450, 560, 450), array(810, 800, 390, 320), array(10, 20, 30, 40))) !== array(305.0, 342.5, 270.0, 232.5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510636,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8yl8ipm8.php:16\nStack trace:\n#0 /tmp/tmp8yl8ipm8.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp8yl8ipm8.php on line 16\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
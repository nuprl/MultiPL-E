{
  "name": "mbpp_307_colon_tuplex",
  "language": "php",
  "prompt": "<?php\n// Write a function to get a colon of an array.\nfunction colon_tuplex($tuplex, $m, $n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_307_colon_tuplex.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return colon_tuplex(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"HELLO\", 5, array(), true), 2, 50) !== array(\"HELLO\", 5, array(50), true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"HELLO\", 5, array(), true), 2, 100) !== array(\"HELLO\", 5, array(100), true)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"HELLO\", 5, array(), true), 2, 500) !== array(\"HELLO\", 5, array(500), true)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$colon = colon_tuplex($tuplex, $m, $n);\n\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of the array:<br>\";\necho implode(\" \", $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"The colon of the array is: \";\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"The colon of the array is: \";\nforeach ($colon as $value) {\n    echo $value . \" \";\n}",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = colon_tuplex($tuplex, 2, 6);\nprint_r($result);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\necho \"Original array :\\n\";\necho implode(', ', $tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(', ', colon_tuplex($tuplex, $m, $n));",
    "    $result = array();\n    foreach ($tuplex as $key => $value) {\n        if ($key >= $m && $key <= $n) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i < $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 6;\n\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Colon of the array is: \";\necho implode(', ', $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of the array: \";\necho \"<br>\";\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($result);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 2, 5);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 3, 7);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 3, 7);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 2, 6);\necho \"<pre>\";\nprint_r($colon);\necho \"</pre>\";",
    "    $result = array();\n    for($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\");\n$colon = colon_tuplex($tuplex, 2, 6);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 8;\n\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"<br>\";\n\necho \"Colon of an array:<br>\";\necho implode(\" \", colon_tuplex($tuplex, $m, $n));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\necho '<pre>';\nprint_r(colon_tuplex($tuplex, $m, $n));\necho '</pre>';",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 2, 5);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of the array: \";\nprint_r($colon);",
    "\t$result = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$result[] = $tuplex[$i];\n\t}\n\treturn $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of an array:<br>\";\necho implode(\" \", $result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\necho \"Original array: \";\necho \"<br>\";\n\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"<br>\";\n\necho \"Colon of an array: \";\necho \"<br>\";\n\necho implode(\" \", colon_tuplex($tuplex, $m, $n));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $tuplex_colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $tuplex_colon[] = $tuplex[$i];\n    }\n    return $tuplex_colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i < $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 2, 7);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);\n",
    "    $result = array();\n    $tuplex_size = count($tuplex);\n    for ($i = 0; $i < $tuplex_size; $i++) {\n        if ($tuplex[$i][$m] == $tuplex[$i][$n]) {\n            $result[] = $tuplex[$i];\n        }\n    }\n    return $result;\n}\n$tuplex = array(\n    array( \"10\", \"20\" ),\n    array( \"10\", \"30\" ),\n    array( \"10\", \"40\" ),\n    array( \"10\", \"50\" )\n);\necho \"Original array :\\n\";\necho \"10 20\\n\";\necho \"10 30\\n\";\necho \"10 40\\n\";\necho \"10 50\\n\";\necho \"Colon of the said array :\\n\";\nprint_r(colon_tuplex($tuplex, 0, 1));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n$tuplex = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\");\n$colon = colon_tuplex($tuplex, 2, 5);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    $result = array_slice($tuplex, $m, $n);\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of an array:<br>\";\necho implode(\" \", $result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "\t$result = array();\n\tfor ($i = $m; $i < $n; $i++) {\n\t\t$result[] = $tuplex[$i];\n\t}\n\treturn $result;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "\t$result = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$result[] = $tuplex[$i];\n\t}\n\treturn $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "\t$result = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$result[] = $tuplex[$i];\n\t}\n\treturn $result;\n}\n",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of an array:<br>\";\necho implode(\" \", $result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original Array :\\n\";\necho implode(', ',$tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(', ',$colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(\" \", $colon);\necho \"\\n\";",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>Colon of the array:<br>\";\necho implode(\" \", $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of the array:<br>\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Colon of an array: \";\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho implode(',', $tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho implode(',', $result);",
    "\t$result = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$result[] = $tuplex[$i];\n\t}\n\treturn $result;\n}\n",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"The colon of the array is: \";\necho \"<br>\";\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of an array:<br>\";\necho implode(\" \", $result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = colon_tuplex($tuplex, 0, 4);\nprint_r($result);\necho \"<br>\";\n$result = colon_tuplex($tuplex, 5, 9);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6);\n$m = 2;\n$n = 4;\n$colon = colon_tuplex($tuplex, $m, $n);\necho implode(',', $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "\t$result = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$result[] = $tuplex[$i];\n\t}\n\treturn $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $tuplex_colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $tuplex_colon[] = $tuplex[$i];\n    }\n    return $tuplex_colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\necho \"Original Array: \";\necho implode(', ', $tuplex);\necho \"\\n\";\necho \"Colon of an array: \";\necho implode(', ', colon_tuplex($tuplex, $m, $n));\necho \"\\n\";",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    $result = array_slice($tuplex, $m, $n);\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$colon = colon_tuplex($tuplex, 3, 7);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $new_tuplex = array();\n    $new_tuplex = array_slice($tuplex, $m, $n);\n    return $new_tuplex;\n}\n$tuplex = array(\"red\", \"green\", \"blue\", \"yellow\", \"brown\");\n$m = 1;\n$n = 3;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i < $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"The colon of the array is: \";\necho implode(\", \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Colon of an array is: \";\nforeach ($result as $value) {\n    echo \"$value \";\n}",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n\necho \"Original array: \";\necho implode(', ', $tuplex);\necho \"\\n\";\n\necho \"Colon of an array: \";\necho implode(', ', colon_tuplex($tuplex, $m, $n));\necho \"\\n\";",
    "    $colon = array();\n    foreach ($tuplex as $key => $value) {\n        if ($key >= $m && $key <= $n) {\n            $colon[] = $value;\n        }\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of the array: \";\necho \"<br>\";\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\necho \"Original array: \";\necho implode(', ', $tuplex);\necho \"\\n\";\n\necho \"Colon of an array: \";\necho implode(', ', colon_tuplex($tuplex, $m, $n));\necho \"\\n\";",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Colon of array is: \";\nprint_r($colon);",
    "    $size = count($tuplex);\n    $colon = array();\n    for ($i = $m; $i < $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($colon);",
    "\t$colon = array();\n\tfor ($i = $m; $i <= $n; $i++) {\n\t\t$colon[] = $tuplex[$i];\n\t}\n\treturn $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $tuplex_colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $tuplex_colon[] = $tuplex[$i];\n    }\n    return $tuplex_colon;\n}\n\n$tuplex = array(\n    \"a\" => \"red\",\n    \"b\" => \"green\",\n    \"c\" => \"blue\",\n    \"d\" => \"yellow\",\n    \"e\" => \"brown\"\n);\n$m = 1;\n$n = 3;\necho \"Original array :\\n\";\nprint_r($tuplex);\necho \"Colon of an array :\\n\";\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"The colon of the array is: \";\nforeach ($colon as $value) {\n    echo $value . \" \";\n}",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\nprint_r(colon_tuplex($tuplex, $m, $n));",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\necho \"Original array: \";\necho implode(', ', $tuplex);\necho \"\\n\";\n\necho \"Colon of an array: \";\necho implode(', ', colon_tuplex($tuplex, $m, $n));",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n$result = colon_tuplex($tuplex, $m, $n);\necho implode(\",\", $result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho implode(', ', $tuplex);\necho \"\\n\";\necho \"Colon of an array: \";\necho implode(', ', $result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\n\";\necho \"Colon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original Array :\\n\";\necho implode(', ', $tuplex);\necho \"\\nColon of the array :\\n\";\necho implode(', ', $colon);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array :\\n\";\necho implode(\" \", $tuplex);\necho \"\\nColon of an array :\\n\";\necho implode(\" \", $colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array: \";\necho \"<br>\";\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n\n$result = colon_tuplex($tuplex, $m, $n);\n\necho \"Original array: \";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of array: \";\necho \"<br>\";\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array:\";\necho \"<br>\";\nprint_r($tuplex);\necho \"<br>\";\necho \"Colon of an array:\";\necho \"<br>\";\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i < $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\n$result = colon_tuplex($tuplex, $m, $n);\nprint_r($result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 8;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 3;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 5;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        array_push($colon, $tuplex[$i]);\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 7;\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);",
    "    $result = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $result[] = $tuplex[$i];\n    }\n    return $result;\n}\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$m = 2;\n$n = 5;\n$result = colon_tuplex($tuplex, $m, $n);\necho \"Original array:<br>\";\necho implode(\" \", $tuplex);\necho \"<br>\";\necho \"Colon of an array:<br>\";\necho implode(\" \", $result);",
    "    $colon = array();\n    for ($i = $m; $i <= $n; $i++) {\n        $colon[] = $tuplex[$i];\n    }\n    return $colon;\n}\n\n$tuplex = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$m = 2;\n$n = 6;\n\n$colon = colon_tuplex($tuplex, $m, $n);\nprint_r($colon);"
  ]
}
{
  "name": "mbpp_91_find_substring",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if a string is present as a substring in a given array of string values.\nfunction find_substring($str1, $sub_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return find_substring(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"red\", \"black\", \"white\", \"green\", \"orange\"), \"ack\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"red\", \"black\", \"white\", \"green\", \"orange\"), \"abc\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"red\", \"black\", \"white\", \"green\", \"orange\"), \"ange\") !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$str1_len = strlen($str1);\n\t$sub_str_len = strlen($sub_str);\n\t$i = 0;\n\t$j = 0;\n\twhile($i < $str1_len && $j < $sub_str_len) {\n\t\tif($str1[$i] == $sub_str[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i = $i - $j + 1;\n\t\t\t$j = 0;\n\t\t}\n\t}\n\tif($j == $sub_str_len) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"abcdef\";\n$sub_str = \"def\";\necho find_substring($str1, $sub_str);",
    "    $found = false;\n    foreach ($str1 as $str) {\n        if (strpos($str, $sub_str) !== false) {\n            $found = true;\n            break;\n        }\n    }\n    return $found;\n}\n\n$str1 = array(\"PHP\", \"Exercises\", \"Backend\");\n$sub_str = \"Ex\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"\\\"\" . $sub_str . \"\\\" is present in given array\";\n} else {\n    echo \"\\\"\" . $sub_str . \"\\\" is not present in given array\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $len = strlen($sub_str);\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if (substr($str1, $i, $len) == $sub_str) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"lo\";\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $str_arr = explode(\" \", $str1);\n    if (in_array($sub_str, $str_arr)) {\n        echo \"Substring found\";\n    } else {\n        echo \"Substring not found\";\n    }\n}\n\n$str1 = \"This is a string\";\n$sub_str = \"is\";\nfind_substring($str1, $sub_str);",
    "\t$str1 = strtolower($str1);\n\t$sub_str = strtolower($sub_str);\n\tif (strpos($str1, $sub_str) !== false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"test\";\n\nif (find_substring($str1, $sub_str)) {\n\techo \"Substring found\";\n} else {\n\techo \"Substring not found\";\n}",
    "    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    for ($i = 0; $i <= $str1_len - $sub_str_len; $i++) {\n        $j = 0;\n        while ($j < $sub_str_len && $str1[$i + $j] == $sub_str[$j]) {\n            $j++;\n        }\n        if ($j == $sub_str_len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"test\";\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "  $result = array_filter($str1, function($value) use ($sub_str) {\n    return strpos($value, $sub_str) !== false;\n  });\n  return $result;\n}\n\n$str1 = array(\"hello\", \"world\", \"hi\", \"hello world\", \"hi world\");\n$sub_str = \"world\";\n\nprint_r(find_substring($str1, $sub_str));",
    "    $str_arr = explode(\" \", $str1);\n    $str_arr = array_map('strtolower', $str_arr);\n    if (in_array($sub_str, $str_arr)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"The quick brown fox jumps over the lazy dog\";\n$sub_str = \"fox\";\n\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    if (strpos($str1, $sub_str) !== false) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"world\";\necho find_substring($str1, $sub_str);",
    "\t$str1_len = strlen($str1);\n\t$sub_str_len = strlen($sub_str);\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < $str1_len && $j < $sub_str_len) {\n\t\tif ($str1[$i] == $sub_str[$j]) {\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else {\n\t\t\t$i = $i - $j + 1;\n\t\t\t$j = 0;\n\t\t}\n\t}\n\tif ($j == $sub_str_len) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"abcdefghijklmnopqrstuvwxyz\";\n$sub_str = \"cde\";\nif (find_substring($str1, $sub_str)) {\n\techo \"Substring found\";\n} else {\n\techo \"Substring not found\";\n}",
    "    $len = strlen($sub_str);\n    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $count = 0;\n    for ($i = 0; $i < strlen($str1); $i++) {\n        if ($str1[$i] == $sub_str[0]) {\n            $count++;\n            for ($j = 1; $j < $len; $j++) {\n                if ($str1[$i + $j] == $sub_str[$j]) {\n                    $count++;\n                }\n            }\n        }\n    }\n    if ($count == $len) {\n        echo \"Substring is present in the string\";\n    } else {\n        echo \"Substring is not present in the string\";\n    }\n}\n\nfind_substring(\"I am a good boy\", \"good\");",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $str_arr = explode(\" \", $str1);\n    $sub_str_arr = explode(\" \", $sub_str);\n    $result = array_intersect($str_arr, $sub_str_arr);\n    if (count($result) > 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n$str1 = \"I am a student\";\n$sub_str = \"student\";\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "\tif (strpos($str1, $sub_str) !== false) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$str1 = \"I am learning PHP\";\n$sub_str = \"PHP\";\n\nif (find_substring($str1, $sub_str)) {\n\techo \"String '$sub_str' is present in '$str1'\";\n} else {\n\techo \"String '$sub_str' is not present in '$str1'\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    if(strpos($str1, $sub_str) !== false) {\n        return true;\n    }\n    return false;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"world\";\n\nif(find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "\t$str_arr = explode(\" \", $str1);\n\t$sub_str_arr = explode(\" \", $sub_str);\n\t$count = 0;\n\tforeach ($str_arr as $str) {\n\t\tforeach ($sub_str_arr as $sub_str) {\n\t\t\tif ($str == $sub_str) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\tif ($count > 0) {\n\t\techo \"Substring is present in the given string\";\n\t} else {\n\t\techo \"Substring is not present in the given string\";\n\t}\n}\n\n$str1 = \"This is a test string\";\n$sub_str = \"is\";\nfind_substring($str1, $sub_str);",
    "\t$str1 = strtolower($str1);\n\t$sub_str = strtolower($sub_str);\n\t$pos = strpos($str1, $sub_str);\n\tif ($pos === false) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n$str1 = \"I love PHP, I love PHP too!\";\n$sub_str = \"PHP\";\necho find_substring($str1, $sub_str);",
    "    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    for ($i = 0; $i < $str1_len; $i++) {\n        if ($str1[$i] == $sub_str[0]) {\n            $flag = 1;\n            for ($j = 1; $j < $sub_str_len; $j++) {\n                if ($str1[$i + $j] != $sub_str[$j]) {\n                    $flag = 0;\n                    break;\n                }\n            }\n            if ($flag == 1) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"llo\";\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $str1 = strtolower($str1);\n    $sub_str = strtolower($sub_str);\n    $str1_length = strlen($str1);\n    $sub_str_length = strlen($sub_str);\n    $i = 0;\n    $j = 0;\n    while ($i < $str1_length) {\n        if ($str1[$i] == $sub_str[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == $sub_str_length) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"world\";\n$result = find_substring($str1, $sub_str);\nif ($result) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}",
    "    $count = 0;\n    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    for ($i = 0; $i < $str1_len; $i++) {\n        if ($str1[$i] == $sub_str[0]) {\n            for ($j = 0; $j < $sub_str_len; $j++) {\n                if ($str1[$i + $j] != $sub_str[$j]) {\n                    break;\n                }\n            }\n            if ($j == $sub_str_len) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}\n\n$str1 = \"I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I am a good boy. I",
    "    $str1_len = strlen($str1);\n    $sub_str_len = strlen($sub_str);\n    $count = 0;\n    for ($i = 0; $i < $str1_len; $i++) {\n        if ($str1[$i] == $sub_str[$count]) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count == $sub_str_len) {\n            return true;\n        }\n    }\n    return false;\n}\n\n$str1 = \"Hello World\";\n$sub_str = \"llo\";\nif (find_substring($str1, $sub_str)) {\n    echo \"Substring found\";\n} else {\n    echo \"Substring not found\";\n}"
  ]
}
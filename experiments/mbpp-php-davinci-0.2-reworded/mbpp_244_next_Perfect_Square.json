{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to find the next perfect square greater than a given number.\nfunction next_Perfect_Square($N) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return next_Perfect_Square(...$args);\n}\n\nfunction test(): void {\n    if (candidate(35) !== 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 16) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 10;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_Perfect_Square = ceil($sqrt) + 1;\n    return $next_Perfect_Square * $next_Perfect_Square;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ceil($sqrt) + 1;\n    return $next_perfect_square * $next_perfect_square;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    }\n    else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = 4;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    if (is_int($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($floor + 1) * ($floor + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = 121;\necho next_Perfect_Square($N);",
    "    $next_perfect_square = $N;\n    while (true) {\n        $sqrt = sqrt($next_perfect_square);\n        if (floor($sqrt) == $sqrt) {\n            return $next_perfect_square;\n        }\n        $next_perfect_square++;\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = 5;\necho \"The next perfect square greater than $N is \" . next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n    return -1;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($floor + 1) * ($floor + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    if(is_int($sqrt)) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return ($sqrt + 1) * ($sqrt + 1);\n    }\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 10;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho \"The next perfect square greater than $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(121);",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ceil($sqrt) + 1;\n    return $next_perfect_square * $next_perfect_square;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(36);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(55);\necho \"\\n\";\necho next_Perfect_Square(60);\necho \"\\n\";\necho next_Perfect_Square(65);\necho \"\\n\";\necho next_Perfect_Square(70);\necho \"\\n\";\necho next_Perfect_Square(75);\necho \"\\n\";\necho next_Perfect_Square(80);\necho \"\\n\";\necho next_Perfect_Square(85);\necho \"\\n\";\necho next_Perfect_Square(90);\necho \"\\n\";\necho next_Perfect_Square(95);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(105);\necho \"\\n\";\necho next_Perfect_Square(110);\necho \"\\n\";\necho next_Perfect_Square(115);\necho \"\\n\";\necho next_Perfect_Square(120);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(130);\necho \"\\n\";\necho next_Perfect_Square(135);\necho \"\\n\";\necho next_Perfect_Square(140);\necho \"\\n\";\necho next_Perfect_Square(145);\necho \"\\n\";\necho next_Perfect_Square(150);\necho \"\\n\";\necho next_Perfect_Square(155);\necho \"\\n\";\necho next_Perfect_Square(",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($floor + 1) * ($floor + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(13);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while (true) {\n        $square = $i * $i;\n        if ($square > $N) {\n            return $square;\n        }\n        $i++;\n    }\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"<br>\";\necho next_Perfect_Square(10);\necho \"<br>\";\necho next_Perfect_Square(15);\necho \"<br>\";\necho next_Perfect_Square(20);\necho \"<br>\";\necho next_Perfect_Square(25);\necho \"<br>\";\necho next_Perfect_Square(30);\necho \"<br>\";\necho next_Perfect_Square(35);\necho \"<br>\";\necho next_Perfect_Square(40);\necho \"<br>\";\necho next_Perfect_Square(45);\necho \"<br>\";\necho next_Perfect_Square(50);\necho \"<br>\";\necho next_Perfect_Square(55);\necho \"<br>\";\necho next_Perfect_Square(60);\necho \"<br>\";\necho next_Perfect_Square(65);\necho \"<br>\";\necho next_Perfect_Square(70);\necho \"<br>\";\necho next_Perfect_Square(75);\necho \"<br>\";\necho next_Perfect_Square(80);\necho \"<br>\";\necho next_Perfect_Square(85);\necho \"<br>\";\necho next_Perfect_Square(90);\necho \"<br>\";\necho next_Perfect_Square(95);\necho \"<br>\";\necho next_Perfect_Square(100);\necho \"<br>\";\necho next_Perfect_Square(105);\necho \"<br>\";\necho next_Perfect_Square(110);\necho \"<br>\";\necho next_Perfect_Square(115);\necho \"<br>\";\necho next_Perfect_Square(120);\necho \"<br>\";\necho next_Perfect_Square(125);\necho \"<br>\";\necho next_Perfect_Square(130);\necho \"<br>\";\necho next_Perfect_Square(135);\necho \"<br>\";\necho next_Perfect_Square(140);\necho \"<br>\";\necho next_Perfect_Square(145);\necho \"<br>\";\necho next_Perfect_Square(",
    "    $i = 1;\n    while ($i * $i < $N)\n        $i++;\n    return $i * $i;\n}\n$N = 121;\necho \"Next perfect square is: \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while(true) {\n        $square = $i * $i;\n        if($square > $N) {\n            return $square;\n        }\n        $i++;\n    }\n}\n\necho next_Perfect_Square(13);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"<br>\";\necho next_Perfect_Square(10);\necho \"<br>\";\necho next_Perfect_Square(15);\necho \"<br>\";\necho next_Perfect_Square(20);\necho \"<br>\";\necho next_Perfect_Square(25);\necho \"<br>\";\necho next_Perfect_Square(30);\necho \"<br>\";\necho next_Perfect_Square(35);\necho \"<br>\";\necho next_Perfect_Square(40);\necho \"<br>\";\necho next_Perfect_Square(45);\necho \"<br>\";\necho next_Perfect_Square(50);\necho \"<br>\";\necho next_Perfect_Square(55);\necho \"<br>\";\necho next_Perfect_Square(60);\necho \"<br>\";\necho next_Perfect_Square(65);\necho \"<br>\";\necho next_Perfect_Square(70);\necho \"<br>\";\necho next_Perfect_Square(75);\necho \"<br>\";\necho next_Perfect_Square(80);\necho \"<br>\";\necho next_Perfect_Square(85);\necho \"<br>\";\necho next_Perfect_Square(90);\necho \"<br>\";\necho next_Perfect_Square(95);\necho \"<br>\";\necho next_Perfect_Square(100);\necho \"<br>\";\necho next_Perfect_Square(105);\necho \"<br>\";\necho next_Perfect_Square(110);\necho \"<br>\";\necho next_Perfect_Square(115);\necho \"<br>\";\necho next_Perfect_Square(120);\necho \"<br>\";\necho next_Perfect_Square(125);\necho \"<br>\";\necho next_Perfect_Square(130);\necho \"<br>\";\necho next_Perfect_Square(135);\necho \"<br>\";\necho next_Perfect_Square(140);\necho \"<br>\";\necho next_Perfect_Square(145);\necho \"<br>\";\necho next_Perfect_Square(",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ceil($sqrt) + 1;\n    return $next_perfect_square * $next_perfect_square;\n}\necho next_Perfect_Square(121);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = 4;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $square = $ceil * $ceil;\n    return $square;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $N);\n    } else {\n        return (($floor + 1) * ($floor + 1));\n    }\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $N);\n    } else {\n        return (($floor + 1) * ($floor + 1));\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 25;\necho \"Next perfect square greater than $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(36);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(43);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(67);\necho \"\\n\";\necho next_Perfect_Square(72);\necho \"\\n\";\necho next_Perfect_Square(81);\necho \"\\n\";\necho next_Perfect_Square(98);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(121);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(144);\necho \"\\n\";\necho next_Perfect_Square(147);\necho \"\\n\";\necho next_Perfect_Square(169);\necho \"\\n\";\necho next_Perfect_Square(196);\necho \"\\n\";\necho next_Perfect_Square(225);\necho \"\\n\";\necho next_Perfect_Square(250);\necho \"\\n\";\necho next_Perfect_Square(289);\necho \"\\n\";\necho next_Perfect_Square(324);\necho \"\\n\";\necho next_Perfect_Square(361);\necho \"\\n\";\necho next_Perfect_Square(400);\necho \"\\n\";\necho next_Perfect_Square(441);\necho \"\\n\";\necho next_Perfect_Square(484);\necho \"\\n\";\necho next_Perfect_Square(529);\necho \"\\n\";\necho next_Perfect_Square(576);\necho \"\\n\";\necho next_Perfect_Square(625);\necho \"\\n\";\necho next_Perfect_Square(676);\necho \"\\n\";\necho next_Perfect_Square(729);\necho \"\\n\";\necho next",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(121);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\necho next_Perfect_Square(121);",
    "    $n = $N;\n    $root = sqrt($n);\n    $floor = floor($root);\n    if($root == $floor) {\n        $n = $n + 1;\n        $root = sqrt($n);\n        $floor = floor($root);\n        if($root == $floor) {\n            return $n;\n        }\n    }\n    else {\n        $n = $n + 1;\n        $root = sqrt($n);\n        $floor = floor($root);\n        if($root == $floor) {\n            return $n;\n        }\n    }\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(55);\necho \"\\n\";\necho next_Perfect_Square(60);\necho \"\\n\";\necho next_Perfect_Square(65);\necho \"\\n\";\necho next_Perfect_Square(70);\necho \"\\n\";\necho next_Perfect_Square(75);\necho \"\\n\";\necho next_Perfect_Square(80);\necho \"\\n\";\necho next_Perfect_Square(85);\necho \"\\n\";\necho next_Perfect_Square(90);\necho \"\\n\";\necho next_Perfect_Square(95);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(105);\necho \"\\n\";\necho next_Perfect_Square(110);\necho \"\\n\";\necho next_Perfect_Square(115);\necho \"\\n\";\necho next_Perfect_Square(120);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(130);\necho \"\\n\";\necho next_Perfect_Square(135);\necho \"\\n\";\necho next_Perfect_Square(140);\necho \"\\n\";\necho next_Perfect_Square(145);\necho \"\\n\";\necho next_Perfect_Square(150);\necho \"\\n\";\necho next_Perfect_Square(155);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = 4;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 100;\necho \"Next perfect square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 10;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);\n",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $next_Perfect_Square = ($sqrt + 1) * ($sqrt + 1);\n    return $next_Perfect_Square;\n}\n\n$N = 9;\necho \"Next Perfect Square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(121);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while(true) {\n        $square = $i * $i;\n        if($square > $N) {\n            return $square;\n        }\n        $i++;\n    }\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(55);\necho \"\\n\";\necho next_Perfect_Square(60);\necho \"\\n\";\necho next_Perfect_Square(65);\necho \"\\n\";\necho next_Perfect_Square(70);\necho \"\\n\";\necho next_Perfect_Square(75);\necho \"\\n\";\necho next_Perfect_Square(80);\necho \"\\n\";\necho next_Perfect_Square(85);\necho \"\\n\";\necho next_Perfect_Square(90);\necho \"\\n\";\necho next_Perfect_Square(95);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(105);\necho \"\\n\";\necho next_Perfect_Square(110);\necho \"\\n\";\necho next_Perfect_Square(115);\necho \"\\n\";\necho next_Perfect_Square(120);\necho \"\\n\";\necho next_Perfect_Square(125);\necho \"\\n\";\necho next_Perfect_Square(130);\necho \"\\n\";\necho next_Perfect_Square(135);\necho \"\\n\";\necho next_Perfect_Square(140);\necho \"\\n\";\necho next_Perfect_Square(145);\necho \"\\n\";\necho next_Perfect_Square(150);\necho \"\\n\";\necho next_Perfect_Square(155);\necho \"\\n\";\necho next_Perfect_Square(",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $N);\n    } else {\n        return (($floor + 1) * ($floor + 1));\n    }\n}\n\n$N = 9;\necho \"Next Perfect Square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(38);\necho \"\\n\";\necho next_Perfect_Square(39);\necho \"\\n\";\necho next_Perfect_Square(40);\necho \"\\n\";\necho next_Perfect_Square(41);\necho \"\\n\";\necho next_Perfect_Square(42);\necho \"\\n\";\necho next_Perfect_Square(43);\necho \"\\n\";\necho next_Perfect_Square(44);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(46);\necho \"\\n\";\necho next_Perfect_Square(47);\necho \"\\n\";\necho next_Perfect_Square(48);\necho \"\\n\";\necho next_Perfect_Square(49);\necho \"\\n\";\necho next_Perfect_Square(50);\necho \"\\n\";\necho next_Perfect_Square(51);\necho \"\\n\";\necho next_Perfect_Square(52);\necho \"\\n\";\necho next_Perfect_Square(",
    "    $num = $N;\n    $i = 1;\n    while($num > 0) {\n        $num = $num - $i;\n        $i = $i + 2;\n    }\n    if($num == 0) {\n        return \"The next perfect square is \" . ($i - 2);\n    }\n    else {\n        return \"No perfect square found\";\n    }\n}\n\necho next_Perfect_Square(121);",
    "    $sqrt = sqrt($N);\n    if ($sqrt == floor($sqrt)) {\n        return $N;\n    } else {\n        return next_Perfect_Square($N + 1);\n    }\n}\n\necho next_Perfect_Square(12);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);\necho next_Perfect_Square(15);\necho next_Perfect_Square(16);\necho next_Perfect_Square(25);\necho next_Perfect_Square(37);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + 1) * ($N + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $N);\n    } else {\n        $next_Perfect_Square = ($floor + 1) * ($floor + 1);\n        return $next_Perfect_Square;\n    }\n}\n\n$N = 64;\necho \"Next Perfect Square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "  $i = 1;\n  while ($i * $i < $N) {\n    $i++;\n  }\n  return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(64);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($sqrt + 1) * ($sqrt + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = 121;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(13);",
    "    $sqrt = sqrt($N);\n    $next_Perfect_Square = ceil($sqrt);\n    return $next_Perfect_Square * $next_Perfect_Square;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(13);",
    "    $sqrt = sqrt($N);\n    $next_perfect_square = ceil($sqrt) + 1;\n    $next_perfect_square = $next_perfect_square * $next_perfect_square;\n    return $next_perfect_square;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(100);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(81);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(1000);\necho \"\\n\";\necho next_Perfect_Square(10000);\necho \"\\n\";\necho next_Perfect_Square(100000);\necho \"\\n\";\necho next_Perfect_Square(1000000);\necho \"\\n\";\necho next_Perfect_Square(10000000);\necho \"\\n\";\necho next_Perfect_Square(100000000);\necho \"\\n\";\necho next_Perfect_Square(1000000000);\necho \"\\n\";\necho next_Perfect_Square(10000000000);\necho \"\\n\";\necho next_Perfect_Square(100000000000);\necho \"\\n\";\necho next_Perfect_Square(1000000000000);\necho \"\\n\";\necho next_Perfect_Square(10000000000000);\necho \"\\n\";\necho next_Perfect_Square(100000000000000);\necho \"\\n\";\necho next_Perfect_Square(1000000000000000);\necho \"\\n\";\necho next_Perfect_Square(10000000000000000);\necho \"\\n\";\necho next_Perfect_Square(100000000000000000);\necho \"\\n\";\necho next_Perfect_Square(1000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(10000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(100000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(1000000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(10000000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(100000000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(1000000000000000000000000);\necho \"\\n\";\necho next_Perfect_Square(10000000000000000000000000);\necho \"\\",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(64);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);\n",
    "    $i = 1;\n    while($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(121);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho \"Next Perfect Square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i += 1;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($floor + 1) * ($floor + 1);\n    } else {\n        return -1;\n    }\n}\n\n$N = 121;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(13);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 121;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(37);\necho \"\\n\";\necho next_Perfect_Square(45);\necho \"\\n\";\necho next_Perfect_Square(99);\necho \"\\n\";\necho next_Perfect_Square(121);\necho \"\\n\";\necho next_Perfect_Square(144);\necho \"\\n\";\necho next_Perfect_Square(1000);\necho \"\\n\";\necho next_Perfect_Square(9999);\necho \"\\n\";\necho next_Perfect_Square(99999);\necho \"\\n\";\necho next_Perfect_Square(999999);\necho \"\\n\";\necho next_Perfect_Square(9999999);\necho \"\\n\";\necho next_Perfect_Square(99999999);\necho \"\\n\";\necho next_Perfect_Square(999999999);\necho \"\\n\";\necho next_Perfect_Square(9999999999);\necho \"\\n\";\necho next_Perfect_Square(99999999999);\necho \"\\n\";\necho next_Perfect_Square(999999999999);\necho \"\\n\";\necho next_Perfect_Square(9999999999999);\necho \"\\n\";\necho next_Perfect_Square(99999999999999);\necho \"\\n\";\necho next_Perfect_Square(999999999999999);\necho \"\\n\";\necho next_Perfect_Square(9999999999999999);\necho \"\\n\";\necho next_Perfect_Square(99999999999999999);\necho \"\\n\";\necho next_Perfect_Square(999999999999999999);\necho \"\\n\";\necho next_Perfect_Square(9999999999999999999);\necho \"\\n\";\necho next_Perfect_Square(99999999999999999999);\necho \"\\n\";\necho next_Perfect_Square(999999999999999999999);\necho \"\\n\";\necho next_Perfect_Square(9999999999999999999999);\necho \"\\n\";\necho next_Perfect_Square(99999999999999999999999);\necho",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(10);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);",
    "    $sqrt = sqrt($N);\n    $next_sqrt = ceil($sqrt);\n    $next_perfect_square = $next_sqrt * $next_sqrt;\n    return $next_perfect_square;\n}\necho next_Perfect_Square(121);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $n = $N;\n    $n = $n + 1;\n    while (true) {\n        $sqrt = sqrt($n);\n        if (is_int($sqrt)) {\n            return $n;\n        }\n        $n++;\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 10;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($sqrt+1)*($sqrt+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(36);\necho \"\\n\";\necho next_Perfect_Square(49);\necho \"\\n\";\necho next_Perfect_Square(64);\necho \"\\n\";\necho next_Perfect_Square(81);\necho \"\\n\";\necho next_Perfect_Square(100);\necho \"\\n\";\necho next_Perfect_Square(121);\necho \"\\n\";\necho next_Perfect_Square(144);\necho \"\\n\";\necho next_Perfect_Square(169);\necho \"\\n\";\necho next_Perfect_Square(196);\necho \"\\n\";\necho next_Perfect_Square(225);\necho \"\\n\";\necho next_Perfect_Square(256);\necho \"\\n\";\necho next_Perfect_Square(289);\necho \"\\n\";\necho next_Perfect_Square(324);\necho \"\\n\";\necho next_Perfect_Square(361);\necho \"\\n\";\necho next_Perfect_Square(400);\necho \"\\n\";\necho next_Perfect_Square(441);\necho \"\\n\";\necho next_Perfect_Square(484);\necho \"\\n\";\necho next_Perfect_Square(529);\necho \"\\n\";\necho next_Perfect_Square(576);\necho \"\\n\";\necho next_Perfect_Square(625);\necho \"\\n\";\necho next_Perfect_Square(676);\necho \"\\n\";\necho next_Perfect_Square(729);\necho \"\\n\";\necho next_Perfect_Square(784);\necho \"\\n\";\necho next_Perfect_Square(841);\necho \"\\n\";\necho next_Perfect_Square(900);\necho \"\\n\";\necho next_Perfect_Square(961);\necho \"\\n\";\necho next_Perfect_Square(1024);\necho \"\\n\";\necho next_Perfect_Square(1089);\necho \"\\n\";\necho next_",
    "    $N = $N + 1;\n    $sqrt = sqrt($N);\n    $sqrt = ceil($sqrt);\n    $sqrt = $sqrt * $sqrt;\n    return $sqrt;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho \"The next perfect square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $next_Perfect_Square = ceil($sqrt);\n    $next_Perfect_Square = $next_Perfect_Square * $next_Perfect_Square;\n    return $next_Perfect_Square;\n}\n\n$N = 81;\necho \"Next Perfect Square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\necho next_Perfect_Square(10);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if ($floor == $sqrt) {\n        return ($N + $floor + 1) * ($floor + 1);\n    } else {\n        return ($floor + 1) * ($floor + 1);\n    }\n}\n\necho next_Perfect_Square(15);",
    "    $sqrt = sqrt($N);\n    $ceil = ceil($sqrt);\n    $next_perfect_square = $ceil * $ceil;\n    return $next_perfect_square;\n}\n\n$N = 9;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"<br>\";\necho next_Perfect_Square(10);\necho \"<br>\";\necho next_Perfect_Square(15);\necho \"<br>\";\necho next_Perfect_Square(20);\necho \"<br>\";\necho next_Perfect_Square(25);\necho \"<br>\";\necho next_Perfect_Square(30);\necho \"<br>\";\necho next_Perfect_Square(35);\necho \"<br>\";\necho next_Perfect_Square(40);\necho \"<br>\";\necho next_Perfect_Square(45);\necho \"<br>\";\necho next_Perfect_Square(50);\necho \"<br>\";\necho next_Perfect_Square(55);\necho \"<br>\";\necho next_Perfect_Square(60);\necho \"<br>\";\necho next_Perfect_Square(65);\necho \"<br>\";\necho next_Perfect_Square(70);\necho \"<br>\";\necho next_Perfect_Square(75);\necho \"<br>\";\necho next_Perfect_Square(80);\necho \"<br>\";\necho next_Perfect_Square(85);\necho \"<br>\";\necho next_Perfect_Square(90);\necho \"<br>\";\necho next_Perfect_Square(95);\necho \"<br>\";\necho next_Perfect_Square(100);\necho \"<br>\";\necho next_Perfect_Square(105);\necho \"<br>\";\necho next_Perfect_Square(110);\necho \"<br>\";\necho next_Perfect_Square(115);\necho \"<br>\";\necho next_Perfect_Square(120);\necho \"<br>\";\necho next_Perfect_Square(125);\necho \"<br>\";\necho next_Perfect_Square(130);\necho \"<br>\";\necho next_Perfect_Square(135);\necho \"<br>\";\necho next_Perfect_Square(140);\necho \"<br>\";\necho next_Perfect_Square(145);\necho \"<br>\";\necho next_Perfect_Square(",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    }\n    else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(5);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "\t$i = 1;\n\twhile ($i * $i < $N) {\n\t\t$i++;\n\t}\n\treturn $i * $i;\n}\n\n$N = 25;\necho \"Next perfect square of $N is \" . next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(12);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(25);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(9);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(8);",
    "    $i = 1;\n    while ($i * $i <= $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = intval(fgets(STDIN));\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(15);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\n$N = 25;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\n\necho next_Perfect_Square(5);\necho \"\\n\";\necho next_Perfect_Square(6);\necho \"\\n\";\necho next_Perfect_Square(7);\necho \"\\n\";\necho next_Perfect_Square(8);\necho \"\\n\";\necho next_Perfect_Square(9);\necho \"\\n\";\necho next_Perfect_Square(10);\necho \"\\n\";\necho next_Perfect_Square(11);\necho \"\\n\";\necho next_Perfect_Square(12);\necho \"\\n\";\necho next_Perfect_Square(13);\necho \"\\n\";\necho next_Perfect_Square(14);\necho \"\\n\";\necho next_Perfect_Square(15);\necho \"\\n\";\necho next_Perfect_Square(16);\necho \"\\n\";\necho next_Perfect_Square(17);\necho \"\\n\";\necho next_Perfect_Square(18);\necho \"\\n\";\necho next_Perfect_Square(19);\necho \"\\n\";\necho next_Perfect_Square(20);\necho \"\\n\";\necho next_Perfect_Square(21);\necho \"\\n\";\necho next_Perfect_Square(22);\necho \"\\n\";\necho next_Perfect_Square(23);\necho \"\\n\";\necho next_Perfect_Square(24);\necho \"\\n\";\necho next_Perfect_Square(25);\necho \"\\n\";\necho next_Perfect_Square(26);\necho \"\\n\";\necho next_Perfect_Square(27);\necho \"\\n\";\necho next_Perfect_Square(28);\necho \"\\n\";\necho next_Perfect_Square(29);\necho \"\\n\";\necho next_Perfect_Square(30);\necho \"\\n\";\necho next_Perfect_Square(31);\necho \"\\n\";\necho next_Perfect_Square(32);\necho \"\\n\";\necho next_Perfect_Square(33);\necho \"\\n\";\necho next_Perfect_Square(34);\necho \"\\n\";\necho next_Perfect_Square(35);\necho \"\\n\";\necho next_Perfect_Square",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(100);",
    "    $sqrt = sqrt($N);\n    $floor = floor($sqrt);\n    if($floor == $sqrt) {\n        return ($N+1)*($N+1);\n    } else {\n        return ($floor+1)*($floor+1);\n    }\n}\n\n$N = 5;\necho next_Perfect_Square($N);",
    "    $i = 1;\n    while ($i * $i < $N) {\n        $i++;\n    }\n    return $i * $i;\n}\necho next_Perfect_Square(15);"
  ]
}
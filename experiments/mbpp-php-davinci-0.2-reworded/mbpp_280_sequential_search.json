{
  "name": "mbpp_280_sequential_search",
  "language": "php",
  "prompt": "<?php\n// Write a function that takes in an array and element and returns an array containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).\nfunction sequential_search($dlist, $item) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_280_sequential_search.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sequential_search(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(11, 23, 58, 31, 56, 77, 43, 12, 65, 19), 31) !== array(true, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 32, 45, 62, 35, 47, 44, 61), 61) !== array(true, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(9, 10, 17, 19, 22, 39, 48, 56), 48) !== array(true, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$pos = 0;\n\t$found = false;\n\twhile ($pos < count($dlist) && !$found) {\n\t\tif ($dlist[$pos] == $item) {\n\t\t\t$found = true;\n\t\t} else {\n\t\t\t$pos++;\n\t\t}\n\t}\n\treturn $found;\n}\n",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos++;\n        }\n    }\n    return $found;\n}\n\n$dlist = [1, 2, 8, 4, 5, 6, 7, 3];\n$item = 8;\n\nif (sequential_search($dlist, $item)) {\n    echo \"Found $item at index \" . array_search($item, $dlist);\n} else {\n    echo \"$item not found in list\";\n}",
    "\t$pos = 0;\n\t$found = false;\n\twhile ($pos < count($dlist) && !$found) {\n\t\tif ($dlist[$pos] == $item) {\n\t\t\t$found = true;\n\t\t} else {\n\t\t\t$pos++;\n\t\t}\n\t}\n\treturn [$found, $pos];\n}\n",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $found;\n}\n\n$dlist = array(1, 2, 8, 4, 5, 6, 7);\n$item = 8;\nif (sequential_search($dlist, $item)) {\n    echo \"Found\";\n} else {\n    echo \"Not found\";\n}",
    "\t$pos = 0;\n\t$found = false;\n\twhile ($pos < count($dlist) && !$found) {\n\t\tif ($dlist[$pos] == $item) {\n\t\t\t$found = true;\n\t\t} else {\n\t\t\t$pos++;\n\t\t}\n\t}\n\treturn array($found, $pos);\n}\n",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $found;\n}\n\n$dlist = [1, 2, 8, 4, 5, 6, 7, 3];\n$item = 5;\nif (sequential_search($dlist, $item)) {\n    echo \"Found\";\n} else {\n    echo \"Not found\";\n}",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos++;\n        }\n    }\n    return $found;\n}\n\n$dlist = array(1, 2, 8, 4, 5, 6, 7);\n$item = 8;\nif (sequential_search($dlist, $item)) {\n    echo \"Found\";\n} else {\n    echo \"Not found\";\n}",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $found;\n}\n\n$dlist = array(1, 2, 8, 4, 5, 6, 7);\n$item = 8;\n\nif (sequential_search($dlist, $item)) {\n    echo \"Found\";\n} else {\n    echo \"Not found\";\n}",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $found;\n}\n\n$dlist = array(1, 2, 8, 4, 5, 6, 7, 3);\n$item = 8;\nif (sequential_search($dlist, $item)) {\n    echo \"Found $item in the list\";\n} else {\n    echo \"Item not found\";\n}\n",
    "\t$pos = 0;\n\t$found = false;\n\twhile ($pos < count($dlist) && !$found) {\n\t\tif ($dlist[$pos] == $item) {\n\t\t\t$found = true;\n\t\t} else {\n\t\t\t$pos = $pos + 1;\n\t\t}\n\t}\n\treturn array($found, $pos);\n}\n",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $pos;\n}\n\n$dlist = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$item = 7;\n$result = sequential_search($dlist, $item);\necho $result;",
    "    $found = false;\n    $pos = 0;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos++;\n        }\n    }\n    if ($found) {\n        return $pos;\n    } else {\n        return -1;\n    }\n}\n\n$dlist = array(1, 2, 32, 8, 17, 19, 42, 13, 0);\necho sequential_search($dlist, 3);\necho sequential_search($dlist, 13);",
    "    $found = false;\n    $position = 0;\n    while ($position < count($dlist) && !$found) {\n        if ($dlist[$position] == $item) {\n            $found = true;\n        } else {\n            $position++;\n        }\n    }\n    if ($found) {\n        return $position;\n    } else {\n        return -1;\n    }\n}\n\n$dlist = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$item = 7;\n\necho sequential_search($dlist, $item);",
    "    $found = false;\n    $pos = 0;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    if ($found) {\n        return $pos;\n    } else {\n        return -1;\n    }\n}\n\n$dlist = [1, 2, 8, 4, 5, 6, 7, 3];\n$item = 8;\necho sequential_search($dlist, $item);",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $found;\n}\n\n$dlist = [1, 2, 8, 4, 5, 6, 7, 3];\n$item = 8;\n$result = sequential_search($dlist, $item);\necho $result;",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $pos;\n}\n\n$dlist = array(1, 2, 32, 8, 17, 19, 42, 13, 0);\n$item = 3;\n$result = sequential_search($dlist, $item);\nif ($result < 0) {\n    echo \"The element is not in the array\";\n} else {\n    echo \"The element is in the array at index \" . $result;\n}",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $pos;\n}\n\n$dlist = [1, 2, 32, 8, 17, 19, 42, 13, 0];\n$item = 3;\n$result = sequential_search($dlist, $item);\necho \"Found $item at index $result\";",
    "    $found = false;\n    $pos = 0;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    if ($found) {\n        return $pos;\n    } else {\n        return -1;\n    }\n}\n\n$dlist = array(1, 2, 32, 8, 17, 19, 42, 13, 0);\n$item = 3;\n$result = sequential_search($dlist, $item);\necho $result;",
    "    $found = false;\n    $pos = 0;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $pos;\n}\n",
    "    $pos = 0;\n    $found = false;\n    while ($pos < count($dlist) && !$found) {\n        if ($dlist[$pos] == $item) {\n            $found = true;\n        } else {\n            $pos = $pos + 1;\n        }\n    }\n    return $found;\n}\n\n$dlist = array(1, 2, 8, 4, 5, 6, 7, 3);\n$item = 8;\nif (sequential_search($dlist, $item)) {\n    echo \"Found\";\n} else {\n    echo \"Not found\";\n}"
  ]
}
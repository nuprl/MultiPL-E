{
  "name": "mbpp_641_is_nonagonal",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the nth nonagonal number.\nfunction is_nonagonal($n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return is_nonagonal(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 325) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== 750) { throw new Exception(\"Test failed!\"); }\n    if (candidate(18) !== 1089) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $num = 0;\n    $i = 1;\n    while ($num < $n) {\n        $num += $i;\n        $i++;\n    }\n    if ($num == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "  $i = 1;\n  while ($n > 0) {\n    $n -= $i;\n    $i++;\n  }\n  return $n == 0;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == intval($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = (int)$n;\n    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == (int)$x;\n}\n",
    "    $n = (int)$n;\n    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == (int)$x;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt($n) + 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$x = (sqrt(8 * $n + 1) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $n = abs($n);\n    $n1 = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n1 == (int) $n1;\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn is_int($x);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $n = (int)$n;\n    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == (int)$x;\n}\n",
    "    $n = $n * 2;\n    $root = sqrt($n);\n    return $root == floor($root);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(8*$n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $sqrt = sqrt(1 + 8 * $n);\n    return $sqrt == floor($sqrt);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) + 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    $sum = 1;\n    while ($sum < $n) {\n        $i++;\n        $sum += $i;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt($n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    return (sqrt(1 + 8 * $n) - 1) / 2 % 1 == 0;\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$i = 1;\n\t$sum = 0;\n\twhile ($sum < $n) {\n\t\t$sum += $i;\n\t\t$i++;\n\t}\n\tif ($sum == $n) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$x = 1;\n\twhile ($n > 0) {\n\t\t$n -= $x;\n\t\t$x++;\n\t}\n\treturn $n == 0;\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return is_int($n);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$x = (sqrt(8 * $n + 1) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $i = 1;\n    $sum = 1;\n    while ($sum < $n) {\n        $i++;\n        $sum += $i;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$i = 1;\n\twhile ($n > 0) {\n\t\t$n -= $i;\n\t\t$i++;\n\t}\n\treturn $n == 0;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt($n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(8*$n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = $n * 2;\n    $sqrt = sqrt($n);\n    return $sqrt == floor($sqrt);\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == (int)$x;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "  $i = 1;\n  while ($n > 0) {\n    $n -= $i;\n    $i++;\n  }\n  return $n == 0;\n}\n",
    "    $x = (sqrt(8*$n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "\t$n = $n * 2;\n\t$sqrt = sqrt($n);\n\tif ($sqrt == floor($sqrt)) {\n\t\tif ($sqrt % 2 == 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    }\n    return false;\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$n = (sqrt(8*$n + 1) - 1)/2;\n\treturn is_int($n);\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "  $i = 1;\n  while ($n > 0) {\n    $n -= $i;\n    $i++;\n  }\n  return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "    $n = (int)$n;\n    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "\t$n = (sqrt(8*$n+1)+1)/2;\n\treturn is_int($n);\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt($n) + 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$x = (sqrt(8*$n + 1) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$i = 1;\n\twhile ($n > 0) {\n\t\t$n -= $i;\n\t\t$i++;\n\t}\n\tif ($n == 0) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return is_int($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return ($n == 0);\n}\n",
    "    $n = $n * 2;\n    $sqrt = sqrt($n);\n    return $sqrt == floor($sqrt);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = sqrt(8 * $n + 1);\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(8*$n+1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "  $i = 1;\n  while ($n > 0) {\n    $n -= $i;\n    $i++;\n  }\n  return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$x = (sqrt(8 * $n + 1) - 1) / 2;\n\tif (is_int($x)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $n = (int)$n;\n    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == (int)$x;\n}\n",
    "\t$n = (sqrt(8*$n+1)+1)/2;\n\treturn (floor($n) == $n);\n}\n",
    "    $x = (sqrt(8*$n+1)-1)/2;\n    return $x == floor($x);\n}\n",
    "\t$i = 1;\n\t$sum = 0;\n\twhile ($sum < $n) {\n\t\t$sum += $i;\n\t\t$i++;\n\t}\n\tif ($sum == $n) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\t$i = 1;\n\twhile ($n > 0) {\n\t\t$n -= $i;\n\t\t$i++;\n\t}\n\treturn $n == 0;\n}\n",
    "\t$i = 1;\n\twhile ($n > 0) {\n\t\t$n -= $i;\n\t\t$i++;\n\t}\n\treturn $n == 0;\n}\n",
    "\t$i = 1;\n\twhile (true) {\n\t\t$sum = $i * (3 * $i - 1) / 2;\n\t\tif ($sum == $n) {\n\t\t\treturn true;\n\t\t}\n\t\tif ($sum > $n) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "\t$i = 1;\n\twhile ($n > 0) {\n\t\t$n -= $i;\n\t\t$i++;\n\t}\n\treturn $n == 0;\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) + 1) / 2;\n\treturn is_int($n);\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $x = (sqrt(8*$n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    $j = 1;\n    while ($n > $i) {\n        $i += $j;\n        $j++;\n    }\n    return $n == $i;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == round($x);\n}\n",
    "    return $n == ($n * ($n + 1) / 2);\n}\n",
    "    $i = 1;\n    while (true) {\n        $sum = $i * (3 * $i - 1) / 2;\n        if ($sum == $n) {\n            return true;\n        } elseif ($sum > $n) {\n            return false;\n        }\n        $i++;\n    }\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt($n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum == $n;\n}\n",
    "\t$x = (sqrt(8 * $n + 1) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $n = (sqrt(8*$n+1)-1)/2;\n    return $n == floor($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $n = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$x = (sqrt(8*$n+1) - 1) / 2;\n\tif ($x == floor($x)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return is_int($n);\n}\n",
    "    $n = (sqrt(8 * $n + 1) + 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while (true) {\n        $sum = $i * (3 * $i - 1) / 2;\n        if ($sum == $n) {\n            return true;\n        } elseif ($sum > $n) {\n            return false;\n        }\n        $i++;\n    }\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$i = 1;\n\twhile (true) {\n\t\t$n -= $i;\n\t\tif ($n == 0) {\n\t\t\treturn true;\n\t\t} else if ($n < 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (sqrt(8 * $n + 1) - 1) / 2;\n    return $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$i = 1;\n\twhile ($n > $i * (3 * $i - 1) / 2) {\n\t\t$i++;\n\t}\n\treturn $n == $i * (3 * $i - 1) / 2;\n}\n",
    "    $i = 1;\n    while (true) {\n        $sum = $i * (3 * $i - 1) / 2;\n        if ($sum == $n) {\n            return true;\n        } elseif ($sum > $n) {\n            return false;\n        }\n        $i++;\n    }\n}\n",
    "    $n = $n * 2;\n    $x = (sqrt($n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$n = (sqrt(8*$n + 1) + 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $i = 1;\n    $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    if ($sum == $n) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
    "\t$x = (sqrt(8*$n + 1) - 1) / 2;\n\tif (is_int($x)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\t$i = 1;\n\t$sum = 0;\n\twhile ($sum < $n) {\n\t\t$sum += $i;\n\t\t$i++;\n\t}\n\tif ($sum == $n) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "\t$x = (sqrt(8 * $n + 1) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    return $n == (3 * $n * $n - $n) / 2;\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == (int)$x;\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $n = (int)$n;\n    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "\t$n = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $n == floor($n);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(8 * $n + 1) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "    $x = (sqrt(1 + 8 * $n) - 1) / 2;\n    return $x == floor($x);\n}\n",
    "  $i = 1;\n  while ($n > 0) {\n    $n -= $i;\n    $i++;\n  }\n  return $n == 0;\n}\n",
    "\t$x = (sqrt(1 + 8 * $n) - 1) / 2;\n\treturn $x == floor($x);\n}\n",
    "    $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}\n"
  ]
}
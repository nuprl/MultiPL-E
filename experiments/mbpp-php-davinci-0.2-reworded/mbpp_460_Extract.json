{
  "name": "mbpp_460_Extract",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to get the first element of each subarray.\nfunction Extract($lst) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return Extract(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1, 2), array(3, 4, 5), array(6, 7, 8, 9))) !== array(1, 3, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(4, 5))) !== array(1, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(9, 8, 1), array(1, 2))) !== array(9, 1)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $res = array();\n    foreach ($lst as $sub) {\n        $res[] = $sub[0];\n    }\n    return $res;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $res = array();\n    foreach ($lst as $sub) {\n        $res[] = $sub[0];\n    }\n    return $res;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $item) {\n        $result[] = $item[0];\n    }\n    return $result;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $res = array();\n    foreach ($lst as $sub) {\n        $res[] = $sub[0];\n    }\n    return $res;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $subarray) {\n        if (is_array($subarray)) {\n            $result[] = $subarray[0];\n        }\n    }\n    return $result;\n}\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $res = array();\n    foreach ($lst as $key => $value) {\n        $res[] = $value[0];\n    }\n    return $res;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $res = [];\n    foreach ($lst as $sub) {\n        $res[] = $sub[0];\n    }\n    return $res;\n}\n",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $new_list = array();\n    foreach ($lst as $item) {\n        array_push($new_list, $item[0]);\n    }\n    return $new_list;\n}\n\n$lst = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $res = array();\n    foreach ($lst as $sub) {\n        $res[] = $sub[0];\n    }\n    return $res;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $sub) {\n        $result[] = $sub[0];\n    }\n    return $result;\n}\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $res = array();\n    foreach ($lst as $sub) {\n        array_push($res, $sub[0]);\n    }\n    return $res;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $subarray) {\n        if (is_array($subarray)) {\n            $result[] = $subarray[0];\n        }\n    }\n    return $result;\n}\n\n$lst = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach ($lst as $subarray) {\n        if (is_array($subarray)) {\n            $result[] = $subarray[0];\n        }\n    }\n    return $result;\n}\n$lst = array(array(1,2,3), array(4,5,6), array(7,8,9));\nprint_r(Extract($lst));",
    "    $result = array();\n    foreach($lst as $subarray) {\n        if(is_array($subarray)) {\n            $result[] = $subarray[0];\n        }\n    }\n    return $result;\n}\n$lst = array(array(1, 2), array(3, 4), array(5, 6), array(7, 8));\nprint_r(Extract($lst));"
  ]
}
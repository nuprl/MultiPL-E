{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "php",
  "prompt": "<?php\n// Write a function to sum all amicable numbers from 1 to a specified number.\nfunction amicable_numbers_sum($limit) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return amicable_numbers_sum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(999) !== 504) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9999) !== 31626) { throw new Exception(\"Test failed!\"); }\n    if (candidate(99) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum_of_divisors_i = sum_of_divisors($i);\n        $sum_of_divisors_sum_of_divisors_i = sum_of_divisors($sum_of_divisors_i);\n        if ($sum_of_divisors_i != $i && $sum_of_divisors_sum_of_divisors_i == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum_of_divisors_i = sum_of_divisors($i);\n        $sum_of_divisors_j = sum_of_divisors($sum_of_divisors_i);\n        if ($sum_of_divisors_j == $i && $sum_of_divisors_i != $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "  $sum = 0;\n  for ($i = 1; $i < $limit; $i++) {\n    $a = sum_of_divisors($i);\n    $b = sum_of_divisors($a);\n    if ($b == $i && $a != $b) {\n      $sum += $i;\n    }\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $divisors_sum = sum_of_divisors($i);\n        if ($divisors_sum != $i && $i == sum_of_divisors($divisors_sum)) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "  $sum = 0;\n  for ($i = 1; $i < $limit; $i++) {\n    $a = sum_of_divisors($i);\n    $b = sum_of_divisors($a);\n    if ($i == $b && $a != $b) {\n      $sum += $i;\n    }\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "  $sum = 0;\n  for ($i = 1; $i < $limit; $i++) {\n    $sum += amicable_number($i);\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum_of_divisors = sum_of_divisors($i);\n        if ($sum_of_divisors > $i) {\n            $sum_of_divisors_of_sum_of_divisors = sum_of_divisors($sum_of_divisors);\n            if ($sum_of_divisors_of_sum_of_divisors == $i) {\n                $sum += $i;\n            }\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += is_amicable($i) ? $i : 0;\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $a = sum_of_divisors($i);\n        $b = sum_of_divisors($a);\n        if ($i == $b && $a != $b) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i <= $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "  $sum = 0;\n  for ($i = 1; $i <= $limit; $i++) {\n    $sum += amicable_number($i);\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n",
    "  $sum = 0;\n  for ($i = 1; $i <= $limit; $i++) {\n    $sum += amicable_number($i);\n  }\n  return $sum;\n}\n",
    "    $sum = 0;\n    for ($i = 1; $i < $limit; $i++) {\n        $sum += amicable_number($i);\n    }\n    return $sum;\n}\n"
  ]
}
{
  "name": "mbpp_106_add_lists",
  "language": "php",
  "prompt": "<?php\n// Write a function to append the given array to the given arrays.\nfunction add_lists($test_list, $test_tup) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return add_lists(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7), array(9, 10)) !== array(9, 10, 5, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 7, 8), array(10, 11)) !== array(10, 11, 6, 7, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(7, 8, 9), array(11, 12)) !== array(11, 12, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $test_list = array_merge($test_list, $test_tup);\n    print_r($test_list);\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nadd_lists($test_list, $test_tup);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3, 4, 5);\n$test_tup = array(6, 7, 8, 9, 10);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $result = [];\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n\n$test_list = [1, 2, 3, 4, 5];\n$test_tup = [6, 7, 8, 9, 10];\n\nprint_r(add_lists($test_list, $test_tup));\n",
    "    $result = array_merge($test_list, $test_tup);\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3, 4);\n$test_tup = array(5, 6, 7, 8);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    $result = array_merge($test_list, $test_tup);\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));\n",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n\n$result = add_lists($test_list, $test_tup);\n\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n\nprint_r(add_lists($test_list, $test_tup));",
    "    $test_list = array_merge($test_list, $test_tup);\n    return $test_list;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\n$result = add_lists($test_list, $test_tup);\nprint_r($result);",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[$key] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[$key] = $value;\n    }\n    return $result;\n}\n$test_list = array(1, 2, 3);\n$test_tup = array(4, 5, 6);\nprint_r(add_lists($test_list, $test_tup));",
    "    $result = array();\n    foreach ($test_list as $key => $value) {\n        $result[] = $value;\n    }\n    foreach ($test_tup as $key => $value) {\n        $result[] = $value;\n    }\n    return $result;\n}\n"
  ]
}
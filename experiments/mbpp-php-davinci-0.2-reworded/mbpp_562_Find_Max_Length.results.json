{
  "name": "mbpp_562_Find_Max_Length",
  "language": "php",
  "prompt": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $current_length = $j - $i + 1;\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 56, 58, 57, 90, 92, 94, 93, 91, 45);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmpeq4jk_wz.php:10\nStack trace:\n#0 /tmp/tmpeq4jk_wz.php(26): Find_Max_Length(Array)\n#1 /tmp/tmpeq4jk_wz.php(30): candidate(Array)\n#2 /tmp/tmpeq4jk_wz.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpeq4jk_wz.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdy_wiefy.php:27\nStack trace:\n#0 /tmp/tmpdy_wiefy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdy_wiefy.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $len = 0;\n        }\n        else {\n            $len++;\n            if ($len > $max_len) {\n                $max_len = $len;\n            }\n        }\n        $i++;\n    }\n    return $max_len;\n}\n\n$lst = [1,0,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmpcf7pdc7d.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length = 0;\n            while ($lst[$i] == 1) {\n                $length++;\n                $i++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nWarning: Undefined array key 10 in /tmp/tmptios98a5.php on line 11\n3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptios98a5.php:30\nStack trace:\n#0 /tmp/tmptios98a5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptios98a5.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1);\n$max_len = Find_Max_Length($lst);\necho $max_len;\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjy128we.php:26\nStack trace:\n#0 /tmp/tmpqjy128we.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqjy128we.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i;\n            while ($lst[$j] == 0 && $j < $n) {\n                $length++;\n                $j++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1v908bam.php:34\nStack trace:\n#0 /tmp/tmp1v908bam.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1v908bam.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(0, 1, 1, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkokj_wfp.php:25\nStack trace:\n#0 /tmp/tmpkokj_wfp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkokj_wfp.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $current_length++;\n        } else {\n            $current_length = 0;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp5uz3cddk.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        $max_length = max($max_length, $count);\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5e2_h6pp.php:25\nStack trace:\n#0 /tmp/tmp5e2_h6pp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5e2_h6pp.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < count($lst)) {\n                if ($lst[$j] == 1) {\n                    $length++;\n                    $j++;\n                } else {\n                    break;\n                }\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpumyn3t22.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max_len) {\n            $max_len = $count;\n        }\n    }\n    return $max_len;\n}\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpwtg1n6fv.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $len = 0;\n        } else {\n            $len++;\n            if ($len > $max_len) {\n                $max_len = $len;\n            }\n        }\n        $i++;\n    }\n    return $max_len;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo5sauo6.php:27\nStack trace:\n#0 /tmp/tmpeo5sauo6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeo5sauo6.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphukrvwhl.php:25\nStack trace:\n#0 /tmp/tmphukrvwhl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphukrvwhl.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 1) {\n            $length = 0;\n            while ($lst[$i] != 0) {\n                $length++;\n                $i++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nWarning: Undefined array key 13 in /tmp/tmps33azu5e.php on line 12\n4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps33azu5e.php:32\nStack trace:\n#0 /tmp/tmps33azu5e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps33azu5e.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $curr_sum = 0;\n    $sum = 0;\n    $hash = array();\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += $lst[$i];\n        if ($sum == 0) {\n            $curr_length = $i + 1;\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        }\n        if (array_key_exists($sum, $hash)) {\n            $curr_length = $i - $hash[$sum];\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        } else {\n            $hash[$sum] = $i;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(15, -2, 2, -8, 1, 7, 10, 23);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "5\nFatal error: Uncaught TypeError: Unsupported operand types: int + array in /tmp/tmpeduzpc83.php:10\nStack trace:\n#0 /tmp/tmpeduzpc83.php(32): Find_Max_Length(Array)\n#1 /tmp/tmpeduzpc83.php(36): candidate(Array)\n#2 /tmp/tmpeduzpc83.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpeduzpc83.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $count++;\n        } else {\n            $count--;\n        }\n        if ($count == 0) {\n            $max_length = max($max_length, $i - $j + 1);\n        }\n        if ($count < 0) {\n            $j = $i + 1;\n            $count = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81auskno.php:32\nStack trace:\n#0 /tmp/tmp81auskno.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp81auskno.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $prev = 0;\n    $curr = 0;\n    for ($i=0; $i < count($lst); $i++) { \n        if ($lst[$i] == 0) {\n            $curr = 1;\n        }\n        else {\n            $curr = 0;\n        }\n        if ($curr == $prev) {\n            $length++;\n        }\n        else {\n            $length = 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $prev = $curr;\n    }\n    return $max_length;\n}\n$lst = array(1,1,1,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpm66hf5s5.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    break;\n                }\n                $length++;\n                $j++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(0, 0, 1, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u2v3td0.php:37\nStack trace:\n#0 /tmp/tmp6u2v3td0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6u2v3td0.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67m1s4a1.php:24\nStack trace:\n#0 /tmp/tmp67m1s4a1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp67m1s4a1.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length += 1;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509697,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmu69ht90.php:28\nStack trace:\n#0 /tmp/tmpmu69ht90.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmu69ht90.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $prev_zero = -1;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $max_length = max($max_length, $i - $prev_zero - 1);\n            $prev_zero = $i;\n        }\n    }\n    $max_length = max($max_length, $n - $prev_zero - 1);\n    return $max_length;\n}\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t62l47p.php:24\nStack trace:\n#0 /tmp/tmp7t62l47p.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7t62l47p.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0y269ie.php:25\nStack trace:\n#0 /tmp/tmpd0y269ie.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd0y269ie.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpyp5z5yd4.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpbvhkg2q1.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ge8l80u.php:25\nStack trace:\n#0 /tmp/tmp_ge8l80u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_ge8l80u.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99viiibv.php:25\nStack trace:\n#0 /tmp/tmp99viiibv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp99viiibv.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n\t$max_length = 0;\n\t$length = 0;\n\t$i = 0;\n\t$j = 0;\n\t$n = count($lst);\n\twhile ($i < $n) {\n\t\tif ($lst[$i] == 0) {\n\t\t\t$length = 0;\n\t\t\t$j = $i;\n\t\t\twhile ($j < $n) {\n\t\t\t\tif ($lst[$j] == 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$length++;\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\tif ($length > $max_length) {\n\t\t\t\t$max_length = $length;\n\t\t\t}\n\t\t\t$i = $j;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpospxqpk3.php:37\nStack trace:\n#0 /tmp/tmpospxqpk3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpospxqpk3.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n\t$max = 0;\n\t$count = 0;\n\tforeach ($lst as $value) {\n\t\tif ($value == 1) {\n\t\t\t$count++;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t}\n\t\tif ($count > $max) {\n\t\t\t$max = $count;\n\t\t}\n\t}\n\treturn $max;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp7se36kex.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4okmihp.php:24\nStack trace:\n#0 /tmp/tmpj4okmihp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpj4okmihp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $count = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        }\n        else {\n            $count++;\n            $max_len = max($max_len, $count);\n        }\n    }\n    return $max_len;\n}\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm616x2ru.php:25\nStack trace:\n#0 /tmp/tmpm616x2ru.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm616x2ru.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] == 0) {\n            $j++;\n            $len = $j - $i;\n        } else {\n            $j++;\n            $i = $j;\n            $len = 0;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvef1tiw.php:32\nStack trace:\n#0 /tmp/tmpfvef1tiw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfvef1tiw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpqd7yk4jo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpphrdx636.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqb4gvm_a.php:23\nStack trace:\n#0 /tmp/tmpqb4gvm_a.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpqb4gvm_a.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $current_length = 0;\n        } else {\n            $current_length += 1;\n            $max_length = max($max_length, $current_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc84o7qb2.php:24\nStack trace:\n#0 /tmp/tmpc84o7qb2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc84o7qb2.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $size = sizeof($lst);\n    for ($i = 0; $i < $size; $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18cv1hc2.php:27\nStack trace:\n#0 /tmp/tmp18cv1hc2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp18cv1hc2.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < count($lst)) {\n                if ($lst[$j] == 1) {\n                    $length++;\n                    $j++;\n                } else {\n                    break;\n                }\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34wkacc1.php:36\nStack trace:\n#0 /tmp/tmp34wkacc1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp34wkacc1.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $current_sum = 0;\n    $sum_array = array();\n    $sum_array[0] = -1;\n    for ($i = 0; $i < count($lst); $i++) {\n        $current_sum += $lst[$i];\n        if (array_key_exists($current_sum, $sum_array)) {\n            $current_length = $i - $sum_array[$current_sum];\n        } else {\n            $sum_array[$current_sum] = $i;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught TypeError: Unsupported operand types: int + array in /tmp/tmprlms6nj1.php:10\nStack trace:\n#0 /tmp/tmprlms6nj1.php(26): Find_Max_Length(Array)\n#1 /tmp/tmprlms6nj1.php(30): candidate(Array)\n#2 /tmp/tmprlms6nj1.php(35): test()\n#3 {main}\n  thrown in /tmp/tmprlms6nj1.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbi3hvy0h.php:25\nStack trace:\n#0 /tmp/tmpbi3hvy0h.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbi3hvy0h.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max = 0;\n    $count = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max = max($max, $count);\n        }\n    }\n    return $max;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4l4l_y2l.php:25\nStack trace:\n#0 /tmp/tmp4l4l_y2l.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4l4l_y2l.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(0, 0, 1, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpduz8w1zu.php:25\nStack trace:\n#0 /tmp/tmpduz8w1zu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpduz8w1zu.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9jkhwof.php:25\nStack trace:\n#0 /tmp/tmpm9jkhwof.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm9jkhwof.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        $j = $i + 1;\n        $length = 1;\n        while ($j < $n) {\n            if ($lst[$j] > $lst[$j - 1]) {\n                $length++;\n            } else {\n                break;\n            }\n            $j++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i = $i + $length;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "9\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2rev7zk.php:35\nStack trace:\n#0 /tmp/tmpr2rev7zk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr2rev7zk.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst) - 1) {\n        if ($lst[$i] < $lst[$i + 1]) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n            $j = $i;\n        }\n        $i++;\n    }\n    return $j - $max_length + 1;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$lst1 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$lst2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpbpt_1mxx.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        if ($lst[$i] == 1) {\n            $curr_length++;\n        } else {\n            $curr_length = 0;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ieauxho.php:27\nStack trace:\n#0 /tmp/tmp9ieauxho.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9ieauxho.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length += 1;\n            $max_length = max($max_length, $curr_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpabk9u4xa.php:25\nStack trace:\n#0 /tmp/tmpabk9u4xa.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpabk9u4xa.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho \"The length of the longest subarray is: \" . Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "The length of the longest subarray is: 4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxjmedhy.php:25\nStack trace:\n#0 /tmp/tmpfxjmedhy.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfxjmedhy.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $max_len_arr = [];\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        $max_len_arr[$i] = 1;\n        for ($j = 0; $j < $i; $j++) {\n            if ($lst[$j] < $lst[$i]) {\n                $max_len_arr[$i] = max($max_len_arr[$i], $max_len_arr[$j] + 1);\n            }\n        }\n        $max_len = max($max_len, $max_len_arr[$i]);\n    }\n    return $max_len;\n}\n\n$lst = [10, 22, 9, 33, 21, 50, 41, 60];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqbk0uee.php:26\nStack trace:\n#0 /tmp/tmpbqbk0uee.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbqbk0uee.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cf6w821.php:28\nStack trace:\n#0 /tmp/tmp2cf6w821.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2cf6w821.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr1s7psb.php:25\nStack trace:\n#0 /tmp/tmpqr1s7psb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqr1s7psb.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $prev_element = -1;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] > $prev_element) {\n            $current_length++;\n        } else {\n            $current_length = 1;\n        }\n        $max_length = max($max_length, $current_length);\n        $prev_element = $lst[$i];\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxygn7jd.php:26\nStack trace:\n#0 /tmp/tmpoxygn7jd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoxygn7jd.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        while ($j < $n) {\n            if ($lst[$j] == 1) {\n                $curr_length++;\n            } else {\n                break;\n            }\n            $j++;\n        }\n        $max_length = max($max_length, $curr_length);\n        $curr_length = 0;\n        $i = $j;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124201,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplh3f2atw.php:24\nStack trace:\n#0 /tmp/tmplh3f2atw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplh3f2atw.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29za0ty9.php:24\nStack trace:\n#0 /tmp/tmp29za0ty9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp29za0ty9.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $len = 0;\n            $j = $i;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    break;\n                }\n                $len += 1;\n                $j += 1;\n            }\n            $i = $j;\n        }\n        else {\n            $len = 0;\n            $j = $i;\n            while ($j < $n) {\n                if ($lst[$j] == 0) {\n                    break;\n                }\n                $len += 1;\n                $j += 1;\n            }\n            $i = $j;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgcetdpjz.php:48\nStack trace:\n#0 /tmp/tmpgcetdpjz.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgcetdpjz.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzl204rb.php:25\nStack trace:\n#0 /tmp/tmpqzl204rb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqzl204rb.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $current_length++;\n        } else {\n            $current_length = 0;\n        }\n        if ($current_length > $max_length) {\n            $max_length = $current_length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt0m0qp2s.php:29\nStack trace:\n#0 /tmp/tmpt0m0qp2s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt0m0qp2s.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $cur_length += 1;\n        } else {\n            $cur_length = 0;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp67zp6mbt.php:26\nStack trace:\n#0 /tmp/tmp67zp6mbt.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp67zp6mbt.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max = max($max, $count);\n        }\n    }\n    return $max;\n}\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp409frac3.php:23\nStack trace:\n#0 /tmp/tmp409frac3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp409frac3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $lst_len = count($lst);\n    for ($i = 0; $i < $lst_len; $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjtmy343z.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < count($lst)) {\n                if ($lst[$j] == 1) {\n                    $length++;\n                    if ($length > $max_length) {\n                        $max_length = $length;\n                    }\n                }\n                $j++;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeq8ait8q.php:34\nStack trace:\n#0 /tmp/tmpeq8ait8q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpeq8ait8q.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $count = count($lst);\n    for ($i = 0; $i < $count; $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv05aajfn.php:25\nStack trace:\n#0 /tmp/tmpv05aajfn.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv05aajfn.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] == 0) {\n            $j++;\n            $length = $j - $i;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        } else {\n            $i = $j + 1;\n            $j = $i;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgq_44y6y.php:30\nStack trace:\n#0 /tmp/tmpgq_44y6y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgq_44y6y.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length++;\n            $max_length = max($max_length, $curr_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyo__1_4z.php:25\nStack trace:\n#0 /tmp/tmpyo__1_4z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyo__1_4z.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len += 1;\n            $max_len = max($max_len, $cur_len);\n        }\n        $i += 1;\n    }\n    return $max_len;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\nprint_r(Find_Max_Length($lst));\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cwi42od.php:26\nStack trace:\n#0 /tmp/tmp0cwi42od.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0cwi42od.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp4aw8g9p7.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length += 1;\n                } else {\n                    break;\n                }\n                $j += 1;\n            }\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = [0, 0, 1, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9knt5c4c.php:37\nStack trace:\n#0 /tmp/tmp9knt5c4c.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9knt5c4c.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length += 1;\n                } else {\n                    break;\n                }\n                $j += 1;\n            }\n            $i = $j;\n        } else {\n            $i += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppa1hzp3b.php:39\nStack trace:\n#0 /tmp/tmppa1hzp3b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppa1hzp3b.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwzf9u4x.php:25\nStack trace:\n#0 /tmp/tmplwzf9u4x.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplwzf9u4x.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length += 1;\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtgeqy1l.php:28\nStack trace:\n#0 /tmp/tmpbtgeqy1l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbtgeqy1l.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 56, 58, 57, 90, 92, 94, 93, 91, 45];\n$max_length = Find_Max_Length($lst);\necho $max_length;\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmpo4m9ah0y.php:10\nStack trace:\n#0 /tmp/tmpo4m9ah0y.php(27): Find_Max_Length(Array)\n#1 /tmp/tmpo4m9ah0y.php(31): candidate(Array)\n#2 /tmp/tmpo4m9ah0y.php(36): test()\n#3 {main}\n  thrown in /tmp/tmpo4m9ah0y.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n            $i++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n            $i++;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvdoo5h5g.php:29\nStack trace:\n#0 /tmp/tmpvdoo5h5g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvdoo5h5g.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp4ivd83b3.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwx58hza.php:23\nStack trace:\n#0 /tmp/tmpcwx58hza.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcwx58hza.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvwii9fjo.php:23\nStack trace:\n#0 /tmp/tmpvwii9fjo.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpvwii9fjo.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8yxtcyw.php:25\nStack trace:\n#0 /tmp/tmpf8yxtcyw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpf8yxtcyw.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n$lst = array(1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp15e23wxy.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 56, 58, 57, 90, 92, 94, 93, 91, 45);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmpwdxkh8zr.php:10\nStack trace:\n#0 /tmp/tmpwdxkh8zr.php(26): Find_Max_Length(Array)\n#1 /tmp/tmpwdxkh8zr.php(30): candidate(Array)\n#2 /tmp/tmpwdxkh8zr.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpwdxkh8zr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length++;\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg8v77bdm.php:28\nStack trace:\n#0 /tmp/tmpg8v77bdm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg8v77bdm.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len += 1;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4322qo9v.php:25\nStack trace:\n#0 /tmp/tmp4322qo9v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp4322qo9v.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len += 1;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiav3bnn5.php:24\nStack trace:\n#0 /tmp/tmpiav3bnn5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpiav3bnn5.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp9v3sub7y.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        }\n        else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs0mn25a.php:27\nStack trace:\n#0 /tmp/tmpcs0mn25a.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcs0mn25a.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $lst_length = count($lst);\n    for ($i = 0; $i < $lst_length; $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmphxgfik7v.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp181sfk_o.php:29\nStack trace:\n#0 /tmp/tmp181sfk_o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp181sfk_o.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjy2txgjz.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $curr_length += 1;\n        } else {\n            $curr_length = 0;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpulfxp1o7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        $curr_len = 0;\n        for ($j = $i; $j < $len; $j++) {\n            if ($lst[$j] == 0) {\n                break;\n            }\n            $curr_len++;\n        }\n        $max_len = max($max_len, $curr_len);\n    }\n    return $max_len;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeln9j04h.php:26\nStack trace:\n#0 /tmp/tmpeln9j04h.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpeln9j04h.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpzz0ew_z8.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $current_length = 0;\n        } else {\n            $current_length++;\n            $max_length = max($max_length, $current_length);\n        }\n    }\n    return $max_length;\n}\n\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxlooud_.php:23\nStack trace:\n#0 /tmp/tmpgxlooud_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgxlooud_.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $cur_length += 1;\n        } else {\n            if ($cur_length > $max_length) {\n                $max_length = $cur_length;\n            }\n            $cur_length = 0;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcu6r6ogq.php:26\nStack trace:\n#0 /tmp/tmpcu6r6ogq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcu6r6ogq.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $curr_length++;\n        } else {\n            $curr_length = 0;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ketpp34.php:27\nStack trace:\n#0 /tmp/tmp4ketpp34.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4ketpp34.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        if ($lst[$i] != 0) {\n            $current_length++;\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n        } else {\n            $current_length = 0;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjkhus8s.php:27\nStack trace:\n#0 /tmp/tmpmjkhus8s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmjkhus8s.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q8h0itx.php:24\nStack trace:\n#0 /tmp/tmp1q8h0itx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1q8h0itx.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $current_length++;\n        } else {\n            $max_length = max($max_length, $current_length);\n            $current_length = 0;\n        }\n        $i++;\n    }\n    return max($max_length, $current_length);\n}\n\n$lst = array(1,0,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp1mbq_k87.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n7cqplq.php:27\nStack trace:\n#0 /tmp/tmp9n7cqplq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9n7cqplq.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length += 1;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfshs5he9.php:25\nStack trace:\n#0 /tmp/tmpfshs5he9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfshs5he9.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqdejev2.php:26\nStack trace:\n#0 /tmp/tmpoqdejev2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoqdejev2.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $count = 0;\n    $current_sum = 0;\n    $max_sum = 0;\n    $current_sum = 0;\n    $max_sum = 0;\n    $count = 0;\n    $current_length = 0;\n    $max_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        $current_sum += $lst[$i];\n        $current_length++;\n        if ($current_sum == 0) {\n            $current_length = 0;\n            $current_sum = 0;\n        }\n        if ($current_sum > $max_sum) {\n            $max_sum = $current_sum;\n            $max_length = $current_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught TypeError: Unsupported operand types: int + array in /tmp/tmp14dper5j.php:15\nStack trace:\n#0 /tmp/tmp14dper5j.php(32): Find_Max_Length(Array)\n#1 /tmp/tmp14dper5j.php(36): candidate(Array)\n#2 /tmp/tmp14dper5j.php(41): test()\n#3 {main}\n  thrown in /tmp/tmp14dper5j.php on line 15\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpet9f58ze.php:28\nStack trace:\n#0 /tmp/tmpet9f58ze.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpet9f58ze.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while($i < $n) {\n        if($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while($j < $n) {\n                if($lst[$j] == 1) {\n                    $length += 1;\n                    $j += 1;\n                }\n                else {\n                    break;\n                }\n            }\n            if($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        else {\n            $i += 1;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1,0,1,1,1,0,0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpkg0d4h.php:40\nStack trace:\n#0 /tmp/tmpxpkg0d4h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxpkg0d4h.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < count($lst)) {\n                if ($lst[$j] == 1) {\n                    $length++;\n                    if ($length > $max_length) {\n                        $max_length = $length;\n                    }\n                }\n                $j++;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "7\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qny42g7.php:34\nStack trace:\n#0 /tmp/tmp4qny42g7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4qny42g7.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $current_length++;\n        }\n        else {\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n            $current_length = 0;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qd2pevi.php:26\nStack trace:\n#0 /tmp/tmp4qd2pevi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4qd2pevi.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length += 1;\n                }\n                else {\n                    break;\n                }\n                $j += 1;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        else {\n            $i += 1;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1,0,1,1,1,0,0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipw4h5yk.php:40\nStack trace:\n#0 /tmp/tmpipw4h5yk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpipw4h5yk.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len += 1;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifms_3tz.php:25\nStack trace:\n#0 /tmp/tmpifms_3tz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpifms_3tz.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygf8mdqj.php:27\nStack trace:\n#0 /tmp/tmpygf8mdqj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpygf8mdqj.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $curr_sum = 0;\n    $sum = 0;\n    $map = array();\n    for ($i = 0; $i < count($lst); $i++) {\n        $sum += $lst[$i];\n        if ($sum == 0) {\n            $curr_length = $i + 1;\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        }\n        if (array_key_exists($sum, $map)) {\n            $curr_length = $i - $map[$sum];\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        } else {\n            $map[$sum] = $i;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(15, -2, 2, -8, 1, 7, 10, 23);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught TypeError: Unsupported operand types: int + array in /tmp/tmpfny3_blo.php:10\nStack trace:\n#0 /tmp/tmpfny3_blo.php(32): Find_Max_Length(Array)\n#1 /tmp/tmpfny3_blo.php(36): candidate(Array)\n#2 /tmp/tmpfny3_blo.php(41): test()\n#3 {main}\n  thrown in /tmp/tmpfny3_blo.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $cur_length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] == 0) {\n            $cur_length = 0;\n            $j++;\n        } else {\n            $cur_length++;\n            $j++;\n            $max_length = max($max_length, $cur_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt6rmcfl.php:29\nStack trace:\n#0 /tmp/tmprt6rmcfl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprt6rmcfl.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxmzslna.php:25\nStack trace:\n#0 /tmp/tmpwxmzslna.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwxmzslna.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n            $j = $i + 1;\n            while ($j < $n && $lst[$j] == 1) {\n                $curr_length++;\n                $j++;\n            }\n            $i = $j;\n        } else {\n            $i++;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\n\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xhohxgx.php:36\nStack trace:\n#0 /tmp/tmp7xhohxgx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7xhohxgx.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $current_length = 0;\n        } else {\n            $current_length++;\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp5m4pw8gf.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13ajo1sz.php:28\nStack trace:\n#0 /tmp/tmp13ajo1sz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp13ajo1sz.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length++;\n                } else {\n                    break;\n                }\n                $j++;\n            }\n            $i = $j;\n        } else {\n            $length++;\n            $i++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpijo35mf4.php:38\nStack trace:\n#0 /tmp/tmpijo35mf4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpijo35mf4.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length += 1;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpsn0ckzwb.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $current_length += 1;\n        } else {\n            $max_length = max($max_length, $current_length);\n            $current_length = 0;\n        }\n    }\n    $max_length = max($max_length, $current_length);\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpv_c4aj41.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i;\n            while ($j < $n && $lst[$j] == 0) {\n                $length++;\n                $j++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywbtqyfz.php:34\nStack trace:\n#0 /tmp/tmpywbtqyfz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpywbtqyfz.php on line 34\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9chbennq.php:27\nStack trace:\n#0 /tmp/tmp9chbennq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9chbennq.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    foreach ($lst as $value) {\n        if ($value == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp_m_ao66d.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lndgocu.php:27\nStack trace:\n#0 /tmp/tmp6lndgocu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6lndgocu.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        while ($j < $n) {\n            if ($lst[$j] == 1) {\n                $len++;\n            }\n            else {\n                break;\n            }\n            $j++;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n        $len = 0;\n        $i = $j;\n    }\n    return $max_len;\n}\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124201,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max = max($max, $count);\n        }\n    }\n    return $max;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f7w8qc9.php:24\nStack trace:\n#0 /tmp/tmp7f7w8qc9.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7f7w8qc9.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxubvsfoy.php:26\nStack trace:\n#0 /tmp/tmpxubvsfoy.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxubvsfoy.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    break;\n                }\n                $length++;\n                $j++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00aswk6m.php:37\nStack trace:\n#0 /tmp/tmp00aswk6m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp00aswk6m.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $cur_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $cur_length += 1;\n        } else {\n            $cur_length = 0;\n        }\n        if ($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkh7khm4.php:26\nStack trace:\n#0 /tmp/tmphkh7khm4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphkh7khm4.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        $cur_len = 0;\n        for ($j = $i; $j < $len; $j++) {\n            if ($lst[$j] == 1) {\n                $cur_len++;\n            } else {\n                break;\n            }\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsv3bfo2s.php:29\nStack trace:\n#0 /tmp/tmpsv3bfo2s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsv3bfo2s.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpnri1z2qu.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmps2466g4a.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_ovq0zc.php:26\nStack trace:\n#0 /tmp/tmp9_ovq0zc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9_ovq0zc.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 1) {\n            $length = 0;\n            while ($i < $n && $lst[$i] == 1) {\n                $length++;\n                $i++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgnap6il4.php:32\nStack trace:\n#0 /tmp/tmpgnap6il4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgnap6il4.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp6xl5u8rt.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $len = 0;\n            $i++;\n            $j = $i;\n        } else {\n            $len++;\n            $i++;\n        }\n        if ($len > $max_len) {\n            $max_len = $len;\n        }\n    }\n    return $max_len;\n}\n$lst = array(1,1,1,0,0,0,1,1,1,1,0,1,1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_mxe285.php:30\nStack trace:\n#0 /tmp/tmpy_mxe285.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy_mxe285.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqr1s7psb.php:25\nStack trace:\n#0 /tmp/tmpqr1s7psb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqr1s7psb.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30pslaby.php:24\nStack trace:\n#0 /tmp/tmp30pslaby.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp30pslaby.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $len = 0;\n        } else {\n            $len++;\n            $max_len = max($max_len, $len);\n        }\n    }\n    return $max_len;\n}\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpme2wth7x.php on line 17\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length += 1;\n            $max_length = max($max_length, $curr_length);\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqg5_xyks.php:26\nStack trace:\n#0 /tmp/tmpqg5_xyks.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqg5_xyks.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    break;\n                }\n                $length++;\n                $j++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5k4ft8is.php:36\nStack trace:\n#0 /tmp/tmp5k4ft8is.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5k4ft8is.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        } else {\n            $length = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymhg5e32.php:27\nStack trace:\n#0 /tmp/tmpymhg5e32.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpymhg5e32.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        $j = $i + 1;\n        $length = 1;\n        while ($j < $n) {\n            if ($lst[$j] > $lst[$j - 1]) {\n                $length++;\n            } else {\n                break;\n            }\n            $j++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i = $i + $length;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4lwcdb7.php:35\nStack trace:\n#0 /tmp/tmpq4lwcdb7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq4lwcdb7.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n            $i++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpghc7umcz.php:29\nStack trace:\n#0 /tmp/tmpghc7umcz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpghc7umcz.php on line 29\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrueexnn.php:28\nStack trace:\n#0 /tmp/tmpmrueexnn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmrueexnn.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $curr_sum = 0;\n    $max_sum = 0;\n    $start = 0;\n    $end = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        $curr_sum += $lst[$i];\n        $curr_length++;\n        if ($curr_sum == $max_sum) {\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n                $end = $i;\n            }\n        }\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n            $max_length = $curr_length;\n            $end = $i;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n            $curr_length = 0;\n        }\n    }\n    $start = $end - $max_length + 1;\n    echo \"Max sum is \" . $max_sum . \"<br>\";\n    echo \"Max length is \" . $max_length . \"<br>\";\n    echo \"Start index is \" . $start . \"<br>\";\n    echo \"End index is \" . $end . \"<br>\";\n}\n\n$lst = array(-2, -3, 4, -1, -2, 1, 5, -3);\nFind_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "Max sum is 7<br>Max length is 5<br>Start index is 2<br>End index is 6<br>\nFatal error: Uncaught TypeError: Unsupported operand types: int + array in /tmp/tmpytk5ranc.php:12\nStack trace:\n#0 /tmp/tmpytk5ranc.php(40): Find_Max_Length(Array)\n#1 /tmp/tmpytk5ranc.php(44): candidate(Array)\n#2 /tmp/tmpytk5ranc.php(49): test()\n#3 {main}\n  thrown in /tmp/tmpytk5ranc.php on line 12\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst_pqjzs.php:25\nStack trace:\n#0 /tmp/tmpst_pqjzs.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpst_pqjzs.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        }\n        else {\n            $curr_length++;\n            if ($curr_length > $max_length) {\n                $max_length = $curr_length;\n            }\n        }\n    }\n    return $max_length;\n}\n$lst = array(1,0,1,1,1,0,0,1,1,1,1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8v65bvca.php:26\nStack trace:\n#0 /tmp/tmp8v65bvca.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8v65bvca.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $cur_len++;\n        } else {\n            $max_len = max($max_len, $cur_len);\n            $cur_len = 0;\n        }\n    }\n    return max($max_len, $cur_len);\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\n\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mt3vmew.php:26\nStack trace:\n#0 /tmp/tmp8mt3vmew.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8mt3vmew.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $curr_length++;\n            $max_length = max($max_length, $curr_length);\n        } else {\n            $curr_length = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpkg0zvouy.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 1, 1, 0, 1, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5763_sl.php:28\nStack trace:\n#0 /tmp/tmpv5763_sl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv5763_sl.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $len = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $len = 0;\n            $j = $i;\n            while ($j < $n && $lst[$j] == 0) {\n                $len++;\n                $j++;\n            }\n            if ($len > $max_len) {\n                $max_len = $len;\n            }\n            $i = $j;\n        } else {\n            $i++;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx70ytq_t.php:35\nStack trace:\n#0 /tmp/tmpx70ytq_t.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpx70ytq_t.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29lq_rsk.php:24\nStack trace:\n#0 /tmp/tmp29lq_rsk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp29lq_rsk.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        } else {\n            $length = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp94pxs4sn.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_r6g45_v.php:26\nStack trace:\n#0 /tmp/tmp_r6g45_v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_r6g45_v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $last_elem = null;\n    foreach ($lst as $elem) {\n        if ($last_elem == null || $last_elem < $elem) {\n            $curr_length++;\n        } else {\n            $curr_length = 1;\n        }\n        $max_length = max($max_length, $curr_length);\n        $last_elem = $elem;\n    }\n    return $max_length;\n}\n\n$lst = [1, 2, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"]\" in /tmp/tmptq8o0rpe.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n        $i += 1;\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_r6g45_v.php:26\nStack trace:\n#0 /tmp/tmp_r6g45_v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_r6g45_v.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpedgo_14b.php:25\nStack trace:\n#0 /tmp/tmpedgo_14b.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpedgo_14b.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $current_length = 0;\n        } else {\n            $current_length++;\n            $max_length = max($max_length, $current_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg36x5n_p.php:25\nStack trace:\n#0 /tmp/tmpg36x5n_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg36x5n_p.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wpyu83q.php:24\nStack trace:\n#0 /tmp/tmp9wpyu83q.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9wpyu83q.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptmsqe7t7.php:24\nStack trace:\n#0 /tmp/tmptmsqe7t7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptmsqe7t7.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpall32_im.php:24\nStack trace:\n#0 /tmp/tmpall32_im.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpall32_im.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length += 1;\n            $max_length = max($max_length, $curr_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4juibi9.php:25\nStack trace:\n#0 /tmp/tmp_4juibi9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_4juibi9.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmps69efgw0.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpes1_j7ya.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length += 1;\n                } else {\n                    break;\n                }\n                $j += 1;\n            }\n            $i = $j;\n        } else {\n            $length += 1;\n            $i += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpds_98obf.php:40\nStack trace:\n#0 /tmp/tmpds_98obf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpds_98obf.php on line 40\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsqlue8j.php:24\nStack trace:\n#0 /tmp/tmppsqlue8j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmppsqlue8j.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 56, 58, 57, 90, 92, 94, 93, 91, 45];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmp8gjq_49k.php:10\nStack trace:\n#0 /tmp/tmp8gjq_49k.php(26): Find_Max_Length(Array)\n#1 /tmp/tmp8gjq_49k.php(30): candidate(Array)\n#2 /tmp/tmp8gjq_49k.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp8gjq_49k.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamgmfvc9.php:28\nStack trace:\n#0 /tmp/tmpamgmfvc9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpamgmfvc9.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < count($lst)) {\n        $j = $i;\n        while ($j < count($lst) && $lst[$j] == 1) {\n            $length++;\n            $j++;\n        }\n        $i = $j;\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $length = 0;\n    }\n    return $max_length;\n}\n\n$lst = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124202,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $cur_len++;\n        } else {\n            $cur_len = 0;\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = array(0, 0, 1, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx86p1otg.php:27\nStack trace:\n#0 /tmp/tmpx86p1otg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx86p1otg.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxibmyrsa.php:26\nStack trace:\n#0 /tmp/tmpxibmyrsa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxibmyrsa.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 1) {\n            $curr_length++;\n        } else {\n            $curr_length = 0;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp00yd70u5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjypeqd76.php:28\nStack trace:\n#0 /tmp/tmpjypeqd76.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjypeqd76.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpi_gdxf3m.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 56, 58, 57, 90, 92, 94, 93, 91, 45);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmp_ix3sh9t.php:10\nStack trace:\n#0 /tmp/tmp_ix3sh9t.php(27): Find_Max_Length(Array)\n#1 /tmp/tmp_ix3sh9t.php(31): candidate(Array)\n#2 /tmp/tmp_ix3sh9t.php(36): test()\n#3 {main}\n  thrown in /tmp/tmp_ix3sh9t.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n            $i++;\n        } else {\n            $j = $i;\n            while ($j < $n && $lst[$j] == 1) {\n                $curr_length++;\n                $j++;\n            }\n            $i = $j;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124202,
      "stdout": "3",
      "stderr": "",
      "exit_code": -1,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        $j = $i + 1;\n        $length = 1;\n        while ($j < $n) {\n            if ($lst[$j] > $lst[$j - 1]) {\n                $length++;\n            } else {\n                break;\n            }\n            $j++;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i = $i + $length;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 2, 3, 4, 5, 3, 4, 5, 6);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwzdgixt.php:35\nStack trace:\n#0 /tmp/tmpbwzdgixt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbwzdgixt.php on line 35\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $size = count($lst);\n    while ($i < $size) {\n        $j = $i + 1;\n        while ($j < $size) {\n            if ($lst[$i] == $lst[$j]) {\n                $length = $j - $i;\n                if ($length > $max_length) {\n                    $max_length = $length;\n                }\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 2, 3, 2, 1, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "18\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_f9d28qc.php:31\nStack trace:\n#0 /tmp/tmp_f9d28qc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_f9d28qc.php on line 31\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length++;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4okmihp.php:24\nStack trace:\n#0 /tmp/tmpj4okmihp.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpj4okmihp.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n            $i++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n            $i++;\n        }\n    }\n    return $max_length;\n}\n$lst = array(0, 1, 1, 0, 1, 1, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjss09ffl.php:28\nStack trace:\n#0 /tmp/tmpjss09ffl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjss09ffl.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n\t$max_length = 0;\n\t$length = 0;\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($lst)) {\n\t\tif ($lst[$i] == 0) {\n\t\t\t$length = 0;\n\t\t\t$j = $i + 1;\n\t\t\twhile ($j < count($lst)) {\n\t\t\t\tif ($lst[$j] == 1) {\n\t\t\t\t\t$length++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\tif ($length > $max_length) {\n\t\t\t\t$max_length = $length;\n\t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fceonsd.php:37\nStack trace:\n#0 /tmp/tmp8fceonsd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8fceonsd.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $current_length = 0;\n    $lst_len = count($lst);\n    for ($i = 0; $i < $lst_len; $i++) {\n        if ($lst[$i] == 0) {\n            $current_length = 0;\n        } else {\n            $current_length += 1;\n            if ($current_length > $max_length) {\n                $max_length = $current_length;\n            }\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23ztasi2.php:27\nStack trace:\n#0 /tmp/tmp23ztasi2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp23ztasi2.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $length = 0;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8c0i1d1.php:28\nStack trace:\n#0 /tmp/tmpy8c0i1d1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy8c0i1d1.php on line 28\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n\t$max_length = 0;\n\t$length = 0;\n\t$i = 0;\n\t$j = 0;\n\t$n = count($lst);\n\twhile ($i < $n) {\n\t\tif ($lst[$i] == 0) {\n\t\t\t$length = 0;\n\t\t\t$j = $i;\n\t\t\twhile ($j < $n) {\n\t\t\t\tif ($lst[$j] == 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$length++;\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\tif ($length > $max_length) {\n\t\t\t\t$max_length = $length;\n\t\t\t}\n\t\t\t$i = $j;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 1, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpospxqpk3.php:37\nStack trace:\n#0 /tmp/tmpospxqpk3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpospxqpk3.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $cur_length = 0;\n    $prev_value = 0;\n    $cur_value = 0;\n    $prev_value = $lst[0];\n    $cur_value = $lst[0];\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] > $prev_value) {\n            $cur_value = $lst[$i];\n            $cur_length++;\n        } else {\n            if ($cur_length > $max_length) {\n                $max_length = $cur_length;\n            }\n            $cur_length = 0;\n            $prev_value = $lst[$i];\n            $cur_value = $lst[$i];\n        }\n    }\n    if ($cur_length > $max_length) {\n        $max_length = $cur_length;\n    }\n    return $max_length;\n}\n\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100);\n$lst = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp707d35rw.php on line 32\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 1) {\n            $length++;\n            $i++;\n        }\n        else {\n            $j = $i + 1;\n            while ($j < $n && $lst[$j] == 0) {\n                $j++;\n            }\n            $i = $j;\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp6_386ei_.php on line 30\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 56, 58, 57, 90, 92, 94, 93, 91, 45];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmp8gjq_49k.php:10\nStack trace:\n#0 /tmp/tmp8gjq_49k.php(26): Find_Max_Length(Array)\n#1 /tmp/tmp8gjq_49k.php(30): candidate(Array)\n#2 /tmp/tmp8gjq_49k.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp8gjq_49k.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n\t$max_length = 0;\n\t$length = 0;\n\t$i = 0;\n\twhile ($i < count($lst)) {\n\t\tif ($lst[$i] == 1) {\n\t\t\t$length++;\n\t\t} else {\n\t\t\t$length = 0;\n\t\t}\n\t\tif ($length > $max_length) {\n\t\t\t$max_length = $length;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpj1v69py1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            $count = 0;\n        }\n        if ($count > $max_length) {\n            $max_length = $count;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 1, 0, 0];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd7_tfu8g.php:27\nStack trace:\n#0 /tmp/tmpd7_tfu8g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd7_tfu8g.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwx5213ai.php:27\nStack trace:\n#0 /tmp/tmpwx5213ai.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwx5213ai.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length += 1;\n                } else {\n                    break;\n                }\n                $j += 1;\n            }\n            $i = $j;\n        } else {\n            $i += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpxz0mooki.php on line 33\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmphj1ulceq.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max_length = max($max_length, $count);\n        }\n    }\n    return $max_length;\n}\n\n$lst = [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9c80uxa.php:24\nStack trace:\n#0 /tmp/tmpy9c80uxa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpy9c80uxa.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $cur_len++;\n        } else {\n            $cur_len = 0;\n        }\n        if ($cur_len > $max_len) {\n            $max_len = $cur_len;\n        }\n    }\n    return $max_len;\n}\n\n$lst = [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr40c7h7.php:27\nStack trace:\n#0 /tmp/tmpmr40c7h7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmr40c7h7.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n        } else {\n            $length += 1;\n            $max_length = max($max_length, $length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzcvh8gh.php:24\nStack trace:\n#0 /tmp/tmpmzcvh8gh.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmzcvh8gh.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 1) {\n            $curr_length++;\n        } else {\n            $curr_length = 0;\n        }\n        if ($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmpwaj5p21c.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n) {\n        if ($lst[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n) {\n                if ($lst[$j] == 1) {\n                    $length += 1;\n                } else {\n                    break;\n                }\n                $j += 1;\n            }\n            $i = $j;\n        } else {\n            $i += 1;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 0, 0, 1, 0, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxkwrj9si.php:39\nStack trace:\n#0 /tmp/tmpxkwrj9si.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxkwrj9si.php on line 39\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    $i = 0;\n    while ($i < count($lst)) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len += 1;\n            $max_len = max($max_len, $curr_len);\n        }\n        $i += 1;\n    }\n    return $max_len;\n}\n\n$lst = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7b6dsns4.php:26\nStack trace:\n#0 /tmp/tmp7b6dsns4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7b6dsns4.php on line 26\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $curr_len = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len += 1;\n            $max_len = max($max_len, $curr_len);\n        }\n    }\n    return $max_len;\n}\n\n$lst = [0, 1, 1, 0, 1, 1, 1, 0, 1, 1];\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlw7dbh_.php:24\nStack trace:\n#0 /tmp/tmpvlw7dbh_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvlw7dbh_.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_len = 0;\n    $cur_len = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $cur_len = 0;\n        } else {\n            $cur_len++;\n            $max_len = max($max_len, $cur_len);\n        }\n    }\n    return $max_len;\n}\n\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplokue8a1.php:23\nStack trace:\n#0 /tmp/tmplokue8a1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmplokue8a1.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 56, 58, 57, 90, 92, 94, 93, 91, 45);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmpwdxkh8zr.php:10\nStack trace:\n#0 /tmp/tmpwdxkh8zr.php(26): Find_Max_Length(Array)\n#1 /tmp/tmpwdxkh8zr.php(30): candidate(Array)\n#2 /tmp/tmpwdxkh8zr.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpwdxkh8zr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $curr_length = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n        if ($lst[$i] == 0) {\n            $curr_length = 0;\n        } else {\n            $curr_length++;\n            $max_length = max($max_length, $curr_length);\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbveb9d3v.php:25\nStack trace:\n#0 /tmp/tmpbveb9d3v.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbveb9d3v.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $count = 0;\n    $len = count($lst);\n    for ($i = 0; $i < $len; $i++) {\n        if ($lst[$i] == 1) {\n            $count++;\n        } else {\n            if ($count > $max_length) {\n                $max_length = $count;\n            }\n            $count = 0;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124187,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdf4e07t.php:27\nStack trace:\n#0 /tmp/tmpcdf4e07t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcdf4e07t.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a phpthon function to find the length of the longest subarrays.\nfunction Find_Max_Length($lst) {\n    $max_length = 0;\n    $length = 0;\n    $i = 0;\n    $j = 0;\n    $n = count($lst);\n    while ($i < $n && $j < $n) {\n        if ($lst[$j] - $lst[$i] == $j - $i) {\n            $length = $j - $i + 1;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}\n\n$lst = array(1, 56, 58, 57, 90, 92, 94, 93, 91, 45);\necho Find_Max_Length($lst);\nfunction candidate(...$args) {\n    return Find_Max_Length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1), array(1, 4), array(5, 6, 7, 8))) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(0, 1), array(2, 2), array(3, 2, 1))) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(7), array(22, 23), array(13, 14, 15), array(10, 20, 30, 40, 50))) !== 5) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666124186,
      "stdout": "1\nFatal error: Uncaught TypeError: Unsupported operand types: array - array in /tmp/tmpwdxkh8zr.php:10\nStack trace:\n#0 /tmp/tmpwdxkh8zr.php(26): Find_Max_Length(Array)\n#1 /tmp/tmpwdxkh8zr.php(30): candidate(Array)\n#2 /tmp/tmpwdxkh8zr.php(35): test()\n#3 {main}\n  thrown in /tmp/tmpwdxkh8zr.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}
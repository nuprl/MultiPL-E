{
  "name": "mbpp_222_check_type",
  "language": "php",
  "prompt": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, \"5.0\");\n$test_tuple4 = array(1, 2, 3, 4, \"5.0\", 6);\n\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple1)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple2)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple3)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\necho \"<br>\";\nif (check_type($test_tuple4)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type<br>All elements do not have same data type<br>All elements do not have same data type<br>All elements do not have same data type<br>All elements do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    $first_element_type = gettype($first_element);\n    $result = true;\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_element_type) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements don't have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, \"3\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, null);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new Exception());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new DateTime());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplFixedArray(1));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplDoublyLinkedList());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplStack());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplQueue());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, new SplHe\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \")\" in /tmp/tmp573yqab9.php on line 53\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach($test_tuple as $value) {\n        if(gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif(check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\necho check_type($test_tuple);\necho \"<br>\";\necho check_type($test_tuple2);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "1<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"Elements are of different type\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type<br>All elements in array do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "Same Type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = 0;\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) == $type) {\n            $count++;\n        }\n    }\n    if ($count == count($test_tuple)) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements don't have same data type\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe809sn3_.php:24\nStack trace:\n#0 /tmp/tmpe809sn3_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpe809sn3_.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements have same data type\" : \"All elements do not have same data type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple = array_map('gettype', $test_tuple);\n    $test_tuple = array_unique($test_tuple);\n    if (count($test_tuple) == 1) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx629pl00.php:20\nStack trace:\n#0 /tmp/tmpx629pl00.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpx629pl00.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = [1, 2, 3, 4, 5];\nif (check_type($test_tuple)) {\n    echo \"All the elements in array have same data type\";\n} else {\n    echo \"All the elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All the elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"True\" : \"False\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, 5.0, \"6\");\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple1) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array have not same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type<br>All elements do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    for($i=1; $i<count($test_tuple); $i++) {\n        if(gettype($test_tuple[$i]) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif(check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type<br>All elements do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7);\n$test_tuple2 = array(1, 2, 3, 4, 5, 6, \"7\");\n$test_tuple3 = array(1, 2, 3, 4, 5, 6, 7.0);\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, 5.0);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple1)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple2)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type<br>All elements in array do not have same data type<br>All elements in array do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type.\\n\";\n} else {\n    echo \"All elements do not have same data type.\\n\";\n}\n\nif (check_type($test_tuple2)) {\n    echo \"All elements have same data type.\\n\";\n} else {\n    echo \"All elements do not have same data type.\\n\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.\nAll elements do not have same data type.\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\necho \"<br>\";\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1<br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"6\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\", 8);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\", 8, true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\", 8, true, false);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\", 8, true, false, null);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\", 8, true, false, null, array());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0, \"7\",\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpd_r8s3o3.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3));\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass());\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null, function () {\n    return \"Hello\";\n});\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), null, function () {\n    return \"Hello\";\n}, new DateTime());\necho check_type($test_tuple);\n\n$\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting variable or \"{\" or \"$\" in /tmp/tmpaz84xufo.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if (count($result) == 1) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\");\ncheck_type($test_tuple);\necho \"<br>\";\n\n$test_tuple = array(1,\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpeft1thp8.php on line 49\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"6\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3));\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3), \"6\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3), 6.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3), array(1, 2, 3));\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3), array(1, 2, 3), \"6\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3), array(1, 2, 3), 6.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3), array(1, 2, 3), array(1, 2, 3));\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, array(\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpjerz5ycy.php on line 44\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, 5.0, \"6\");\n$test_tuple4 = array(1, 2, 3, 4, 5.0, 6.0);\n\necho check_type($test_tuple);\necho \"\\n\";\necho check_type($test_tuple1);\necho \"\\n\";\necho check_type($test_tuple2);\necho \"\\n\";\necho check_type($test_tuple3);\necho \"\\n\";\necho check_type($test_tuple4);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n\n\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    $count = count($test_tuple);\n    for ($i = 1; $i < $count; $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, \"a\");\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.\nAll elements are not of same type.\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, 5.0, \"6\");\n\necho check_type($test_tuple) ? \"True\\n\" : \"False\\n\";\necho check_type($test_tuple1) ? \"True\\n\" : \"False\\n\";\necho check_type($test_tuple2) ? \"True\\n\" : \"False\\n\";\necho check_type($test_tuple3) ? \"True\\n\" : \"False\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "True\nFalse\nFalse\nFalse\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\n$test_tuple2 = array(1, 2, 3, 4, 5, 6, 7, 8, 9, \"10\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple2)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.<br>All elements are not of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, 5.1);\n\necho check_type($test_tuple);\necho \"<br>\";\necho check_type($test_tuple1);\necho \"<br>\";\necho check_type($test_tuple2);\necho \"<br>\";\necho check_type($test_tuple3);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1<br><br><br>",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_count_values(array_map('gettype', $test_tuple));\n    if(count($result) === 1) {\n        echo \"All elements have same data type\";\n    }\n    else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf2r5b4f.php:20\nStack trace:\n#0 /tmp/tmpaf2r5b4f.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpaf2r5b4f.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if(count($result) === 1) {\n        echo \"All elements have same data type\";\n    } else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpzpdokf.php:19\nStack trace:\n#0 /tmp/tmpwpzpdokf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwpzpdokf.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), NULL);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), NULL, resource);\nvar_dump(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "bool(true)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Error: Undefined constant \"resource\" in /tmp/tmp3a75uqk3.php:37\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp3a75uqk3.php on line 37\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nprint_r(check_type($test_tuple));\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n$test_tuple3 = array(1, 2, 3, 4, 5.0);\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if (count($result) === 1) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\necho check_type([1, 2, 3, 4, 5]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\"]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\"]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10, 11]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10, 11, 12]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10, 11, 12, 13]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10, 11, 12, 13, 14]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10, 11, 12, 13, 14, 15]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]);\necho \"\\n\";\necho check_type([1, 2, 3, 4, \"5\", \"6\", 7, 8, 9,\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmp99o3xvnb.php on line 38\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\necho \"<br>\";\nif (check_type($test_tuple1)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\necho \"<br>\";\nif (check_type($test_tuple2)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.<br>All elements are not of same type.<br>All elements are not of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, \"2\", 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for($i = 1; $i < count($test_tuple); $i++) {\n        if(gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif($result) {\n    echo \"All elements have same data type\";\n}\nelse {\n    echo \"All elements don't have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"All elements are not of same type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $key => $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for($i = 1; $i < $count; $i++) {\n        if(gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif(check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 0; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), NULL);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), NULL, 1.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\", true, array(1, 2, 3), new stdClass(), NULL, 1.0, \"1\");\nvar\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected token \"var\", expecting end of file in /tmp/tmptncu5b2t.php on line 41\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if (count($result) === 1) {\n        return \"All elements are of same type\";\n    } else {\n        return \"All elements are not of same type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type<br>All elements are not of same type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_v9vjzir.php:24\nStack trace:\n#0 /tmp/tmp_v9vjzir.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_v9vjzir.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $test_tuple_element) {\n        if (gettype($test_tuple_element) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    for($i=1; $i<count($test_tuple); $i++) {\n        if(gettype($test_tuple[$i]) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple = array_unique($test_tuple);\n    $count = count($test_tuple);\n    $i = 0;\n    foreach ($test_tuple as $key => $value) {\n        if (gettype($value) == gettype($test_tuple[0])) {\n            $i++;\n        }\n    }\n    if ($i == $count) {\n        return \"True\";\n    } else {\n        return \"False\";\n    }\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskrx0evr.php:25\nStack trace:\n#0 /tmp/tmpskrx0evr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpskrx0evr.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if ($test_tuple_type != gettype($value)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != gettype($first_element)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if ($type != gettype($value)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $data_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $data_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"All elements are not of same type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_map('gettype', $test_tuple);\n    if (count(array_unique($result)) === 1) {\n        echo \"All elements are of same type\";\n    } else {\n        echo \"All elements are not of same type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\necho \"<br>\";\n$test_tuple = array(1, 2, 3, 4, \"5\");\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type<br>All elements are not of same typeAll elements are of same type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq87f29yp.php:22\nStack trace:\n#0 /tmp/tmpq87f29yp.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpq87f29yp.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.\nAll elements are not of same type.\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_item = $test_tuple[0];\n    $first_type = gettype($first_item);\n    $is_same = true;\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $first_type) {\n            $is_same = false;\n            break;\n        }\n    }\n    return $is_same;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, true);\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, false);\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, null);\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, array(1, 2, 3));\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, new stdClass());\necho check_type($test_tuple) ? \"Same Type\" : \"Different Type\";\n\necho \"<br>\";\n\n$test_tuple = array(1, 2, 3, 4, function ()\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \"{\" in /tmp/tmpf1f7414m.php on line 57\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_unique(array_map('gettype', $test_tuple));\n    if(count($result) == 1) {\n        echo \"All elements have same data type\";\n    }\n    else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4);\ncheck_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkurbj6dp.php:21\nStack trace:\n#0 /tmp/tmpkurbj6dp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkurbj6dp.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\n\n$test_tuple = array(1, 2, \"3\", 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.\nAll elements are not of same type.\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"True\" : \"False\";\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "True",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5, 6);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $tuple) {\n        if (gettype($tuple) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n$test_tuple3 = array(1, 2, 3, 4, 5.0);\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"Elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) !== $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple1 = array(1, 2, 3, 4, \"5\");\n$test_tuple2 = array(1, 2, 3, 4, 5.0);\n$test_tuple3 = array(1, 2, 3, 4, 5.0, \"6\");\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple1) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\necho check_type($test_tuple3) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n\n\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\necho check_type($test_tuple);\necho \"\\n\";\necho check_type($test_tuple2);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements in array have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\";\n} else {\n    echo \"All elements are not of same type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"Same Data Type\";\n} else {\n    echo \"Not Same Data Type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "Same Data Type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $i = 0;\n    $type = gettype($test_tuple[$i]);\n    while ($i < $count) {\n        if ($type != gettype($test_tuple[$i])) {\n            return false;\n        }\n        $i++;\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $result = array_count_values(array_map('gettype', $test_tuple));\n    if(count($result) == 1) {\n        echo \"All elements have same data type\";\n    }\n    else {\n        echo \"All elements do not have same data type\";\n    }\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\ncheck_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data typeAll elements have same data type\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9b4kqcm.php:20\nStack trace:\n#0 /tmp/tmpk9b4kqcm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk9b4kqcm.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $first_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    for ($i = 1; $i < count($test_tuple); $i++) {\n        if (gettype($test_tuple[$i]) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements in array have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\n$result = check_type($test_tuple);\nif ($result) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type.\";\n} else {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = $test_tuple[0];\n    $first_type = gettype($first_element);\n    $result = true;\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_type) {\n            $result = false;\n            break;\n        }\n    }\n    return $result;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5, \"6\");\necho check_type($test_tuple);\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "1",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"6\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 6.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, true);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, new stdClass());\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, null);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, \"1\");\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, 1.0);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, false);\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, array(1, 2, 3));\nvar_dump(check_type($test_tuple));\n\n$test_tuple = array(1, 2, 3, 4, 5, new stdClass());\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "bool(true)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $first_element = gettype($test_tuple[0]);\n    foreach ($test_tuple as $element) {\n        if (gettype($element) != $first_element) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\necho check_type($test_tuple) . \"\\n\";\necho check_type($test_tuple2) . \"\\n\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "1\n\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for ($i = 1; $i < $count; $i++) {\n        if (gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple) ? \"All elements are of same type\" : \"All elements are not of same type\";\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements have same data type\";\n} else {\n    echo \"All elements do not have same data type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple_2 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple_2)) {\n    echo \"All elements in array have same data type\";\n} else {\n    echo \"All elements in array do not have same data type\";\n}\n\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in array have same data type<br>All elements in array do not have same data type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple_2 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\n\necho \"<br>\";\n\nif (check_type($test_tuple_2)) {\n    echo \"All elements in array have same data type.\";\n} else {\n    echo \"All elements in array do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements in array have same data type.<br>All elements in array do not have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $count = count($test_tuple);\n    $type = gettype($test_tuple[0]);\n    for($i=1;$i<$count;$i++) {\n        if(gettype($test_tuple[$i]) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1,2,3,4,5);\nif(check_type($test_tuple)) {\n    echo \"All elements have same data type.\";\n}\nelse {\n    echo \"All elements do not have same data type.\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements have same data type.",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $test_tuple_type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $test_tuple_type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, \"5\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, \"6\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, \"7\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, 7);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, 7, \"8\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, 7, 8);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, 7, 8, \"9\");\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, 7, 8, 9);\necho check_type($test_tuple);\n\n$test_tuple = array(1, 2, 3, 4, 5.0, 6, 7, 8, 9, \"10\");\necho check_\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "\nParse error: syntax error, unexpected token \"function\", expecting \",\" or \";\" in /tmp/tmpf7ya9vz0.php on line 48\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665510549,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $item) {\n        if (gettype($item) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5, 6);\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type\";\n} else {\n    echo \"All elements are not of same type\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123480,
      "stdout": "All elements are of same type",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "<?php\n// Write a function to check if all the elements in array have same data type or not.\nfunction check_type($test_tuple) {\n    $type = gettype($test_tuple[0]);\n    foreach ($test_tuple as $value) {\n        if (gettype($value) != $type) {\n            return false;\n        }\n    }\n    return true;\n}\n\n$test_tuple = array(1, 2, 3, 4, 5);\n$test_tuple2 = array(1, 2, 3, 4, \"5\");\n\nif (check_type($test_tuple)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\n\nif (check_type($test_tuple2)) {\n    echo \"All elements are of same type.\\n\";\n} else {\n    echo \"All elements are not of same type.\\n\";\n}\nfunction candidate(...$args) {\n    return check_type(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5, 6, 7, 3, 5, 6)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, \"4\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1, 4, 5)) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123481,
      "stdout": "All elements are of same type.\nAll elements are not of same type.\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
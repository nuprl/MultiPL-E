{
  "name": "mbpp_12_sort_matrix",
  "language": "php",
  "prompt": "<?php\n// Write a function to sort a given matrix in ascending order according to the sum of its rows.\nfunction sort_matrix($M) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_12_sort_matrix.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return sort_matrix(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(array(1, 2, 3), array(2, 4, 5), array(1, 1, 1))) !== array(array(1, 1, 1), array(1, 2, 3), array(2, 4, 5))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(1, 2, 3), array(-2, 4, -5), array(1, -1, 1))) !== array(array(-2, 4, -5), array(1, -1, 1), array(1, 2, 3))) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(array(5, 8, 9), array(6, 4, 3), array(2, 1, 4))) !== array(array(2, 1, 4), array(6, 4, 3), array(5, 8, 9))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "completions": [
    "    $sums = array();\n    foreach ($M as $i => $row) {\n        $sums[$i] = array_sum($row);\n    }\n    array_multisort($sums, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\nprint_r(sort_matrix($M));\n",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $row_sum = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sum = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sum += $M[$i][$j];\n        }\n        $row_sum[$i] = $sum;\n    }\n    for ($i = 0; $i < $rows; $i++) {\n        for ($j = $i + 1; $j < $rows; $j++) {\n            if ($row_sum[$i] > $row_sum[$j]) {\n                $temp = $row_sum[$i];\n                $row_sum[$i] = $row_sum[$j];\n                $row_sum[$j] = $temp;\n                $temp = $M[$i];\n                $M[$i] = $M[$j];\n                $M[$j] = $temp;\n            }\n        }\n    }\n    return $M;\n}\n\n$M = array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9));\n$M = sort_matrix($M);\nfor ($i = 0; $i < count($M); $i++) {\n    for ($j = 0; $j < count($M[0]); $j++) {\n        echo $M[$i][$j] . \" \";\n    }\n    echo \"\\n\";\n}",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    array_multisort($sums, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$M = sort_matrix($M);\n\nfor ($i = 0; $i < count($M); $i++) {\n    for ($j = 0; $j < count($M[0]); $j++) {\n        echo $M[$i][$j] . \" \";\n    }\n    echo \"\\n\";\n}",
    "    $n = count($M);\n    $m = count($M[0]);\n    $sum = array();\n    for ($i = 0; $i < $n; $i++) {\n        $sum[$i] = 0;\n        for ($j = 0; $j < $m; $j++) {\n            $sum[$i] += $M[$i][$j];\n        }\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($sum[$i] > $sum[$j]) {\n                $tmp = $M[$i];\n                $M[$i] = $M[$j];\n                $M[$j] = $tmp;\n                $tmp = $sum[$i];\n                $sum[$i] = $sum[$j];\n                $sum[$j] = $tmp;\n            }\n        }\n    }\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$M = sort_matrix($M);\n\nfor ($i = 0; $i < count($M); $i++) {\n    for ($j = 0; $j < count($M[0]); $j++) {\n        echo $M[$i][$j] . \" \";\n    }\n    echo \"\\n\";\n}",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sum_row = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sum_row[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sum_row[$i] += $M[$i][$j];\n        }\n    }\n    for ($i = 0; $i < $rows; $i++) {\n        for ($j = $i + 1; $j < $rows; $j++) {\n            if ($sum_row[$i] > $sum_row[$j]) {\n                $temp = $sum_row[$i];\n                $sum_row[$i] = $sum_row[$j];\n                $sum_row[$j] = $temp;\n                for ($k = 0; $k < $cols; $k++) {\n                    $temp = $M[$i][$k];\n                    $M[$i][$k] = $M[$j][$k];\n                    $M[$j][$k] = $temp;\n                }\n            }\n        }\n    }\n    return $M;\n}\n\n$M = array(array(1, 2, 3),\n           array(4, 5, 6),\n           array(7, 8, 9));\n\necho \"<pre>\";\nprint_r(sort_matrix($M));\necho \"</pre>\";",
    "    $sum = array();\n    foreach ($M as $key => $row) {\n        $sum[$key] = array_sum($row);\n    }\n    array_multisort($sum, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    array_multisort($sums, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    array_multisort($sums, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));",
    "    $row_sums = [];\n    foreach ($M as $row) {\n        $row_sums[] = array_sum($row);\n    }\n    array_multisort($row_sums, $M);\n    return $M;\n}\n\n$M = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n];\n\nprint_r(sort_matrix($M));",
    "    $sum = array();\n    foreach ($M as $key => $row) {\n        $sum[$key] = array_sum($row);\n    }\n    array_multisort($sum, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\nprint_r(sort_matrix($M));\n",
    "    $sum = array();\n    foreach ($M as $key => $row) {\n        $sum[$key] = array_sum($row);\n    }\n    array_multisort($sum, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));",
    "    $sums = array();\n    foreach ($M as $i => $row) {\n        $sums[$i] = array_sum($row);\n    }\n    array_multisort($sums, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\nprint_r(sort_matrix($M));\n",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    for ($i = 0; $i < $rows; $i++) {\n        for ($j = $i + 1; $j < $rows; $j++) {\n            if ($sums[$i] > $sums[$j]) {\n                $temp = $M[$i];\n                $M[$i] = $M[$j];\n                $M[$j] = $temp;\n                $temp = $sums[$i];\n                $sums[$i] = $sums[$j];\n                $sums[$j] = $temp;\n            }\n        }\n    }\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$M = sort_matrix($M);\n\nfor ($i = 0; $i < count($M); $i++) {\n    for ($j = 0; $j < count($M[0]); $j++) {\n        echo $M[$i][$j] . ' ';\n    }\n    echo '<br>';\n}",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    array_multisort($sums, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    $sorted_sums = $sums;\n    sort($sorted_sums);\n    $sorted_M = $M;\n    for ($i = 0; $i < $rows; $i++) {\n        $index = array_search($sorted_sums[$i], $sums);\n        $sorted_M[$i] = $M[$index];\n    }\n    return $sorted_M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\n$sorted_M = sort_matrix($M);\nfor ($i = 0; $i < count($sorted_M); $i++) {\n    for ($j = 0; $j < count($sorted_M[0]); $j++) {\n        echo $sorted_M[$i][$j] . \" \";\n    }\n    echo \"\\n\";\n}",
    "    $sums = array();\n    foreach ($M as $i => $row) {\n        $sums[$i] = array_sum($row);\n    }\n    array_multisort($sums, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\nprint_r(sort_matrix($M));\n",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    array_multisort($sums, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9),\n);\n\n$M = sort_matrix($M);\n\nfor ($i = 0; $i < count($M); $i++) {\n    for ($j = 0; $j < count($M[$i]); $j++) {\n        echo $M[$i][$j] . ' ';\n    }\n    echo \"\\n\";\n}",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sum = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sum[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sum[$i] += $M[$i][$j];\n        }\n    }\n    for ($i = 0; $i < $rows; $i++) {\n        for ($j = $i + 1; $j < $rows; $j++) {\n            if ($sum[$i] > $sum[$j]) {\n                $temp = $sum[$i];\n                $sum[$i] = $sum[$j];\n                $sum[$j] = $temp;\n                for ($k = 0; $k < $cols; $k++) {\n                    $temp = $M[$i][$k];\n                    $M[$i][$k] = $M[$j][$k];\n                    $M[$j][$k] = $temp;\n                }\n            }\n        }\n    }\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n$M = sort_matrix($M);\nfor ($i = 0; $i < count($M); $i++) {\n    for ($j = 0; $j < count($M[0]); $j++) {\n        echo $M[$i][$j] . \" \";\n    }\n    echo \"\\n\";\n}",
    "    $sums = array();\n    foreach ($M as $key => $row) {\n        $sums[$key] = array_sum($row);\n    }\n    array_multisort($sums, SORT_ASC, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));",
    "    $rows = count($M);\n    $cols = count($M[0]);\n    $sums = array();\n    for ($i = 0; $i < $rows; $i++) {\n        $sums[$i] = 0;\n        for ($j = 0; $j < $cols; $j++) {\n            $sums[$i] += $M[$i][$j];\n        }\n    }\n    array_multisort($sums, $M);\n    return $M;\n}\n\n$M = array(\n    array(1, 2, 3),\n    array(4, 5, 6),\n    array(7, 8, 9)\n);\n\nprint_r(sort_matrix($M));"
  ]
}
{
  "name": "mbpp_442_positive_count",
  "language": "php",
  "prompt": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_442_positive_count.py",
  "prompt_terminology": "reworded",
  "tests": "function candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
  "stop_tokens": [
    "\nfunction",
    "\n?>",
    "\n//",
    "\n#"
  ],
  "results": [
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq69mc3.php:21\nStack trace:\n#0 /tmp/tmpwpq69mc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwpq69mc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwjyd80f.php:22\nStack trace:\n#0 /tmp/tmpnwjyd80f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnwjyd80f.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr33szreh.php:20\nStack trace:\n#0 /tmp/tmpr33szreh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr33szreh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, -4, 80, -73, -28]) . \"\\n\";\necho positive_count([]) . \"\\n\";\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n0.7\n0.4\n\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpbxq4vj35.php:10\nStack trace:\n#0 /tmp/tmpbxq4vj35.php(16): positive_count(Array)\n#1 {main}\n  thrown in /tmp/tmpbxq4vj35.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive: \" . positive_count($nums) . \"\\n\";\necho \"Total: \" . count($nums) . \"\\n\";\necho \"Ratio: \" . positive_count($nums) / count($nums) . \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "Positive: 10\nTotal: 15\nRatio: 0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpns_izdds.php:23\nStack trace:\n#0 /tmp/tmpns_izdds.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpns_izdds.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1db09r5.php:18\nStack trace:\n#0 /tmp/tmpb1db09r5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb1db09r5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $positive = 0;\n    $negative = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive++;\n        } else {\n            $negative++;\n        }\n    }\n    return $positive / $negative;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1nyvi9ak.php:24\nStack trace:\n#0 /tmp/tmp1nyvi9ak.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp1nyvi9ak.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count / count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp962kkhs8.php:22\nStack trace:\n#0 /tmp/tmp962kkhs8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp962kkhs8.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, -4, 80, -73, -28]) . \"\\n\";\necho positive_count([]) . \"\\n\";\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n0.7\n0.4\n\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpbxq4vj35.php:10\nStack trace:\n#0 /tmp/tmpbxq4vj35.php(16): positive_count(Array)\n#1 {main}\n  thrown in /tmp/tmpbxq4vj35.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwjyd80f.php:22\nStack trace:\n#0 /tmp/tmpnwjyd80f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnwjyd80f.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr33szreh.php:20\nStack trace:\n#0 /tmp/tmpr33szreh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr33szreh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rzis14d.php:18\nStack trace:\n#0 /tmp/tmp5rzis14d.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5rzis14d.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3, 0];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi7f9d8ev.php:20\nStack trace:\n#0 /tmp/tmpi7f9d8ev.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpi7f9d8ev.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums) . \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei8wgogn.php:21\nStack trace:\n#0 /tmp/tmpei8wgogn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpei8wgogn.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wowcso0.php:21\nStack trace:\n#0 /tmp/tmp7wowcso0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7wowcso0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($numbers);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzcctabo.php:20\nStack trace:\n#0 /tmp/tmpdzcctabo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdzcctabo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10];\n$count = positive_count($nums);\necho \"The number of positive numbers is: $count\";\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "The number of positive numbers is: 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cfo_bi5.php:21\nStack trace:\n#0 /tmp/tmp8cfo_bi5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8cfo_bi5.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wowcso0.php:21\nStack trace:\n#0 /tmp/tmp7wowcso0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7wowcso0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1db09r5.php:18\nStack trace:\n#0 /tmp/tmpb1db09r5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb1db09r5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]);\necho \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]);\necho \"\\n\";\necho positive_count([91, 93, 45, -67, -96, -40, 34, -96, 42, -58]);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n0.7\n0.5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq16zafq.php:25\nStack trace:\n#0 /tmp/tmpkq16zafq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkq16zafq.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk63n9jk8.php:18\nStack trace:\n#0 /tmp/tmpk63n9jk8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk63n9jk8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpummj6l9w.php:20\nStack trace:\n#0 /tmp/tmpummj6l9w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpummj6l9w.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $positive_count = 0;\n    $negative_count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive_count++;\n        } else {\n            $negative_count++;\n        }\n    }\n    return $positive_count / $negative_count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpes5juxiq.php:23\nStack trace:\n#0 /tmp/tmpes5juxiq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpes5juxiq.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidxraqev.php:22\nStack trace:\n#0 /tmp/tmpidxraqev.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpidxraqev.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]);\necho \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]);\necho \"\\n\";\necho positive_count([91, 93, 45, -67, -96, -40, 34, -96, 42, -58]);\necho \"\\n\";\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n0.7\n0.5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsb4aj7ui.php:24\nStack trace:\n#0 /tmp/tmpsb4aj7ui.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpsb4aj7ui.php on line 24\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\n$count = positive_count($nums);\necho $count;\necho \"\\n\";\necho $count / count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmuq95ud3.php:23\nStack trace:\n#0 /tmp/tmpmuq95ud3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpmuq95ud3.php on line 23\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive : \" . positive_count($nums) . \"\\n\";\necho \"Total : \" . count($nums) . \"\\n\";\necho \"Ratio : \" . positive_count($nums) / count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "Positive : 10\nTotal : 15\nRatio : 0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgl7i9eix.php:22\nStack trace:\n#0 /tmp/tmpgl7i9eix.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgl7i9eix.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0oh7jst7.php:21\nStack trace:\n#0 /tmp/tmp0oh7jst7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0oh7jst7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wa9fp80.php:21\nStack trace:\n#0 /tmp/tmp9wa9fp80.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wa9fp80.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdfrp8453.php:20\nStack trace:\n#0 /tmp/tmpdfrp8453.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdfrp8453.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho positive_count([1, 2, 3, 4, 5]);\necho \"\\n\";\necho positive_count([1, -2, 3, -4, 5]);\necho \"\\n\";\necho positive_count([-1, -2, -3, -4, -5]);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "5\n3\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt6jpce_.php:25\nStack trace:\n#0 /tmp/tmpzt6jpce_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzt6jpce_.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wowcso0.php:21\nStack trace:\n#0 /tmp/tmp7wowcso0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7wowcso0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph90m7_tu.php:22\nStack trace:\n#0 /tmp/tmph90m7_tu.php(27): test()\n#1 {main}\n  thrown in /tmp/tmph90m7_tu.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwjyd80f.php:22\nStack trace:\n#0 /tmp/tmpnwjyd80f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpnwjyd80f.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq69mc3.php:21\nStack trace:\n#0 /tmp/tmpwpq69mc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwpq69mc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]);\necho \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]);\necho \"\\n\";\necho positive_count([91, -4, 80, -73, -28]);\necho \"\\n\";\necho positive_count([73, 54, 91, -17, 22, -8, -36, 99, -42]);\necho \"\\n\";\necho positive_count([84, -23, -29, -71, -67, -93, -25, -28, -50, -6, -4]);\necho \"\\n\";\necho positive_count([-3, -6, -26, -35, -67, -70, -76, -57, -42, -11, -64]);\necho \"\\n\";\necho positive_count([-9, -17, -7, -27, -71, -89, -57, -42, -59, -63, -58]);\necho \"\\n\";\necho positive_count([-13, -73, -67, -21, -62, -57, -93, -75, -28, -47, -98]);\necho \"\\n\";\necho positive_count([-73, -33, -82, -38, -76, -29, -81, -100, -1, -6, -97]);\necho \"\\n\";\necho positive_count([-21, -23, -43, -70, -55, -21, -93, -98, -99, -9, -65]);\necho \"\\n\";\necho positive_count([-75, -27, -46, -99, -80, -22, -40, -13, -93, -25, -23]);\necho \"\\n\";\necho positive_count([-43, -21, -82,\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nParse error: syntax error, unexpected identifier \"candidate\", expecting \"(\" in /tmp/tmpcv526qum.php on line 36\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive : \" . positive_count($nums) . \"<br>\";\necho \"Total : \" . count($nums) . \"<br>\";\necho \"Ratio : \" . positive_count($nums) / count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "Positive : 10<br>Total : 15<br>Ratio : 0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjaj2h9km.php:22\nStack trace:\n#0 /tmp/tmpjaj2h9km.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjaj2h9km.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpifsg2k42.php:21\nStack trace:\n#0 /tmp/tmpifsg2k42.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpifsg2k42.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6f5hnkw.php:22\nStack trace:\n#0 /tmp/tmpe6f5hnkw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe6f5hnkw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6f5hnkw.php:22\nStack trace:\n#0 /tmp/tmpe6f5hnkw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpe6f5hnkw.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, -1, -2, -3]);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsnfs2c5.php:20\nStack trace:\n#0 /tmp/tmpgsnfs2c5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgsnfs2c5.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiee_sac9.php:21\nStack trace:\n#0 /tmp/tmpiee_sac9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiee_sac9.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnahfnb9r.php:20\nStack trace:\n#0 /tmp/tmpnahfnb9r.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnahfnb9r.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]);\necho \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]);\necho \"\\n\";\necho positive_count([91, 93, 45, -67, -96, -40, 34, -96, 42, -58]);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n0.7\n0.5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tbti1uw.php:25\nStack trace:\n#0 /tmp/tmp5tbti1uw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5tbti1uw.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq69mc3.php:21\nStack trace:\n#0 /tmp/tmpwpq69mc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwpq69mc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6un45mj.php:21\nStack trace:\n#0 /tmp/tmpq6un45mj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq6un45mj.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq69mc3.php:21\nStack trace:\n#0 /tmp/tmpwpq69mc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwpq69mc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr33szreh.php:20\nStack trace:\n#0 /tmp/tmpr33szreh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr33szreh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk63n9jk8.php:18\nStack trace:\n#0 /tmp/tmpk63n9jk8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk63n9jk8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk63n9jk8.php:18\nStack trace:\n#0 /tmp/tmpk63n9jk8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk63n9jk8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1db09r5.php:18\nStack trace:\n#0 /tmp/tmpb1db09r5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb1db09r5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzkbtxwf.php:20\nStack trace:\n#0 /tmp/tmpuzkbtxwf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzkbtxwf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wa9fp80.php:21\nStack trace:\n#0 /tmp/tmp9wa9fp80.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wa9fp80.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9l7p7_1.php:20\nStack trace:\n#0 /tmp/tmph9l7p7_1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph9l7p7_1.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$numbers = [1, 2, 3, -1, -2, -3];\necho positive_count($numbers);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqncay95.php:20\nStack trace:\n#0 /tmp/tmpyqncay95.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyqncay95.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [-1, 1, 1, 1];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.75\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldqnsezg.php:21\nStack trace:\n#0 /tmp/tmpldqnsezg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpldqnsezg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $positive_count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive_count++;\n        }\n    }\n    return $positive_count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3bvwd_u.php:20\nStack trace:\n#0 /tmp/tmph3bvwd_u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph3bvwd_u.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count / count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8zto85y.php:21\nStack trace:\n#0 /tmp/tmps8zto85y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps8zto85y.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr33szreh.php:20\nStack trace:\n#0 /tmp/tmpr33szreh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr33szreh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho \"Positive : \" . positive_count($nums) . \"<br>\";\necho \"Total : \" . count($nums) . \"<br>\";\necho \"Ratio : \" . positive_count($nums) / count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "Positive : 10<br>Total : 15<br>Ratio : 0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsynt1l35.php:22\nStack trace:\n#0 /tmp/tmpsynt1l35.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsynt1l35.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq69mc3.php:21\nStack trace:\n#0 /tmp/tmpwpq69mc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwpq69mc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr33szreh.php:20\nStack trace:\n#0 /tmp/tmpr33szreh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr33szreh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyehi6_8a.php:18\nStack trace:\n#0 /tmp/tmpyehi6_8a.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpyehi6_8a.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp61b1w5fo.php:20\nStack trace:\n#0 /tmp/tmp61b1w5fo.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp61b1w5fo.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2nd59kg.php:21\nStack trace:\n#0 /tmp/tmp_2nd59kg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_2nd59kg.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidxraqev.php:22\nStack trace:\n#0 /tmp/tmpidxraqev.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpidxraqev.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9wa9fp80.php:21\nStack trace:\n#0 /tmp/tmp9wa9fp80.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9wa9fp80.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count / count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8zto85y.php:21\nStack trace:\n#0 /tmp/tmps8zto85y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmps8zto85y.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3, 0];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp115rmcgb.php:21\nStack trace:\n#0 /tmp/tmp115rmcgb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp115rmcgb.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho $count;\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wowcso0.php:21\nStack trace:\n#0 /tmp/tmp7wowcso0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7wowcso0.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuzkbtxwf.php:20\nStack trace:\n#0 /tmp/tmpuzkbtxwf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpuzkbtxwf.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0oh7jst7.php:21\nStack trace:\n#0 /tmp/tmp0oh7jst7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0oh7jst7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwpq69mc3.php:21\nStack trace:\n#0 /tmp/tmpwpq69mc3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwpq69mc3.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    $total = count($nums);\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count += 1;\n        }\n    }\n    return $count / $total;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs6h6sq5.php:19\nStack trace:\n#0 /tmp/tmpbs6h6sq5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpbs6h6sq5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $positive_count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive_count++;\n        }\n    }\n    return $positive_count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr54hjl7.php:20\nStack trace:\n#0 /tmp/tmpjr54hjl7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjr54hjl7.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk63n9jk8.php:18\nStack trace:\n#0 /tmp/tmpk63n9jk8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpk63n9jk8.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2klim6m8.php:21\nStack trace:\n#0 /tmp/tmp2klim6m8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2klim6m8.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $positive = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $positive++;\n        }\n    }\n    return $positive / count($nums);\n}\n\necho positive_count([1, 2, 3, -1, -2, -3]);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpclijxpl5.php:19\nStack trace:\n#0 /tmp/tmpclijxpl5.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpclijxpl5.php on line 19\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]) . \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]) . \"\\n\";\necho positive_count([91, -4, 80, -73, -28]) . \"\\n\";\necho positive_count([]) . \"\\n\";\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n0.7\n0.4\n\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpbxq4vj35.php:10\nStack trace:\n#0 /tmp/tmpbxq4vj35.php(16): positive_count(Array)\n#1 {main}\n  thrown in /tmp/tmpbxq4vj35.php on line 10\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\n$count = positive_count($nums);\necho \"Positive count: $count\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "Positive count: 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqf8t4jh3.php:22\nStack trace:\n#0 /tmp/tmpqf8t4jh3.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpqf8t4jh3.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, -1, 2, -2, 3, -3, 4, -4, 5, -5];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m5m0l3u.php:20\nStack trace:\n#0 /tmp/tmp1m5m0l3u.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1m5m0l3u.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0a9kxjzn.php:20\nStack trace:\n#0 /tmp/tmp0a9kxjzn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0a9kxjzn.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgd26805.php:21\nStack trace:\n#0 /tmp/tmptgd26805.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptgd26805.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rzis14d.php:18\nStack trace:\n#0 /tmp/tmp5rzis14d.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5rzis14d.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon111te1.php:22\nStack trace:\n#0 /tmp/tmpon111te1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpon111te1.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02_h_acx.php:18\nStack trace:\n#0 /tmp/tmp02_h_acx.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp02_h_acx.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0oh7jst7.php:21\nStack trace:\n#0 /tmp/tmp0oh7jst7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0oh7jst7.php on line 21\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1db09r5.php:18\nStack trace:\n#0 /tmp/tmpb1db09r5.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpb1db09r5.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yb2zfe0.php:22\nStack trace:\n#0 /tmp/tmp7yb2zfe0.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp7yb2zfe0.php on line 22\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkkog96co.php:20\nStack trace:\n#0 /tmp/tmpkkog96co.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkkog96co.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5]);\necho \"\\n\";\necho positive_count([1, -2, 3, -4, 5]);\necho \"\\n\";\necho positive_count([-1, 2, -3, 4, -5]);\necho \"\\n\";\necho positive_count([-1, -2, -3, -4, -5]);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "1\n0.6\n0.4\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagynw4rw.php:27\nStack trace:\n#0 /tmp/tmpagynw4rw.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpagynw4rw.php on line 27\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\n$nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.66666666666667\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6shzt7z.php:20\nStack trace:\n#0 /tmp/tmpk6shzt7z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk6shzt7z.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 0) {\n      $count++;\n    }\n  }\n  return $count / count($nums);\n}\n\n$nums = [1, 2, 3, -1, -2, -3];\necho positive_count($nums);\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "0.5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr33szreh.php:20\nStack trace:\n#0 /tmp/tmpr33szreh.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpr33szreh.php on line 20\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\necho positive_count([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]);\necho \"\\n\";\necho positive_count([92, 6, 73, -77, 81, -90, 99, 8, -85, 34]);\necho \"\\n\";\necho positive_count([91, 93, 45, -67, -96, -40, 34, -96, 42, -58]);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1666123859,
      "stdout": "0.66666666666667\n0.7\n0.5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkq16zafq.php:25\nStack trace:\n#0 /tmp/tmpkq16zafq.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkq16zafq.php on line 25\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "<?php\n// Write a function to find the ration of positive numbers in an array of integers.\nfunction positive_count($nums) {\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 0) {\n            $count++;\n        }\n    }\n    return $count / count($nums);\n}\n\nfunction candidate(...$args) {\n    return positive_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8)) !== 0.54) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8)) !== 0.69) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -6, -9, 11, -12, 14, -5, 17)) !== 0.56) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();",
      "timestamp": 1665509670,
      "stdout": "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4hth9o_0.php:18\nStack trace:\n#0 /tmp/tmp4hth9o_0.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp4hth9o_0.php on line 18\n",
      "stderr": "",
      "exit_code": 255,
      "status": "Exception"
    }
  ]
}